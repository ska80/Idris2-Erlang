-module('Idris.Idris2.Idris.REPL').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--process-12222'/9,
  'case--process-11280'/7,
  'case--case block in case block in case block in case block in processEdit-7849'/27,
  'case--case block in case block in processEdit-7156'/24,
  'case--case block in processEdit-7053'/22,
  'case--processEdit-6102'/15,
  'case--nextGenDef-5533'/7,
  'case--nextProofSearch-5337'/6,
  'case--updateFile-4909'/5,
  'nested--26802-12170--in--un--toPaths'/8,
  'nested--20547-5093--in--un--replaceStr'/7,
  'nested--29341-12888--in--un--prompt'/6,
  'nested--21403-5846--in--un--match'/4,
  'nested--29379-13678--in--un--makeSpace'/1,
  'nested--20628-5164--in--un--insertInBlank'/8,
  'nested--29071-12564--in--un--getLoad'/4,
  'nested--29071-12565--in--un--fnameCmd'/3,
  'nested--26027-9813--in--un--execDecl'/8,
  'nested--26697-10411--in--un--elabMode'/8,
  'nested--29379-13679--in--un--col'/5,
  'nested--21403-5845--in--un--cmp'/5,
  'nested--29379-13680--in--un--cmdInfo'/1,
  'nested--20758-5280--in--un--addW'/7,
  'nested--20628-5165--in--un--addApp'/10,
  'un--updateFile'/3,
  'un--showInfo'/3,
  'un--setOpt'/4,
  'un--rtrim'/1,
  'un--replEval'/6,
  'un--replCmd'/7,
  'un--repl'/6,
  'un--proofSearch'/4,
  'un--processLocal'/11,
  'un--processEdit'/6,
  'un--processCatch'/7,
  'un--process'/6,
  'un--printClause'/6,
  'un--prettyTerm'/1,
  'un--prepareExp'/7,
  'un--parseRepl'/1,
  'un--parseEmptyCmd'/0,
  'un--parseCmd'/0,
  'un--nextProofSearch'/4,
  'un--nextGenDef'/5,
  'un--lookupDefTyName'/3,
  'un--loadMainFile'/7,
  'un--interpret'/7,
  'un--inferAndNormalize'/8,
  'un--inferAndElab'/8,
  'un--handleResult'/7,
  'un--handleMissing\x{27}'/1,
  'un--handleMissing'/1,
  'un--getOptions'/3,
  'un--getItDecls'/2,
  'un--findInTree'/3,
  'un--execExp'/7,
  'un--execDecls'/7,
  'un--dropLamsTm'/4,
  'un--dropLams'/2,
  'un--displayType'/4,
  'un--displayTerm'/5,
  'un--displayResult'/6,
  'un--displayPats'/4,
  'un--displayPatTerm'/5,
  'un--displayHelp'/0,
  'un--displayErrors'/7,
  'un--displayClause'/4,
  'un--compileLib'/5,
  'un--compileExp'/8,
  'un--caseSplit'/3,
  'un--anyAt'/3,
  'un--addMadeLemma'/6,
  'un--addMadeCase'/4,
  'un--addClause'/3
]).
'case--process-12222'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Prelude.Types.Just', E0} -> (fun (V9) -> begin (V10 = ('Idris.Idris2.Libraries.Utils.Path':'un--parse'(V9))), fun (V11) -> begin (V13 = begin (V12 = ('Idris.Idris2.Libraries.System.Directory.Tree':'un--explore'(V10, V11))), {'Idris.Prelude.Types.Right', V12} end), case V13 of {'Idris.Prelude.Types.Left', E1} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V15) -> begin (V17 = begin (V16 = (('nested--26802-12170--in--un--toPaths'(V0, V1, V2, V3, V4, V5, ('Idris.Idris2.Libraries.Utils.Path':'un--parse'(<<""/utf8>>)), ('Idris.Idris2.Libraries.System.Directory.Tree.Tree':'un--toRelative'(V15))))(V11))), {'Idris.Prelude.Types.Right', V16} end), case V17 of {'Idris.Prelude.Types.Left', E3} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V19) -> begin (V64 = (('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(V20, V21, [], V22)) end end end, V19, fun (V23) -> begin (V24 = ('Idris.Idris2.Libraries.Utils.Path':'un--dropExtension'(V23))), begin (V26 = ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Data.String':'un--split'(fun (V25) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Char'(V25, ('Idris.Idris2.Libraries.Utils.Path':'un--dirSeparator'()))) end, V24))))), begin (V55 = ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V29, V30, V31)) end end end end end, fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V34, V35, V36)) end end end end end, fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V38)) end end, fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V42, V43, V44, V45)) end end end end end end end, fun (V46) -> fun (V47) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V47)) end end, fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V50, V51, V52)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V53) -> fun (V54) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(V53, V54)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_String'())}}, ('Idris.Idris2.Data.List':'un--intersperse'(<<"."/utf8>>, V26))))), begin (V56 = ('Idris.Idris2.Core.Name.Namespace':'un--mkNamespace'(V55))), fun (V57) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(fun (V58) -> begin (V59 = ('Idris.Idris2.Idris.ProcessIdr':'un--addImport'(V5, V4, V3, {'Idris.Idris.Syntax.MkImport', ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, ('Idris.Idris2.Core.Name.Namespace':'un--nsAsModuleIdent'(V56)), V56}, V58))), case V59 of {'Idris.Prelude.Types.Left', E5} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V61) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V62) -> fun (V63) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V62}} end end, V57)) end end end end end end))(V11))), case V64 of {'Idris.Prelude.Types.Left', E7} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V66) -> begin (V67 = ('Idris.Idris2.Data.List':'un--catMaybes'(V66))), begin (V73 = case V67 of [] -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(<<"Done"/utf8>>))}; _ -> begin (V70 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V68) -> fun (V69) -> ('Idris.Idris2.Idris.Error':'un--display'(V5, V3, V1, V68, V69)) end end, V67, [], V11))), case V70 of {'Idris.Prelude.Types.Left', E9} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V72) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(V72))} end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end), case V73 of {'Idris.Prelude.Types.Left', E11} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V75) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Printed', V75}} end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0)); _ -> fun (V76) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.REPLError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(<<"Package not found in the known search directories"/utf8>>))}} end end.
'case--process-11280'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.NoFileLoaded'}} end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V8) -> begin (V26 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> <<""/utf8>> end, fun () -> fun (V9) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" +"/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(((V9 + 1) rem 9223372036854775808))))) end end, case V5 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25) -> V16 end(E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), fun (V27) -> begin (V76 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V28) -> case V28 of {'Idris.Prelude.Types.Left', E17} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V30) -> {'Idris.Prelude.Types.Right', 0} end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V31) -> begin (V75 = (('Idris.Idris2.Erlang.System':'un--system'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V34, V35, V36)) end end end end end, fun (V37) -> fun (V38) -> fun (V39) -> V38 end end end, fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> begin (V45 = (V42(V44))), begin (V46 = (V43(V44))), (V45(V46)) end end end end end end end}, fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> begin (V52 = (V49(V51))), ((V50(V52))(V51)) end end end end end end, fun (V53) -> fun (V54) -> fun (V55) -> begin (V56 = (V54(V55))), (V56(V55)) end end end end}, fun (V57) -> fun (V58) -> V58 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(case V5 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74) -> V64 end(E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" \x{22}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V8, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{22}"/utf8>>, V26))))))))))(V31))), {'Idris.Prelude.Types.Right', V75} end end, V27))), case V76 of {'Idris.Prelude.Types.Left', E35} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V78) -> ('un--loadMainFile'(V4, V3, V2, V1, V0, V8, V27)) end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in case block in case block in processEdit-7849'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> case V25 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V27, V28) -> begin (V31 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V29) -> fun (V30) -> ('un--printClause'(V8, V6, V27, V22, V29, V30)) end end, V20, [], V26))), case V31 of {'Idris.Prelude.Types.Left', E2} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V33) -> case V3 of 1 -> ('un--updateFile'(V4, fun (V34) -> ('un--addClause'(('Idris.Idris2.Libraries.Data.String.Extra':'un--unlines'(V33)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Integer'(V2)))), V34)) end, V26)); 0 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V37, V38)) end end end end, fun (V39) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V39)) end, V33))))}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in processEdit-7156'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23) -> case V22 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V24, V25) -> case V25 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V26, V27) -> begin (V28 = ('Idris.Idris2.Idris.Resugar':'un--resugar'(V24, V8, V6, V26, V27, V23))), case V28 of {'Idris.Prelude.Types.Left', E4} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V30) -> begin (V31 = case V11 of 1 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Core.FC':'un--replFC'()), V30)); 0 -> V30; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V3 of 1 -> ('un--updateFile'(V4, fun (V32) -> ('un--proofSearch'(V1, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(V31)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Integer'(((V2 - 1) rem 9223372036854775808))))), V32)) end, V23)); 0 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', ('un--prettyTerm'(V31))}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in processEdit-7053'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V20 of {'Idris.Core.Context.Context.NotHole'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V22) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V22)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end()); {'Idris.Core.Context.Context.SolvedHole', E0} -> (fun (V23) -> begin (V24 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V8, [], V9, {'Idris.Core.Env.Nil'}, V17, V21))), case V24 of {'Idris.Prelude.Types.Left', E1} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V26) -> ('case--case block in case block in processEdit-7156'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V23, V26, ('un--dropLamsTm'([], V23, {'Idris.Core.Env.Nil'}, V26)), V21)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--processEdit-6102'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V15, V16) -> case V16 of {'Idris.Prelude.Types.Just', E3} -> (fun (V17) -> case V17 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V18, V19) -> case V19 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V20, V21) -> fun (V22) -> begin (V23 = ('un--displayTerm'(V7, V5, V8, V21, V22))), case V23 of {'Idris.Prelude.Types.Left', E10} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V25) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(('Idris.Idris2.Core.Name':'un--nameRoot'(V18)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()), V25))))}} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E8, E9)); _ -> fun (V26) -> case V15 of {'Idris.Prelude.Types.Just', E7} -> (fun (V27) -> case V16 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', V27}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E7)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V16 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V7, ('Idris.Idris2.Core.FC':'un--replFC'()), V10, V26)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E5, E6)); _ -> fun (V28) -> case V15 of {'Idris.Prelude.Types.Just', E4} -> (fun (V29) -> case V16 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', V29}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V16 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V7, ('Idris.Idris2.Core.FC':'un--replFC'()), V10, V28)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3)); _ -> fun (V30) -> case V15 of {'Idris.Prelude.Types.Just', E2} -> (fun (V31) -> case V16 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', V31}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V16 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V7, ('Idris.Idris2.Core.FC':'un--replFC'()), V10, V30)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--nextGenDef-5533'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V7) -> case V7 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V8, V9) -> begin (V10 = ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--nextResult'(V3, V2, V9, V6))), case V10 of {'Idris.Prelude.Types.Left', E3} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V12) -> case V12 of {'Idris.Prelude.Types.Just', E5} -> (fun (V13) -> case V13 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V14, V15) -> begin (V33 = begin (V32 = ('erlang':'put'(V1, case V4 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23} -> (fun (V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V8, V15}}, V27, V28, V29, V30, V31} end(E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V32} end), case V33 of {'Idris.Prelude.Types.Left', E24} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V35) -> case V0 of 0 -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V8, V14}}}; _ -> begin (V36 = (V0 - 1)), ('un--nextGenDef'(V3, V2, V1, V36, V6)) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V54 = begin (V53 = ('erlang':'put'(V1, case V4 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41} -> (fun (V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, {'Idris.Prelude.Types.Nothing'}, V48, V49, V50, V51, V52} end(E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V53} end), case V54 of {'Idris.Prelude.Types.Left', E42} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V56) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--nextProofSearch-5337'(V0, V1, V2, V3, V4, V5) -> case V4 of {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> case V6 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V7, V8) -> begin (V9 = ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--nextResult'(V2, V1, V8, V5))), case V9 of {'Idris.Prelude.Types.Left', E3} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V11) -> case V11 of {'Idris.Prelude.Types.Just', E5} -> (fun (V12) -> case V12 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V13, V14) -> begin (V32 = begin (V31 = ('erlang':'put'(V0, case V3 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23} -> (fun (V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V15, V16, V17, V18, V19, V20, V21, V22, V23, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V7, V14}}, V25, V26, V27, V28, V29, V30} end(E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V31} end), case V32 of {'Idris.Prelude.Types.Left', E24} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V34) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V7, V13}}} end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V52 = begin (V51 = ('erlang':'put'(V0, case V3 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41} -> (fun (V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V35, V36, V37, V38, V39, V40, V41, V42, V43, {'Idris.Prelude.Types.Nothing'}, V45, V46, V47, V48, V49, V50} end(E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V51} end), case V52 of {'Idris.Prelude.Types.Left', E42} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V54) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--updateFile-4909'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Prelude.Types.Just', E0} -> (fun (V5) -> begin (V34 = begin (V33 = (('Idris.Idris2.Erlang.System.File':'un--readFile'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V8, V9, V10)) end end end end end, fun (V11) -> fun (V12) -> fun (V13) -> V12 end end end, fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> begin (V19 = (V16(V18))), begin (V20 = (V17(V18))), (V19(V20)) end end end end end end end}, fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> begin (V26 = (V23(V25))), ((V24(V26))(V25)) end end end end end end, fun (V27) -> fun (V28) -> fun (V29) -> begin (V30 = (V28(V29))), (V30(V29)) end end end end}, fun (V31) -> fun (V32) -> V32 end end}, V5))(V4))), {'Idris.Prelude.Types.Right', V33} end), case V34 of {'Idris.Prelude.Types.Left', E1} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V36) -> case V36 of {'Idris.Prelude.Types.Right', E3} -> (fun (V37) -> begin (V70 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V38) -> case V38 of {'Idris.Prelude.Types.Left', E4} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V40) -> {'Idris.Prelude.Types.Right', 0} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V41) -> begin (V69 = (('Idris.Idris2.Erlang.System.File':'un--writeFile'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V44, V45, V46)) end end end end end, fun (V47) -> fun (V48) -> fun (V49) -> V48 end end end, fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> begin (V55 = (V52(V54))), begin (V56 = (V53(V54))), (V55(V56)) end end end end end end end}, fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> begin (V62 = (V59(V61))), ((V60(V62))(V61)) end end end end end end, fun (V63) -> fun (V64) -> fun (V65) -> begin (V66 = (V64(V65))), (V66(V65)) end end end end}, fun (V67) -> fun (V68) -> V68 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(V5, <<"~"/utf8>>)), V37))(V41))), {'Idris.Prelude.Types.Right', V69} end end, V4))), case V70 of {'Idris.Prelude.Types.Left', E6} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V72) -> begin (V105 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V73) -> case V73 of {'Idris.Prelude.Types.Left', E8} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V75) -> {'Idris.Prelude.Types.Right', 0} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V76) -> begin (V104 = (('Idris.Idris2.Erlang.System.File':'un--writeFile'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V79, V80, V81)) end end end end end, fun (V82) -> fun (V83) -> fun (V84) -> V83 end end end, fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> begin (V90 = (V87(V89))), begin (V91 = (V88(V89))), (V90(V91)) end end end end end end end}, fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> begin (V97 = (V94(V96))), ((V95(V97))(V96)) end end end end end end, fun (V98) -> fun (V99) -> fun (V100) -> begin (V101 = (V99(V100))), (V101(V100)) end end end end}, fun (V102) -> fun (V103) -> V103 end end}, V5, ('Idris.Idris2.Libraries.Data.String.Extra':'un--unlines'((V0(('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(V37))))))))))(V76))), {'Idris.Prelude.Types.Right', V104} end end, V4))), case V105 of {'Idris.Prelude.Types.Left', E10} -> (fun (V106) -> {'Idris.Prelude.Types.Left', V106} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V107) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--emptyDoc'())}} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); {'Idris.Prelude.Types.Left', E12} -> (fun (V108) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.FileErr', V5, V108}, V4)) end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--emptyDoc'())}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--26802-12170--in--un--toPaths'(V0, V1, V2, V3, V4, V5, V6, V7) -> ('Idris.Idris2.Libraries.System.Directory.Tree':'un--depthFirst'(fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V12) -> [('Idris.Idris2.Libraries.System.Directory.Tree':'un--toFilePath'(V8, V9)) | V12] end, (V10()), V11)) end end end end, V6, V7, fun (V13) -> [] end)).
'nested--20547-5093--in--un--replaceStr'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of <<""/utf8>> -> <<""/utf8>>; _ -> case ('Idris.Idris2.Data.String':'un--isPrefixOf'(V4, V6)) of 1 -> ('Idris.Idris2.Prelude.Types.String':'un--++'(V5, ('Idris.Idris2.Prelude.Types':'un--fastPack'(('Idris.Idris2.Data.List':'un--drop'(('Idris.Idris2.Prelude.Types.String':'un--length'(V4)), ('Idris.Idris2.Prelude.Types':'un--fastUnpack'(V6)))))))); 0 -> ('Idris.Idris2.Prelude.Types':'un--strCons'(('erlang':'hd'(('string':'next_grapheme'(V6)))), ('nested--20547-5093--in--un--replaceStr'(V0, V1, V2, V3, V4, V5, case ('string':'next_grapheme'(V6)) of [E0 | E1] when (erlang:'is_binary'(E1)) -> (fun (V7, V8) -> V8 end(E0, E1)); _ -> <<""/utf8>> end)))); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--29341-12888--in--un--prompt'(V0, V1, V2, V3, V4, V5) -> case V5 of 0 -> <<"[tc] "/utf8>>; 1 -> <<""/utf8>>; 2 -> <<"[exec] "/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--21403-5846--in--un--match'(V0, V1, V2, V3) -> case V3 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V4, V5) -> case ('Idris.Idris2.Core.Name':'un--matches'(V1, V5)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_(Maybe $a)'({'Idris.Prelude.EqOrd.MkEq', fun (V6) -> fun (V7) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_UserName'(V6, V7)) end end, fun (V8) -> fun (V9) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_UserName'(V8, V9)) end end}, ('Idris.Idris2.Core.Name':'un--userNameRoot'(V5)), ('Idris.Idris2.Core.Name':'un--userNameRoot'(V1)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--29379-13678--in--un--makeSpace'(V0) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(('Idris.Idris2.Prelude.Types':'un--take'(V0, ('Idris.Idris2.Data.Stream':'un--repeat'($ )))))).
'nested--20628-5164--in--un--insertInBlank'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of [] -> [('Idris.Idris2.Parser.Unlit':'un--relit'(V6, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V4)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" : "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V3, <<"\x{a}"/utf8>>)))))))) | []]; [E0 | E1] -> (fun (V8, V9) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(('Idris.Idris2.Data.String':'un--trim'(V8)), <<""/utf8>>)) of 1 -> [('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Parser.Unlit':'un--relit'(V6, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V4)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" : "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V3, <<"\x{a}"/utf8>>)))))))))) | V9]; 0 -> [V8 | ('nested--20628-5164--in--un--insertInBlank'(V0, V1, V2, V3, V4, V5, V6, V9))]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--29071-12564--in--un--getLoad'(V0, V1, V2, V3) -> {'Idris.Prelude.Types.Just', (V2(('Idris.Idris2.Data.String':'un--trim'(('Idris.Idris2.Prelude.Types':'un--substr'(V1, ('Idris.Idris2.Prelude.Types.String':'un--length'(V3)), V3))))))}.
'nested--29071-12565--in--un--fnameCmd'(V0, V1, V2) -> case V1 of [] -> {'Idris.Prelude.Types.Nothing'}; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V5, V6) -> case ('Idris.Idris2.Data.String':'un--isPrefixOf'(V5, V2)) of 1 -> ('nested--29071-12564--in--un--getLoad'(V0, ('Idris.Idris2.Prelude.Types.String':'un--length'(V5)), V6, V2)); 0 -> ('nested--29071-12565--in--un--fnameCmd'(V0, V4, V2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--26027-9813--in--un--execDecl'(V0, V1, V2, V3, V4, V5, V6, V7) -> begin (V8 = (('Idris.Idris2.Idris.Desugar':'un--desugarDecl'(V3, V5, V4, V2, [], V6))(V7))), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> begin (V11 = ('Idris.Idris2.Core.Context':'un--resolveName'(V5, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"[defs]"/utf8>>}}, V7))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> begin (V14 = ('Idris.Idris2.Core.Core':'un--newRef'({'Idris.TTImp.Elab.Check.EST'}, ('Idris.Idris2.TTImp.Elab.Check':'un--initEStateSub'([], V13, {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.SubRefl'})), V7))), case V14 of {'Idris.Prelude.Types.Left', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V16) -> begin (V17 = ('un--getItDecls'(V1, V7))), case V17 of {'Idris.Prelude.Types.Left', E6} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V19) -> ('un--processLocal'([], V5, V2, V4, V16, [], [], {'Idris.Core.Env.Nil'}, V19, V10, V7)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--26697-10411--in--un--elabMode'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of 0 -> {'Idris.TTImp.Elab.Check.InType'}; _ -> {'Idris.TTImp.Elab.Check.InExpr'} end.
'nested--29379-13679--in--un--col'(V0, V1, V2, V3, V4) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(V2, ('Idris.Idris2.Prelude.Types.String':'un--++'(('nested--29379-13678--in--un--makeSpace'(('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'((V0 - ('Idris.Idris2.Prelude.Types.String':'un--length'(V2))))))), ('Idris.Idris2.Prelude.Types.String':'un--++'(V3, ('Idris.Idris2.Prelude.Types.String':'un--++'(('nested--29379-13678--in--un--makeSpace'(('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'((V1 - ('Idris.Idris2.Prelude.Types.String':'un--length'(V3))))))), V4)))))))).
'nested--21403-5845--in--un--cmp'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V5, V6) -> case V5 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V7, V8) -> case V6 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V9, V10) -> case V4 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V11, V12) -> case V11 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V13, V14) -> case V12 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V15, V16) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--compare_Ord_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V17) -> fun (V18) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V17, V18)) end end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(V19, V20)) end end}, fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--compare_Ord_Int'(V21, V22)) end end, fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V23, V24)) end end, fun (V25) -> fun (V26) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V25, V26)) end end, fun (V27) -> fun (V28) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<=_Ord_Int'(V27, V28)) end end, fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Int'(V29, V30)) end end, fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--max_Ord_Int'(V31, V32)) end end, fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--min_Ord_Int'(V33, V34)) end end}, {'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V35, V36)) end end, fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(V37, V38)) end end}, fun (V39) -> fun (V40) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--compare_Ord_Int'(V39, V40)) end end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V41, V42)) end end, fun (V43) -> fun (V44) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V43, V44)) end end, fun (V45) -> fun (V46) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<=_Ord_Int'(V45, V46)) end end, fun (V47) -> fun (V48) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Int'(V47, V48)) end end, fun (V49) -> fun (V50) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--max_Ord_Int'(V49, V50)) end end, fun (V51) -> fun (V52) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--min_Ord_Int'(V51, V52)) end end}, {'Idris.Builtin.MkPair', ((V9 - V7) rem 9223372036854775808), ((V10 - V8) rem 9223372036854775808)}, {'Idris.Builtin.MkPair', ((V15 - V13) rem 9223372036854775808), ((V16 - V14) rem 9223372036854775808)})) end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--29379-13680--in--un--cmdInfo'(V0) -> case V0 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V1, V2) -> case V2 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V3, V4) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('nested--29379-13679--in--un--col'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<" "/utf8>>, V1)), ('Idris.Idris2.Idris.Parser':'dn--un--show_Show_CmdArg'(V3)), V4)))) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--20758-5280--in--un--addW'(V0, V1, V2, V3, V4, V5, V6) -> case V4 of 0 -> case V6 of [E2 | E3] -> (fun (V7, V8) -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(('Idris.Idris2.Prelude.Types.List':'un--reverse'(V5)), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V9) -> ('Idris.Idris2.Parser.Unlit':'un--relit'(V3, V9)) end, V2)), V8)))) end(E2, E3)); [] -> []; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> begin (V10 = (V4 - 1)), case V6 of [E0 | E1] -> (fun (V11, V12) -> ('nested--20758-5280--in--un--addW'(V0, V1, V2, V3, V10, [V11 | V5], V12)) end(E0, E1)); [] -> ('Idris.Idris2.Prelude.Types.List':'un--reverse'(V5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'nested--20628-5165--in--un--addApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V7 of 0 -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(('Idris.Idris2.Prelude.Types.List':'un--reverse'(('nested--20628-5164--in--un--insertInBlank'(V0, V1, V2, V3, V4, V5, V6, V8)))), V9)); _ -> begin (V10 = (V7 - 1)), case V9 of [E0 | E1] -> (fun (V11, V12) -> ('nested--20628-5165--in--un--addApp'(V0, V1, V2, V3, V4, V5, V6, V10, [V11 | V8], V12)) end(E0, E1)); [] -> ('Idris.Idris2.Prelude.Types.List':'un--reverse'(V8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--updateFile'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> ('case--updateFile-4909'(V1, V0, V6, case V6 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> V9 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V2)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--showInfo'(V0, V1, V2) -> case V1 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V3, V4) -> case V4 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V5, V6) -> begin (V88 = begin (V33 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V7) -> fun (V8) -> fun (V9) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Def'(V7, V8, V9)) end end end, fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Def'(V10, V11, V12)) end end end}, case V6 of {'Idris.Core.Context.Context.MkGlobalDef', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23} -> (fun (V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32) -> V30 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V2))), case V33 of {'Idris.Prelude.Types.Left', E24} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V35) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V36) -> case V36 of {'Idris.Prelude.Types.Left', E26} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V38) -> {'Idris.Prelude.Types.Right', 0} end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V39) -> begin (V87 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V42, V43, V44)) end end end end end, fun (V45) -> fun (V46) -> fun (V47) -> V46 end end end, fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> begin (V53 = (V50(V52))), begin (V54 = (V51(V52))), (V53(V54)) end end end end end end end}, fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> begin (V60 = (V57(V59))), ((V58(V60))(V59)) end end end end end end, fun (V61) -> fun (V62) -> fun (V63) -> begin (V64 = (V62(V63))), (V64(V63)) end end end end}, fun (V65) -> fun (V66) -> V66 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(case V6 of {'Idris.Core.Context.Context.MkGlobalDef', E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47} -> (fun (V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86) -> V68 end(E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" ==> "/utf8>>, ('Idris.Idris2.Core.Context.Context':'dn--un--show_Show_Def'(V35))))))))(V39))), {'Idris.Prelude.Types.Right', V87} end end, V2)) end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V88 of {'Idris.Prelude.Types.Left', E48} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V90) -> begin (V143 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V91) -> case V91 of {'Idris.Prelude.Types.Left', E50} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V93) -> {'Idris.Prelude.Types.Right', 0} end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V94) -> begin (V142 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V97, V98, V99)) end end end end end, fun (V100) -> fun (V101) -> fun (V102) -> V101 end end end, fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> begin (V108 = (V105(V107))), begin (V109 = (V106(V107))), (V108(V109)) end end end end end end end}, fun (V110) -> fun (V111) -> fun (V112) -> fun (V113) -> fun (V114) -> begin (V115 = (V112(V114))), ((V113(V115))(V114)) end end end end end end, fun (V116) -> fun (V117) -> fun (V118) -> begin (V119 = (V117(V118))), (V119(V118)) end end end end}, fun (V120) -> fun (V121) -> V121 end end}, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(case V6 of {'Idris.Core.Context.Context.MkGlobalDef', E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71} -> (fun (V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141) -> V129 end(E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))(V94))), {'Idris.Prelude.Types.Right', V142} end end, V2))), case V143 of {'Idris.Prelude.Types.Left', E72} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V145) -> begin (V201 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V146) -> case V146 of {'Idris.Prelude.Types.Left', E74} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V148) -> {'Idris.Prelude.Types.Right', 0} end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V149) -> begin (V200 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V150) -> fun (V151) -> fun (V152) -> fun (V153) -> fun (V154) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V152, V153, V154)) end end end end end, fun (V155) -> fun (V156) -> fun (V157) -> V156 end end end, fun (V158) -> fun (V159) -> fun (V160) -> fun (V161) -> fun (V162) -> begin (V163 = (V160(V162))), begin (V164 = (V161(V162))), (V163(V164)) end end end end end end end}, fun (V165) -> fun (V166) -> fun (V167) -> fun (V168) -> fun (V169) -> begin (V170 = (V167(V169))), ((V168(V170))(V169)) end end end end end end, fun (V171) -> fun (V172) -> fun (V173) -> begin (V174 = (V172(V173))), (V174(V173)) end end end end}, fun (V175) -> fun (V176) -> V176 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Erasable args: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V177) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V177)) end, fun (V178) -> fun (V179) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V178, V179)) end end}, case V6 of {'Idris.Core.Context.Context.MkGlobalDef', E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95} -> (fun (V180, V181, V182, V183, V184, V185, V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196, V197, V198, V199) -> V183 end(E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))(V149))), {'Idris.Prelude.Types.Right', V200} end end, V2))), case V201 of {'Idris.Prelude.Types.Left', E96} -> (fun (V202) -> {'Idris.Prelude.Types.Left', V202} end(E96)); {'Idris.Prelude.Types.Right', E97} -> (fun (V203) -> begin (V259 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V204) -> case V204 of {'Idris.Prelude.Types.Left', E98} -> (fun (V205) -> {'Idris.Prelude.Types.Left', V205} end(E98)); {'Idris.Prelude.Types.Right', E99} -> (fun (V206) -> {'Idris.Prelude.Types.Right', 0} end(E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V207) -> begin (V258 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V208) -> fun (V209) -> fun (V210) -> fun (V211) -> fun (V212) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V210, V211, V212)) end end end end end, fun (V213) -> fun (V214) -> fun (V215) -> V214 end end end, fun (V216) -> fun (V217) -> fun (V218) -> fun (V219) -> fun (V220) -> begin (V221 = (V218(V220))), begin (V222 = (V219(V220))), (V221(V222)) end end end end end end end}, fun (V223) -> fun (V224) -> fun (V225) -> fun (V226) -> fun (V227) -> begin (V228 = (V225(V227))), ((V226(V228))(V227)) end end end end end end, fun (V229) -> fun (V230) -> fun (V231) -> begin (V232 = (V230(V231))), (V232(V231)) end end end end}, fun (V233) -> fun (V234) -> V234 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Detaggable arg types: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V235) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V235)) end, fun (V236) -> fun (V237) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V236, V237)) end end}, case V6 of {'Idris.Core.Context.Context.MkGlobalDef', E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119} -> (fun (V238, V239, V240, V241, V242, V243, V244, V245, V246, V247, V248, V249, V250, V251, V252, V253, V254, V255, V256, V257) -> V242 end(E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))(V207))), {'Idris.Prelude.Types.Right', V258} end end, V2))), case V259 of {'Idris.Prelude.Types.Left', E120} -> (fun (V260) -> {'Idris.Prelude.Types.Left', V260} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V261) -> begin (V317 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V262) -> case V262 of {'Idris.Prelude.Types.Left', E122} -> (fun (V263) -> {'Idris.Prelude.Types.Left', V263} end(E122)); {'Idris.Prelude.Types.Right', E123} -> (fun (V264) -> {'Idris.Prelude.Types.Right', 0} end(E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V265) -> begin (V316 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V266) -> fun (V267) -> fun (V268) -> fun (V269) -> fun (V270) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V268, V269, V270)) end end end end end, fun (V271) -> fun (V272) -> fun (V273) -> V272 end end end, fun (V274) -> fun (V275) -> fun (V276) -> fun (V277) -> fun (V278) -> begin (V279 = (V276(V278))), begin (V280 = (V277(V278))), (V279(V280)) end end end end end end end}, fun (V281) -> fun (V282) -> fun (V283) -> fun (V284) -> fun (V285) -> begin (V286 = (V283(V285))), ((V284(V286))(V285)) end end end end end end, fun (V287) -> fun (V288) -> fun (V289) -> begin (V290 = (V288(V289))), (V290(V289)) end end end end}, fun (V291) -> fun (V292) -> V292 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Specialise args: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V293) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V293)) end, fun (V294) -> fun (V295) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V294, V295)) end end}, case V6 of {'Idris.Core.Context.Context.MkGlobalDef', E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143} -> (fun (V296, V297, V298, V299, V300, V301, V302, V303, V304, V305, V306, V307, V308, V309, V310, V311, V312, V313, V314, V315) -> V301 end(E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))(V265))), {'Idris.Prelude.Types.Right', V316} end end, V2))), case V317 of {'Idris.Prelude.Types.Left', E144} -> (fun (V318) -> {'Idris.Prelude.Types.Left', V318} end(E144)); {'Idris.Prelude.Types.Right', E145} -> (fun (V319) -> begin (V375 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V320) -> case V320 of {'Idris.Prelude.Types.Left', E146} -> (fun (V321) -> {'Idris.Prelude.Types.Left', V321} end(E146)); {'Idris.Prelude.Types.Right', E147} -> (fun (V322) -> {'Idris.Prelude.Types.Right', 0} end(E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V323) -> begin (V374 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V324) -> fun (V325) -> fun (V326) -> fun (V327) -> fun (V328) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V326, V327, V328)) end end end end end, fun (V329) -> fun (V330) -> fun (V331) -> V330 end end end, fun (V332) -> fun (V333) -> fun (V334) -> fun (V335) -> fun (V336) -> begin (V337 = (V334(V336))), begin (V338 = (V335(V336))), (V337(V338)) end end end end end end end}, fun (V339) -> fun (V340) -> fun (V341) -> fun (V342) -> fun (V343) -> begin (V344 = (V341(V343))), ((V342(V344))(V343)) end end end end end end, fun (V345) -> fun (V346) -> fun (V347) -> begin (V348 = (V346(V347))), (V348(V347)) end end end end}, fun (V349) -> fun (V350) -> V350 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Inferrable args: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V351) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V351)) end, fun (V352) -> fun (V353) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V352, V353)) end end}, case V6 of {'Idris.Core.Context.Context.MkGlobalDef', E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161, E162, E163, E164, E165, E166, E167} -> (fun (V354, V355, V356, V357, V358, V359, V360, V361, V362, V363, V364, V365, V366, V367, V368, V369, V370, V371, V372, V373) -> V360 end(E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161, E162, E163, E164, E165, E166, E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))(V323))), {'Idris.Prelude.Types.Right', V374} end end, V2))), case V375 of {'Idris.Prelude.Types.Left', E168} -> (fun (V376) -> {'Idris.Prelude.Types.Left', V376} end(E168)); {'Idris.Prelude.Types.Right', E169} -> (fun (V377) -> begin (V431 = case V6 of {'Idris.Core.Context.Context.MkGlobalDef', E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189} -> (fun (V378, V379, V380, V381, V382, V383, V384, V385, V386, V387, V388, V389, V390, V391, V392, V393, V394, V395, V396, V397) -> case V396 of {'Idris.Prelude.Types.Just', E190} -> (fun (V398) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V399) -> case V399 of {'Idris.Prelude.Types.Left', E191} -> (fun (V400) -> {'Idris.Prelude.Types.Left', V400} end(E191)); {'Idris.Prelude.Types.Right', E192} -> (fun (V401) -> {'Idris.Prelude.Types.Right', 0} end(E192)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V402) -> begin (V430 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V403) -> fun (V404) -> fun (V405) -> fun (V406) -> fun (V407) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V405, V406, V407)) end end end end end, fun (V408) -> fun (V409) -> fun (V410) -> V409 end end end, fun (V411) -> fun (V412) -> fun (V413) -> fun (V414) -> fun (V415) -> begin (V416 = (V413(V415))), begin (V417 = (V414(V415))), (V416(V417)) end end end end end end end}, fun (V418) -> fun (V419) -> fun (V420) -> fun (V421) -> fun (V422) -> begin (V423 = (V420(V422))), ((V421(V423))(V422)) end end end end end end, fun (V424) -> fun (V425) -> fun (V426) -> begin (V427 = (V425(V426))), (V427(V426)) end end end end}, fun (V428) -> fun (V429) -> V429 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Compiled: "/utf8>>, ('Idris.Idris2.Core.CompileExpr':'dn--un--show_Show_CDef'(V398))))))(V402))), {'Idris.Prelude.Types.Right', V430} end end, V2)) end(E190)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E170, E171, E172, E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V431 of {'Idris.Prelude.Types.Left', E193} -> (fun (V432) -> {'Idris.Prelude.Types.Left', V432} end(E193)); {'Idris.Prelude.Types.Right', E194} -> (fun (V433) -> begin (V474 = begin (V436 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V434) -> fun (V435) -> ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V434, V435)) end end, ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'(('Idris.Idris2.Core.Context.Context':'un--refersTo'(V6)))), [], V2))), case V436 of {'Idris.Prelude.Types.Left', E195} -> (fun (V437) -> {'Idris.Prelude.Types.Left', V437} end(E195)); {'Idris.Prelude.Types.Right', E196} -> (fun (V438) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V439) -> case V439 of {'Idris.Prelude.Types.Left', E197} -> (fun (V440) -> {'Idris.Prelude.Types.Left', V440} end(E197)); {'Idris.Prelude.Types.Right', E198} -> (fun (V441) -> {'Idris.Prelude.Types.Right', 0} end(E198)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V442) -> begin (V473 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V443) -> fun (V444) -> fun (V445) -> fun (V446) -> fun (V447) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V445, V446, V447)) end end end end end, fun (V448) -> fun (V449) -> fun (V450) -> V449 end end end, fun (V451) -> fun (V452) -> fun (V453) -> fun (V454) -> fun (V455) -> begin (V456 = (V453(V455))), begin (V457 = (V454(V455))), (V456(V457)) end end end end end end end}, fun (V458) -> fun (V459) -> fun (V460) -> fun (V461) -> fun (V462) -> begin (V463 = (V460(V462))), ((V461(V463))(V462)) end end end end end end, fun (V464) -> fun (V465) -> fun (V466) -> begin (V467 = (V465(V466))), (V467(V466)) end end end end}, fun (V468) -> fun (V469) -> V469 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Refers to: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V470) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V470)) end, fun (V471) -> fun (V472) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V471, V472)) end end}, V438))))))(V442))), {'Idris.Prelude.Types.Right', V473} end end, V2)) end(E196)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V474 of {'Idris.Prelude.Types.Left', E199} -> (fun (V475) -> {'Idris.Prelude.Types.Left', V475} end(E199)); {'Idris.Prelude.Types.Right', E200} -> (fun (V476) -> begin (V517 = begin (V479 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V477) -> fun (V478) -> ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V477, V478)) end end, ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'(('Idris.Idris2.Core.Context.Context':'un--refersToRuntime'(V6)))), [], V2))), case V479 of {'Idris.Prelude.Types.Left', E201} -> (fun (V480) -> {'Idris.Prelude.Types.Left', V480} end(E201)); {'Idris.Prelude.Types.Right', E202} -> (fun (V481) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V482) -> case V482 of {'Idris.Prelude.Types.Left', E203} -> (fun (V483) -> {'Idris.Prelude.Types.Left', V483} end(E203)); {'Idris.Prelude.Types.Right', E204} -> (fun (V484) -> {'Idris.Prelude.Types.Right', 0} end(E204)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V485) -> begin (V516 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V486) -> fun (V487) -> fun (V488) -> fun (V489) -> fun (V490) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V488, V489, V490)) end end end end end, fun (V491) -> fun (V492) -> fun (V493) -> V492 end end end, fun (V494) -> fun (V495) -> fun (V496) -> fun (V497) -> fun (V498) -> begin (V499 = (V496(V498))), begin (V500 = (V497(V498))), (V499(V500)) end end end end end end end}, fun (V501) -> fun (V502) -> fun (V503) -> fun (V504) -> fun (V505) -> begin (V506 = (V503(V505))), ((V504(V506))(V505)) end end end end end end, fun (V507) -> fun (V508) -> fun (V509) -> begin (V510 = (V508(V509))), (V510(V509)) end end end end}, fun (V511) -> fun (V512) -> V512 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Refers to (runtime): "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V513) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V513)) end, fun (V514) -> fun (V515) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V514, V515)) end end}, V481))))))(V485))), {'Idris.Prelude.Types.Right', V516} end end, V2)) end(E202)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V517 of {'Idris.Prelude.Types.Left', E205} -> (fun (V518) -> {'Idris.Prelude.Types.Left', V518} end(E205)); {'Idris.Prelude.Types.Right', E206} -> (fun (V519) -> begin (V575 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V520) -> case V520 of {'Idris.Prelude.Types.Left', E207} -> (fun (V521) -> {'Idris.Prelude.Types.Left', V521} end(E207)); {'Idris.Prelude.Types.Right', E208} -> (fun (V522) -> {'Idris.Prelude.Types.Right', 0} end(E208)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V523) -> begin (V574 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V524) -> fun (V525) -> fun (V526) -> fun (V527) -> fun (V528) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V526, V527, V528)) end end end end end, fun (V529) -> fun (V530) -> fun (V531) -> V530 end end end, fun (V532) -> fun (V533) -> fun (V534) -> fun (V535) -> fun (V536) -> begin (V537 = (V534(V536))), begin (V538 = (V535(V536))), (V537(V538)) end end end end end end end}, fun (V539) -> fun (V540) -> fun (V541) -> fun (V542) -> fun (V543) -> begin (V544 = (V541(V543))), ((V542(V544))(V543)) end end end end end end, fun (V545) -> fun (V546) -> fun (V547) -> begin (V548 = (V546(V547))), (V548(V547)) end end end end}, fun (V549) -> fun (V550) -> V550 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Flags: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V551) -> ('Idris.Idris2.Core.Context.Context':'dn--un--show_Show_DefFlag'(V551)) end, fun (V552) -> fun (V553) -> ('Idris.Idris2.Core.Context.Context':'dn--un--showPrec_Show_DefFlag'(V552, V553)) end end}, case V6 of {'Idris.Core.Context.Context.MkGlobalDef', E209, E210, E211, E212, E213, E214, E215, E216, E217, E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228} -> (fun (V554, V555, V556, V557, V558, V559, V560, V561, V562, V563, V564, V565, V566, V567, V568, V569, V570, V571, V572, V573) -> V565 end(E209, E210, E211, E212, E213, E214, E215, E216, E217, E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))(V523))), {'Idris.Prelude.Types.Right', V574} end end, V2))), case V575 of {'Idris.Prelude.Types.Left', E229} -> (fun (V576) -> {'Idris.Prelude.Types.Left', V576} end(E229)); {'Idris.Prelude.Types.Right', E230} -> (fun (V577) -> begin (V606 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V578) -> fun (V579) -> ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V580) -> fun (V581) -> fun (V582) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_SCCall'(V580, V581, V582)) end end end, fun (V583) -> fun (V584) -> fun (V585) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_SCCall'(V583, V584, V585)) end end end}, V578, V579)) end end, case V6 of {'Idris.Core.Context.Context.MkGlobalDef', E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241, E242, E243, E244, E245, E246, E247, E248, E249, E250} -> (fun (V586, V587, V588, V589, V590, V591, V592, V593, V594, V595, V596, V597, V598, V599, V600, V601, V602, V603, V604, V605) -> V605 end(E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241, E242, E243, E244, E245, E246, E247, E248, E249, E250)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, [], V2))), case V606 of {'Idris.Prelude.Types.Left', E251} -> (fun (V607) -> {'Idris.Prelude.Types.Left', V607} end(E251)); {'Idris.Prelude.Types.Right', E252} -> (fun (V608) -> case ('Idris.Idris2.Data.List':'un--isNil'(case V6 of {'Idris.Core.Context.Context.MkGlobalDef', E259, E260, E261, E262, E263, E264, E265, E266, E267, E268, E269, E270, E271, E272, E273, E274, E275, E276, E277, E278} -> (fun (V609, V610, V611, V612, V613, V614, V615, V616, V617, V618, V619, V620, V621, V622, V623, V624, V625, V626, V627, V628) -> V628 end(E259, E260, E261, E262, E263, E264, E265, E266, E267, E268, E269, E270, E271, E272, E273, E274, E275, E276, E277, E278)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of 1 -> {'Idris.Prelude.Types.Right', 0}; 0 -> ((begin (V667 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V629) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(case V629 of {'Idris.Core.Context.Context.MkSCCall', E253, E254} -> (fun (V630, V631) -> V630 end(E253, E254)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<": "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V632) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V633) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V634) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V634)) end, fun (V635) -> fun (V636) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V635, V636)) end end}, {'Idris.Prelude.Show.MkShow', fun (V637) -> ('Idris.Idris2.Core.Context.Context':'dn--un--show_Show_SizeChange'(V637)) end, fun (V638) -> fun (V639) -> ('Idris.Idris2.Core.Context.Context':'dn--un--showPrec_Show_SizeChange'(V638, V639)) end end}}, V633)) end, fun (V640) -> fun (V641) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V642) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V642)) end, fun (V643) -> fun (V644) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V643, V644)) end end}, {'Idris.Prelude.Show.MkShow', fun (V645) -> ('Idris.Idris2.Core.Context.Context':'dn--un--show_Show_SizeChange'(V645)) end, fun (V646) -> fun (V647) -> ('Idris.Idris2.Core.Context.Context':'dn--un--showPrec_Show_SizeChange'(V646, V647)) end end}}, V640, V641)) end end}, V632)) end, fun (V648) -> fun (V649) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V650) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V651) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V651)) end, fun (V652) -> fun (V653) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V652, V653)) end end}, {'Idris.Prelude.Show.MkShow', fun (V654) -> ('Idris.Idris2.Core.Context.Context':'dn--un--show_Show_SizeChange'(V654)) end, fun (V655) -> fun (V656) -> ('Idris.Idris2.Core.Context.Context':'dn--un--showPrec_Show_SizeChange'(V655, V656)) end end}}, V650)) end, fun (V657) -> fun (V658) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V659) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Nat'(V659)) end, fun (V660) -> fun (V661) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Nat'(V660, V661)) end end}, {'Idris.Prelude.Show.MkShow', fun (V662) -> ('Idris.Idris2.Core.Context.Context':'dn--un--show_Show_SizeChange'(V662)) end, fun (V663) -> fun (V664) -> ('Idris.Idris2.Core.Context.Context':'dn--un--showPrec_Show_SizeChange'(V663, V664)) end end}}, V657, V658)) end end}, V648, V649)) end end}, case V629 of {'Idris.Core.Context.Context.MkSCCall', E255, E256} -> (fun (V665, V666) -> V666 end(E255, E256)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))))) end, V608))), fun () -> fun (V668) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V669) -> case V669 of {'Idris.Prelude.Types.Left', E257} -> (fun (V670) -> {'Idris.Prelude.Types.Left', V670} end(E257)); {'Idris.Prelude.Types.Right', E258} -> (fun (V671) -> {'Idris.Prelude.Types.Right', 0} end(E258)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V672) -> begin (V700 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V673) -> fun (V674) -> fun (V675) -> fun (V676) -> fun (V677) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V675, V676, V677)) end end end end end, fun (V678) -> fun (V679) -> fun (V680) -> V679 end end end, fun (V681) -> fun (V682) -> fun (V683) -> fun (V684) -> fun (V685) -> begin (V686 = (V683(V685))), begin (V687 = (V684(V685))), (V686(V687)) end end end end end end end}, fun (V688) -> fun (V689) -> fun (V690) -> fun (V691) -> fun (V692) -> begin (V693 = (V690(V692))), ((V691(V693))(V692)) end end end end end end, fun (V694) -> fun (V695) -> fun (V696) -> begin (V697 = (V695(V696))), (V697(V696)) end end end end}, fun (V698) -> fun (V699) -> V699 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Size change: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, V667))))))(V672))), {'Idris.Prelude.Types.Right', V700} end end, V668)) end end end())(V2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E252)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E206)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E200)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E194)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--setOpt'(V0, V1, V2, V3) -> case V2 of {'Idris.Idris.Syntax.ShowImplicits', E0} -> (fun (V4) -> begin (V5 = ('Idris.Idris2.Core.Context':'un--getPPrint'(V0, V3))), case V5 of {'Idris.Prelude.Types.Left', E1} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V7) -> ('Idris.Idris2.Core.Context':'un--setPPrint'(V0, case V7 of {'Idris.Core.Options.MkPPOpts', E3, E4, E5} -> (fun (V8, V9, V10) -> {'Idris.Core.Options.MkPPOpts', V4, V9, V10} end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V3)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0)); {'Idris.Idris.Syntax.ShowNamespace', E6} -> (fun (V11) -> begin (V12 = ('Idris.Idris2.Core.Context':'un--getPPrint'(V0, V3))), case V12 of {'Idris.Prelude.Types.Left', E7} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V14) -> ('Idris.Idris2.Core.Context':'un--setPPrint'(V0, case V14 of {'Idris.Core.Options.MkPPOpts', E9, E10, E11} -> (fun (V15, V16, V17) -> {'Idris.Core.Options.MkPPOpts', V15, V16, V11} end(E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V3)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); {'Idris.Idris.Syntax.ShowTypes', E12} -> (fun (V18) -> begin (V20 = begin (V19 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V19} end), case V20 of {'Idris.Prelude.Types.Left', E13} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V22) -> begin (V39 = ('erlang':'put'(V1, case V22 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30} -> (fun (V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V18, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38} end(E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V39} end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); {'Idris.Idris.Syntax.EvalMode', E31} -> (fun (V40) -> begin (V42 = begin (V41 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V41} end), case V42 of {'Idris.Prelude.Types.Left', E32} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V44) -> begin (V61 = ('erlang':'put'(V1, case V44 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49} -> (fun (V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V45, V40, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60} end(E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V61} end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E31)); {'Idris.Idris.Syntax.Editor', E50} -> (fun (V62) -> begin (V64 = begin (V63 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V63} end), case V64 of {'Idris.Prelude.Types.Left', E51} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V66) -> begin (V83 = ('erlang':'put'(V1, case V66 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68} -> (fun (V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V67, V68, V69, V70, V71, V62, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82} end(E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V83} end end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E50)); {'Idris.Idris.Syntax.CG', E69} -> (fun (V84) -> begin (V86 = begin (V85 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V85} end), case V86 of {'Idris.Prelude.Types.Left', E70} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V88) -> case ('Idris.Idris2.Core.Options':'un--getCG'(case V88 of {'Idris.Core.Context.MkDefs', E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102} -> (fun (V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118) -> V93 end(E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V84)) of {'Idris.Prelude.Types.Just', E72} -> (fun (V119) -> ('Idris.Idris2.Core.Context':'un--setCG'(V0, V119, V3)) end(E72)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Idris.REPL.Common':'un--iputStrLn'(V0, V1, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"No such code generator available"/utf8>>)), V3)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); {'Idris.Idris.Syntax.Profile', E103} -> (fun (V120) -> begin (V121 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V3))), case V121 of {'Idris.Prelude.Types.Left', E104} -> (fun (V122) -> {'Idris.Prelude.Types.Left', V122} end(E104)); {'Idris.Prelude.Types.Right', E105} -> (fun (V123) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V123 of {'Idris.Core.Options.MkSessionOpts', E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131} -> (fun (V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144, V145, V146, V147, V148, V149) -> {'Idris.Core.Options.MkSessionOpts', V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V120, V143, V144, V145, V146, V147, V148, V149} end(E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V3)) end(E105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--rtrim'(V0) -> ('Idris.Idris2.Prelude.Types':'un--reverse'(('Idris.Idris2.Data.String':'un--ltrim'(('Idris.Idris2.Prelude.Types':'un--reverse'(V0)))))).
'un--replEval'(V0, V1, V2, V3, V4, V5) -> case V2 of 1 -> fun (V6) -> ('Idris.Idris2.Core.Normalise':'un--normaliseOpts'(V0, V1, case ('Idris.Idris2.Core.Value':'un--withAll'()) of {'Idris.Core.Value.MkEvalOpts', E0, E1, E2, E3, E4, E5, E6, E7} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14) -> {'Idris.Core.Value.MkEvalOpts', V7, V8, V9, V10, V11, V12, V13, 0} end(E0, E1, E2, E3, E4, E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V3, V4, V5, V6)) end; _ -> fun (V15) -> ('Idris.Idris2.Core.Normalise':'un--normalise'(V0, V1, V3, V4, V5, V15)) end end.
'un--replCmd'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of <<""/utf8>> -> {'Idris.Prelude.Types.Right', 0}; _ -> begin (V7 = ('un--interpret'(V0, V1, V2, V3, V4, V5, V6))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> (('un--displayResult'(V0, V1, V2, V3, V4, V9))(V6)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--repl'(V0, V1, V2, V3, V4, V5) -> begin (V6 = ('Idris.Idris2.Core.Context':'un--getNS'(V0, V5))), case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V8) -> begin (V10 = begin (V9 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V9} end), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> begin (V61 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V13) -> case V13 of {'Idris.Prelude.Types.Left', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V15) -> {'Idris.Prelude.Types.Right', 0} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V16) -> begin (V60 = (('Idris.Idris2.Prelude.IO':'un--putStr'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V19, V20, V21)) end end end end end, fun (V22) -> fun (V23) -> fun (V24) -> V23 end end end, fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> begin (V30 = (V27(V29))), begin (V31 = (V28(V29))), (V30(V31)) end end end end end end end}, fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> begin (V37 = (V34(V36))), ((V35(V37))(V36)) end end end end end end, fun (V38) -> fun (V39) -> fun (V40) -> begin (V41 = (V39(V40))), (V41(V40)) end end end end}, fun (V42) -> fun (V43) -> V43 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('nested--29341-12888--in--un--prompt'(V4, V3, V2, V1, V0, case V12 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59) -> V45 end(E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show_Namespace'(V8)), <<"> "/utf8>>))))))(V16))), {'Idris.Prelude.Types.Right', V60} end end, V5))), case V61 of {'Idris.Prelude.Types.Left', E22} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V63) -> begin (V96 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V64) -> case V64 of {'Idris.Prelude.Types.Left', E24} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V66) -> {'Idris.Prelude.Types.Right', 0} end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V67) -> begin (V95 = (('Idris.Idris2.Erlang.System.File':'un--fflush'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V68) -> fun (V69) -> fun (V70) -> fun (V71) -> fun (V72) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V70, V71, V72)) end end end end end, fun (V73) -> fun (V74) -> fun (V75) -> V74 end end end, fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> begin (V81 = (V78(V80))), begin (V82 = (V79(V80))), (V81(V82)) end end end end end end end}, fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> begin (V88 = (V85(V87))), ((V86(V88))(V87)) end end end end end end, fun (V89) -> fun (V90) -> fun (V91) -> begin (V92 = (V90(V91))), (V92(V91)) end end end end}, fun (V93) -> fun (V94) -> V94 end end}, ('Idris.Idris2.Erlang.System.File':'un--stdout'())))(V67))), {'Idris.Prelude.Types.Right', V95} end end, V5))), case V96 of {'Idris.Prelude.Types.Left', E26} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V98) -> begin (V127 = begin (V126 = (('Idris.Idris2.Prelude.IO':'un--getLine'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V99) -> fun (V100) -> fun (V101) -> fun (V102) -> fun (V103) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V101, V102, V103)) end end end end end, fun (V104) -> fun (V105) -> fun (V106) -> V105 end end end, fun (V107) -> fun (V108) -> fun (V109) -> fun (V110) -> fun (V111) -> begin (V112 = (V109(V111))), begin (V113 = (V110(V111))), (V112(V113)) end end end end end end end}, fun (V114) -> fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> begin (V119 = (V116(V118))), ((V117(V119))(V118)) end end end end end end, fun (V120) -> fun (V121) -> fun (V122) -> begin (V123 = (V121(V122))), (V123(V122)) end end end end}, fun (V124) -> fun (V125) -> V125 end end}))(V5))), {'Idris.Prelude.Types.Right', V126} end), case V127 of {'Idris.Prelude.Types.Left', E28} -> (fun (V128) -> {'Idris.Prelude.Types.Left', V128} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V129) -> begin (V130 = ('un--interpret'(V0, V1, V2, V3, V4, V129, V5))), case V130 of {'Idris.Prelude.Types.Left', E30} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V132) -> ('un--handleResult'(V0, V1, V2, V3, V4, V132, V5)) end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--proofSearch'(V0, V1, V2, V3) -> case V2 of 0 -> case V3 of [E2 | E3] -> (fun (V4, V5) -> [('nested--20547-5093--in--un--replaceStr'(V4, V5, V1, V0, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"?"/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V0)))), V1, V4)) | V5] end(E2, E3)); _ -> case V3 of [] -> []; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V6 = (V2 - 1)), case V3 of [E0 | E1] -> (fun (V7, V8) -> [V7 | ('un--proofSearch'(V0, V1, V6, V8))] end(E0, E1)); _ -> case V3 of [] -> []; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--processLocal'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> ('Idris.Idris2.TTImp.Elab.Local':'un--localHelper'(V0, V1, V2, V3, V4, V6, V7, V8, fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V13) -> ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V0, V1, V2, V3, V5, V11, V7, V13)) end, V9, V12)) end end, V10)).
'un--processEdit'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Idris.Syntax.TypeAt', E0, E1, E2} -> (fun (V6, V7, V8) -> fun (V9) -> begin (V11 = begin (V10 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V10} end), case V11 of {'Idris.Prelude.Types.Left', E3} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V13) -> begin (V15 = begin (V14 = ('erlang':'get'(V3))), {'Idris.Prelude.Types.Right', V14} end), case V15 of {'Idris.Prelude.Types.Left', E5} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V17) -> begin (V28 = ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> V8 end, ('un--findInTree'({'Idris.Builtin.MkPair', ((V6 - 1) rem 9223372036854775808), ((V7 - 1) rem 9223372036854775808)}, V8, case V17 of {'Idris.Core.Metadata.MkMetadata', E7, E8, E9, E10, E11, E12, E13, E14, E15, E16} -> (fun (V18, V19, V20, V21, V22, V23, V24, V25, V26, V27) -> V23 end(E7, E8, E9, E10, E11, E12, E13, E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))), begin (V59 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V28, case V13 of {'Idris.Core.Context.MkDefs', E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46} -> (fun (V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58) -> V29 end(E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V9))), case V59 of {'Idris.Prelude.Types.Left', E47} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V61) -> begin (V66 = case V61 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}}; _ -> begin (V63 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V62) -> ('un--displayType'(V0, V2, V13, V62)) end, V61, [], V9))), case V63 of {'Idris.Prelude.Types.Left', E49} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V65) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(V65))}} end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end), case V66 of {'Idris.Prelude.Types.Left', E51} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V68) -> begin (V72 = ('Idris.Idris2.Core.Metadata':'un--findTypeAt'(V3, fun (V69) -> fun (V70) -> ('un--anyAt'(fun (V71) -> ('Idris.Idris2.Core.FC':'un--within'({'Idris.Builtin.MkPair', ((V6 - 1) rem 9223372036854775808), ((V7 - 1) rem 9223372036854775808)}, V71)) end, V69, V70)) end end, V9))), case V72 of {'Idris.Prelude.Types.Left', E53} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V74) -> (('case--processEdit-6102'(V8, V7, V6, V4, V3, V2, V1, V0, V13, V17, V28, V61, V68, V74, {'Idris.Builtin.MkPair', V68, V74}))(V9)) end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); {'Idris.Idris.Syntax.CaseSplit', E55, E56, E57, E58} -> (fun (V75, V76, V77, V78) -> begin (V80 = fun (V79) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V77, 0)) of 1 -> ('Idris.Idris2.Core.FC':'un--within'({'Idris.Builtin.MkPair', ((V76 - 1) rem 9223372036854775808), ((V77 - 1) rem 9223372036854775808)}, V79)); 0 -> ('Idris.Idris2.Core.FC':'un--onLine'(((V76 - 1) rem 9223372036854775808), V79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), fun (V81) -> begin (V84 = ('Idris.Idris2.TTImp.Interactive.CaseSplit':'un--getSplits'(V0, V3, V1, fun (V82) -> fun (V83) -> ('un--anyAt'(V80, V82, V83)) end end, V78, V81))), case V84 of {'Idris.Prelude.Types.Left', E59} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V86) -> case V86 of {'Idris.TTImp.Interactive.CaseSplit.OK', E61} -> (fun (V87) -> begin (V88 = ('Idris.Idris2.Idris.IDEMode.CaseSplit':'un--updateCase'(V0, V2, V4, V87, ((V76 - 1) rem 9223372036854775808), ((V77 - 1) rem 9223372036854775808), V81))), case V88 of {'Idris.Prelude.Types.Left', E62} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V90) -> case V75 of 1 -> ('un--updateFile'(V4, fun (V91) -> ('un--caseSplit'(('Idris.Idris2.Libraries.Data.String.Extra':'un--unlines'(V90)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Integer'(((V76 - 1) rem 9223372036854775808))))), V91)) end, V81)); 0 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V94, V95)) end end end end, fun (V96) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V96)) end, V90))))}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61)); {'Idris.TTImp.Interactive.CaseSplit.SplitFail', E64} -> (fun (V97) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(('Idris.Idris2.TTImp.Interactive.CaseSplit':'dn--un--show_Show_SplitError'(V97))))}} end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E55, E56, E57, E58)); {'Idris.Idris.Syntax.AddClause', E65, E66, E67} -> (fun (V98, V99, V100) -> fun (V101) -> begin (V102 = ('Idris.Idris2.Idris.IDEMode.CaseSplit':'un--getClause'(V0, V3, V4, V99, V100, V101))), case V102 of {'Idris.Prelude.Types.Left', E68} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V104) -> case V104 of {'Idris.Prelude.Types.Just', E70} -> (fun (V105) -> case V98 of 1 -> ('un--updateFile'(V4, fun (V106) -> ('un--addClause'(V105, ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Integer'(V99)))), V106)) end, V101)); 0 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V105))}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E70)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V100)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"not defined here"/utf8>>))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E65, E66, E67)); {'Idris.Idris.Syntax.ExprSearch', E71, E72, E73, E74} -> (fun (V107, V108, V109, V110) -> fun (V111) -> begin (V113 = begin (V112 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V112} end), case V113 of {'Idris.Prelude.Types.Left', E75} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V115) -> begin (V117 = begin (V116 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V116} end), case V117 of {'Idris.Prelude.Types.Left', E77} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V119) -> begin (V133 = ('Idris.Idris2.Data.List':'un--elemBy'(fun (V120) -> fun (V121) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(('Idris.Idris2.Core.Name':'un--dropNS'(V120)), ('Idris.Idris2.Core.Name':'un--dropNS'(V121)))) end end, V109, case V119 of {'Idris.Idris.Syntax.MkSyntax', E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89} -> (fun (V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132) -> V130 end(E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V164 = ('Idris.Idris2.Core.Context':'un--lookupDefName'(V109, case V115 of {'Idris.Core.Context.MkDefs', E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119} -> (fun (V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163) -> V134 end(E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V111))), case V164 of {'Idris.Prelude.Types.Left', E120} -> (fun (V165) -> {'Idris.Prelude.Types.Left', V165} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V166) -> case V166 of [E122 | E123] -> (fun (V167, V168) -> case V167 of {'Idris.Builtin.MkPair', E124, E125} -> (fun (V169, V170) -> case V170 of {'Idris.Builtin.MkPair', E126, E127} -> (fun (V171, V172) -> case V172 of {'Idris.Core.Context.Context.Hole', E128, E129} -> (fun (V173, V174) -> case V168 of [] -> begin (V176 = fun (V175) -> ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--exprSearch'(V0, V3, V1, ('Idris.Idris2.Core.FC':'un--replFC'()), V109, [], V175)) end), begin (V178 = begin (V177 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V177} end), case V178 of {'Idris.Prelude.Types.Left', E130} -> (fun (V179) -> {'Idris.Prelude.Types.Left', V179} end(E130)); {'Idris.Prelude.Types.Right', E131} -> (fun (V180) -> begin (V198 = begin (V197 = ('erlang':'put'(V4, case V180 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147} -> (fun (V181, V182, V183, V184, V185, V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V181, V182, V183, V184, V185, V186, V187, V188, V189, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V109, V176}}, V191, V192, V193, V194, V195, V196} end(E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V197} end), case V198 of {'Idris.Prelude.Types.Left', E148} -> (fun (V199) -> {'Idris.Prelude.Types.Left', V199} end(E148)); {'Idris.Prelude.Types.Right', E149} -> (fun (V200) -> begin (V202 = begin (V201 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V201} end), case V202 of {'Idris.Prelude.Types.Left', E150} -> (fun (V203) -> {'Idris.Prelude.Types.Left', V203} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V204) -> begin (V205 = ('un--nextProofSearch'(V0, V1, V4, V111))), case V205 of {'Idris.Prelude.Types.Left', E152} -> (fun (V206) -> {'Idris.Prelude.Types.Left', V206} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V207) -> case V207 of {'Idris.Prelude.Types.Just', E154} -> (fun (V208) -> case V208 of {'Idris.Builtin.MkPair', E155, E156} -> (fun (V209, V210) -> begin (V211 = ('un--dropLams'(V173, V210))), begin (V213 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V2, ('Idris.Idris2.TTImp.TTImp.Functor':'dn--un--map_Functor_RawImp\x{27}'(fun (V212) -> ('Idris.Idris2.Core.TT':'un--defaultKindedName'(V212)) end, V211)), V111))), case V213 of {'Idris.Prelude.Types.Left', E157} -> (fun (V214) -> {'Idris.Prelude.Types.Left', V214} end(E157)); {'Idris.Prelude.Types.Right', E158} -> (fun (V215) -> begin (V216 = case V133 of 1 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Core.FC':'un--replFC'()), V215)); 0 -> V215; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V107 of 1 -> ('un--updateFile'(V4, fun (V217) -> ('un--proofSearch'(V109, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(V216)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Integer'(((V108 - 1) rem 9223372036854775808))))), V217)) end, V111)); 0 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', ('un--prettyTerm'(V216))}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E158)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E155, E156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E154)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V218) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V218)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"No search results"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"No search results"/utf8>>)); 0 -> <<"No search results"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V219) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V219)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E128, E129)); {'Idris.Core.Context.Context.PMDef', E159, E160, E161, E162, E163} -> (fun (V220, V221, V222, V223, V224) -> case V221 of [] -> case V222 of {'Idris.Core.CaseTree.STerm', E164, E165} -> (fun (V225, V226) -> case V168 of [] -> begin (V227 = [{'Idris.Builtin.MkPair', V169, {'Idris.Builtin.MkPair', V171, {'Idris.Core.Context.Context.PMDef', V220, [], {'Idris.Core.CaseTree.STerm', V225, V226}, V223, V224}}} | []]), ('case--case block in processEdit-7053'(V110, V109, V108, V107, V4, V3, V2, V1, V0, V115, V119, V133, V223, V224, V225, V169, V171, V226, V220, V227, case V220 of {'Idris.Core.Context.Context.MkPMDefInfo', E166, E167, E168} -> (fun (V228, V229, V230) -> V228 end(E166, E167, E168)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V111)) end; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V231) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V231)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E164, E165)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V232) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V232)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V233) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V233)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E159, E160, E161, E162, E163)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V234) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V234)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E126, E127)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V235) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V235)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E124, E125)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V236) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V236)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E122, E123)); [] -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Unknown name"/utf8>>)), ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V109))))}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V237) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V237)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E71, E72, E73, E74)); {'Idris.Idris.Syntax.ExprSearchNext'} -> (fun () -> fun (V238) -> begin (V240 = begin (V239 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V239} end), case V240 of {'Idris.Prelude.Types.Left', E169} -> (fun (V241) -> {'Idris.Prelude.Types.Left', V241} end(E169)); {'Idris.Prelude.Types.Right', E170} -> (fun (V242) -> begin (V244 = begin (V243 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V243} end), case V244 of {'Idris.Prelude.Types.Left', E171} -> (fun (V245) -> {'Idris.Prelude.Types.Left', V245} end(E171)); {'Idris.Prelude.Types.Right', E172} -> (fun (V246) -> begin (V247 = ('un--nextProofSearch'(V0, V1, V4, V238))), case V247 of {'Idris.Prelude.Types.Left', E173} -> (fun (V248) -> {'Idris.Prelude.Types.Left', V248} end(E173)); {'Idris.Prelude.Types.Right', E174} -> (fun (V249) -> case V249 of {'Idris.Prelude.Types.Just', E175} -> (fun (V250) -> case V250 of {'Idris.Builtin.MkPair', E176, E177} -> (fun (V251, V252) -> begin (V283 = ('Idris.Idris2.Core.Context':'un--lookupDefName'(V251, case V242 of {'Idris.Core.Context.MkDefs', E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202, E203, E204, E205, E206, E207} -> (fun (V253, V254, V255, V256, V257, V258, V259, V260, V261, V262, V263, V264, V265, V266, V267, V268, V269, V270, V271, V272, V273, V274, V275, V276, V277, V278, V279, V280, V281, V282) -> V253 end(E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202, E203, E204, E205, E206, E207)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V238))), case V283 of {'Idris.Prelude.Types.Left', E208} -> (fun (V284) -> {'Idris.Prelude.Types.Left', V284} end(E208)); {'Idris.Prelude.Types.Right', E209} -> (fun (V285) -> case V285 of [E210 | E211] -> (fun (V286, V287) -> case V286 of {'Idris.Builtin.MkPair', E212, E213} -> (fun (V288, V289) -> case V289 of {'Idris.Builtin.MkPair', E214, E215} -> (fun (V290, V291) -> case V291 of {'Idris.Core.Context.Context.Hole', E216, E217} -> (fun (V292, V293) -> case V287 of [] -> begin (V307 = ('Idris.Idris2.Data.List':'un--elemBy'(fun (V294) -> fun (V295) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(('Idris.Idris2.Core.Name':'un--dropNS'(V294)), ('Idris.Idris2.Core.Name':'un--dropNS'(V295)))) end end, V251, case V246 of {'Idris.Idris.Syntax.MkSyntax', E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228} -> (fun (V296, V297, V298, V299, V300, V301, V302, V303, V304, V305, V306) -> V304 end(E218, E219, E220, E221, E222, E223, E224, E225, E226, E227, E228)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V308 = ('un--dropLams'(V292, V252))), begin (V310 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V2, ('Idris.Idris2.TTImp.TTImp.Functor':'dn--un--map_Functor_RawImp\x{27}'(fun (V309) -> ('Idris.Idris2.Core.TT':'un--defaultKindedName'(V309)) end, V308)), V238))), case V310 of {'Idris.Prelude.Types.Left', E229} -> (fun (V311) -> {'Idris.Prelude.Types.Left', V311} end(E229)); {'Idris.Prelude.Types.Right', E230} -> (fun (V312) -> begin (V313 = case V307 of 1 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Core.FC':'un--replFC'()), V312)); 0 -> V312; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', ('un--prettyTerm'(V313))}} end end(E230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V314) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V314)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E216, E217)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V315) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V315)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E214, E215)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V316) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V316)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E212, E213)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V317) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V317)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E210, E211)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V318) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V318)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Not a searchable hole"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Not a searchable hole"/utf8>>)); 0 -> <<"Not a searchable hole"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E209)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E176, E177)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E175)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V319) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V319)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"No more results"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"No more results"/utf8>>)); 0 -> <<"No more results"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E172)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E170)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.Syntax.GenerateDef', E231, E232, E233, E234} -> (fun (V320, V321, V322, V323) -> fun (V324) -> begin (V326 = begin (V325 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V325} end), case V326 of {'Idris.Prelude.Types.Left', E235} -> (fun (V327) -> {'Idris.Prelude.Types.Left', V327} end(E235)); {'Idris.Prelude.Types.Right', E236} -> (fun (V328) -> begin (V331 = ('Idris.Idris2.Core.Metadata':'un--findTyDeclAt'(V3, fun (V329) -> fun (V330) -> ('Idris.Idris2.Core.FC':'un--onLine'(((V321 - 1) rem 9223372036854775808), V329)) end end, V324))), case V331 of {'Idris.Prelude.Types.Left', E237} -> (fun (V332) -> {'Idris.Prelude.Types.Left', V332} end(E237)); {'Idris.Prelude.Types.Right', E238} -> (fun (V333) -> case V333 of {'Idris.Prelude.Types.Just', E239} -> (fun (V334) -> case V334 of {'Idris.Builtin.MkPair', E240, E241} -> (fun (V335, V336) -> case V336 of {'Idris.Builtin.MkPair', E242, E243} -> (fun (V337, V338) -> case V338 of {'Idris.Builtin.MkPair', E244, E245} -> (fun (V339, V340) -> begin (V371 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V337, case V328 of {'Idris.Core.Context.MkDefs', E246, E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266, E267, E268, E269, E270, E271, E272, E273, E274, E275} -> (fun (V341, V342, V343, V344, V345, V346, V347, V348, V349, V350, V351, V352, V353, V354, V355, V356, V357, V358, V359, V360, V361, V362, V363, V364, V365, V366, V367, V368, V369, V370) -> V341 end(E246, E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266, E267, E268, E269, E270, E271, E272, E273, E274, E275)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V324))), case V371 of {'Idris.Prelude.Types.Left', E276} -> (fun (V372) -> {'Idris.Prelude.Types.Left', V372} end(E276)); {'Idris.Prelude.Types.Right', E277} -> (fun (V373) -> begin (V374 = {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V335, {'Idris.Builtin.MkPair', V337, {'Idris.Builtin.MkPair', V339, V340}}}}), case V373 of {'Idris.Prelude.Types.Just', E278} -> (fun (V375) -> case V375 of {'Idris.Core.Context.Context.None'} -> (fun () -> begin (V381 = fun (V376) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--makeDefSort'(V0, V3, V1, fun (V377) -> fun (V378) -> ('Idris.Idris2.Core.FC':'un--onLine'(((V321 - 1) rem 9223372036854775808), V377)) end end, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))), fun (V379) -> fun (V380) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--mostUsed'(V379, V380)) end end, V337, V376)) end), begin (V383 = begin (V382 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V382} end), case V383 of {'Idris.Prelude.Types.Left', E279} -> (fun (V384) -> {'Idris.Prelude.Types.Left', V384} end(E279)); {'Idris.Prelude.Types.Right', E280} -> (fun (V385) -> begin (V403 = begin (V402 = ('erlang':'put'(V4, case V385 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292, E293, E294, E295, E296} -> (fun (V386, V387, V388, V389, V390, V391, V392, V393, V394, V395, V396, V397, V398, V399, V400, V401) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V386, V387, V388, V389, V390, V391, V392, V393, V394, V395, {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V321, V381}}, V397, V398, V399, V400, V401} end(E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292, E293, E294, E295, E296)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V402} end), case V403 of {'Idris.Prelude.Types.Left', E297} -> (fun (V404) -> {'Idris.Prelude.Types.Left', V404} end(E297)); {'Idris.Prelude.Types.Right', E298} -> (fun (V405) -> begin (V406 = ('un--nextGenDef'(V0, V1, V4, V323, V324))), case V406 of {'Idris.Prelude.Types.Left', E299} -> (fun (V407) -> {'Idris.Prelude.Types.Left', V407} end(E299)); {'Idris.Prelude.Types.Right', E300} -> (fun (V408) -> begin (V409 = {'Idris.Prelude.Types.Just', {'Idris.Core.Context.Context.None'}}), case V408 of {'Idris.Prelude.Types.Just', E301} -> (fun (V410) -> case V410 of {'Idris.Builtin.MkPair', E302, E303} -> (fun (V411, V412) -> case V412 of {'Idris.Builtin.MkPair', E304, E305} -> (fun (V413, V414) -> begin (V415 = ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Integer'(('Idris.Idris2.Core.FC':'un--startCol'(('Idris.Idris2.Core.FC':'un--toNonEmptyFC'(V413))))))))), begin (V416 = ('Idris.Idris2.Idris.REPL.Opts':'un--getSourceLine'(V4, V321, V324))), case V416 of {'Idris.Prelude.Types.Left', E306} -> (fun (V417) -> {'Idris.Prelude.Types.Left', V417} end(E306)); {'Idris.Prelude.Types.Right', E307} -> (fun (V418) -> begin (V419 = {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V411, {'Idris.Builtin.MkPair', V413, V414}}}), case V418 of {'Idris.Prelude.Types.Just', E308} -> (fun (V420) -> begin (V421 = {'Idris.Prelude.Types.Just', V420}), ('case--case block in case block in case block in case block in processEdit-7849'(V323, V322, V321, V320, V4, V3, V2, V1, V0, V328, V340, V339, V335, V337, V374, V409, V381, V385, V411, V413, V414, V419, V415, V420, V421, ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V420)), V324)) end end(E308)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V422) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V422)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Source line not found"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Source line not found"/utf8>>)); 0 -> <<"Source line not found"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E307)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E304, E305)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E302, E303)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E301)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V423) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V423)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"No search results"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"No search results"/utf8>>)); 0 -> <<"No search results"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E300)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E298)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E280)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V424) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V424)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Already defined"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Already defined"/utf8>>)); 0 -> <<"Already defined"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E278)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Can\x{27}t find declaration for"/utf8>>)), ('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V322))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E277)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E244, E245)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E242, E243)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E240, E241)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E239)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"Can\x{27}t find declaration for"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V322)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"on line"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Int'(V321))))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E238)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E236)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E231, E232, E233, E234)); {'Idris.Idris.Syntax.GenerateDefNext'} -> (fun () -> fun (V425) -> begin (V426 = ('un--nextGenDef'(V0, V1, V4, 0, V425))), case V426 of {'Idris.Prelude.Types.Left', E309} -> (fun (V427) -> {'Idris.Prelude.Types.Left', V427} end(E309)); {'Idris.Prelude.Types.Right', E310} -> (fun (V428) -> case V428 of {'Idris.Prelude.Types.Just', E311} -> (fun (V429) -> case V429 of {'Idris.Builtin.MkPair', E312, E313} -> (fun (V430, V431) -> case V431 of {'Idris.Builtin.MkPair', E314, E315} -> (fun (V432, V433) -> begin (V434 = ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Integer'(('Idris.Idris2.Core.FC':'un--startCol'(('Idris.Idris2.Core.FC':'un--toNonEmptyFC'(V432))))))))), begin (V435 = ('Idris.Idris2.Idris.REPL.Opts':'un--getSourceLine'(V4, V430, V425))), case V435 of {'Idris.Prelude.Types.Left', E316} -> (fun (V436) -> {'Idris.Prelude.Types.Left', V436} end(E316)); {'Idris.Prelude.Types.Right', E317} -> (fun (V437) -> case V437 of {'Idris.Prelude.Types.Just', E318} -> (fun (V438) -> case ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V438)) of {'Idris.Builtin.MkPair', E319, E320} -> (fun (V439, V440) -> begin (V443 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V441) -> fun (V442) -> ('un--printClause'(V0, V2, V439, V434, V441, V442)) end end, V433, [], V425))), case V443 of {'Idris.Prelude.Types.Left', E321} -> (fun (V444) -> {'Idris.Prelude.Types.Left', V444} end(E321)); {'Idris.Prelude.Types.Right', E322} -> (fun (V445) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DisplayEdit', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V446) -> fun (V447) -> fun (V448) -> fun (V449) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V448, V449)) end end end end, fun (V450) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V450)) end, V445))))}} end(E322)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E319, E320)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E318)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V451) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V451)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Source line not found"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Source line not found"/utf8>>)); 0 -> <<"Source line not found"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E317)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E314, E315)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E312, E313)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E311)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V452) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V452)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"No more results"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"No more results"/utf8>>)); 0 -> <<"No more results"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E310)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.Syntax.MakeLemma', E323, E324, E325} -> (fun (V453, V454, V455) -> fun (V456) -> begin (V458 = begin (V457 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V457} end), case V458 of {'Idris.Prelude.Types.Left', E326} -> (fun (V459) -> {'Idris.Prelude.Types.Left', V459} end(E326)); {'Idris.Prelude.Types.Right', E327} -> (fun (V460) -> begin (V462 = begin (V461 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V461} end), case V462 of {'Idris.Prelude.Types.Left', E328} -> (fun (V463) -> {'Idris.Prelude.Types.Left', V463} end(E328)); {'Idris.Prelude.Types.Right', E329} -> (fun (V464) -> begin (V478 = ('Idris.Idris2.Data.List':'un--elemBy'(fun (V465) -> fun (V466) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(('Idris.Idris2.Core.Name':'un--dropNS'(V465)), ('Idris.Idris2.Core.Name':'un--dropNS'(V466)))) end end, V455, case V464 of {'Idris.Idris.Syntax.MkSyntax', E330, E331, E332, E333, E334, E335, E336, E337, E338, E339, E340} -> (fun (V467, V468, V469, V470, V471, V472, V473, V474, V475, V476, V477) -> V475 end(E330, E331, E332, E333, E334, E335, E336, E337, E338, E339, E340)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V509 = ('un--lookupDefTyName'(V455, case V460 of {'Idris.Core.Context.MkDefs', E341, E342, E343, E344, E345, E346, E347, E348, E349, E350, E351, E352, E353, E354, E355, E356, E357, E358, E359, E360, E361, E362, E363, E364, E365, E366, E367, E368, E369, E370} -> (fun (V479, V480, V481, V482, V483, V484, V485, V486, V487, V488, V489, V490, V491, V492, V493, V494, V495, V496, V497, V498, V499, V500, V501, V502, V503, V504, V505, V506, V507, V508) -> V479 end(E341, E342, E343, E344, E345, E346, E347, E348, E349, E350, E351, E352, E353, E354, E355, E356, E357, E358, E359, E360, E361, E362, E363, E364, E365, E366, E367, E368, E369, E370)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V456))), case V509 of {'Idris.Prelude.Types.Left', E371} -> (fun (V510) -> {'Idris.Prelude.Types.Left', V510} end(E371)); {'Idris.Prelude.Types.Right', E372} -> (fun (V511) -> case V511 of [E373 | E374] -> (fun (V512, V513) -> case V512 of {'Idris.Builtin.MkPair', E375, E376} -> (fun (V514, V515) -> case V515 of {'Idris.Builtin.MkPair', E377, E378} -> (fun (V516, V517) -> case V517 of {'Idris.Builtin.MkPair', E379, E380} -> (fun (V518, V519) -> case V518 of {'Idris.Core.Context.Context.Hole', E381, E382} -> (fun (V520, V521) -> case V513 of [] -> begin (V522 = ('Idris.Idris2.TTImp.Interactive.MakeLemma':'un--makeLemma'(V3, V0, ('Idris.Idris2.Core.FC':'un--replFC'()), V455, V520, V519, V456))), case V522 of {'Idris.Prelude.Types.Left', E383} -> (fun (V523) -> {'Idris.Prelude.Types.Left', V523} end(E383)); {'Idris.Prelude.Types.Right', E384} -> (fun (V524) -> case V524 of {'Idris.Builtin.MkPair', E385, E386} -> (fun (V525, V526) -> begin (V528 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V2, ('Idris.Idris2.TTImp.TTImp.Functor':'dn--un--map_Functor_RawImp\x{27}'(fun (V527) -> ('Idris.Idris2.Core.TT':'un--defaultKindedName'(V527)) end, V525)), V456))), case V528 of {'Idris.Prelude.Types.Left', E387} -> (fun (V529) -> {'Idris.Prelude.Types.Left', V529} end(E387)); {'Idris.Prelude.Types.Right', E388} -> (fun (V530) -> begin (V532 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V2, ('Idris.Idris2.TTImp.TTImp.Functor':'dn--un--map_Functor_RawImp\x{27}'(fun (V531) -> ('Idris.Idris2.Core.TT':'un--defaultKindedName'(V531)) end, V526)), V456))), case V532 of {'Idris.Prelude.Types.Left', E389} -> (fun (V533) -> {'Idris.Prelude.Types.Left', V533} end(E389)); {'Idris.Prelude.Types.Right', E390} -> (fun (V534) -> begin (V536 = begin (V535 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V535} end), case V536 of {'Idris.Prelude.Types.Left', E391} -> (fun (V537) -> {'Idris.Prelude.Types.Left', V537} end(E391)); {'Idris.Prelude.Types.Right', E392} -> (fun (V538) -> begin (V539 = ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(case V478 of 1 -> ('Idris.Idris2.Idris.Resugar':'un--addBracket'(('Idris.Idris2.Core.FC':'un--replFC'()), V534)); 0 -> V534; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V540 = ('Idris.Idris2.Idris.REPL.Opts':'un--getSourceLine'(V4, V454, V456))), case V540 of {'Idris.Prelude.Types.Left', E393} -> (fun (V541) -> {'Idris.Prelude.Types.Left', V541} end(E393)); {'Idris.Prelude.Types.Right', E394} -> (fun (V542) -> case V542 of {'Idris.Prelude.Types.Just', E395} -> (fun (V543) -> case ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V543)) of {'Idris.Builtin.MkPair', E396, E397} -> (fun (V544, V545) -> case V453 of 1 -> ('un--updateFile'(V4, fun (V546) -> ('un--addMadeLemma'(V544, V455, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(V530)), V539, ('Idris.Idris2.Prelude.Types':'dn--un--max_Ord_Nat'(('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num_Nat'(0)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Integer'(((V454 - 1) rem 9223372036854775808))))))), V546)) end, V456)); 0 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.MadeLemma', V544, V455, V530, V539}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E396, E397)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E395)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V547) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V547)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Source line not found"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Source line not found"/utf8>>)); 0 -> <<"Source line not found"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E394)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E392)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E390)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E388)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E385, E386)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E384)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V548) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V548)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Can\x{27}t make lifted definition"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Can\x{27}t make lifted definition"/utf8>>)); 0 -> <<"Can\x{27}t make lifted definition"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E381, E382)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V549) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V549)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Can\x{27}t make lifted definition"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Can\x{27}t make lifted definition"/utf8>>)); 0 -> <<"Can\x{27}t make lifted definition"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E379, E380)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V550) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V550)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Can\x{27}t make lifted definition"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Can\x{27}t make lifted definition"/utf8>>)); 0 -> <<"Can\x{27}t make lifted definition"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E377, E378)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V551) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V551)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Can\x{27}t make lifted definition"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Can\x{27}t make lifted definition"/utf8>>)); 0 -> <<"Can\x{27}t make lifted definition"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E375, E376)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V552) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V552)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Can\x{27}t make lifted definition"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Can\x{27}t make lifted definition"/utf8>>)); 0 -> <<"Can\x{27}t make lifted definition"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E373, E374)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V553) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V553)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Can\x{27}t make lifted definition"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Can\x{27}t make lifted definition"/utf8>>)); 0 -> <<"Can\x{27}t make lifted definition"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end end(E372)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E329)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E327)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E323, E324, E325)); {'Idris.Idris.Syntax.MakeCase', E398, E399, E400} -> (fun (V554, V555, V556) -> fun (V557) -> begin (V558 = ('Idris.Idris2.Idris.REPL.Opts':'un--getLitStyle'(V4, V557))), case V558 of {'Idris.Prelude.Types.Left', E401} -> (fun (V559) -> {'Idris.Prelude.Types.Left', V559} end(E401)); {'Idris.Prelude.Types.Right', E402} -> (fun (V560) -> begin (V562 = begin (V561 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V561} end), case V562 of {'Idris.Prelude.Types.Left', E403} -> (fun (V563) -> {'Idris.Prelude.Types.Left', V563} end(E403)); {'Idris.Prelude.Types.Right', E404} -> (fun (V564) -> begin (V578 = ('Idris.Idris2.Data.List':'un--elemBy'(fun (V565) -> fun (V566) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(('Idris.Idris2.Core.Name':'un--dropNS'(V565)), ('Idris.Idris2.Core.Name':'un--dropNS'(V566)))) end end, V556, case V564 of {'Idris.Idris.Syntax.MkSyntax', E405, E406, E407, E408, E409, E410, E411, E412, E413, E414, E415} -> (fun (V567, V568, V569, V570, V571, V572, V573, V574, V575, V576, V577) -> V575 end(E405, E406, E407, E408, E409, E410, E411, E412, E413, E414, E415)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V579 = ('Idris.Idris2.Idris.REPL.Opts':'un--getSourceLine'(V4, V555, V557))), case V579 of {'Idris.Prelude.Types.Left', E416} -> (fun (V580) -> {'Idris.Prelude.Types.Left', V580} end(E416)); {'Idris.Prelude.Types.Right', E417} -> (fun (V581) -> case V581 of {'Idris.Prelude.Types.Just', E418} -> (fun (V582) -> case ('Idris.Idris2.Parser.Unlit':'un--unlit'(V560, V582)) of {'Idris.Prelude.Types.Right', E419} -> (fun (V583) -> case ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V582)) of {'Idris.Builtin.MkPair', E420, E421} -> (fun (V584, V585) -> begin (V586 = ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(('Idris.Idris2.Idris.IDEMode.MakeClause':'un--makeCase'(V578, V556, V583))))))), case V554 of 1 -> ('un--updateFile'(V4, fun (V587) -> ('un--addMadeCase'(V584, V586, ('Idris.Idris2.Prelude.Types':'dn--un--max_Ord_Nat'(('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num_Nat'(0)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Integer'(((V555 - 1) rem 9223372036854775808))))))), V587)) end, V557)); 0 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.MadeCase', V584, V586}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E420, E421)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E419)); {'Idris.Prelude.Types.Left', E422} -> (fun (V588) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V589) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V589)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Invalid literate Idris"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Invalid literate Idris"/utf8>>)); 0 -> <<"Invalid literate Idris"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end(E422)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E418)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V590) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V590)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Source line not available"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Source line not available"/utf8>>)); 0 -> <<"Source line not available"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E417)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E404)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E402)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E398, E399, E400)); {'Idris.Idris.Syntax.MakeWith', E423, E424, E425} -> (fun (V591, V592, V593) -> fun (V594) -> begin (V595 = ('Idris.Idris2.Idris.REPL.Opts':'un--getLitStyle'(V4, V594))), case V595 of {'Idris.Prelude.Types.Left', E426} -> (fun (V596) -> {'Idris.Prelude.Types.Left', V596} end(E426)); {'Idris.Prelude.Types.Right', E427} -> (fun (V597) -> begin (V598 = ('Idris.Idris2.Idris.REPL.Opts':'un--getSourceLine'(V4, V592, V594))), case V598 of {'Idris.Prelude.Types.Left', E428} -> (fun (V599) -> {'Idris.Prelude.Types.Left', V599} end(E428)); {'Idris.Prelude.Types.Right', E429} -> (fun (V600) -> case V600 of {'Idris.Prelude.Types.Just', E430} -> (fun (V601) -> case ('Idris.Idris2.Parser.Unlit':'un--unlit'(V597, V601)) of {'Idris.Prelude.Types.Right', E431} -> (fun (V602) -> case ('Idris.Idris2.Parser.Unlit':'un--isLitLine'(V601)) of {'Idris.Builtin.MkPair', E432, E433} -> (fun (V603, V604) -> begin (V605 = ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(('Idris.Idris2.Idris.IDEMode.MakeClause':'un--makeWith'(V593, V602))))))), case V591 of 1 -> ('un--updateFile'(V4, fun (V606) -> ('un--addMadeCase'(V603, V605, ('Idris.Idris2.Prelude.Types':'dn--un--max_Ord_Nat'(('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num_Nat'(0)), ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'(('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Integer'(((V592 - 1) rem 9223372036854775808))))))), V606)) end, V594)); 0 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.MadeWith', V603, V605}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E432, E433)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E431)); {'Idris.Prelude.Types.Left', E434} -> (fun (V607) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V608) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V608)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Invalid literate Idris"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Invalid literate Idris"/utf8>>)); 0 -> <<"Invalid literate Idris"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end(E434)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E430)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.EditError', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V609) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--unsafeTextWithoutNewLines'(V609)) end, ('Idris.Idris2.Data.List1':'un--forget'(('Idris.Idris2.Libraries.Data.String.Extra':'un--lines'(case ('Idris.Idris2.Data.String':'un--isSuffixOf'(<<"\x{a}"/utf8>>, <<"Source line not available"/utf8>>)) of 1 -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--dropLast'((1 + 0), <<"Source line not available"/utf8>>)); 0 -> <<"Source line not available"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))))}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E429)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E427)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E423, E424, E425)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--processCatch'(V0, V1, V2, V3, V4, V5, V6) -> begin (V7 = ('Idris.Idris2.Core.Context':'un--branch'(V0, V6))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> begin (V11 = begin (V10 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V10} end), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> begin (V15 = begin (V14 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V14} end), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> begin (V19 = begin (V18 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V18} end), case V19 of {'Idris.Prelude.Types.Left', E6} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V21) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(fun (V22) -> begin (V23 = (('un--process'(V0, V1, V2, V3, V4, V5))(V22))), case V23 of {'Idris.Prelude.Types.Left', E8} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V25) -> begin (V26 = ('Idris.Idris2.Core.Context':'un--commit'(V0, V22))), case V26 of {'Idris.Prelude.Types.Left', E10} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V28) -> {'Idris.Prelude.Types.Right', V25} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V29) -> fun (V30) -> begin (V32 = begin (V31 = ('erlang':'put'(V0, V9))), {'Idris.Prelude.Types.Right', V31} end), case V32 of {'Idris.Prelude.Types.Left', E12} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V34) -> begin (V36 = begin (V35 = ('erlang':'put'(V1, V13))), {'Idris.Prelude.Types.Right', V35} end), case V36 of {'Idris.Prelude.Types.Left', E14} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V38) -> begin (V40 = begin (V39 = ('erlang':'put'(V2, V17))), {'Idris.Prelude.Types.Right', V39} end), case V40 of {'Idris.Prelude.Types.Left', E16} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V42) -> begin (V44 = begin (V43 = ('erlang':'put'(V4, V21))), {'Idris.Prelude.Types.Right', V43} end), case V44 of {'Idris.Prelude.Types.Left', E18} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V46) -> begin (V47 = ('Idris.Idris2.Idris.Error':'un--display'(V0, V2, V4, V29, V30))), case V47 of {'Idris.Prelude.Types.Left', E20} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V49) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.REPLError', V49}} end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V6)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--process'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Idris.Syntax.NewDefn', E0} -> (fun (V6) -> fun (V7) -> ('un--execDecls'(V0, V1, V2, V3, V4, V6, V7)) end end(E0)); {'Idris.Idris.Syntax.Eval', E1} -> (fun (V8) -> fun (V9) -> begin (V11 = begin (V10 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V10} end), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> begin (V30 = case V13 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19} -> (fun (V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29) -> V15 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V30 of 2 -> begin (V35 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V31) -> case V31 of {'Idris.Prelude.Types.Left', E78} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V33) -> {'Idris.Prelude.Types.Right', 0} end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V34) -> ('un--execExp'(V0, V1, V2, V3, V4, V8, V34)) end, V9))), case V35 of {'Idris.Prelude.Types.Left', E80} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V37) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Executed', V8}} end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V38 = ('un--inferAndNormalize'(V0, V1, V2, V3, V4, V30, V8, V9))), case V38 of {'Idris.Prelude.Types.Left', E20} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V40) -> case V40 of {'Idris.Idris.REPL.WithType', E22, E23} -> (fun (V41, V42) -> begin (V43 = ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V2, {'Idris.Core.Env.Nil'}, V41, V9))), case V43 of {'Idris.Prelude.Types.Left', E24} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V45) -> begin (V47 = begin (V46 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V46} end), case V47 of {'Idris.Prelude.Types.Left', E26} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V49) -> begin (V51 = begin (V50 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V50} end), case V51 of {'Idris.Prelude.Types.Left', E28} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V53) -> begin (V57 = fun (V54) -> fun (V55) -> fun (V56) -> ('un--replEval'(V0, [], V30, V54, V55, V56)) end end end), begin (V62 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V58) -> case V58 of {'Idris.Prelude.Types.Left', E30} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V60) -> {'Idris.Prelude.Types.Right', {'Idris.Core.Name.DN', <<"it"/utf8>>, V60}} end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V61) -> ('Idris.Idris2.Core.UnifyState':'un--genName'(V0, V1, <<"evalResult"/utf8>>, V61)) end, V9))), case V62 of {'Idris.Prelude.Types.Left', E32} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V64) -> begin (V69 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V65) -> case V65 of {'Idris.Prelude.Types.Left', E34} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V67) -> {'Idris.Prelude.Types.Right', 0} end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V68) -> ('Idris.Idris2.Core.Context':'un--addDef'(V0, V64, ('Idris.Idris2.Core.Context':'un--newDef'(('Idris.Idris2.Core.FC':'un--replFC'()), V64, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), [], V42, 0, {'Idris.Core.Context.Context.PMDef', ('Idris.Idris2.Core.Context.Context':'un--defaultPI'()), [], {'Idris.Core.CaseTree.STerm', 0, V41}, {'Idris.Core.CaseTree.STerm', 0, V41}, []})), V68)) end, V9))), case V69 of {'Idris.Prelude.Types.Left', E36} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V71) -> begin (V72 = ('Idris.Idris2.Core.Context':'un--addToSave'(V0, V64, V9))), case V72 of {'Idris.Prelude.Types.Left', E38} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V74) -> begin (V92 = begin (V91 = ('erlang':'put'(V4, case V53 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55} -> (fun (V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, {'Idris.Prelude.Types.Just', V64}, V87, V88, V89, V90} end(E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V91} end), case V92 of {'Idris.Prelude.Types.Left', E56} -> (fun (V93) -> {'Idris.Prelude.Types.Left', V93} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V94) -> case case V53 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77} -> (fun (V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110) -> V95 end(E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> begin (V114 = begin (V111 = ((((V57(V49))({'Idris.Core.Env.Nil'}))(V42))(V9))), case V111 of {'Idris.Prelude.Types.Left', E58} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V113) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V2, {'Idris.Core.Env.Nil'}, V113, V9)) end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V114 of {'Idris.Prelude.Types.Left', E60} -> (fun (V115) -> {'Idris.Prelude.Types.Left', V115} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V116) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Evaluated', V45, {'Idris.Prelude.Types.Just', V116}}} end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Evaluated', V45, {'Idris.Prelude.Types.Nothing'}}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1)); {'Idris.Idris.Syntax.Check', E82} -> (fun (V117) -> case V117 of {'Idris.Idris.Syntax.PRef', E97, E98} -> (fun (V118, V119) -> case V119 of {'Idris.Core.Name.UN', E135} -> (fun (V120) -> fun (V121) -> case V120 of {'Idris.Core.Name.Basic', E172} -> (fun (V122) -> case V122 of <<"it"/utf8>> -> begin (V124 = begin (V123 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V123} end), case V124 of {'Idris.Prelude.Types.Left', E209} -> (fun (V125) -> {'Idris.Prelude.Types.Left', V125} end(E209)); {'Idris.Prelude.Types.Right', E210} -> (fun (V126) -> case V126 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E211, E212, E213, E214, E215, E216, E217, E218, E219, E220, E221, E222, E223, E224, E225, E226} -> (fun (V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142) -> case V138 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.UndefinedName', V118, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"it"/utf8>>}}}, V121)) end()); {'Idris.Prelude.Types.Just', E227} -> (fun (V143) -> (('un--process'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.Check', {'Idris.Idris.Syntax.PRef', V118, V143}}))(V121)) end(E227)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E211, E212, E213, E214, E215, E216, E217, E218, E219, E220, E221, E222, E223, E224, E225, E226)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E210)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V145 = begin (V144 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V144} end), case V145 of {'Idris.Prelude.Types.Left', E173} -> (fun (V146) -> {'Idris.Prelude.Types.Left', V146} end(E173)); {'Idris.Prelude.Types.Right', E174} -> (fun (V147) -> begin (V178 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V119, case V147 of {'Idris.Core.Context.MkDefs', E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202, E203, E204} -> (fun (V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177) -> V148 end(E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202, E203, E204)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V121))), case V178 of {'Idris.Prelude.Types.Left', E205} -> (fun (V179) -> {'Idris.Prelude.Types.Left', V179} end(E205)); {'Idris.Prelude.Types.Right', E206} -> (fun (V180) -> case V180 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, V118, V119, V121)); _ -> begin (V182 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V181) -> ('un--displayType'(V0, V2, V147, V181)) end, V180, [], V121))), case V182 of {'Idris.Prelude.Types.Left', E207} -> (fun (V183) -> {'Idris.Prelude.Types.Left', V183} end(E207)); {'Idris.Prelude.Types.Right', E208} -> (fun (V184) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Printed', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(V184))}} end(E208)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E206)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E172)); _ -> begin (V186 = begin (V185 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V185} end), case V186 of {'Idris.Prelude.Types.Left', E136} -> (fun (V187) -> {'Idris.Prelude.Types.Left', V187} end(E136)); {'Idris.Prelude.Types.Right', E137} -> (fun (V188) -> begin (V219 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V119, case V188 of {'Idris.Core.Context.MkDefs', E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161, E162, E163, E164, E165, E166, E167} -> (fun (V189, V190, V191, V192, V193, V194, V195, V196, V197, V198, V199, V200, V201, V202, V203, V204, V205, V206, V207, V208, V209, V210, V211, V212, V213, V214, V215, V216, V217, V218) -> V189 end(E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161, E162, E163, E164, E165, E166, E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V121))), case V219 of {'Idris.Prelude.Types.Left', E168} -> (fun (V220) -> {'Idris.Prelude.Types.Left', V220} end(E168)); {'Idris.Prelude.Types.Right', E169} -> (fun (V221) -> case V221 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, V118, V119, V121)); _ -> begin (V223 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V222) -> ('un--displayType'(V0, V2, V188, V222)) end, V221, [], V121))), case V223 of {'Idris.Prelude.Types.Left', E170} -> (fun (V224) -> {'Idris.Prelude.Types.Left', V224} end(E170)); {'Idris.Prelude.Types.Right', E171} -> (fun (V225) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Printed', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(V225))}} end(E171)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E135)); _ -> fun (V226) -> begin (V228 = begin (V227 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V227} end), case V228 of {'Idris.Prelude.Types.Left', E99} -> (fun (V229) -> {'Idris.Prelude.Types.Left', V229} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V230) -> begin (V261 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V119, case V230 of {'Idris.Core.Context.MkDefs', E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130} -> (fun (V231, V232, V233, V234, V235, V236, V237, V238, V239, V240, V241, V242, V243, V244, V245, V246, V247, V248, V249, V250, V251, V252, V253, V254, V255, V256, V257, V258, V259, V260) -> V231 end(E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V226))), case V261 of {'Idris.Prelude.Types.Left', E131} -> (fun (V262) -> {'Idris.Prelude.Types.Left', V262} end(E131)); {'Idris.Prelude.Types.Right', E132} -> (fun (V263) -> case V263 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, V118, V119, V226)); _ -> begin (V265 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V264) -> ('un--displayType'(V0, V2, V230, V264)) end, V263, [], V226))), case V265 of {'Idris.Prelude.Types.Left', E133} -> (fun (V266) -> {'Idris.Prelude.Types.Left', V266} end(E133)); {'Idris.Prelude.Types.Right', E134} -> (fun (V267) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Printed', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(V267))}} end(E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E132)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E97, E98)); _ -> fun (V268) -> begin (V269 = ('un--inferAndElab'(V0, V1, V2, V3, V4, {'Idris.TTImp.Elab.Check.InExpr'}, V117, V268))), case V269 of {'Idris.Prelude.Types.Left', E83} -> (fun (V270) -> {'Idris.Prelude.Types.Left', V270} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V271) -> case V271 of {'Idris.Idris.REPL.WithType', E85, E86} -> (fun (V272, V273) -> begin (V275 = begin (V274 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V274} end), case V275 of {'Idris.Prelude.Types.Left', E87} -> (fun (V276) -> {'Idris.Prelude.Types.Left', V276} end(E87)); {'Idris.Prelude.Types.Right', E88} -> (fun (V277) -> begin (V281 = begin (V278 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V277, {'Idris.Core.Env.Nil'}, V272, V268))), case V278 of {'Idris.Prelude.Types.Left', E89} -> (fun (V279) -> {'Idris.Prelude.Types.Left', V279} end(E89)); {'Idris.Prelude.Types.Right', E90} -> (fun (V280) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V2, {'Idris.Core.Env.Nil'}, V280, V268)) end(E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V281 of {'Idris.Prelude.Types.Left', E91} -> (fun (V282) -> {'Idris.Prelude.Types.Left', V282} end(E91)); {'Idris.Prelude.Types.Right', E92} -> (fun (V283) -> begin (V287 = begin (V284 = ('Idris.Idris2.Core.Normalise':'un--normaliseScope'(V0, [], V277, {'Idris.Core.Env.Nil'}, V273, V268))), case V284 of {'Idris.Prelude.Types.Left', E93} -> (fun (V285) -> {'Idris.Prelude.Types.Left', V285} end(E93)); {'Idris.Prelude.Types.Right', E94} -> (fun (V286) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V2, {'Idris.Core.Env.Nil'}, V286, V268)) end(E94)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V287 of {'Idris.Prelude.Types.Left', E95} -> (fun (V288) -> {'Idris.Prelude.Types.Left', V288} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V289) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.TermChecked', V283, V289}} end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E85, E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E82)); {'Idris.Idris.Syntax.CheckWithImplicits', E228} -> (fun (V290) -> fun (V291) -> begin (V299 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V292) -> case V292 of {'Idris.Prelude.Types.Left', E229} -> (fun (V293) -> {'Idris.Prelude.Types.Left', V293} end(E229)); {'Idris.Prelude.Types.Right', E230} -> (fun (V294) -> {'Idris.Prelude.Types.Right', case V294 of {'Idris.Core.Options.MkPPOpts', E231, E232, E233} -> (fun (V295, V296, V297) -> V295 end(E231, E232, E233)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end(E230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V298) -> ('Idris.Idris2.Core.Context':'un--getPPrint'(V0, V298)) end, V291))), case V299 of {'Idris.Prelude.Types.Left', E234} -> (fun (V300) -> {'Idris.Prelude.Types.Left', V300} end(E234)); {'Idris.Prelude.Types.Right', E235} -> (fun (V301) -> begin (V302 = ('un--setOpt'(V0, V4, {'Idris.Idris.Syntax.ShowImplicits', 1}, V291))), case V302 of {'Idris.Prelude.Types.Left', E236} -> (fun (V303) -> {'Idris.Prelude.Types.Left', V303} end(E236)); {'Idris.Prelude.Types.Right', E237} -> (fun (V304) -> begin (V305 = (('un--process'(V0, V1, V2, V3, V4, {'Idris.Idris.Syntax.Check', V290}))(V291))), case V305 of {'Idris.Prelude.Types.Left', E238} -> (fun (V306) -> {'Idris.Prelude.Types.Left', V306} end(E238)); {'Idris.Prelude.Types.Right', E239} -> (fun (V307) -> begin (V308 = ('un--setOpt'(V0, V4, {'Idris.Idris.Syntax.ShowImplicits', V301}, V291))), case V308 of {'Idris.Prelude.Types.Left', E240} -> (fun (V309) -> {'Idris.Prelude.Types.Left', V309} end(E240)); {'Idris.Prelude.Types.Right', E241} -> (fun (V310) -> {'Idris.Prelude.Types.Right', V307} end(E241)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E239)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E237)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E235)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E228)); {'Idris.Idris.Syntax.PrintDef', E242} -> (fun (V311) -> fun (V312) -> begin (V314 = begin (V313 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V313} end), case V314 of {'Idris.Prelude.Types.Left', E243} -> (fun (V315) -> {'Idris.Prelude.Types.Left', V315} end(E243)); {'Idris.Prelude.Types.Right', E244} -> (fun (V316) -> begin (V347 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V311, case V316 of {'Idris.Core.Context.MkDefs', E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266, E267, E268, E269, E270, E271, E272, E273, E274} -> (fun (V317, V318, V319, V320, V321, V322, V323, V324, V325, V326, V327, V328, V329, V330, V331, V332, V333, V334, V335, V336, V337, V338, V339, V340, V341, V342, V343, V344, V345, V346) -> V317 end(E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266, E267, E268, E269, E270, E271, E272, E273, E274)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V312))), case V347 of {'Idris.Prelude.Types.Left', E275} -> (fun (V348) -> {'Idris.Prelude.Types.Left', V348} end(E275)); {'Idris.Prelude.Types.Right', E276} -> (fun (V349) -> case V349 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), V311, V312)); _ -> begin (V351 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V350) -> ('un--displayPats'(V0, V2, V316, V350)) end, V349, [], V312))), case V351 of {'Idris.Prelude.Types.Left', E277} -> (fun (V352) -> {'Idris.Prelude.Types.Left', V352} end(E277)); {'Idris.Prelude.Types.Right', E278} -> (fun (V353) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Printed', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(V353))}} end(E278)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E276)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E244)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E242)); {'Idris.Idris.Syntax.Reload'} -> (fun () -> fun (V354) -> begin (V356 = begin (V355 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V355} end), case V356 of {'Idris.Prelude.Types.Left', E279} -> (fun (V357) -> {'Idris.Prelude.Types.Left', V357} end(E279)); {'Idris.Prelude.Types.Right', E280} -> (fun (V358) -> case V358 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292, E293, E294, E295, E296} -> (fun (V359, V360, V361, V362, V363, V364, V365, V366, V367, V368, V369, V370, V371, V372, V373, V374) -> case V361 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.NoFileLoaded'}} end()); {'Idris.Prelude.Types.Just', E297} -> (fun (V375) -> ('un--loadMainFile'(V0, V1, V2, V3, V4, V375, V354)) end(E297)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E281, E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292, E293, E294, E295, E296)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E280)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.Syntax.Load', E298} -> (fun (V376) -> fun (V377) -> begin (V379 = begin (V378 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V378} end), case V379 of {'Idris.Prelude.Types.Left', E299} -> (fun (V380) -> {'Idris.Prelude.Types.Left', V380} end(E299)); {'Idris.Prelude.Types.Right', E300} -> (fun (V381) -> begin (V399 = begin (V398 = ('erlang':'put'(V4, case V381 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E301, E302, E303, E304, E305, E306, E307, E308, E309, E310, E311, E312, E313, E314, E315, E316} -> (fun (V382, V383, V384, V385, V386, V387, V388, V389, V390, V391, V392, V393, V394, V395, V396, V397) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V382, V383, {'Idris.Prelude.Types.Just', V376}, V385, V386, V387, V388, V389, V390, V391, V392, V393, V394, V395, V396, V397} end(E301, E302, E303, E304, E305, E306, E307, E308, E309, E310, E311, E312, E313, E314, E315, E316)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V398} end), case V399 of {'Idris.Prelude.Types.Left', E317} -> (fun (V400) -> {'Idris.Prelude.Types.Left', V400} end(E317)); {'Idris.Prelude.Types.Right', E318} -> (fun (V401) -> ('un--loadMainFile'(V0, V1, V2, V3, V4, V376, V377)) end(E318)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E300)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E298)); {'Idris.Idris.Syntax.ImportMod', E319} -> (fun (V402) -> fun (V403) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(fun (V404) -> begin (V405 = ('Idris.Idris2.Idris.ProcessIdr':'un--addImport'(V0, V1, V2, {'Idris.Idris.Syntax.MkImport', ('Idris.Idris2.Core.FC':'un--emptyFC'()), 0, V402, ('Idris.Idris2.Core.Name.Namespace':'un--miAsNamespace'(V402))}, V404))), case V405 of {'Idris.Prelude.Types.Left', E320} -> (fun (V406) -> {'Idris.Prelude.Types.Left', V406} end(E320)); {'Idris.Prelude.Types.Right', E321} -> (fun (V407) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.ModuleLoaded', ('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show_ModuleIdent'(V402))}} end(E321)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V408) -> fun (V409) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.ErrorLoadingModule', ('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show_ModuleIdent'(V402)), V408}} end end, V403)) end end(E319)); {'Idris.Idris.Syntax.CD', E322} -> (fun (V410) -> fun (V411) -> begin (V412 = ('Idris.Idris2.Core.Context':'un--setWorkingDir'(V0, V410, V411))), case V412 of {'Idris.Prelude.Types.Left', E323} -> (fun (V413) -> {'Idris.Prelude.Types.Left', V413} end(E323)); {'Idris.Prelude.Types.Right', E324} -> (fun (V414) -> begin (V415 = ('Idris.Idris2.Core.Context':'un--getWorkingDir'(V411))), case V415 of {'Idris.Prelude.Types.Left', E325} -> (fun (V416) -> {'Idris.Prelude.Types.Left', V416} end(E325)); {'Idris.Prelude.Types.Right', E326} -> (fun (V417) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.CurrentDirectory', V417}} end(E326)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E324)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E322)); {'Idris.Idris.Syntax.CWD'} -> (fun () -> fun (V418) -> begin (V419 = ('Idris.Idris2.Core.Context':'un--getWorkingDir'(V418))), case V419 of {'Idris.Prelude.Types.Left', E327} -> (fun (V420) -> {'Idris.Prelude.Types.Left', V420} end(E327)); {'Idris.Prelude.Types.Right', E328} -> (fun (V421) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.CurrentDirectory', V421}} end(E328)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.Syntax.Edit'} -> (fun () -> fun (V422) -> begin (V424 = begin (V423 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V423} end), case V424 of {'Idris.Prelude.Types.Left', E329} -> (fun (V425) -> {'Idris.Prelude.Types.Left', V425} end(E329)); {'Idris.Prelude.Types.Right', E330} -> (fun (V426) -> (('case--process-11280'(V4, V3, V2, V1, V0, V426, case V426 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E331, E332, E333, E334, E335, E336, E337, E338, E339, E340, E341, E342, E343, E344, E345, E346} -> (fun (V427, V428, V429, V430, V431, V432, V433, V434, V435, V436, V437, V438, V439, V440, V441, V442) -> V429 end(E331, E332, E333, E334, E335, E336, E337, E338, E339, E340, E341, E342, E343, E344, E345, E346)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V422)) end(E330)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.Syntax.Compile', E347, E348} -> (fun (V443, V444) -> fun (V445) -> ('un--compileExp'(V0, V1, V2, V3, V4, V443, V444, V445)) end end(E347, E348)); {'Idris.Idris.Syntax.Exec', E349} -> (fun (V446) -> fun (V447) -> ('un--execExp'(V0, V1, V2, V3, V4, V446, V447)) end end(E349)); {'Idris.Idris.Syntax.Help'} -> (fun () -> fun (V448) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.RequestedHelp'}} end end()); {'Idris.Idris.Syntax.TypeSearch', E350} -> (fun (V449) -> fun (V450) -> begin (V451 = ('Idris.Idris2.Core.Context':'un--branch'(V0, V450))), case V451 of {'Idris.Prelude.Types.Left', E351} -> (fun (V452) -> {'Idris.Prelude.Types.Left', V452} end(E351)); {'Idris.Prelude.Types.Right', E352} -> (fun (V453) -> begin (V484 = case V453 of {'Idris.Core.Context.MkDefs', E353, E354, E355, E356, E357, E358, E359, E360, E361, E362, E363, E364, E365, E366, E367, E368, E369, E370, E371, E372, E373, E374, E375, E376, E377, E378, E379, E380, E381, E382} -> (fun (V454, V455, V456, V457, V458, V459, V460, V461, V462, V463, V464, V465, V466, V467, V468, V469, V470, V471, V472, V473, V474, V475, V476, V477, V478, V479, V480, V481, V482, V483) -> V456 end(E353, E354, E355, E356, E357, E358, E359, E360, E361, E362, E363, E364, E365, E366, E367, E368, E369, E370, E371, E372, E373, E374, E375, E376, E377, E378, E379, E380, E381, E382)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V515 = case V453 of {'Idris.Core.Context.MkDefs', E383, E384, E385, E386, E387, E388, E389, E390, E391, E392, E393, E394, E395, E396, E397, E398, E399, E400, E401, E402, E403, E404, E405, E406, E407, E408, E409, E410, E411, E412} -> (fun (V485, V486, V487, V488, V489, V490, V491, V492, V493, V494, V495, V496, V497, V498, V499, V500, V501, V502, V503, V504, V505, V506, V507, V508, V509, V510, V511, V512, V513, V514) -> V485 end(E383, E384, E385, E386, E387, E388, E389, E390, E391, E392, E393, E394, E395, E396, E397, E398, E399, E400, E401, E402, E403, E404, E405, E406, E407, E408, E409, E410, E411, E412)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V516 = ('Idris.Idris2.Idris.Desugar':'un--desugar'(V2, V0, V3, V1, 1, [], V449, V450))), case V516 of {'Idris.Prelude.Types.Left', E413} -> (fun (V517) -> {'Idris.Prelude.Types.Left', V517} end(E413)); {'Idris.Prelude.Types.Right', E414} -> (fun (V518) -> begin (V519 = ('Idris.Idris2.TTImp.BindImplicits':'un--piBindNames'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), [], V518, V450))), case V519 of {'Idris.Prelude.Types.Left', E415} -> (fun (V520) -> {'Idris.Prelude.Types.Left', V520} end(E415)); {'Idris.Prelude.Types.Right', E416} -> (fun (V521) -> begin (V522 = (('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V3, V1, 0, {'Idris.TTImp.Elab.Check.InType'}, [], [], {'Idris.Core.Env.Nil'}, V521, {'Idris.Prelude.Types.Nothing'}))(V450))), case V522 of {'Idris.Prelude.Types.Left', E417} -> (fun (V523) -> {'Idris.Prelude.Types.Left', V523} end(E417)); {'Idris.Prelude.Types.Right', E418} -> (fun (V524) -> case V524 of {'Idris.Builtin.MkPair', E419, E420} -> (fun (V525, V526) -> begin (V533 = ('Idris.Idris2.Core.Context':'un--toResolvedNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V527) -> fun (V528) -> fun (V529) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V527, V528, V529)) end end end, fun (V530) -> fun (V531) -> fun (V532) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V530, V531, V532)) end end end}, V525, V450))), case V533 of {'Idris.Prelude.Types.Left', E421} -> (fun (V534) -> {'Idris.Prelude.Types.Left', V534} end(E421)); {'Idris.Prelude.Types.Right', E422} -> (fun (V535) -> begin (V697 = begin (V536 = ('Idris.Idris2.Core.Context':'un--allNames'(V515, V450))), case V536 of {'Idris.Prelude.Types.Left', E423} -> (fun (V537) -> {'Idris.Prelude.Types.Left', V537} end(E423)); {'Idris.Prelude.Types.Right', E424} -> (fun (V538) -> begin (V542 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V539) -> ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V540) -> fun (V541) -> ('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V540, V541)) end end, V515, V539)) end, V538, [], V450))), case V542 of {'Idris.Prelude.Types.Left', E425} -> (fun (V543) -> {'Idris.Prelude.Types.Left', V543} end(E425)); {'Idris.Prelude.Types.Right', E426} -> (fun (V544) -> begin (V669 = ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V545) -> fun (V546) -> ('Idris.Idris2.Data.List':'un--mapMaybe'(V545, V546)) end end, V544, fun (V547) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(V547, fun (V548) -> ('Idris.Idris2.Prelude.Interfaces':'un-->>'({'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V549) -> fun (V550) -> fun (V551) -> fun (V552) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V551, V552)) end end end end, fun (V553) -> fun (V554) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V554)) end end, fun (V555) -> fun (V556) -> fun (V557) -> fun (V558) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V557, V558)) end end end end}, fun (V559) -> fun (V560) -> fun (V561) -> fun (V562) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(V561, V562)) end end end end, fun (V563) -> fun (V564) -> ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_Maybe'(V564)) end end}, ('Idris.Idris2.Prelude.Interfaces':'un--guard'({'Idris.Prelude.Interfaces.MkAlternative', {'Idris.Prelude.Interfaces.MkApplicative', fun (V565) -> fun (V566) -> fun (V567) -> fun (V568) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V567, V568)) end end end end, fun (V569) -> fun (V570) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V570)) end end, fun (V571) -> fun (V572) -> fun (V573) -> fun (V574) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V573, V574)) end end end end}, fun (V575) -> ('Idris.Idris2.Prelude.Types':'dn--un--empty_Alternative_Maybe'()) end, fun (V576) -> fun (V577) -> fun (V578) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'(V577, V578)) end end end}, ('Idris.Idris2.Core.Context':'un--visibleIn'(V484, case V548 of {'Idris.Core.Context.Context.MkGlobalDef', E427, E428, E429, E430, E431, E432, E433, E434, E435, E436, E437, E438, E439, E440, E441, E442, E443, E444, E445, E446} -> (fun (V579, V580, V581, V582, V583, V584, V585, V586, V587, V588, V589, V590, V591, V592, V593, V594, V595, V596, V597, V598) -> V580 end(E427, E428, E429, E430, E431, E432, E433, E434, E435, E436, E437, E438, E439, E440, E441, E442, E443, E444, E445, E446)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case V548 of {'Idris.Core.Context.Context.MkGlobalDef', E447, E448, E449, E450, E451, E452, E453, E454, E455, E456, E457, E458, E459, E460, E461, E462, E463, E464, E465, E466} -> (fun (V599, V600, V601, V602, V603, V604, V605, V606, V607, V608, V609, V610, V611, V612, V613, V614, V615, V616, V617, V618) -> V608 end(E447, E448, E449, E450, E451, E452, E453, E454, E455, E456, E457, E458, E459, E460, E461, E462, E463, E464, E465, E466)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))), fun () -> ('Idris.Idris2.Prelude.Interfaces':'un-->>'({'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V619) -> fun (V620) -> fun (V621) -> fun (V622) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V621, V622)) end end end end, fun (V623) -> fun (V624) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V624)) end end, fun (V625) -> fun (V626) -> fun (V627) -> fun (V628) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V627, V628)) end end end end}, fun (V629) -> fun (V630) -> fun (V631) -> fun (V632) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(V631, V632)) end end end end, fun (V633) -> fun (V634) -> ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_Maybe'(V634)) end end}, ('Idris.Idris2.Prelude.Interfaces':'un--guard'({'Idris.Prelude.Interfaces.MkAlternative', {'Idris.Prelude.Interfaces.MkApplicative', fun (V635) -> fun (V636) -> fun (V637) -> fun (V638) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V637, V638)) end end end end, fun (V639) -> fun (V640) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V640)) end end, fun (V641) -> fun (V642) -> fun (V643) -> fun (V644) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V643, V644)) end end end end}, fun (V645) -> ('Idris.Idris2.Prelude.Types':'dn--un--empty_Alternative_Maybe'()) end, fun (V646) -> fun (V647) -> fun (V648) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'(V647, V648)) end end end}, ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.Core.Name':'un--userNameRoot'(case V548 of {'Idris.Core.Context.Context.MkGlobalDef', E467, E468, E469, E470, E471, E472, E473, E474, E475, E476, E477, E478, E479, E480, E481, E482, E483, E484, E485, E486} -> (fun (V649, V650, V651, V652, V653, V654, V655, V656, V657, V658, V659, V660, V661, V662, V663, V664, V665, V666, V667, V668) -> V650 end(E467, E468, E469, E470, E471, E472, E473, E474, E475, E476, E477, E478, E479, E480, E481, E482, E483, E484, E485, E486)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))))), fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V548)) end)) end)) end)) end))), begin (V672 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V670) -> fun (V671) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_GlobalDef'(V515, V670, V671)) end end, V669, [], V450))), case V672 of {'Idris.Prelude.Types.Left', E487} -> (fun (V673) -> {'Idris.Prelude.Types.Left', V673} end(E487)); {'Idris.Prelude.Types.Right', E488} -> (fun (V674) -> ('Idris.Idris2.Core.Core':'un--filterM'(fun (V675) -> fun (V676) -> ('Idris.Idris2.Idris.REPL.Common':'un--equivTypes'(V0, case V675 of {'Idris.Core.Context.Context.MkGlobalDef', E489, E490, E491, E492, E493, E494, E495, E496, E497, E498, E499, E500, E501, E502, E503, E504, E505, E506, E507, E508} -> (fun (V677, V678, V679, V680, V681, V682, V683, V684, V685, V686, V687, V688, V689, V690, V691, V692, V693, V694, V695, V696) -> V679 end(E489, E490, E491, E492, E493, E494, E495, E496, E497, E498, E499, E500, E501, E502, E503, E504, E505, E506, E507, E508)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V535, V676)) end end, V674, V450)) end(E488)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E426)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E424)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V697 of {'Idris.Prelude.Types.Left', E509} -> (fun (V698) -> {'Idris.Prelude.Types.Left', V698} end(E509)); {'Idris.Prelude.Types.Right', E510} -> (fun (V699) -> begin (V701 = begin (V700 = ('erlang':'put'(V0, V453))), {'Idris.Prelude.Types.Right', V700} end), case V701 of {'Idris.Prelude.Types.Left', E511} -> (fun (V702) -> {'Idris.Prelude.Types.Left', V702} end(E511)); {'Idris.Prelude.Types.Right', E512} -> (fun (V703) -> begin (V731 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V704) -> fun (V705) -> ('Idris.Idris2.Idris.REPL.Common':'un--docsOrSignature'(V4, V0, V2, ('Idris.Idris2.Core.FC':'un--replFC'()), V704, V705)) end end, ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V706) -> fun (V707) -> fun (V708) -> fun (V709) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V708, V709)) end end end end, fun (V710) -> case V710 of {'Idris.Core.Context.Context.MkGlobalDef', E513, E514, E515, E516, E517, E518, E519, E520, E521, E522, E523, E524, E525, E526, E527, E528, E529, E530, E531, E532} -> (fun (V711, V712, V713, V714, V715, V716, V717, V718, V719, V720, V721, V722, V723, V724, V725, V726, V727, V728, V729, V730) -> V712 end(E513, E514, E515, E516, E517, E518, E519, E520, E521, E522, E523, E524, E525, E526, E527, E528, E529, E530, E531, E532)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V699)), [], V450))), case V731 of {'Idris.Prelude.Types.Left', E533} -> (fun (V732) -> {'Idris.Prelude.Types.Left', V732} end(E533)); {'Idris.Prelude.Types.Right', E534} -> (fun (V733) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.PrintedDoc', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(V733))}} end(E534)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E512)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E510)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E422)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E419, E420)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E418)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E416)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E414)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E352)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E350)); {'Idris.Idris.Syntax.Missing', E535} -> (fun (V734) -> fun (V735) -> begin (V737 = begin (V736 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V736} end), case V737 of {'Idris.Prelude.Types.Left', E536} -> (fun (V738) -> {'Idris.Prelude.Types.Left', V738} end(E536)); {'Idris.Prelude.Types.Right', E537} -> (fun (V739) -> begin (V770 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V734, case V739 of {'Idris.Core.Context.MkDefs', E538, E539, E540, E541, E542, E543, E544, E545, E546, E547, E548, E549, E550, E551, E552, E553, E554, E555, E556, E557, E558, E559, E560, E561, E562, E563, E564, E565, E566, E567} -> (fun (V740, V741, V742, V743, V744, V745, V746, V747, V748, V749, V750, V751, V752, V753, V754, V755, V756, V757, V758, V759, V760, V761, V762, V763, V764, V765, V766, V767, V768, V769) -> V740 end(E538, E539, E540, E541, E542, E543, E544, E545, E546, E547, E548, E549, E550, E551, E552, E553, E554, E555, E556, E557, E558, E559, E560, E561, E562, E563, E564, E565, E566, E567)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V735))), case V770 of {'Idris.Prelude.Types.Left', E568} -> (fun (V771) -> {'Idris.Prelude.Types.Left', V771} end(E568)); {'Idris.Prelude.Types.Right', E569} -> (fun (V772) -> case V772 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), V734, V735)); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V773) -> case V773 of {'Idris.Prelude.Types.Left', E570} -> (fun (V774) -> {'Idris.Prelude.Types.Left', V774} end(E570)); {'Idris.Prelude.Types.Right', E571} -> (fun (V775) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Missed', V775}} end(E571)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V776) -> ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V777) -> fun (V778) -> begin (V779 = ('Idris.Idris2.Core.Context':'un--getTotality'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), V777, V778))), case V779 of {'Idris.Prelude.Types.Left', E572} -> (fun (V780) -> {'Idris.Prelude.Types.Left', V780} end(E572)); {'Idris.Prelude.Types.Right', E573} -> (fun (V781) -> case V781 of {'Idris.Core.TT.MkTotality', E574, E575} -> (fun (V782, V783) -> case V783 of {'Idris.Core.TT.MissingCases', E576} -> (fun (V784) -> begin (V787 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V785) -> fun (V786) -> ('un--displayPatTerm'(V0, V2, V739, V785, V786)) end end, V784, [], V778))), case V787 of {'Idris.Prelude.Types.Left', E577} -> (fun (V788) -> {'Idris.Prelude.Types.Left', V788} end(E577)); {'Idris.Prelude.Types.Right', E578} -> (fun (V789) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.CasesMissing', V777, V789}} end(E578)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E576)); {'Idris.Core.TT.NonCoveringCall', E579} -> (fun (V790) -> begin (V793 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V791) -> fun (V792) -> ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V791, V792)) end end, V790, [], V778))), case V793 of {'Idris.Prelude.Types.Left', E580} -> (fun (V794) -> {'Idris.Prelude.Types.Left', V794} end(E580)); {'Idris.Prelude.Types.Right', E581} -> (fun (V795) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.CallsNonCovering', V777, V795}} end(E581)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E579)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.AllCasesCovered', V777}} end end(E574, E575)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E573)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V796) -> ('Idris.Idris2.Builtin':'un--fst'(V796)) end, V772)), [], V776)) end, V735)) end end(E569)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E537)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E535)); {'Idris.Idris.Syntax.Total', E582} -> (fun (V797) -> fun (V798) -> begin (V800 = begin (V799 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V799} end), case V800 of {'Idris.Prelude.Types.Left', E583} -> (fun (V801) -> {'Idris.Prelude.Types.Left', V801} end(E583)); {'Idris.Prelude.Types.Right', E584} -> (fun (V802) -> begin (V833 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V797, case V802 of {'Idris.Core.Context.MkDefs', E585, E586, E587, E588, E589, E590, E591, E592, E593, E594, E595, E596, E597, E598, E599, E600, E601, E602, E603, E604, E605, E606, E607, E608, E609, E610, E611, E612, E613, E614} -> (fun (V803, V804, V805, V806, V807, V808, V809, V810, V811, V812, V813, V814, V815, V816, V817, V818, V819, V820, V821, V822, V823, V824, V825, V826, V827, V828, V829, V830, V831, V832) -> V803 end(E585, E586, E587, E588, E589, E590, E591, E592, E593, E594, E595, E596, E597, E598, E599, E600, E601, E602, E603, E604, E605, E606, E607, E608, E609, E610, E611, E612, E613, E614)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V798))), case V833 of {'Idris.Prelude.Types.Left', E615} -> (fun (V834) -> {'Idris.Prelude.Types.Left', V834} end(E615)); {'Idris.Prelude.Types.Right', E616} -> (fun (V835) -> case V835 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), V797, V798)); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V836) -> case V836 of {'Idris.Prelude.Types.Left', E617} -> (fun (V837) -> {'Idris.Prelude.Types.Left', V837} end(E617)); {'Idris.Prelude.Types.Right', E618} -> (fun (V838) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.CheckedTotal', V838}} end(E618)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V839) -> ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V840) -> fun (V841) -> begin (V846 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V842) -> case V842 of {'Idris.Prelude.Types.Left', E619} -> (fun (V843) -> {'Idris.Prelude.Types.Left', V843} end(E619)); {'Idris.Prelude.Types.Right', E620} -> (fun (V844) -> {'Idris.Prelude.Types.Right', 0} end(E620)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V845) -> ('Idris.Idris2.Core.Termination':'un--checkTotal'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), V840, V845)) end, V841))), case V846 of {'Idris.Prelude.Types.Left', E621} -> (fun (V847) -> {'Idris.Prelude.Types.Left', V847} end(E621)); {'Idris.Prelude.Types.Right', E622} -> (fun (V848) -> begin (V858 = begin (V849 = ('Idris.Idris2.Core.Context':'un--getTotality'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), V840, V841))), case V849 of {'Idris.Prelude.Types.Left', E623} -> (fun (V850) -> {'Idris.Prelude.Types.Left', V850} end(E623)); {'Idris.Prelude.Types.Right', E624} -> (fun (V851) -> ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V852) -> fun (V853) -> fun (V854) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Totality'(V852, V853, V854)) end end end, fun (V855) -> fun (V856) -> fun (V857) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Totality'(V855, V856, V857)) end end end}, V851, V841)) end(E624)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V858 of {'Idris.Prelude.Types.Left', E625} -> (fun (V859) -> {'Idris.Prelude.Types.Left', V859} end(E625)); {'Idris.Prelude.Types.Right', E626} -> (fun (V860) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V840, V860}} end(E626)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E622)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V861) -> ('Idris.Idris2.Builtin':'un--fst'(V861)) end, V835)), [], V839)) end, V798)) end end(E616)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E584)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E582)); {'Idris.Idris.Syntax.Doc', E627} -> (fun (V862) -> fun (V863) -> begin (V864 = (('Idris.Idris2.Idris.Doc.String':'un--getDocsForPTerm'(V4, V0, V2, V862))(V863))), case V864 of {'Idris.Prelude.Types.Left', E628} -> (fun (V865) -> {'Idris.Prelude.Types.Left', V865} end(E628)); {'Idris.Prelude.Types.Right', E629} -> (fun (V866) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.PrintedDoc', V866}} end(E629)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E627)); {'Idris.Idris.Syntax.Browse', E630} -> (fun (V867) -> fun (V868) -> begin (V869 = ('Idris.Idris2.Idris.Doc.String':'un--getContents'(V4, V0, V2, V867, V868))), case V869 of {'Idris.Prelude.Types.Left', E631} -> (fun (V870) -> {'Idris.Prelude.Types.Left', V870} end(E631)); {'Idris.Prelude.Types.Right', E632} -> (fun (V871) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.PrintedDoc', V871}} end(E632)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E630)); {'Idris.Idris.Syntax.DebugInfo', E633} -> (fun (V872) -> fun (V873) -> begin (V875 = begin (V874 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V874} end), case V875 of {'Idris.Prelude.Types.Left', E634} -> (fun (V876) -> {'Idris.Prelude.Types.Left', V876} end(E634)); {'Idris.Prelude.Types.Right', E635} -> (fun (V877) -> begin (V913 = begin (V908 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V872, case V877 of {'Idris.Core.Context.MkDefs', E636, E637, E638, E639, E640, E641, E642, E643, E644, E645, E646, E647, E648, E649, E650, E651, E652, E653, E654, E655, E656, E657, E658, E659, E660, E661, E662, E663, E664, E665} -> (fun (V878, V879, V880, V881, V882, V883, V884, V885, V886, V887, V888, V889, V890, V891, V892, V893, V894, V895, V896, V897, V898, V899, V900, V901, V902, V903, V904, V905, V906, V907) -> V878 end(E636, E637, E638, E639, E640, E641, E642, E643, E644, E645, E646, E647, E648, E649, E650, E651, E652, E653, E654, E655, E656, E657, E658, E659, E660, E661, E662, E663, E664, E665)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V873))), case V908 of {'Idris.Prelude.Types.Left', E666} -> (fun (V909) -> {'Idris.Prelude.Types.Left', V909} end(E666)); {'Idris.Prelude.Types.Right', E667} -> (fun (V910) -> ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V911) -> fun (V912) -> ('un--showInfo'(V0, V911, V912)) end end, V910, V873)) end(E667)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V913 of {'Idris.Prelude.Types.Left', E668} -> (fun (V914) -> {'Idris.Prelude.Types.Left', V914} end(E668)); {'Idris.Prelude.Types.Right', E669} -> (fun (V915) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Done'}} end(E669)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E635)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E633)); {'Idris.Idris.Syntax.SetOpt', E670} -> (fun (V916) -> fun (V917) -> begin (V918 = ('un--setOpt'(V0, V4, V916, V917))), case V918 of {'Idris.Prelude.Types.Left', E671} -> (fun (V919) -> {'Idris.Prelude.Types.Left', V919} end(E671)); {'Idris.Prelude.Types.Right', E672} -> (fun (V920) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Done'}} end(E672)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E670)); {'Idris.Idris.Syntax.GetOpts'} -> (fun () -> fun (V921) -> begin (V922 = ('un--getOptions'(V0, V4, V921))), case V922 of {'Idris.Prelude.Types.Left', E673} -> (fun (V923) -> {'Idris.Prelude.Types.Left', V923} end(E673)); {'Idris.Prelude.Types.Right', E674} -> (fun (V924) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.OptionsSet', V924}} end(E674)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.Syntax.SetLog', E675} -> (fun (V925) -> fun (V926) -> begin (V927 = ('Idris.Idris2.Core.Context':'un--addLogLevel'(V0, V925, V926))), case V927 of {'Idris.Prelude.Types.Left', E676} -> (fun (V928) -> {'Idris.Prelude.Types.Left', V928} end(E676)); {'Idris.Prelude.Types.Right', E677} -> (fun (V929) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.LogLevelSet', V925}} end(E677)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E675)); {'Idris.Idris.Syntax.SetConsoleWidth', E678} -> (fun (V930) -> fun (V931) -> begin (V932 = ('Idris.Idris2.Idris.REPL.Opts':'un--setConsoleWidth'(V4, V930, V931))), case V932 of {'Idris.Prelude.Types.Left', E679} -> (fun (V933) -> {'Idris.Prelude.Types.Left', V933} end(E679)); {'Idris.Prelude.Types.Right', E680} -> (fun (V934) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.ConsoleWidthSet', V930}} end(E680)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E678)); {'Idris.Idris.Syntax.SetColor', E681} -> (fun (V935) -> fun (V936) -> begin (V937 = ('Idris.Idris2.Idris.REPL.Opts':'un--setColor'(V4, V935, V936))), case V937 of {'Idris.Prelude.Types.Left', E682} -> (fun (V938) -> {'Idris.Prelude.Types.Left', V938} end(E682)); {'Idris.Prelude.Types.Right', E683} -> (fun (V939) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.ColorSet', V935}} end(E683)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E681)); {'Idris.Idris.Syntax.Metavars'} -> (fun () -> fun (V940) -> begin (V942 = begin (V941 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V941} end), case V942 of {'Idris.Prelude.Types.Left', E684} -> (fun (V943) -> {'Idris.Prelude.Types.Left', V943} end(E684)); {'Idris.Prelude.Types.Right', E685} -> (fun (V944) -> begin (V975 = case V944 of {'Idris.Core.Context.MkDefs', E686, E687, E688, E689, E690, E691, E692, E693, E694, E695, E696, E697, E698, E699, E700, E701, E702, E703, E704, E705, E706, E707, E708, E709, E710, E711, E712, E713, E714, E715} -> (fun (V945, V946, V947, V948, V949, V950, V951, V952, V953, V954, V955, V956, V957, V958, V959, V960, V961, V962, V963, V964, V965, V966, V967, V968, V969, V970, V971, V972, V973, V974) -> V945 end(E686, E687, E688, E689, E690, E691, E692, E693, E694, E695, E696, E697, E698, E699, E700, E701, E702, E703, E704, E705, E706, E707, E708, E709, E710, E711, E712, E713, E714, E715)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V976 = ('Idris.Idris2.Core.Context':'un--getUserHoles'(V0, V940))), case V976 of {'Idris.Prelude.Types.Left', E716} -> (fun (V977) -> {'Idris.Prelude.Types.Left', V977} end(E716)); {'Idris.Prelude.Types.Right', E717} -> (fun (V978) -> begin (V980 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V979) -> ('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V979, V975)) end, V978, [], V940))), case V980 of {'Idris.Prelude.Types.Left', E718} -> (fun (V981) -> {'Idris.Prelude.Types.Left', V981} end(E718)); {'Idris.Prelude.Types.Right', E719} -> (fun (V982) -> begin (V1011 = ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V983) -> fun (V984) -> fun (V985) -> fun (V986) -> fun (V987) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V985, V986, V987)) end end end end end, fun (V988) -> fun (V989) -> fun (V990) -> fun (V991) -> fun (V992) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V990, V991, V992)) end end end end end, fun (V993) -> fun (V994) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V994)) end end, fun (V995) -> fun (V996) -> fun (V997) -> fun (V998) -> fun (V999) -> fun (V1000) -> fun (V1001) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V998, V999, V1000, V1001)) end end end end end end end, fun (V1002) -> fun (V1003) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V1003)) end end, fun (V1004) -> fun (V1005) -> fun (V1006) -> fun (V1007) -> fun (V1008) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V1006, V1007, V1008)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V1009) -> fun (V1010) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V1009, V1010)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V982))), begin (V1018 = ('Idris.Idris2.Data.List':'un--mapMaybe'(fun (V1012) -> case V1012 of {'Idris.Builtin.MkPair', E720, E721} -> (fun (V1013, V1014) -> case V1014 of {'Idris.Builtin.MkPair', E722, E723} -> (fun (V1015, V1016) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Idris.IDEMode.Holes':'un--isHole'(V1016)), fun (V1017) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'({'Idris.Builtin.MkPair', V1013, {'Idris.Builtin.MkPair', V1016, V1017}})) end)) end(E722, E723)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E720, E721)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V1011))), begin (V1045 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1019) -> fun (V1020) -> case V1019 of {'Idris.Builtin.MkPair', E724, E725} -> (fun (V1021, V1022) -> case V1022 of {'Idris.Builtin.MkPair', E726, E727} -> (fun (V1023, V1024) -> ('Idris.Idris2.Idris.IDEMode.Holes':'un--holeData'([], V0, V2, V944, {'Idris.Core.Env.Nil'}, V1021, V1024, case V1023 of {'Idris.Core.Context.Context.MkGlobalDef', E728, E729, E730, E731, E732, E733, E734, E735, E736, E737, E738, E739, E740, E741, E742, E743, E744, E745, E746, E747} -> (fun (V1025, V1026, V1027, V1028, V1029, V1030, V1031, V1032, V1033, V1034, V1035, V1036, V1037, V1038, V1039, V1040, V1041, V1042, V1043, V1044) -> V1027 end(E728, E729, E730, E731, E732, E733, E734, E735, E736, E737, E738, E739, E740, E741, E742, E743, E744, E745, E746, E747)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V1020)) end(E726, E727)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E724, E725)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1018, [], V940))), case V1045 of {'Idris.Prelude.Types.Left', E748} -> (fun (V1046) -> {'Idris.Prelude.Types.Left', V1046} end(E748)); {'Idris.Prelude.Types.Right', E749} -> (fun (V1047) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.FoundHoles', V1047}} end(E749)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E719)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E717)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E685)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Idris.Syntax.Editing', E750} -> (fun (V1048) -> fun (V1049) -> begin (V1050 = ('Idris.Idris2.Core.Context':'un--getPPrint'(V0, V1049))), case V1050 of {'Idris.Prelude.Types.Left', E751} -> (fun (V1051) -> {'Idris.Prelude.Types.Left', V1051} end(E751)); {'Idris.Prelude.Types.Right', E752} -> (fun (V1052) -> begin (V1056 = ('Idris.Idris2.Core.Context':'un--setPPrint'(V0, case V1052 of {'Idris.Core.Options.MkPPOpts', E753, E754, E755} -> (fun (V1053, V1054, V1055) -> {'Idris.Core.Options.MkPPOpts', V1053, 0, V1055} end(E753, E754, E755)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V1049))), case V1056 of {'Idris.Prelude.Types.Left', E756} -> (fun (V1057) -> {'Idris.Prelude.Types.Left', V1057} end(E756)); {'Idris.Prelude.Types.Right', E757} -> (fun (V1058) -> begin (V1059 = (('un--processEdit'(V0, V1, V2, V3, V4, V1048))(V1049))), case V1059 of {'Idris.Prelude.Types.Left', E758} -> (fun (V1060) -> {'Idris.Prelude.Types.Left', V1060} end(E758)); {'Idris.Prelude.Types.Right', E759} -> (fun (V1061) -> begin (V1062 = ('Idris.Idris2.Core.Context':'un--setPPrint'(V0, V1052, V1049))), case V1062 of {'Idris.Prelude.Types.Left', E760} -> (fun (V1063) -> {'Idris.Prelude.Types.Left', V1063} end(E760)); {'Idris.Prelude.Types.Right', E761} -> (fun (V1064) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Edited', V1061}} end(E761)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E759)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E757)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E752)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E750)); {'Idris.Idris.Syntax.CGDirective', E762} -> (fun (V1065) -> fun (V1066) -> begin (V1096 = begin (V1067 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V1066))), case V1067 of {'Idris.Prelude.Types.Left', E763} -> (fun (V1068) -> {'Idris.Prelude.Types.Left', V1068} end(E763)); {'Idris.Prelude.Types.Right', E764} -> (fun (V1069) -> ('Idris.Idris2.Core.Context':'un--setSession'(V0, case V1069 of {'Idris.Core.Options.MkSessionOpts', E765, E766, E767, E768, E769, E770, E771, E772, E773, E774, E775, E776, E777, E778, E779, E780, E781, E782, E783, E784, E785, E786, E787, E788, E789, E790} -> (fun (V1070, V1071, V1072, V1073, V1074, V1075, V1076, V1077, V1078, V1079, V1080, V1081, V1082, V1083, V1084, V1085, V1086, V1087, V1088, V1089, V1090, V1091, V1092, V1093, V1094, V1095) -> {'Idris.Core.Options.MkSessionOpts', V1070, V1071, V1072, V1073, V1074, [V1065 | V1075], V1076, V1077, V1078, V1079, V1080, V1081, V1082, V1083, V1084, V1085, V1086, V1087, V1088, V1089, V1090, V1091, V1092, V1093, V1094, V1095} end(E765, E766, E767, E768, E769, E770, E771, E772, E773, E774, E775, E776, E777, E778, E779, E780, E781, E782, E783, E784, E785, E786, E787, E788, E789, E790)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V1066)) end(E764)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V1096 of {'Idris.Prelude.Types.Left', E791} -> (fun (V1097) -> {'Idris.Prelude.Types.Left', V1097} end(E791)); {'Idris.Prelude.Types.Right', E792} -> (fun (V1098) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Done'}} end(E792)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E762)); {'Idris.Idris.Syntax.RunShellCommand', E793} -> (fun (V1099) -> fun (V1100) -> begin (V1133 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V1101) -> case V1101 of {'Idris.Prelude.Types.Left', E794} -> (fun (V1102) -> {'Idris.Prelude.Types.Left', V1102} end(E794)); {'Idris.Prelude.Types.Right', E795} -> (fun (V1103) -> {'Idris.Prelude.Types.Right', 0} end(E795)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V1104) -> begin (V1132 = (('Idris.Idris2.Erlang.System':'un--system'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V1105) -> fun (V1106) -> fun (V1107) -> fun (V1108) -> fun (V1109) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V1107, V1108, V1109)) end end end end end, fun (V1110) -> fun (V1111) -> fun (V1112) -> V1111 end end end, fun (V1113) -> fun (V1114) -> fun (V1115) -> fun (V1116) -> fun (V1117) -> begin (V1118 = (V1115(V1117))), begin (V1119 = (V1116(V1117))), (V1118(V1119)) end end end end end end end}, fun (V1120) -> fun (V1121) -> fun (V1122) -> fun (V1123) -> fun (V1124) -> begin (V1125 = (V1122(V1124))), ((V1123(V1125))(V1124)) end end end end end end, fun (V1126) -> fun (V1127) -> fun (V1128) -> begin (V1129 = (V1127(V1128))), (V1129(V1128)) end end end end}, fun (V1130) -> fun (V1131) -> V1131 end end}, V1099))(V1104))), {'Idris.Prelude.Types.Right', V1132} end end, V1100))), case V1133 of {'Idris.Prelude.Types.Left', E796} -> (fun (V1134) -> {'Idris.Prelude.Types.Left', V1134} end(E796)); {'Idris.Prelude.Types.Right', E797} -> (fun (V1135) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Done'}} end(E797)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E793)); {'Idris.Idris.Syntax.Quit'} -> (fun () -> fun (V1136) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Exited'}} end end()); {'Idris.Idris.Syntax.NOP'} -> (fun () -> fun (V1137) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Done'}} end end()); {'Idris.Idris.Syntax.ShowVersion'} -> (fun () -> fun (V1138) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.VersionIs', ('Idris.Idris2.Idris.Version':'un--version'())}} end end()); {'Idris.Idris.Syntax.ImportPackage', E798} -> (fun (V1139) -> fun (V1140) -> begin (V1142 = begin (V1141 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1141} end), case V1142 of {'Idris.Prelude.Types.Left', E799} -> (fun (V1143) -> {'Idris.Prelude.Types.Left', V1143} end(E799)); {'Idris.Prelude.Types.Right', E800} -> (fun (V1144) -> begin (V1195 = case V1144 of {'Idris.Core.Context.MkDefs', E801, E802, E803, E804, E805, E806, E807, E808, E809, E810, E811, E812, E813, E814, E815, E816, E817, E818, E819, E820, E821, E822, E823, E824, E825, E826, E827, E828, E829, E830} -> (fun (V1145, V1146, V1147, V1148, V1149, V1150, V1151, V1152, V1153, V1154, V1155, V1156, V1157, V1158, V1159, V1160, V1161, V1162, V1163, V1164, V1165, V1166, V1167, V1168, V1169, V1170, V1171, V1172, V1173, V1174) -> case V1149 of {'Idris.Core.Options.MkOptions', E831, E832, E833, E834, E835, E836, E837, E838, E839, E840} -> (fun (V1175, V1176, V1177, V1178, V1179, V1180, V1181, V1182, V1183, V1184) -> case V1175 of {'Idris.Core.Options.MkDirs', E841, E842, E843, E844, E845, E846, E847, E848, E849, E850} -> (fun (V1185, V1186, V1187, V1188, V1189, V1190, V1191, V1192, V1193, V1194) -> V1191 end(E841, E842, E843, E844, E845, E846, E847, E848, E849, E850)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E831, E832, E833, E834, E835, E836, E837, E838, E839, E840)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E801, E802, E803, E804, E805, E806, E807, E808, E809, E810, E811, E812, E813, E814, E815, E816, E817, E818, E819, E820, E821, E822, E823, E824, E825, E826, E827, E828, E829, E830)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), (('case--process-12222'(V1139, V4, V3, V2, V1, V0, V1144, V1195, ('Idris.Idris2.Data.List':'un--find'(fun (V1196) -> ('Idris.Idris2.Data.String':'un--isInfixOf'(V1139, ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> V1196 end, ('Idris.Idris2.Libraries.Utils.Path':'un--fileName'(V1196)))))) end, V1195))))(V1140)) end end(E800)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E798)); {'Idris.Idris.Syntax.FuzzyTypeSearch', E851} -> (fun (V1197) -> fun (V1198) -> ('Idris.Idris2.Idris.REPL.FuzzySearch':'un--fuzzySearch'(V0, V1, V2, V3, V4, V1197, V1198)) end end(E851)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--printClause'(V0, V1, V2, V3, V4, V5) -> case V4 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V6, V7, V8) -> begin (V10 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V1, ('Idris.Idris2.TTImp.TTImp.Functor':'dn--un--map_Functor_RawImp\x{27}'(fun (V9) -> ('Idris.Idris2.Core.TT':'un--defaultKindedName'(V9)) end, V7)), V5))), case V10 of {'Idris.Prelude.Types.Left', E3} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V12) -> begin (V14 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V1, ('Idris.Idris2.TTImp.TTImp.Functor':'dn--un--map_Functor_RawImp\x{27}'(fun (V13) -> ('Idris.Idris2.Core.TT':'un--defaultKindedName'(V13)) end, V8)), V5))), case V14 of {'Idris.Prelude.Types.Left', E5} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Parser.Unlit':'un--relit'(V2, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Types':'un--fastPack'(('Idris.Idris2.Data.List':'un--replicate'(V3, $ )))), ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(V12)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" = "/utf8>>, ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(V16))))))))))} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2)); {'Idris.TTImp.TTImp.WithClause', E7, E8, E9, E10, E11, E12} -> (fun (V17, V18, V19, V20, V21, V22) -> begin (V24 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V1, ('Idris.Idris2.TTImp.TTImp.Functor':'dn--un--map_Functor_RawImp\x{27}'(fun (V23) -> ('Idris.Idris2.Core.TT':'un--defaultKindedName'(V23)) end, V18)), V5))), case V24 of {'Idris.Prelude.Types.Left', E13} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V26) -> begin (V28 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V1, ('Idris.Idris2.TTImp.TTImp.Functor':'dn--un--map_Functor_RawImp\x{27}'(fun (V27) -> ('Idris.Idris2.Core.TT':'un--defaultKindedName'(V27)) end, V19)), V5))), case V28 of {'Idris.Prelude.Types.Left', E15} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V30) -> begin (V33 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V31) -> fun (V32) -> ('un--printClause'(V0, V1, V2, ('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'(V3, (1 + (1 + 0)))), V31, V32)) end end, V22, [], V5))), case V33 of {'Idris.Prelude.Types.Left', E17} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V35) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Parser.Unlit':'un--relit'(V2, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Types':'un--fastPack'(('Idris.Idris2.Data.List':'un--replicate'(V3, $ )))), ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(V26)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" with ("/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(V30)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<")"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> <<""/utf8>> end, fun () -> fun (V36) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" proof "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V36)))) end end, V20)), <<"\x{a}"/utf8>>)))))))))))))), ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, V35))))} end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7, E8, E9, E10, E11, E12)); {'Idris.TTImp.TTImp.ImpossibleClause', E19, E20} -> (fun (V37, V38) -> begin (V40 = ('Idris.Idris2.Idris.Resugar':'un--pterm'(V0, V1, ('Idris.Idris2.TTImp.TTImp.Functor':'dn--un--map_Functor_RawImp\x{27}'(fun (V39) -> ('Idris.Idris2.Core.TT':'un--defaultKindedName'(V39)) end, V38)), V5))), case V40 of {'Idris.Prelude.Types.Left', E21} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V42) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Parser.Unlit':'un--relit'(V2, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Types':'un--fastPack'(('Idris.Idris2.Data.List':'un--replicate'(V3, $ )))), ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(V42)), <<" impossible"/utf8>>))))))} end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--prettyTerm'(V0) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--reAnnotate'(fun (V1) -> {'Idris.Idris.Pretty.Syntax', V1} end, ('Idris.Idris2.Idris.Pretty':'un--prettyTerm'(V0)))).
'un--prepareExp'(V0, V1, V2, V3, V4, V5, V6) -> begin (V7 = ('Idris.Idris2.Idris.Desugar':'un--desugar'(V2, V0, V3, V1, 1, [], {'Idris.Idris.Syntax.PApp', ('Idris.Idris2.Core.FC':'un--replFC'()), {'Idris.Idris.Syntax.PRef', ('Idris.Idris2.Core.FC':'un--replFC'()), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"unsafePerformIO"/utf8>>}}}, V5}, V6))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> begin (V10 = ('un--getItDecls'(V4, V6))), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> begin (V13 = {'Idris.TTImp.TTImp.ILocal', ('Idris.Idris2.Core.FC':'un--replFC'()), V12, V9}), begin (V14 = ('Idris.Idris2.Core.Context':'un--resolveName'(V0, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"[input]"/utf8>>}}, V6))), case V14 of {'Idris.Prelude.Types.Left', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V16) -> begin (V17 = (('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V3, V1, V16, {'Idris.TTImp.Elab.Check.InExpr'}, [], [], {'Idris.Core.Env.Nil'}, V13, {'Idris.Prelude.Types.Nothing'}))(V6))), case V17 of {'Idris.Prelude.Types.Left', E6} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V19) -> case V19 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V20, V21) -> begin (V26 = ('Idris.Idris2.Core.LinearCheck':'un--linearCheck'([], V0, V1, ('Idris.Idris2.Core.FC':'un--replFC'()), ('Idris.Idris2.Algebra.Semiring':'un--linear'({'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V22) -> fun (V23) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring_ZeroOneOmega'(V22, V23)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring_ZeroOneOmega'()), fun (V24) -> fun (V25) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring_ZeroOneOmega'(V24, V25)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring_ZeroOneOmega'())})), 1, {'Idris.Core.Env.Nil'}, V20, V6))), case V26 of {'Idris.Prelude.Types.Left', E10} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V28) -> begin (V29 = ('Idris.Idris2.Compiler.Inline':'un--compileAndInlineAll'(V0, V6))), case V29 of {'Idris.Prelude.Types.Left', E12} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V31) -> {'Idris.Prelude.Types.Right', V28} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--parseRepl'(V0) -> case ('nested--29071-12565--in--un--fnameCmd'(V0, [{'Idris.Builtin.MkPair', <<":load "/utf8>>, fun (V1) -> {'Idris.Idris.Syntax.Load', V1} end} | [{'Idris.Builtin.MkPair', <<":l "/utf8>>, fun (V2) -> {'Idris.Idris.Syntax.Load', V2} end} | [{'Idris.Builtin.MkPair', <<":cd "/utf8>>, fun (V3) -> {'Idris.Idris.Syntax.CD', V3} end} | [{'Idris.Builtin.MkPair', <<":!"/utf8>>, fun (V4) -> {'Idris.Idris.Syntax.RunShellCommand', V4} end} | []]]]], V0)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> case ('Idris.Idris2.Parser.Source':'un--runParser'(0, {'Idris.Core.FC.Virtual', 0}, {'Idris.Prelude.Types.Nothing'}, V0, {'Idris.Libraries.Text.Parser.Core.Alt', 0, 0, ('un--parseEmptyCmd'()), fun () -> ('un--parseCmd'()) end})) of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> case V6 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V9, V10) -> {'Idris.Prelude.Types.Right', V10} end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); {'Idris.Prelude.Types.Just', E6} -> (fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V11}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--parseEmptyCmd'() -> {'Idris.Libraries.Text.Parser.Core.SeqEmpty', 0, 0, ('Idris.Idris2.Libraries.Text.Parser.Core':'dn--un--map_Functor_(((Grammar $state) $tok) $c)'(0, fun (V0) -> fun (V1) -> V1 end end, ('Idris.Idris2.Parser.Rule.Source':'un--eoi'()))), fun (V2) -> ('Idris.Idris2.Libraries.Text.Parser.Core':'dn--un--map_Functor_(((Grammar $state) $tok) $c)'(0, V2, {'Idris.Libraries.Text.Parser.Core.Empty', {'Idris.Prelude.Types.Nothing'}})) end}.
'un--parseCmd'() -> {'Idris.Libraries.Text.Parser.Core.SeqEmpty', 0, 0, ('Idris.Idris2.Idris.Parser':'un--command'()), fun (V0) -> {'Idris.Libraries.Text.Parser.Core.ThenEmpty', 0, 0, ('Idris.Idris2.Parser.Rule.Source':'un--eoi'()), {'Idris.Libraries.Text.Parser.Core.Empty', {'Idris.Prelude.Types.Just', V0}}} end}.
'un--nextProofSearch'(V0, V1, V2, V3) -> begin (V5 = begin (V4 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V4} end), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> ('case--nextProofSearch-5337'(V2, V1, V0, V7, case V7 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17} -> (fun (V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23) -> V17 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V3)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--nextGenDef'(V0, V1, V2, V3, V4) -> begin (V6 = begin (V5 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V5} end), case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V8) -> ('case--nextGenDef-5533'(V3, V2, V1, V0, V8, case V8 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> V19 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--lookupDefTyName'(V0, V1, V2) -> ('Idris.Idris2.Core.Context':'un--lookupNameBy'(fun (V3) -> {'Idris.Builtin.MkPair', case V3 of {'Idris.Core.Context.Context.MkGlobalDef', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19} -> (fun (V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23) -> V21 end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case V3 of {'Idris.Core.Context.Context.MkGlobalDef', E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39} -> (fun (V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43) -> V26 end(E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end, V0, V1, V2)).
'un--loadMainFile'(V0, V1, V2, V3, V4, V5, V6) -> begin (V8 = begin (V7 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V7} end), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> begin (V28 = begin (V27 = ('erlang':'put'(V4, case V10 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17} -> (fun (V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> {'Idris.Idris.REPL.Opts.MkREPLOpts', V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, {'Idris.Prelude.Types.Nothing'}, V23, V24, V25, V26} end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V27} end), case V28 of {'Idris.Prelude.Types.Left', E18} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V30) -> begin (V31 = ('Idris.Idris2.Core.Directory':'un--ctxtPathToNS'(V0, V5, V6))), case V31 of {'Idris.Prelude.Types.Left', E20} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V33) -> begin (V34 = ('Idris.Idris2.Idris.REPL.Common':'un--resetContext'(V0, V1, V2, V3, {'Idris.Core.FC.PhysicalIdrSrc', V33}, V6))), case V34 of {'Idris.Prelude.Types.Left', E22} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V36) -> begin (V65 = begin (V64 = (('Idris.Idris2.Erlang.System.File':'un--readFile'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V39, V40, V41)) end end end end end, fun (V42) -> fun (V43) -> fun (V44) -> V43 end end end, fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> begin (V50 = (V47(V49))), begin (V51 = (V48(V49))), (V50(V51)) end end end end end end end}, fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> begin (V57 = (V54(V56))), ((V55(V57))(V56)) end end end end end end, fun (V58) -> fun (V59) -> fun (V60) -> begin (V61 = (V59(V60))), (V61(V60)) end end end end}, fun (V62) -> fun (V63) -> V63 end end}, V5))(V6))), {'Idris.Prelude.Types.Right', V64} end), case V65 of {'Idris.Prelude.Types.Left', E24} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V67) -> case V67 of {'Idris.Prelude.Types.Right', E26} -> (fun (V68) -> begin (V70 = ('Idris.Idris2.Core.Context.Log':'un--logTime'(V0, fun () -> <<"+ Build deps"/utf8>> end, fun (V69) -> ('Idris.Idris2.Idris.ModTree':'un--buildDeps'(V0, V2, V3, V1, V4, V5, V69)) end, V6))), case V70 of {'Idris.Prelude.Types.Left', E27} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V72) -> begin (V73 = ('Idris.Idris2.Idris.REPL.Common':'un--updateErrorLine'(V4, V72, V6))), case V73 of {'Idris.Prelude.Types.Left', E29} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V75) -> begin (V76 = ('Idris.Idris2.Idris.REPL.Opts':'un--setSource'(V4, V68, V6))), case V76 of {'Idris.Prelude.Types.Left', E31} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V78) -> begin (V79 = ('Idris.Idris2.Idris.REPL.Opts':'un--resetProofState'(V4, V6))), case V79 of {'Idris.Prelude.Types.Left', E33} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V81) -> case V72 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.FileLoaded', V5}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.ErrorsBuildingFile', V5, V72}} end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26)); {'Idris.Prelude.Types.Left', E35} -> (fun (V82) -> begin (V83 = ('Idris.Idris2.Idris.REPL.Opts':'un--setSource'(V4, <<""/utf8>>, V6))), case V83 of {'Idris.Prelude.Types.Left', E36} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V85) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.ErrorLoadingFile', V5, V82}} end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--interpret'(V0, V1, V2, V3, V4, V5, V6) -> begin (V7 = ('Idris.Idris2.Idris.REPL.Opts':'un--setCurrentElabSource'(V4, V5, V6))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> case ('un--parseRepl'(V5)) of {'Idris.Prelude.Types.Left', E2} -> (fun (V10) -> begin (V11 = (('Idris.Idris2.Idris.Error':'un--perror'(V0, V2, V4, V10))(V6))), case V11 of {'Idris.Prelude.Types.Left', E3} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.REPLError', V13}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2)); {'Idris.Prelude.Types.Right', E5} -> (fun (V14) -> case V14 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Done'}} end()); {'Idris.Prelude.Types.Just', E6} -> (fun (V15) -> ('un--processCatch'(V0, V1, V2, V3, V4, V15, V6)) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--inferAndNormalize'(V0, V1, V2, V3, V4, V5, V6, V7) -> begin (V8 = ('un--inferAndElab'(V0, V1, V2, V3, V4, ('nested--26697-10411--in--un--elabMode'(V6, V5, V4, V3, V2, V1, V0, V5)), V6, V7))), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> case V10 of {'Idris.Idris.REPL.WithType', E2, E3} -> (fun (V11, V12) -> begin (V13 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V0, <<"repl.eval"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Elaborated input"/utf8>> end, V11, V7))), case V13 of {'Idris.Prelude.Types.Left', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V15) -> begin (V17 = begin (V16 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V16} end), case V17 of {'Idris.Prelude.Types.Left', E6} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V19) -> begin (V23 = fun (V20) -> fun (V21) -> fun (V22) -> ('un--replEval'(V0, [], V5, V20, V21, V22)) end end end), begin (V24 = ((((V23(V19))({'Idris.Core.Env.Nil'}))(V11))(V7))), case V24 of {'Idris.Prelude.Types.Left', E8} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V26) -> begin (V27 = ('Idris.Idris2.Core.Normalise':'un--logTermNF'([], V0, <<"repl.eval"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> <<"Normalised"/utf8>> end, {'Idris.Core.Env.Nil'}, V26, V7))), case V27 of {'Idris.Prelude.Types.Left', E10} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V29) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.WithType', V26, V12}} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--inferAndElab'(V0, V1, V2, V3, V4, V5, V6, V7) -> begin (V8 = ('Idris.Idris2.Idris.Desugar':'un--desugar'(V2, V0, V3, V1, 1, [], V6, V7))), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> begin (V11 = ('un--getItDecls'(V4, V7))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> begin (V14 = {'Idris.TTImp.TTImp.ILocal', ('Idris.Idris2.Core.FC':'un--replFC'()), V13, V10}), begin (V15 = ('Idris.Idris2.Core.Context':'un--resolveName'(V0, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"[input]"/utf8>>}}, V7))), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> begin (V24 = ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(fun (V18) -> begin (V19 = ('Idris.Idris2.Core.Context':'un--hide'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--primIONS'()), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"::"/utf8>>}}}, V18))), case V19 of {'Idris.Prelude.Types.Left', E6} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V21) -> ('Idris.Idris2.Core.Context':'un--hide'(V0, ('Idris.Idris2.Core.FC':'un--replFC'()), {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--primIONS'()), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Nil"/utf8>>}}}, V18)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V22) -> fun (V23) -> {'Idris.Prelude.Types.Right', 0} end end, V7))), case V24 of {'Idris.Prelude.Types.Left', E8} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V26) -> begin (V27 = (('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V3, V1, V17, V5, [], [], {'Idris.Core.Env.Nil'}, V14, {'Idris.Prelude.Types.Nothing'}))(V7))), case V27 of {'Idris.Prelude.Types.Left', E10} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V29) -> case V29 of {'Idris.Builtin.MkPair', E12, E13} -> (fun (V30, V31) -> begin (V32 = (('Idris.Idris2.Core.Normalise.Eval':'un--getTerm'(V31))(V7))), case V32 of {'Idris.Prelude.Types.Left', E14} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V34) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.WithType', V30, V34}} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--handleResult'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.Idris.REPL.Common.Exited'} -> (fun () -> ('Idris.Idris2.Idris.REPL.Common':'un--iputStrLn'(V0, V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Bye for now!"/utf8>>)), V6)) end()); _ -> begin (V7 = (('un--displayResult'(V0, V1, V2, V3, V4, V5))(V6))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> ('un--repl'(V0, V1, V2, V3, V4, V6)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--handleMissing\x{27}'(V0) -> case V0 of {'Idris.Idris.REPL.Common.CasesMissing', E0, E1} -> (fun (V1, V2) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V1)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<":\x{a}"/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, V2)))))) end(E0, E1)); {'Idris.Idris.REPL.Common.CallsNonCovering', E2, E3} -> (fun (V3, V4) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<": Calls non covering function"/utf8>>, case V4 of [E4 | E5] -> (fun (V5, V6) -> case V6 of [] -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V5)))); _ -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V7) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7)) end, V4)))))) end end(E4, E5)); _ -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V8) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)) end, V4)))))) end)))) end(E2, E3)); {'Idris.Idris.REPL.Common.AllCasesCovered', E6} -> (fun (V9) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V9)), <<": All cases covered"/utf8>>)) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--handleMissing'(V0) -> case V0 of {'Idris.Idris.REPL.Common.CasesMissing', E0, E1} -> (fun (V1, V2) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V1)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V5, V6)) end end end end, fun (V7) -> ('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V7)))) end, V2)))))) end(E0, E1)); {'Idris.Idris.REPL.Common.CallsNonCovering', E2, E3} -> (fun (V8, V9) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V8)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Calls non covering"/utf8>>)), case V9 of [E4 | E5] -> (fun (V10, V11) -> case V11 of [] -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"function"/utf8>>)), ('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V10)))))); _ -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"functions:"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--concatWith'(fun (V12) -> fun (V13) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--surround'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--comma'()), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--space'()))), V12, V13)) end end, ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V16, V17)) end end end end, fun (V18) -> ('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V18)))) end, V9)))))) end end(E4, E5)); _ -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--fromString_FromString_(Doc $ann)'(<<"functions:"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--concatWith'(fun (V19) -> fun (V20) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--surround'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--comma'()), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--space'()))), V19, V20)) end end, ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V23, V24)) end end end end, fun (V25) -> ('Idris.Idris2.Idris.Pretty':'un--code'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V25)))) end, V9)))))) end)))) end(E2, E3)); {'Idris.Idris.REPL.Common.AllCasesCovered', E6} -> (fun (V26) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V26)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"All cases covered"/utf8>>)))) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getOptions'(V0, V1, V2) -> begin (V3 = ('Idris.Idris2.Core.Context':'un--getPPrint'(V0, V2))), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> begin (V7 = begin (V6 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V6} end), case V7 of {'Idris.Prelude.Types.Left', E2} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> {'Idris.Prelude.Types.Right', [{'Idris.Idris.Syntax.ShowImplicits', case V5 of {'Idris.Core.Options.MkPPOpts', E4, E5, E6} -> (fun (V10, V11, V12) -> V10 end(E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} | [{'Idris.Idris.Syntax.ShowNamespace', case V5 of {'Idris.Core.Options.MkPPOpts', E7, E8, E9} -> (fun (V13, V14, V15) -> V15 end(E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} | [{'Idris.Idris.Syntax.ShowTypes', case V9 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25} -> (fun (V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31) -> V16 end(E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} | [{'Idris.Idris.Syntax.EvalMode', case V9 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41} -> (fun (V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47) -> V33 end(E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} | [{'Idris.Idris.Syntax.Editor', case V9 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57} -> (fun (V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63) -> V53 end(E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} | []]]]]]} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--getItDecls'(V0, V1) -> begin (V3 = begin (V2 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2} end), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> case V5 of {'Idris.Idris.REPL.Opts.MkREPLOpts', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V17 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', []} end()); {'Idris.Prelude.Types.Just', E18} -> (fun (V22) -> begin (V23 = {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"it"/utf8>>}}), {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IClaim', ('Idris.Idris2.Core.FC':'un--replFC'()), ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), 0, [], {'Idris.TTImp.TTImp.MkImpTy', ('Idris.Idris2.Core.FC':'un--replFC'()), {'Idris.Core.FC.EmptyFC'}, V23, {'Idris.TTImp.TTImp.Implicit', ('Idris.Idris2.Core.FC':'un--replFC'()), 0}}} | [{'Idris.TTImp.TTImp.IDef', ('Idris.Idris2.Core.FC':'un--replFC'()), V23, [{'Idris.TTImp.TTImp.PatClause', ('Idris.Idris2.Core.FC':'un--replFC'()), {'Idris.TTImp.TTImp.IVar', ('Idris.Idris2.Core.FC':'un--replFC'()), V23}, {'Idris.TTImp.TTImp.IVar', ('Idris.Idris2.Core.FC':'un--replFC'()), V22}} | []]} | []]]} end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--findInTree'(V0, V1, V2) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(fun (V3) -> ('Idris.Idris2.Builtin':'un--snd'(V3)) end, ('Idris.Idris2.Data.List':'un--head\x{27}'(('Idris.Idris2.Data.List':'un--filter'(fun (V4) -> ('nested--21403-5846--in--un--match'(V2, V1, V0, V4)) end, ('Idris.Idris2.Data.List':'un--sortBy'(fun (V5) -> fun (V6) -> ('nested--21403-5845--in--un--cmp'(V2, V1, V0, ('Idris.Idris2.Libraries.Data.PosMap':'dn--un--measure_Measure_(|((Builtin.Pair NonEmptyFC) $a),((Builtin.MkPair NonEmptyFC) $a)|)'(V5)), ('Idris.Idris2.Libraries.Data.PosMap':'dn--un--measure_Measure_(|((Builtin.Pair NonEmptyFC) $a),((Builtin.MkPair NonEmptyFC) $a)|)'(V6)))) end end, ('Idris.Idris2.Libraries.Data.PosMap':'un--searchPos'(fun (V7) -> ('Idris.Idris2.Libraries.Data.PosMap':'dn--un--measureRM_MeasureRM_$a'(fun (V8) -> ('Idris.Idris2.Libraries.Data.PosMap':'dn--un--measure_Measure_(|((Builtin.Pair NonEmptyFC) $a),((Builtin.MkPair NonEmptyFC) $a)|)'(V8)) end, V7)) end, V0, V2)))))))))).
'un--execExp'(V0, V1, V2, V3, V4, V5, V6) -> begin (V7 = ('un--prepareExp'(V0, V1, V2, V3, V4, V5, V6))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> begin (V10 = ('Idris.Idris2.Idris.ProcessIdr':'un--findCG'(V4, V0, V6))), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> case V12 of {'Idris.Prelude.Types.Just', E4} -> (fun (V13) -> begin (V14 = ('Idris.Idris2.Compiler.Common':'un--cgExecuteExpr'(V0, V13, V9, V6))), case V14 of {'Idris.Prelude.Types.Left', E5} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Executed', V5}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V17 = ('Idris.Idris2.Idris.REPL.Common':'un--iputStrLn'(V0, V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"No such code generator available"/utf8>>)), V6))), case V17 of {'Idris.Prelude.Types.Left', E7} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.CompilationFailed'}} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--execDecls'(V0, V1, V2, V3, V4, V5, V6) -> begin (V9 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V7) -> fun (V8) -> ('nested--26027-9813--in--un--execDecl'(V5, V4, V3, V2, V1, V0, V7, V8)) end end, V5, V6))), case V9 of {'Idris.Prelude.Types.Left', E0} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.DefDeclared'}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--dropLamsTm'(V0, V1, V2, V3) -> case V1 of 0 -> {'Idris.Builtin.DPair.MkDPair', V0, {'Idris.Builtin.MkPair', V2, V3}}; _ -> begin (V4 = (V1 - 1)), case V3 of {'Idris.Core.TT.Bind', E0, E1, E2, E3} -> (fun (V5, V6, V7, V8) -> ('un--dropLamsTm'([V6 | V0], V4, {'Idris.Core.Env.::', V7, V2}, V8)) end(E0, E1, E2, E3)); _ -> {'Idris.Builtin.DPair.MkDPair', V0, {'Idris.Builtin.MkPair', V2, V3}} end end end.
'un--dropLams'(V0, V1) -> case V0 of 0 -> V1; _ -> begin (V2 = (V0 - 1)), case V1 of {'Idris.TTImp.TTImp.ILam', E0, E1, E2, E3, E4, E5} -> (fun (V3, V4, V5, V6, V7, V8) -> ('un--dropLams'(V2, V8)) end(E0, E1, E2, E3, E4, E5)); _ -> V1 end end end.
'un--displayType'(V0, V1, V2, V3) -> case V3 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V6, V7) -> ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> fun (V8) -> begin (V32 = begin (V29 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V2, {'Idris.Core.Env.Nil'}, case V7 of {'Idris.Core.Context.Context.MkGlobalDef', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28) -> V11 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V8))), case V29 of {'Idris.Prelude.Types.Left', E24} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V31) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V1, {'Idris.Core.Env.Nil'}, V31, V8)) end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V32 of {'Idris.Prelude.Types.Left', E26} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V34) -> begin (V55 = ('Idris.Idris2.Core.Context':'un--aliasName'(V0, case V7 of {'Idris.Core.Context.Context.MkGlobalDef', E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47} -> (fun (V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54) -> V36 end(E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V8))), case V55 of {'Idris.Prelude.Types.Left', E48} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V57) -> begin (V59 = ('Idris.Idris2.Idris.Pretty':'un--showCategory'(fun (V58) -> {'Idris.Idris.Pretty.Syntax', V58} end, V7))), {'Idris.Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'((V59(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V57)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()), ('un--prettyTerm'(V34))))))} end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, fun () -> fun (V60) -> fun (V61) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V62) -> case V62 of {'Idris.Prelude.Types.Left', E50} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V64) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--reAnnotate'(fun (V65) -> {'Idris.Idris.Pretty.Syntax', V65} end, V64))} end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V66) -> ('Idris.Idris2.Idris.IDEMode.Holes':'un--prettyHole'([], V0, V1, V2, {'Idris.Core.Env.Nil'}, V4, V60, case V7 of {'Idris.Core.Context.Context.MkGlobalDef', E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71} -> (fun (V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86) -> V69 end(E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V66)) end, V61)) end end end, ('Idris.Idris2.Idris.IDEMode.Holes':'un--isHole'(V7)))) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--displayTerm'(V0, V1, V2, V3, V4) -> begin (V8 = begin (V5 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V2, {'Idris.Core.Env.Nil'}, V3, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'([], V0, V1, {'Idris.Core.Env.Nil'}, V7, V4)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> {'Idris.Prelude.Types.Right', ('un--prettyTerm'(V10))} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--displayResult'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Idris.REPL.Common.REPLError', E0} -> (fun (V6) -> fun (V7) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, V6, V7)) end end(E0)); {'Idris.Idris.REPL.Common.Evaluated', E1, E2} -> (fun (V8, V9) -> fun (V10) -> case V9 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('un--prettyTerm'(V8)), V10)) end()); {'Idris.Prelude.Types.Just', E3} -> (fun (V11) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('un--prettyTerm'(V8)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()), ('un--prettyTerm'(V11)))))), V10)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1, E2)); {'Idris.Idris.REPL.Common.Printed', E4} -> (fun (V12) -> fun (V13) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, V12, V13)) end end(E4)); {'Idris.Idris.REPL.Common.PrintedDoc', E5} -> (fun (V14) -> fun (V15) -> ('Idris.Idris2.Idris.REPL.Common':'un--printDocResult'(V4, V14, V15)) end end(E5)); {'Idris.Idris.REPL.Common.TermChecked', E6, E7} -> (fun (V16, V17) -> fun (V18) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('un--prettyTerm'(V16)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()), ('un--prettyTerm'(V17)))))), V18)) end end(E6, E7)); {'Idris.Idris.REPL.Common.FileLoaded', E8} -> (fun (V19) -> fun (V20) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Loaded file"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V19)))), V20)) end end(E8)); {'Idris.Idris.REPL.Common.ModuleLoaded', E9} -> (fun (V21) -> fun (V22) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Imported module"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V21)))), V22)) end end(E9)); {'Idris.Idris.REPL.Common.ErrorLoadingModule', E10, E11} -> (fun (V23, V24) -> fun (V25) -> begin (V26 = (('Idris.Idris2.Idris.Error':'un--perror'(V0, V2, V4, V24))(V25))), case V26 of {'Idris.Prelude.Types.Left', E12} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V28) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Error loading module"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V23)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), V28)))), V25)) end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E10, E11)); {'Idris.Idris.REPL.Common.ErrorLoadingFile', E14, E15} -> (fun (V29, V30) -> fun (V31) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Error loading file"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V29)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(('Idris.Idris2.Erlang.System.File':'dn--un--show_Show_FileError'(V30)))))))), V31)) end end(E14, E15)); {'Idris.Idris.REPL.Common.ErrorsBuildingFile', E16, E17} -> (fun (V32, V33) -> fun (V34) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Error(s) building file"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V32)))), V34)) end end(E16, E17)); {'Idris.Idris.REPL.Common.NoFileLoaded'} -> (fun () -> fun (V35) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"No file can be reloaded"/utf8>>)), V35)) end end()); {'Idris.Idris.REPL.Common.CurrentDirectory', E18} -> (fun (V36) -> fun (V37) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Current working directory is"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--dquotes'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V36)))))), V37)) end end(E18)); {'Idris.Idris.REPL.Common.CompilationFailed'} -> (fun () -> fun (V38) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Compilation failed"/utf8>>)), V38)) end end()); {'Idris.Idris.REPL.Common.Compiled', E19} -> (fun (V39) -> fun (V40) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(<<"File"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V39)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(<<"written"/utf8>>)))))), V40)) end end(E19)); {'Idris.Idris.REPL.Common.CompiledLibrary', E20} -> (fun (V41) -> fun (V42) -> case V41 of {'Idris.Builtin.MkPair', E21, E22} -> (fun (V43, V44) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(<<"Compiled"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V43)))), V42)) end(E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E20)); {'Idris.Idris.REPL.Common.ProofFound', E23} -> (fun (V45) -> fun (V46) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('un--prettyTerm'(V45)), V46)) end end(E23)); {'Idris.Idris.REPL.Common.Missed', E24} -> (fun (V47) -> fun (V48) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V51, V52)) end end end end, fun (V53) -> ('un--handleMissing'(V53)) end, V47)))), V48)) end end(E24)); {'Idris.Idris.REPL.Common.CheckedTotal', E25} -> (fun (V54) -> fun (V55) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V56) -> case V56 of {'Idris.Builtin.MkPair', E26, E27} -> (fun (V57, V58) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V57)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(<<"is"/utf8>>)), ('Idris.Idris2.Core.TT':'dn--un--pretty_Pretty_Totality'(V58)))))) end(E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V54)))), V55)) end end(E25)); {'Idris.Idris.REPL.Common.FoundHoles', E28} -> (fun (V59) -> case V59 of [] -> fun (V60) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"No holes"/utf8>>)), V60)) end; [E35 | E36] -> (fun (V61, V62) -> case V62 of [] -> begin (V69 = ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(case V61 of {'Idris.Idris.IDEMode.Holes.MkHoleData', E43, E44, E45} -> (fun (V63, V64, V65) -> V63 end(E43, E44, E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()), ('un--prettyTerm'(case V61 of {'Idris.Idris.IDEMode.Holes.MkHoleData', E46, E47, E48} -> (fun (V66, V67, V68) -> V67 end(E46, E47, E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))))), fun (V70) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"1 hole"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), V69)), V70)) end end; _ -> begin (V71 = ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V59)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(<<"holes"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'())))))), begin (V83 = ('Idris.Idris2.Prelude.Interfaces':'un--<&>'(fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V74, V75)) end end end end, V59, fun (V76) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(case V76 of {'Idris.Idris.IDEMode.Holes.MkHoleData', E37, E38, E39} -> (fun (V77, V78, V79) -> V77 end(E37, E38, E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()), ('un--prettyTerm'(case V76 of {'Idris.Idris.IDEMode.Holes.MkHoleData', E40, E41, E42} -> (fun (V80, V81, V82) -> V81 end(E40, E41, E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))))) end))), fun (V84) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([V71 | ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V85) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, V85)) end, V83))])), V84)) end end end end end(E35, E36)); _ -> begin (V86 = ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V59)))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(<<"holes"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'())))))), begin (V98 = ('Idris.Idris2.Prelude.Interfaces':'un--<&>'(fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V89, V90)) end end end end, V59, fun (V91) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(case V91 of {'Idris.Idris.IDEMode.Holes.MkHoleData', E29, E30, E31} -> (fun (V92, V93, V94) -> V92 end(E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()), ('un--prettyTerm'(case V91 of {'Idris.Idris.IDEMode.Holes.MkHoleData', E32, E33, E34} -> (fun (V95, V96, V97) -> V96 end(E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))))) end))), fun (V99) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vcat'([V86 | ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V100) -> ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--indent'(2, V100)) end, V98))])), V99)) end end end end end(E28)); {'Idris.Idris.REPL.Common.LogLevelSet', E49} -> (fun (V101) -> fun (V102) -> case V101 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Logging turned off"/utf8>>)), V102)) end()); {'Idris.Prelude.Types.Just', E50} -> (fun (V103) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Set log level to"/utf8>>)), ('Idris.Idris2.Core.Options.Log':'dn--un--pretty_Pretty_LogLevel'(V103)))), V102)) end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); {'Idris.Idris.REPL.Common.ConsoleWidthSet', E51} -> (fun (V104) -> fun (V105) -> case V104 of {'Idris.Prelude.Types.Just', E52} -> (fun (V106) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Set consolewidth to"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_Nat'(V106)))), V105)) end(E52)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"Set consolewidth to auto"/utf8>>)), V105)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); {'Idris.Idris.REPL.Common.ColorSet', E53} -> (fun (V107) -> fun (V108) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(case V107 of 1 -> <<"Set color on"/utf8>>; 0 -> <<"Set color off"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V108)) end end(E53)); {'Idris.Idris.REPL.Common.VersionIs', E54} -> (fun (V109) -> fun (V110) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(('Idris.Idris2.Libraries.Data.Version':'un--showVersion'(1, V109)))), V110)) end end(E54)); {'Idris.Idris.REPL.Common.RequestedHelp'} -> (fun () -> fun (V111) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(('un--displayHelp'()))), V111)) end end()); {'Idris.Idris.REPL.Common.Edited', E55} -> (fun (V112) -> fun (V113) -> case V112 of {'Idris.Idris.REPL.Common.DisplayEdit', E56} -> (fun (V114) -> case V114 of {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.Doc.Empty'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, V114, V113)) end end(E56)); {'Idris.Idris.REPL.Common.EditError', E57} -> (fun (V115) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, V115, V113)) end(E57)); {'Idris.Idris.REPL.Common.MadeLemma', E58, E59, E60, E61} -> (fun (V116, V117, V118, V119) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Parser.Unlit':'un--relit'(V116, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V117)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" : "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(V118)), <<"\x{a}"/utf8>>)))))))), V119)))), V113)) end(E58, E59, E60, E61)); {'Idris.Idris.REPL.Common.MadeWith', E62, E63} -> (fun (V120, V121) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V122) -> ('Idris.Idris2.Parser.Unlit':'un--relit'(V120, V122)) end, V121)))))), V113)) end(E62, E63)); {'Idris.Idris.REPL.Common.MadeCase', E64, E65} -> (fun (V123, V124) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V125) -> ('Idris.Idris2.Parser.Unlit':'un--relit'(V123, V125)) end, V124)))))), V113)) end(E64, E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); {'Idris.Idris.REPL.Common.OptionsSet', E66} -> (fun (V126) -> fun (V127) -> ('Idris.Idris2.Idris.REPL.Common':'un--printResult'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'(('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V130, V131)) end end end end, fun (V132) -> ('Idris.Idris2.Idris.Syntax':'dn--un--pretty_Pretty_REPLOpt'(V132)) end, V126)))), V127)) end end(E66)); {'Idris.Idris.REPL.Common.Done'} -> (fun () -> fun (V133) -> {'Idris.Prelude.Types.Right', 0} end end()); {'Idris.Idris.REPL.Common.Executed', E67} -> (fun (V134) -> fun (V135) -> {'Idris.Prelude.Types.Right', 0} end end(E67)); {'Idris.Idris.REPL.Common.DefDeclared'} -> (fun () -> fun (V136) -> {'Idris.Prelude.Types.Right', 0} end end()); {'Idris.Idris.REPL.Common.Exited'} -> (fun () -> fun (V137) -> {'Idris.Prelude.Types.Right', 0} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--displayPats'(V0, V1, V2, V3) -> case V3 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V6, V7) -> fun (V8) -> case V7 of {'Idris.Core.Context.Context.MkGlobalDef', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28) -> case V26 of {'Idris.Core.Context.Context.PMDef', E24, E25, E26, E27, E28} -> (fun (V29, V30, V31, V32, V33) -> begin (V34 = (('un--displayType'(V0, V1, V2, {'Idris.Builtin.MkPair', V4, {'Idris.Builtin.MkPair', V6, V7}}))(V8))), case V34 of {'Idris.Prelude.Types.Left', E29} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V36) -> begin (V38 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V37) -> ('un--displayClause'(V0, V1, V2, V37)) end, V33, [], V8))), case V38 of {'Idris.Prelude.Types.Left', E31} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V40) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--vsep'([V36 | V40]))} end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E24, E25, E26, E27, E28)); _ -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Core.Name':'dn--un--pretty_Pretty_Name'(V4)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"is not a pattern matching definition"/utf8>>))))} end end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--displayPatTerm'(V0, V1, V2, V3, V4) -> begin (V8 = begin (V5 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V2, {'Idris.Core.Env.Nil'}, V3, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> ('Idris.Idris2.Idris.Resugar':'un--resugarNoPatvars'([], V0, V1, {'Idris.Core.Env.Nil'}, V7, V4)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_IPTerm'(V10))} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--displayHelp'() -> ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V0) -> ('nested--29379-13680--in--un--cmdInfo'(V0)) end, ('Idris.Idris2.Idris.Parser':'un--help'()))))).
'un--displayErrors'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.Idris.REPL.Common.ErrorLoadingFile', E0, E1} -> (fun (V7, V8) -> ('Idris.Idris2.Idris.REPL.Common':'un--printError'(V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"File error in"/utf8>>)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--<+>_Semigroup_(Doc $ann)'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(V7)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--colon'()))), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'dn--un--pretty_Pretty_String'(('Idris.Idris2.Erlang.System.File':'dn--un--show_Show_FileError'(V8)))))))), V6)) end(E0, E1)); _ -> {'Idris.Prelude.Types.Right', 0} end.
'un--displayClause'(V0, V1, V2, V3) -> case V3 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V4, V5) -> fun (V6) -> case V5 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V9, V10) -> begin (V14 = begin (V11 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, V4, V2, V7, V9, V6))), case V11 of {'Idris.Prelude.Types.Left', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V13) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'(V4, V0, V1, V7, V13, V6)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V14 of {'Idris.Prelude.Types.Left', E8} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V16) -> begin (V20 = begin (V17 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, V4, V2, V7, V10, V6))), case V17 of {'Idris.Prelude.Types.Left', E10} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V19) -> ('Idris.Idris2.Idris.Resugar':'un--resugar'(V4, V0, V1, V7, V19, V6)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V20 of {'Idris.Prelude.Types.Left', E12} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V22) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('un--prettyTerm'(V16)), ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--<++>'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Symbols':'un--equals'()), ('un--prettyTerm'(V22))))))} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--compileLib'(V0, V1, V2, V3, V4) -> begin (V5 = ('Idris.Idris2.Idris.ProcessIdr':'un--findCG'(V1, V0, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> case V7 of {'Idris.Prelude.Types.Just', E2} -> (fun (V8) -> begin (V9 = ('Idris.Idris2.Compiler.Common':'un--cgCompileLibrary'(V0, V8, V2, V3, V4))), case V9 of {'Idris.Prelude.Types.Left', E3} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V11) -> (('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.CompilationFailed'}} end end, fun () -> fun (V13) -> fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.CompiledLibrary', V13}} end end end, V11))(V4)) end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V15 = ('Idris.Idris2.Idris.REPL.Common':'un--iputStrLn'(V0, V1, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"No such code generator available"/utf8>>)), V4))), case V15 of {'Idris.Prelude.Types.Left', E5} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.CompilationFailed'}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--compileExp'(V0, V1, V2, V3, V4, V5, V6, V7) -> begin (V8 = ('un--prepareExp'(V0, V1, V2, V3, V4, V5, V7))), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> begin (V11 = ('Idris.Idris2.Idris.ProcessIdr':'un--findCG'(V4, V0, V7))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> case V13 of {'Idris.Prelude.Types.Just', E4} -> (fun (V14) -> begin (V15 = ('Idris.Idris2.Compiler.Common':'un--cgCompileExpr'(V0, V14, V10, V6, V7))), case V15 of {'Idris.Prelude.Types.Left', E5} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V17) -> (('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.CompilationFailed'}} end end, fun () -> fun (V19) -> fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.Compiled', V19}} end end end, V17))(V7)) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V21 = ('Idris.Idris2.Idris.REPL.Common':'un--iputStrLn'(V0, V4, ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Util':'un--reflow'(<<"No such code generator available"/utf8>>)), V7))), case V21 of {'Idris.Prelude.Types.Left', E7} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.Idris.REPL.Common.CompilationFailed'}} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--caseSplit'(V0, V1, V2) -> case V1 of 0 -> case V2 of [E2 | E3] -> (fun (V3, V4) -> [('un--rtrim'(V0)) | V4] end(E2, E3)); _ -> case V2 of [] -> [V0 | []]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V5 = (V1 - 1)), case V2 of [E0 | E1] -> (fun (V6, V7) -> [V6 | ('un--caseSplit'(V0, V5, V7))] end(E0, E1)); _ -> case V2 of [] -> [V0 | []]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--anyAt'(V0, V1, V2) -> (V0(V1)).
'un--addMadeLemma'(V0, V1, V2, V3, V4, V5) -> ('nested--20628-5165--in--un--addApp'(V5, V4, V3, V2, V1, V0, V0, V4, [], ('un--proofSearch'(V1, V3, V4, V5)))).
'un--addMadeCase'(V0, V1, V2, V3) -> ('nested--20758-5280--in--un--addW'(V3, V2, V1, V0, V2, [], V3)).
'un--addClause'(V0, V1, V2) -> case V1 of 0 -> case V2 of [] -> [('un--rtrim'(V0)) | []]; [E2 | E3] -> (fun (V3, V4) -> case ('Idris.Idris2.Prelude.Interfaces':'un--all'({'Idris.Prelude.Interfaces.MkFoldable', fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V7, V8, V9)) end end end end end, fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V12, V13, V14)) end end end end end, fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V16)) end end, fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V20, V21, V22, V23)) end end end end end end end, fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V25)) end end, fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V28, V29, V30)) end end end end end}, fun (V31) -> ('Idris.Idris2.Prelude.Types':'un--isSpace'(V31)) end, ('Idris.Idris2.Prelude.Types':'un--fastUnpack'(V3)))) of 1 -> [('un--rtrim'(V0)) | [V3 | V4]]; 0 -> [V3 | ('un--addClause'(V0, 0, V4))]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> begin (V32 = (V1 - 1)), case V2 of [E0 | E1] -> (fun (V33, V34) -> [V33 | ('un--addClause'(V0, V32, V34))] end(E0, E1)); [] -> [V0 | []]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
