-module('Idris.Idris2.Compiler.Separate').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'nested--6559-1523--in--un--withCUID'/3,
  'nested--6559-1524--in--un--mkUnit'/7,
  'nested--6566-1584--in--un--dependencies'/7,
  'nested--6566-1585--in--un--definitions'/7,
  'nested--5848-849--in--un--addOne'/2,
  'dn--un--nsRefs_HasNamespaces_VMInst'/1,
  'dn--un--nsRefs_HasNamespaces_VMDef'/1,
  'dn--un--nsRefs_HasNamespaces_NamedDef'/1,
  'dn--un--nsRefs_HasNamespaces_NamedConstAlt'/1,
  'dn--un--nsRefs_HasNamespaces_NamedConAlt'/1,
  'dn--un--nsRefs_HasNamespaces_NamedCExp'/1,
  'dn--un--nsRefs_HasNamespaces_(|((Builtin.Pair FC) $a),((Builtin.MkPair FC) $a)|)'/2,
  'dn--un--min_Ord_CompilationUnitId'/2,
  'dn--un--max_Ord_CompilationUnitId'/2,
  'dn--un--hash_Hashable_CompilationUnitId'/1,
  'dn--un--hash_Hashable_(|((Builtin.Pair FC) $def),((Builtin.MkPair FC) $def)|)'/2,
  'dn--un--hash_Hashable_(CompilationUnit $def)'/2,
  'dn--un--hashWithSalt_Hashable_CompilationUnitId'/2,
  'dn--un--hashWithSalt_Hashable_(|((Builtin.Pair FC) $def),((Builtin.MkPair FC) $def)|)'/3,
  'dn--un--hashWithSalt_Hashable_(CompilationUnit $def)'/3,
  'dn--un--compare_Ord_CompilationUnitId'/2,
  'dn--un--__Impl_Ord_CompilationUnitId'/0,
  'dn--un--__Impl_Hashable_CompilationUnitId'/0,
  'dn--un--__Impl_Hashable_(|((Builtin.Pair FC) $def),((Builtin.MkPair FC) $def)|)'/1,
  'dn--un--__Impl_Hashable_(CompilationUnit $def)'/1,
  'dn--un--__Impl_HasNamespaces_VMInst'/1,
  'dn--un--__Impl_HasNamespaces_VMDef'/1,
  'dn--un--__Impl_HasNamespaces_NamedDef'/1,
  'dn--un--__Impl_HasNamespaces_NamedConstAlt'/1,
  'dn--un--__Impl_HasNamespaces_NamedConAlt'/1,
  'dn--un--__Impl_HasNamespaces_NamedCExp'/1,
  'dn--un--__Impl_HasNamespaces_(|((Builtin.Pair FC) $a),((Builtin.MkPair FC) $a)|)'/2,
  'dn--un--__Impl_Eq_CompilationUnitId'/0,
  'dn--un-->_Ord_CompilationUnitId'/2,
  'dn--un-->=_Ord_CompilationUnitId'/2,
  'dn--un--==_Eq_CompilationUnitId'/2,
  'dn--un--<_Ord_CompilationUnitId'/2,
  'dn--un--<=_Ord_CompilationUnitId'/2,
  'dn--un--/=_Eq_CompilationUnitId'/2,
  'un--splitByNS'/1,
  'un--nsRefs'/2,
  'un--getNS'/1,
  'un--getCompilationUnits'/2
]).
'nested--6559-1523--in--un--withCUID'(V0, V1, V2) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_List'(('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(('Idris.Idris2.Prelude.Types':'dn--un--rangeFromTo_Range_Nat'(0, ('Idris.Idris2.Prelude.Types.List':'un--length'(V2)))), V2)), fun (V3) -> case V3 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V4, V5) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_List'({'Idris.Builtin.MkPair', ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V4)), V5})) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)).
'nested--6559-1524--in--un--mkUnit'(V0, V1, V2, V3, V4, V5, V6) -> {'Idris.Compiler.Separate.MkCompilationUnit', V5, V6, ('Idris.Idris2.Libraries.Data.SortedSet':'un--delete'(V5, ('nested--6566-1584--in--un--dependencies'(V0, V1, V6, V5, V4, V3, V2)))), ('nested--6566-1585--in--un--definitions'(V0, V1, V6, V5, V4, V3, V2))}.
'nested--6566-1584--in--un--dependencies'(V0, V1, V2, V3, V4, V5, V6) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--fromList'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V7) -> fun (V8) -> ('dn--un--==_Eq_CompilationUnitId'(V7, V8)) end end, fun (V9) -> fun (V10) -> ('dn--un--/=_Eq_CompilationUnitId'(V9, V10)) end end}, fun (V11) -> fun (V12) -> ('dn--un--compare_Ord_CompilationUnitId'(V11, V12)) end end, fun (V13) -> fun (V14) -> ('dn--un--<_Ord_CompilationUnitId'(V13, V14)) end end, fun (V15) -> fun (V16) -> ('dn--un-->_Ord_CompilationUnitId'(V15, V16)) end end, fun (V17) -> fun (V18) -> ('dn--un--<=_Ord_CompilationUnitId'(V17, V18)) end end, fun (V19) -> fun (V20) -> ('dn--un-->=_Ord_CompilationUnitId'(V19, V20)) end end, fun (V21) -> fun (V22) -> ('dn--un--max_Ord_CompilationUnitId'(V21, V22)) end end, fun (V23) -> fun (V24) -> ('dn--un--min_Ord_CompilationUnitId'(V23, V24)) end end}, ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_List'(('Idris.Idris2.Data.List1':'un--forget'(V2)), fun (V25) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_List'(('Idris.Idris2.Libraries.Data.SortedSet':'un--toList'(('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V26) -> fun (V27) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V26, V27)) end end, fun (V28) -> fun (V29) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V28, V29)) end end}, fun (V30) -> fun (V31) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V30, V31)) end end, fun (V32) -> fun (V33) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V32, V33)) end end, fun (V34) -> fun (V35) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V34, V35)) end end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V36, V37)) end end, fun (V38) -> fun (V39) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V38, V39)) end end, fun (V40) -> fun (V41) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V40, V41)) end end, fun (V42) -> fun (V43) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V42, V43)) end end})) end, ('Idris.Idris2.Libraries.Data.SortedMap':'un--lookup'(V25, V6)))))), fun (V44) -> case ('Idris.Idris2.Libraries.Data.SortedMap':'un--lookup'(V44, V5)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> [] end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V45) -> [V45 | []] end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end)))).
'nested--6566-1585--in--un--definitions'(V0, V1, V2, V3, V4, V5, V6) -> ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> ('Idris.Idris2.Data.List1':'dn--un--foldr_Foldable_List1'(V9, V10, V11)) end end end end end, fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Data.List1':'dn--un--foldl_Foldable_List1'(V14, V15, V16)) end end end end end, fun (V17) -> fun (V18) -> ('Idris.Idris2.Data.List1':'dn--un--null_Foldable_List1'(V18)) end end, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.Data.List1':'dn--un--foldlM_Foldable_List1'(V22, V23, V24, V25)) end end end end end end end, fun (V26) -> fun (V27) -> ('Idris.Idris2.Data.List1':'dn--un--toList_Foldable_List1'(V27)) end end, fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('Idris.Idris2.Data.List1':'dn--un--foldMap_Foldable_List1'(V30, V31, V32)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V33, V34)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, ('Idris.Idris2.Data.List1':'dn--un-->>=_Monad_List1'(V2, fun (V35) -> ('Idris.Idris2.Data.List1':'dn--un--pure_Applicative_List1'(('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> [] end, ('Idris.Idris2.Libraries.Data.SortedMap':'un--lookup'(V35, V4)))))) end)))).
'nested--5848-849--in--un--addOne'(V0, V1) -> case V1 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V2, V3) -> ('Idris.Idris2.Libraries.Data.SortedMap':'un--mergeWith'(fun (V4) -> fun (V5) -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V4, V5)) end end, ('Idris.Idris2.Libraries.Data.SortedMap':'un--singleton'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V6) -> fun (V7) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V6, V7)) end end, fun (V8) -> fun (V9) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V8, V9)) end end}, fun (V10) -> fun (V11) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V10, V11)) end end, fun (V12) -> fun (V13) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V12, V13)) end end, fun (V14) -> fun (V15) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V14, V15)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V16, V17)) end end, fun (V18) -> fun (V19) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V18, V19)) end end, fun (V20) -> fun (V21) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V20, V21)) end end, fun (V22) -> fun (V23) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V22, V23)) end end}, ('un--getNS'(V2)), begin (V24 = {'Idris.Builtin.MkPair', V2, V3}), [V24 | []] end)), V0)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--nsRefs_HasNamespaces_VMInst'(V0) -> case V0 of {'Idris.Compiler.VMCode.DECLARE', E0} -> (fun (V1) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V2) -> fun (V3) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V2, V3)) end end, fun (V4) -> fun (V5) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V4, V5)) end end}, fun (V6) -> fun (V7) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V6, V7)) end end, fun (V8) -> fun (V9) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V8, V9)) end end, fun (V10) -> fun (V11) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V10, V11)) end end, fun (V12) -> fun (V13) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V12, V13)) end end, fun (V14) -> fun (V15) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V14, V15)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V16, V17)) end end, fun (V18) -> fun (V19) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V18, V19)) end end})) end(E0)); {'Idris.Compiler.VMCode.START'} -> (fun () -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V20) -> fun (V21) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V20, V21)) end end, fun (V22) -> fun (V23) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V22, V23)) end end}, fun (V24) -> fun (V25) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V24, V25)) end end, fun (V26) -> fun (V27) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V26, V27)) end end, fun (V28) -> fun (V29) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V28, V29)) end end, fun (V30) -> fun (V31) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V30, V31)) end end, fun (V32) -> fun (V33) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V32, V33)) end end, fun (V34) -> fun (V35) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V34, V35)) end end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V36, V37)) end end})) end()); {'Idris.Compiler.VMCode.ASSIGN', E1, E2} -> (fun (V38, V39) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V40) -> fun (V41) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V40, V41)) end end, fun (V42) -> fun (V43) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V42, V43)) end end}, fun (V44) -> fun (V45) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V44, V45)) end end, fun (V46) -> fun (V47) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V46, V47)) end end, fun (V48) -> fun (V49) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V48, V49)) end end, fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V50, V51)) end end, fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V52, V53)) end end, fun (V54) -> fun (V55) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V54, V55)) end end, fun (V56) -> fun (V57) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V56, V57)) end end})) end(E1, E2)); {'Idris.Compiler.VMCode.MKCON', E3, E4, E5} -> (fun (V58, V59, V60) -> ('Idris.Idris2.Prelude.Types':'un--either'(fun () -> fun (V61) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V62) -> fun (V63) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V62, V63)) end end, fun (V64) -> fun (V65) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V64, V65)) end end}, fun (V66) -> fun (V67) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V66, V67)) end end, fun (V68) -> fun (V69) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V68, V69)) end end, fun (V70) -> fun (V71) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V70, V71)) end end, fun (V72) -> fun (V73) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V72, V73)) end end, fun (V74) -> fun (V75) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V74, V75)) end end, fun (V76) -> fun (V77) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V76, V77)) end end, fun (V78) -> fun (V79) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V78, V79)) end end})) end end, fun () -> fun (V80) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--singleton'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V81) -> fun (V82) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V81, V82)) end end, fun (V83) -> fun (V84) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V83, V84)) end end}, fun (V85) -> fun (V86) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V85, V86)) end end, fun (V87) -> fun (V88) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V87, V88)) end end, fun (V89) -> fun (V90) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V89, V90)) end end, fun (V91) -> fun (V92) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V91, V92)) end end, fun (V93) -> fun (V94) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V93, V94)) end end, fun (V95) -> fun (V96) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V95, V96)) end end, fun (V97) -> fun (V98) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V97, V98)) end end}, ('un--getNS'(V80)))) end end, V59)) end(E3, E4, E5)); {'Idris.Compiler.VMCode.MKCLOSURE', E6, E7, E8, E9} -> (fun (V99, V100, V101, V102) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--singleton'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V103) -> fun (V104) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V103, V104)) end end, fun (V105) -> fun (V106) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V105, V106)) end end}, fun (V107) -> fun (V108) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V107, V108)) end end, fun (V109) -> fun (V110) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V109, V110)) end end, fun (V111) -> fun (V112) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V111, V112)) end end, fun (V113) -> fun (V114) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V113, V114)) end end, fun (V115) -> fun (V116) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V115, V116)) end end, fun (V117) -> fun (V118) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V117, V118)) end end, fun (V119) -> fun (V120) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V119, V120)) end end}, ('un--getNS'(V100)))) end(E6, E7, E8, E9)); {'Idris.Compiler.VMCode.MKCONSTANT', E10, E11} -> (fun (V121, V122) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V123) -> fun (V124) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V123, V124)) end end, fun (V125) -> fun (V126) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V125, V126)) end end}, fun (V127) -> fun (V128) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V127, V128)) end end, fun (V129) -> fun (V130) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V129, V130)) end end, fun (V131) -> fun (V132) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V131, V132)) end end, fun (V133) -> fun (V134) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V133, V134)) end end, fun (V135) -> fun (V136) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V135, V136)) end end, fun (V137) -> fun (V138) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V137, V138)) end end, fun (V139) -> fun (V140) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V139, V140)) end end})) end(E10, E11)); {'Idris.Compiler.VMCode.APPLY', E12, E13, E14} -> (fun (V141, V142, V143) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V144) -> fun (V145) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V144, V145)) end end, fun (V146) -> fun (V147) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V146, V147)) end end}, fun (V148) -> fun (V149) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V148, V149)) end end, fun (V150) -> fun (V151) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V150, V151)) end end, fun (V152) -> fun (V153) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V152, V153)) end end, fun (V154) -> fun (V155) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V154, V155)) end end, fun (V156) -> fun (V157) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V156, V157)) end end, fun (V158) -> fun (V159) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V158, V159)) end end, fun (V160) -> fun (V161) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V160, V161)) end end})) end(E12, E13, E14)); {'Idris.Compiler.VMCode.CALL', E15, E16, E17, E18} -> (fun (V162, V163, V164, V165) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--singleton'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V166) -> fun (V167) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V166, V167)) end end, fun (V168) -> fun (V169) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V168, V169)) end end}, fun (V170) -> fun (V171) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V170, V171)) end end, fun (V172) -> fun (V173) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V172, V173)) end end, fun (V174) -> fun (V175) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V174, V175)) end end, fun (V176) -> fun (V177) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V176, V177)) end end, fun (V178) -> fun (V179) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V178, V179)) end end, fun (V180) -> fun (V181) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V180, V181)) end end, fun (V182) -> fun (V183) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V182, V183)) end end}, ('un--getNS'(V164)))) end(E15, E16, E17, E18)); {'Idris.Compiler.VMCode.OP', E19, E20, E21} -> (fun (V184, V185, V186) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V187) -> fun (V188) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V187, V188)) end end, fun (V189) -> fun (V190) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V189, V190)) end end}, fun (V191) -> fun (V192) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V191, V192)) end end, fun (V193) -> fun (V194) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V193, V194)) end end, fun (V195) -> fun (V196) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V195, V196)) end end, fun (V197) -> fun (V198) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V197, V198)) end end, fun (V199) -> fun (V200) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V199, V200)) end end, fun (V201) -> fun (V202) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V201, V202)) end end, fun (V203) -> fun (V204) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V203, V204)) end end})) end(E19, E20, E21)); {'Idris.Compiler.VMCode.EXTPRIM', E22, E23, E24} -> (fun (V205, V206, V207) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--singleton'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V208) -> fun (V209) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V208, V209)) end end, fun (V210) -> fun (V211) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V210, V211)) end end}, fun (V212) -> fun (V213) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V212, V213)) end end, fun (V214) -> fun (V215) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V214, V215)) end end, fun (V216) -> fun (V217) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V216, V217)) end end, fun (V218) -> fun (V219) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V218, V219)) end end, fun (V220) -> fun (V221) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V220, V221)) end end, fun (V222) -> fun (V223) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V222, V223)) end end, fun (V224) -> fun (V225) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V224, V225)) end end}, ('un--getNS'(V206)))) end(E22, E23, E24)); {'Idris.Compiler.VMCode.CASE', E25, E26, E27} -> (fun (V226, V227, V228) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V229) -> fun (V230) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V229, V230)) end end, fun (V231) -> fun (V232) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V231, V232)) end end}, fun (V233) -> fun (V234) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V233, V234)) end end, fun (V235) -> fun (V236) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V235, V236)) end end, fun (V237) -> fun (V238) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V237, V238)) end end, fun (V239) -> fun (V240) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V239, V240)) end end, fun (V241) -> fun (V242) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V241, V242)) end end, fun (V243) -> fun (V244) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V243, V244)) end end, fun (V245) -> fun (V246) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V245, V246)) end end}, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V247) -> fun (V248) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V247, V248)) end end, fun (V249) -> fun (V250) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V249, V250)) end end}, fun (V251) -> fun (V252) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V251, V252)) end end, fun (V253) -> fun (V254) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V253, V254)) end end, fun (V255) -> fun (V256) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V255, V256)) end end, fun (V257) -> fun (V258) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V257, V258)) end end, fun (V259) -> fun (V260) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V259, V260)) end end, fun (V261) -> fun (V262) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V261, V262)) end end, fun (V263) -> fun (V264) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V263, V264)) end end}, ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V265) -> fun (V266) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V265, V266)) end end, fun (V267) -> fun (V268) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V267, V268)) end end}, fun (V269) -> fun (V270) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V269, V270)) end end, fun (V271) -> fun (V272) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V271, V272)) end end, fun (V273) -> fun (V274) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V273, V274)) end end, fun (V275) -> fun (V276) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V275, V276)) end end, fun (V277) -> fun (V278) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V277, V278)) end end, fun (V279) -> fun (V280) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V279, V280)) end end, fun (V281) -> fun (V282) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V281, V282)) end end})) end, fun () -> fun (V283) -> ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V284) -> fun (V285) -> fun (V286) -> fun (V287) -> fun (V288) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V286, V287, V288)) end end end end end, fun (V289) -> fun (V290) -> fun (V291) -> fun (V292) -> fun (V293) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V291, V292, V293)) end end end end end, fun (V294) -> fun (V295) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V295)) end end, fun (V296) -> fun (V297) -> fun (V298) -> fun (V299) -> fun (V300) -> fun (V301) -> fun (V302) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V299, V300, V301, V302)) end end end end end end end, fun (V303) -> fun (V304) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V304)) end end, fun (V305) -> fun (V306) -> fun (V307) -> fun (V308) -> fun (V309) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V307, V308, V309)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V310) -> fun (V311) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V312) -> fun (V313) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V312, V313)) end end, fun (V314) -> fun (V315) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V314, V315)) end end}, fun (V316) -> fun (V317) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V316, V317)) end end, fun (V318) -> fun (V319) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V318, V319)) end end, fun (V320) -> fun (V321) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V320, V321)) end end, fun (V322) -> fun (V323) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V322, V323)) end end, fun (V324) -> fun (V325) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V324, V325)) end end, fun (V326) -> fun (V327) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V326, V327)) end end, fun (V328) -> fun (V329) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V328, V329)) end end}, V310, V311)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V330) -> fun (V331) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V330, V331)) end end, fun (V332) -> fun (V333) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V332, V333)) end end}, fun (V334) -> fun (V335) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V334, V335)) end end, fun (V336) -> fun (V337) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V336, V337)) end end, fun (V338) -> fun (V339) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V338, V339)) end end, fun (V340) -> fun (V341) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V340, V341)) end end, fun (V342) -> fun (V343) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V342, V343)) end end, fun (V344) -> fun (V345) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V344, V345)) end end, fun (V346) -> fun (V347) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V346, V347)) end end}))}}, fun (V348) -> ('dn--un--nsRefs_HasNamespaces_VMInst'(V348)) end, V283)) end end, V228)), ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V349) -> fun (V350) -> fun (V351) -> fun (V352) -> fun (V353) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V351, V352, V353)) end end end end end, fun (V354) -> fun (V355) -> fun (V356) -> fun (V357) -> fun (V358) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V356, V357, V358)) end end end end end, fun (V359) -> fun (V360) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V360)) end end, fun (V361) -> fun (V362) -> fun (V363) -> fun (V364) -> fun (V365) -> fun (V366) -> fun (V367) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V364, V365, V366, V367)) end end end end end end end, fun (V368) -> fun (V369) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V369)) end end, fun (V370) -> fun (V371) -> fun (V372) -> fun (V373) -> fun (V374) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V372, V373, V374)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V375) -> fun (V376) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V377) -> fun (V378) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V377, V378)) end end, fun (V379) -> fun (V380) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V379, V380)) end end}, fun (V381) -> fun (V382) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V381, V382)) end end, fun (V383) -> fun (V384) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V383, V384)) end end, fun (V385) -> fun (V386) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V385, V386)) end end, fun (V387) -> fun (V388) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V387, V388)) end end, fun (V389) -> fun (V390) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V389, V390)) end end, fun (V391) -> fun (V392) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V391, V392)) end end, fun (V393) -> fun (V394) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V393, V394)) end end}, V375, V376)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V395) -> fun (V396) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V395, V396)) end end, fun (V397) -> fun (V398) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V397, V398)) end end}, fun (V399) -> fun (V400) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V399, V400)) end end, fun (V401) -> fun (V402) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V401, V402)) end end, fun (V403) -> fun (V404) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V403, V404)) end end, fun (V405) -> fun (V406) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V405, V406)) end end, fun (V407) -> fun (V408) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V407, V408)) end end, fun (V409) -> fun (V410) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V409, V410)) end end, fun (V411) -> fun (V412) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V411, V412)) end end}))}}, fun (V413) -> ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V414) -> fun (V415) -> fun (V416) -> fun (V417) -> fun (V418) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V416, V417, V418)) end end end end end, fun (V419) -> fun (V420) -> fun (V421) -> fun (V422) -> fun (V423) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V421, V422, V423)) end end end end end, fun (V424) -> fun (V425) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V425)) end end, fun (V426) -> fun (V427) -> fun (V428) -> fun (V429) -> fun (V430) -> fun (V431) -> fun (V432) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V429, V430, V431, V432)) end end end end end end end, fun (V433) -> fun (V434) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V434)) end end, fun (V435) -> fun (V436) -> fun (V437) -> fun (V438) -> fun (V439) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V437, V438, V439)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V440) -> fun (V441) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V442) -> fun (V443) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V442, V443)) end end, fun (V444) -> fun (V445) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V444, V445)) end end}, fun (V446) -> fun (V447) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V446, V447)) end end, fun (V448) -> fun (V449) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V448, V449)) end end, fun (V450) -> fun (V451) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V450, V451)) end end, fun (V452) -> fun (V453) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V452, V453)) end end, fun (V454) -> fun (V455) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V454, V455)) end end, fun (V456) -> fun (V457) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V456, V457)) end end, fun (V458) -> fun (V459) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V458, V459)) end end}, V440, V441)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V460) -> fun (V461) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V460, V461)) end end, fun (V462) -> fun (V463) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V462, V463)) end end}, fun (V464) -> fun (V465) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V464, V465)) end end, fun (V466) -> fun (V467) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V466, V467)) end end, fun (V468) -> fun (V469) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V468, V469)) end end, fun (V470) -> fun (V471) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V470, V471)) end end, fun (V472) -> fun (V473) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V472, V473)) end end, fun (V474) -> fun (V475) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V474, V475)) end end, fun (V476) -> fun (V477) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V476, V477)) end end}))}}, fun (V478) -> ('dn--un--nsRefs_HasNamespaces_VMInst'(V478)) end, ('Idris.Idris2.Builtin':'un--snd'(V413)))) end, V227)))), ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V479) -> fun (V480) -> fun (V481) -> fun (V482) -> fun (V483) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V481, V482, V483)) end end end end end, fun (V484) -> fun (V485) -> fun (V486) -> fun (V487) -> fun (V488) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V486, V487, V488)) end end end end end, fun (V489) -> fun (V490) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V490)) end end, fun (V491) -> fun (V492) -> fun (V493) -> fun (V494) -> fun (V495) -> fun (V496) -> fun (V497) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V494, V495, V496, V497)) end end end end end end end, fun (V498) -> fun (V499) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V499)) end end, fun (V500) -> fun (V501) -> fun (V502) -> fun (V503) -> fun (V504) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V502, V503, V504)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V505) -> fun (V506) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V507) -> fun (V508) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V507, V508)) end end, fun (V509) -> fun (V510) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V509, V510)) end end}, fun (V511) -> fun (V512) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V511, V512)) end end, fun (V513) -> fun (V514) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V513, V514)) end end, fun (V515) -> fun (V516) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V515, V516)) end end, fun (V517) -> fun (V518) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V517, V518)) end end, fun (V519) -> fun (V520) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V519, V520)) end end, fun (V521) -> fun (V522) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V521, V522)) end end, fun (V523) -> fun (V524) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V523, V524)) end end}, V505, V506)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V525) -> fun (V526) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V525, V526)) end end, fun (V527) -> fun (V528) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V527, V528)) end end}, fun (V529) -> fun (V530) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V529, V530)) end end, fun (V531) -> fun (V532) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V531, V532)) end end, fun (V533) -> fun (V534) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V533, V534)) end end, fun (V535) -> fun (V536) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V535, V536)) end end, fun (V537) -> fun (V538) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V537, V538)) end end, fun (V539) -> fun (V540) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V539, V540)) end end, fun (V541) -> fun (V542) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V541, V542)) end end}))}}, fun (V543) -> ('Idris.Idris2.Prelude.Types':'un--either'(fun () -> fun (V544) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V545) -> fun (V546) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V545, V546)) end end, fun (V547) -> fun (V548) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V547, V548)) end end}, fun (V549) -> fun (V550) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V549, V550)) end end, fun (V551) -> fun (V552) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V551, V552)) end end, fun (V553) -> fun (V554) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V553, V554)) end end, fun (V555) -> fun (V556) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V555, V556)) end end, fun (V557) -> fun (V558) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V557, V558)) end end, fun (V559) -> fun (V560) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V559, V560)) end end, fun (V561) -> fun (V562) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V561, V562)) end end})) end end, fun () -> fun (V563) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--singleton'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V564) -> fun (V565) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V564, V565)) end end, fun (V566) -> fun (V567) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V566, V567)) end end}, fun (V568) -> fun (V569) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V568, V569)) end end, fun (V570) -> fun (V571) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V570, V571)) end end, fun (V572) -> fun (V573) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V572, V573)) end end, fun (V574) -> fun (V575) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V574, V575)) end end, fun (V576) -> fun (V577) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V576, V577)) end end, fun (V578) -> fun (V579) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V578, V579)) end end, fun (V580) -> fun (V581) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V580, V581)) end end}, ('un--getNS'(V563)))) end end, ('Idris.Idris2.Builtin':'un--fst'(V543)))) end, V227)))) end(E25, E26, E27)); {'Idris.Compiler.VMCode.CONSTCASE', E28, E29, E30} -> (fun (V582, V583, V584) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V585) -> fun (V586) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V585, V586)) end end, fun (V587) -> fun (V588) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V587, V588)) end end}, fun (V589) -> fun (V590) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V589, V590)) end end, fun (V591) -> fun (V592) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V591, V592)) end end, fun (V593) -> fun (V594) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V593, V594)) end end, fun (V595) -> fun (V596) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V595, V596)) end end, fun (V597) -> fun (V598) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V597, V598)) end end, fun (V599) -> fun (V600) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V599, V600)) end end, fun (V601) -> fun (V602) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V601, V602)) end end}, ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V603) -> fun (V604) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V603, V604)) end end, fun (V605) -> fun (V606) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V605, V606)) end end}, fun (V607) -> fun (V608) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V607, V608)) end end, fun (V609) -> fun (V610) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V609, V610)) end end, fun (V611) -> fun (V612) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V611, V612)) end end, fun (V613) -> fun (V614) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V613, V614)) end end, fun (V615) -> fun (V616) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V615, V616)) end end, fun (V617) -> fun (V618) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V617, V618)) end end, fun (V619) -> fun (V620) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V619, V620)) end end})) end, fun () -> fun (V621) -> ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V622) -> fun (V623) -> fun (V624) -> fun (V625) -> fun (V626) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V624, V625, V626)) end end end end end, fun (V627) -> fun (V628) -> fun (V629) -> fun (V630) -> fun (V631) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V629, V630, V631)) end end end end end, fun (V632) -> fun (V633) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V633)) end end, fun (V634) -> fun (V635) -> fun (V636) -> fun (V637) -> fun (V638) -> fun (V639) -> fun (V640) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V637, V638, V639, V640)) end end end end end end end, fun (V641) -> fun (V642) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V642)) end end, fun (V643) -> fun (V644) -> fun (V645) -> fun (V646) -> fun (V647) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V645, V646, V647)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V648) -> fun (V649) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V650) -> fun (V651) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V650, V651)) end end, fun (V652) -> fun (V653) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V652, V653)) end end}, fun (V654) -> fun (V655) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V654, V655)) end end, fun (V656) -> fun (V657) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V656, V657)) end end, fun (V658) -> fun (V659) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V658, V659)) end end, fun (V660) -> fun (V661) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V660, V661)) end end, fun (V662) -> fun (V663) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V662, V663)) end end, fun (V664) -> fun (V665) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V664, V665)) end end, fun (V666) -> fun (V667) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V666, V667)) end end}, V648, V649)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V668) -> fun (V669) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V668, V669)) end end, fun (V670) -> fun (V671) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V670, V671)) end end}, fun (V672) -> fun (V673) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V672, V673)) end end, fun (V674) -> fun (V675) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V674, V675)) end end, fun (V676) -> fun (V677) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V676, V677)) end end, fun (V678) -> fun (V679) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V678, V679)) end end, fun (V680) -> fun (V681) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V680, V681)) end end, fun (V682) -> fun (V683) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V682, V683)) end end, fun (V684) -> fun (V685) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V684, V685)) end end}))}}, fun (V686) -> ('dn--un--nsRefs_HasNamespaces_VMInst'(V686)) end, V621)) end end, V584)), ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V687) -> fun (V688) -> fun (V689) -> fun (V690) -> fun (V691) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V689, V690, V691)) end end end end end, fun (V692) -> fun (V693) -> fun (V694) -> fun (V695) -> fun (V696) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V694, V695, V696)) end end end end end, fun (V697) -> fun (V698) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V698)) end end, fun (V699) -> fun (V700) -> fun (V701) -> fun (V702) -> fun (V703) -> fun (V704) -> fun (V705) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V702, V703, V704, V705)) end end end end end end end, fun (V706) -> fun (V707) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V707)) end end, fun (V708) -> fun (V709) -> fun (V710) -> fun (V711) -> fun (V712) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V710, V711, V712)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V713) -> fun (V714) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V715) -> fun (V716) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V715, V716)) end end, fun (V717) -> fun (V718) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V717, V718)) end end}, fun (V719) -> fun (V720) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V719, V720)) end end, fun (V721) -> fun (V722) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V721, V722)) end end, fun (V723) -> fun (V724) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V723, V724)) end end, fun (V725) -> fun (V726) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V725, V726)) end end, fun (V727) -> fun (V728) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V727, V728)) end end, fun (V729) -> fun (V730) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V729, V730)) end end, fun (V731) -> fun (V732) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V731, V732)) end end}, V713, V714)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V733) -> fun (V734) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V733, V734)) end end, fun (V735) -> fun (V736) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V735, V736)) end end}, fun (V737) -> fun (V738) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V737, V738)) end end, fun (V739) -> fun (V740) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V739, V740)) end end, fun (V741) -> fun (V742) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V741, V742)) end end, fun (V743) -> fun (V744) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V743, V744)) end end, fun (V745) -> fun (V746) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V745, V746)) end end, fun (V747) -> fun (V748) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V747, V748)) end end, fun (V749) -> fun (V750) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V749, V750)) end end}))}}, fun (V751) -> ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V752) -> fun (V753) -> fun (V754) -> fun (V755) -> fun (V756) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V754, V755, V756)) end end end end end, fun (V757) -> fun (V758) -> fun (V759) -> fun (V760) -> fun (V761) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V759, V760, V761)) end end end end end, fun (V762) -> fun (V763) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V763)) end end, fun (V764) -> fun (V765) -> fun (V766) -> fun (V767) -> fun (V768) -> fun (V769) -> fun (V770) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V767, V768, V769, V770)) end end end end end end end, fun (V771) -> fun (V772) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V772)) end end, fun (V773) -> fun (V774) -> fun (V775) -> fun (V776) -> fun (V777) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V775, V776, V777)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V778) -> fun (V779) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V780) -> fun (V781) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V780, V781)) end end, fun (V782) -> fun (V783) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V782, V783)) end end}, fun (V784) -> fun (V785) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V784, V785)) end end, fun (V786) -> fun (V787) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V786, V787)) end end, fun (V788) -> fun (V789) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V788, V789)) end end, fun (V790) -> fun (V791) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V790, V791)) end end, fun (V792) -> fun (V793) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V792, V793)) end end, fun (V794) -> fun (V795) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V794, V795)) end end, fun (V796) -> fun (V797) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V796, V797)) end end}, V778, V779)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V798) -> fun (V799) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V798, V799)) end end, fun (V800) -> fun (V801) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V800, V801)) end end}, fun (V802) -> fun (V803) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V802, V803)) end end, fun (V804) -> fun (V805) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V804, V805)) end end, fun (V806) -> fun (V807) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V806, V807)) end end, fun (V808) -> fun (V809) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V808, V809)) end end, fun (V810) -> fun (V811) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V810, V811)) end end, fun (V812) -> fun (V813) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V812, V813)) end end, fun (V814) -> fun (V815) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V814, V815)) end end}))}}, fun (V816) -> ('dn--un--nsRefs_HasNamespaces_VMInst'(V816)) end, ('Idris.Idris2.Builtin':'un--snd'(V751)))) end, V583)))) end(E28, E29, E30)); {'Idris.Compiler.VMCode.PROJECT', E31, E32, E33} -> (fun (V817, V818, V819) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V820) -> fun (V821) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V820, V821)) end end, fun (V822) -> fun (V823) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V822, V823)) end end}, fun (V824) -> fun (V825) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V824, V825)) end end, fun (V826) -> fun (V827) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V826, V827)) end end, fun (V828) -> fun (V829) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V828, V829)) end end, fun (V830) -> fun (V831) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V830, V831)) end end, fun (V832) -> fun (V833) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V832, V833)) end end, fun (V834) -> fun (V835) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V834, V835)) end end, fun (V836) -> fun (V837) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V836, V837)) end end})) end(E31, E32, E33)); {'Idris.Compiler.VMCode.NULL', E34} -> (fun (V838) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V839) -> fun (V840) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V839, V840)) end end, fun (V841) -> fun (V842) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V841, V842)) end end}, fun (V843) -> fun (V844) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V843, V844)) end end, fun (V845) -> fun (V846) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V845, V846)) end end, fun (V847) -> fun (V848) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V847, V848)) end end, fun (V849) -> fun (V850) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V849, V850)) end end, fun (V851) -> fun (V852) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V851, V852)) end end, fun (V853) -> fun (V854) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V853, V854)) end end, fun (V855) -> fun (V856) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V855, V856)) end end})) end(E34)); {'Idris.Compiler.VMCode.ERROR', E35} -> (fun (V857) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V858) -> fun (V859) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V858, V859)) end end, fun (V860) -> fun (V861) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V860, V861)) end end}, fun (V862) -> fun (V863) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V862, V863)) end end, fun (V864) -> fun (V865) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V864, V865)) end end, fun (V866) -> fun (V867) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V866, V867)) end end, fun (V868) -> fun (V869) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V868, V869)) end end, fun (V870) -> fun (V871) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V870, V871)) end end, fun (V872) -> fun (V873) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V872, V873)) end end, fun (V874) -> fun (V875) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V874, V875)) end end})) end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--nsRefs_HasNamespaces_VMDef'(V0) -> case V0 of {'Idris.Compiler.VMCode.MkVMFun', E0, E1} -> (fun (V1, V2) -> ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V5, V6, V7)) end end end end end, fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V10, V11, V12)) end end end end end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V14)) end end, fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V18, V19, V20, V21)) end end end end end end end, fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V23)) end end, fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V26, V27, V28)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V29) -> fun (V30) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V31) -> fun (V32) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V31, V32)) end end, fun (V33) -> fun (V34) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V33, V34)) end end}, fun (V35) -> fun (V36) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V35, V36)) end end, fun (V37) -> fun (V38) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V37, V38)) end end, fun (V39) -> fun (V40) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V39, V40)) end end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V41, V42)) end end, fun (V43) -> fun (V44) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V43, V44)) end end, fun (V45) -> fun (V46) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V45, V46)) end end, fun (V47) -> fun (V48) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V47, V48)) end end}, V29, V30)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V49) -> fun (V50) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V49, V50)) end end, fun (V51) -> fun (V52) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V51, V52)) end end}, fun (V53) -> fun (V54) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V53, V54)) end end, fun (V55) -> fun (V56) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V55, V56)) end end, fun (V57) -> fun (V58) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V57, V58)) end end, fun (V59) -> fun (V60) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V59, V60)) end end, fun (V61) -> fun (V62) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V61, V62)) end end, fun (V63) -> fun (V64) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V63, V64)) end end, fun (V65) -> fun (V66) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V65, V66)) end end}))}}, fun (V67) -> ('dn--un--nsRefs_HasNamespaces_VMInst'(V67)) end, V2)) end(E0, E1)); {'Idris.Compiler.VMCode.MkVMForeign', E2, E3, E4} -> (fun (V68, V69, V70) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V71) -> fun (V72) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V71, V72)) end end, fun (V73) -> fun (V74) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V73, V74)) end end}, fun (V75) -> fun (V76) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V75, V76)) end end, fun (V77) -> fun (V78) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V77, V78)) end end, fun (V79) -> fun (V80) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V79, V80)) end end, fun (V81) -> fun (V82) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V81, V82)) end end, fun (V83) -> fun (V84) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V83, V84)) end end, fun (V85) -> fun (V86) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V85, V86)) end end, fun (V87) -> fun (V88) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V87, V88)) end end})) end(E2, E3, E4)); {'Idris.Compiler.VMCode.MkVMError', E5} -> (fun (V89) -> ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V92, V93, V94)) end end end end end, fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V97, V98, V99)) end end end end end, fun (V100) -> fun (V101) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V101)) end end, fun (V102) -> fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V105, V106, V107, V108)) end end end end end end end, fun (V109) -> fun (V110) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V110)) end end, fun (V111) -> fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V113, V114, V115)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V116) -> fun (V117) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V118) -> fun (V119) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V118, V119)) end end, fun (V120) -> fun (V121) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V120, V121)) end end}, fun (V122) -> fun (V123) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V122, V123)) end end, fun (V124) -> fun (V125) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V124, V125)) end end, fun (V126) -> fun (V127) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V126, V127)) end end, fun (V128) -> fun (V129) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V128, V129)) end end, fun (V130) -> fun (V131) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V130, V131)) end end, fun (V132) -> fun (V133) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V132, V133)) end end, fun (V134) -> fun (V135) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V134, V135)) end end}, V116, V117)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V136) -> fun (V137) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V136, V137)) end end, fun (V138) -> fun (V139) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V138, V139)) end end}, fun (V140) -> fun (V141) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V140, V141)) end end, fun (V142) -> fun (V143) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V142, V143)) end end, fun (V144) -> fun (V145) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V144, V145)) end end, fun (V146) -> fun (V147) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V146, V147)) end end, fun (V148) -> fun (V149) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V148, V149)) end end, fun (V150) -> fun (V151) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V150, V151)) end end, fun (V152) -> fun (V153) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V152, V153)) end end}))}}, fun (V154) -> ('dn--un--nsRefs_HasNamespaces_VMInst'(V154)) end, V89)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--nsRefs_HasNamespaces_NamedDef'(V0) -> case V0 of {'Idris.Core.CompileExpr.MkNmFun', E0, E1} -> (fun (V1, V2) -> ('dn--un--nsRefs_HasNamespaces_NamedCExp'(V2)) end(E0, E1)); {'Idris.Core.CompileExpr.MkNmCon', E2, E3, E4} -> (fun (V3, V4, V5) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V6) -> fun (V7) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V6, V7)) end end, fun (V8) -> fun (V9) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V8, V9)) end end}, fun (V10) -> fun (V11) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V10, V11)) end end, fun (V12) -> fun (V13) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V12, V13)) end end, fun (V14) -> fun (V15) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V14, V15)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V16, V17)) end end, fun (V18) -> fun (V19) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V18, V19)) end end, fun (V20) -> fun (V21) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V20, V21)) end end, fun (V22) -> fun (V23) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V22, V23)) end end})) end(E2, E3, E4)); {'Idris.Core.CompileExpr.MkNmForeign', E5, E6, E7} -> (fun (V24, V25, V26) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V27) -> fun (V28) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V27, V28)) end end, fun (V29) -> fun (V30) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V29, V30)) end end}, fun (V31) -> fun (V32) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V31, V32)) end end, fun (V33) -> fun (V34) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V33, V34)) end end, fun (V35) -> fun (V36) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V35, V36)) end end, fun (V37) -> fun (V38) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V37, V38)) end end, fun (V39) -> fun (V40) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V39, V40)) end end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V41, V42)) end end, fun (V43) -> fun (V44) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V43, V44)) end end})) end(E5, E6, E7)); {'Idris.Core.CompileExpr.MkNmError', E8} -> (fun (V45) -> ('dn--un--nsRefs_HasNamespaces_NamedCExp'(V45)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--nsRefs_HasNamespaces_NamedConstAlt'(V0) -> case V0 of {'Idris.Core.CompileExpr.MkNConstAlt', E0, E1} -> (fun (V1, V2) -> ('dn--un--nsRefs_HasNamespaces_NamedCExp'(V2)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--nsRefs_HasNamespaces_NamedConAlt'(V0) -> case V0 of {'Idris.Core.CompileExpr.MkNConAlt', E0, E1, E2, E3, E4} -> (fun (V1, V2, V3, V4, V5) -> ('dn--un--nsRefs_HasNamespaces_NamedCExp'(V5)) end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--nsRefs_HasNamespaces_NamedCExp'(V0) -> case V0 of {'Idris.Core.CompileExpr.NmLocal', E0, E1} -> (fun (V1, V2) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V3) -> fun (V4) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V3, V4)) end end, fun (V5) -> fun (V6) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V5, V6)) end end}, fun (V7) -> fun (V8) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V7, V8)) end end, fun (V9) -> fun (V10) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V9, V10)) end end, fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V11, V12)) end end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V13, V14)) end end, fun (V15) -> fun (V16) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V15, V16)) end end, fun (V17) -> fun (V18) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V17, V18)) end end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V19, V20)) end end})) end(E0, E1)); {'Idris.Core.CompileExpr.NmRef', E2, E3} -> (fun (V21, V22) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--singleton'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V23) -> fun (V24) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V23, V24)) end end, fun (V25) -> fun (V26) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V25, V26)) end end}, fun (V27) -> fun (V28) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V27, V28)) end end, fun (V29) -> fun (V30) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V29, V30)) end end, fun (V31) -> fun (V32) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V31, V32)) end end, fun (V33) -> fun (V34) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V33, V34)) end end, fun (V35) -> fun (V36) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V35, V36)) end end, fun (V37) -> fun (V38) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V37, V38)) end end, fun (V39) -> fun (V40) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V39, V40)) end end}, ('un--getNS'(V22)))) end(E2, E3)); {'Idris.Core.CompileExpr.NmLam', E4, E5, E6} -> (fun (V41, V42, V43) -> ('dn--un--nsRefs_HasNamespaces_NamedCExp'(V43)) end(E4, E5, E6)); {'Idris.Core.CompileExpr.NmLet', E7, E8, E9, E10} -> (fun (V44, V45, V46, V47) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V48) -> fun (V49) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V48, V49)) end end, fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V50, V51)) end end}, fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V52, V53)) end end, fun (V54) -> fun (V55) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V54, V55)) end end, fun (V56) -> fun (V57) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V56, V57)) end end, fun (V58) -> fun (V59) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V58, V59)) end end, fun (V60) -> fun (V61) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V60, V61)) end end, fun (V62) -> fun (V63) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V62, V63)) end end, fun (V64) -> fun (V65) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V64, V65)) end end}, ('dn--un--nsRefs_HasNamespaces_NamedCExp'(V46)), ('dn--un--nsRefs_HasNamespaces_NamedCExp'(V47)))) end(E7, E8, E9, E10)); {'Idris.Core.CompileExpr.NmApp', E11, E12, E13} -> (fun (V66, V67, V68) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V69) -> fun (V70) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V69, V70)) end end, fun (V71) -> fun (V72) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V71, V72)) end end}, fun (V73) -> fun (V74) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V73, V74)) end end, fun (V75) -> fun (V76) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V75, V76)) end end, fun (V77) -> fun (V78) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V77, V78)) end end, fun (V79) -> fun (V80) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V79, V80)) end end, fun (V81) -> fun (V82) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V81, V82)) end end, fun (V83) -> fun (V84) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V83, V84)) end end, fun (V85) -> fun (V86) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V85, V86)) end end}, ('dn--un--nsRefs_HasNamespaces_NamedCExp'(V67)), ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V89, V90, V91)) end end end end end, fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V94, V95, V96)) end end end end end, fun (V97) -> fun (V98) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V98)) end end, fun (V99) -> fun (V100) -> fun (V101) -> fun (V102) -> fun (V103) -> fun (V104) -> fun (V105) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V102, V103, V104, V105)) end end end end end end end, fun (V106) -> fun (V107) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V107)) end end, fun (V108) -> fun (V109) -> fun (V110) -> fun (V111) -> fun (V112) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V110, V111, V112)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V113) -> fun (V114) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V115) -> fun (V116) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V115, V116)) end end, fun (V117) -> fun (V118) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V117, V118)) end end}, fun (V119) -> fun (V120) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V119, V120)) end end, fun (V121) -> fun (V122) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V121, V122)) end end, fun (V123) -> fun (V124) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V123, V124)) end end, fun (V125) -> fun (V126) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V125, V126)) end end, fun (V127) -> fun (V128) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V127, V128)) end end, fun (V129) -> fun (V130) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V129, V130)) end end, fun (V131) -> fun (V132) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V131, V132)) end end}, V113, V114)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V133) -> fun (V134) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V133, V134)) end end, fun (V135) -> fun (V136) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V135, V136)) end end}, fun (V137) -> fun (V138) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V137, V138)) end end, fun (V139) -> fun (V140) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V139, V140)) end end, fun (V141) -> fun (V142) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V141, V142)) end end, fun (V143) -> fun (V144) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V143, V144)) end end, fun (V145) -> fun (V146) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V145, V146)) end end, fun (V147) -> fun (V148) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V147, V148)) end end, fun (V149) -> fun (V150) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V149, V150)) end end}))}}, fun (V151) -> ('dn--un--nsRefs_HasNamespaces_NamedCExp'(V151)) end, V68)))) end(E11, E12, E13)); {'Idris.Core.CompileExpr.NmCon', E14, E15, E16, E17, E18} -> (fun (V152, V153, V154, V155, V156) -> ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V157) -> fun (V158) -> fun (V159) -> fun (V160) -> fun (V161) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V159, V160, V161)) end end end end end, fun (V162) -> fun (V163) -> fun (V164) -> fun (V165) -> fun (V166) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V164, V165, V166)) end end end end end, fun (V167) -> fun (V168) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V168)) end end, fun (V169) -> fun (V170) -> fun (V171) -> fun (V172) -> fun (V173) -> fun (V174) -> fun (V175) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V172, V173, V174, V175)) end end end end end end end, fun (V176) -> fun (V177) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V177)) end end, fun (V178) -> fun (V179) -> fun (V180) -> fun (V181) -> fun (V182) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V180, V181, V182)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V183) -> fun (V184) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V185) -> fun (V186) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V185, V186)) end end, fun (V187) -> fun (V188) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V187, V188)) end end}, fun (V189) -> fun (V190) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V189, V190)) end end, fun (V191) -> fun (V192) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V191, V192)) end end, fun (V193) -> fun (V194) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V193, V194)) end end, fun (V195) -> fun (V196) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V195, V196)) end end, fun (V197) -> fun (V198) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V197, V198)) end end, fun (V199) -> fun (V200) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V199, V200)) end end, fun (V201) -> fun (V202) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V201, V202)) end end}, V183, V184)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V203) -> fun (V204) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V203, V204)) end end, fun (V205) -> fun (V206) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V205, V206)) end end}, fun (V207) -> fun (V208) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V207, V208)) end end, fun (V209) -> fun (V210) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V209, V210)) end end, fun (V211) -> fun (V212) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V211, V212)) end end, fun (V213) -> fun (V214) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V213, V214)) end end, fun (V215) -> fun (V216) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V215, V216)) end end, fun (V217) -> fun (V218) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V217, V218)) end end, fun (V219) -> fun (V220) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V219, V220)) end end}))}}, fun (V221) -> ('dn--un--nsRefs_HasNamespaces_NamedCExp'(V221)) end, V156)) end(E14, E15, E16, E17, E18)); {'Idris.Core.CompileExpr.NmForce', E19, E20, E21} -> (fun (V222, V223, V224) -> ('dn--un--nsRefs_HasNamespaces_NamedCExp'(V224)) end(E19, E20, E21)); {'Idris.Core.CompileExpr.NmDelay', E22, E23, E24} -> (fun (V225, V226, V227) -> ('dn--un--nsRefs_HasNamespaces_NamedCExp'(V227)) end(E22, E23, E24)); {'Idris.Core.CompileExpr.NmErased', E25} -> (fun (V228) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V229) -> fun (V230) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V229, V230)) end end, fun (V231) -> fun (V232) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V231, V232)) end end}, fun (V233) -> fun (V234) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V233, V234)) end end, fun (V235) -> fun (V236) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V235, V236)) end end, fun (V237) -> fun (V238) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V237, V238)) end end, fun (V239) -> fun (V240) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V239, V240)) end end, fun (V241) -> fun (V242) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V241, V242)) end end, fun (V243) -> fun (V244) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V243, V244)) end end, fun (V245) -> fun (V246) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V245, V246)) end end})) end(E25)); {'Idris.Core.CompileExpr.NmPrimVal', E26, E27} -> (fun (V247, V248) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V249) -> fun (V250) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V249, V250)) end end, fun (V251) -> fun (V252) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V251, V252)) end end}, fun (V253) -> fun (V254) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V253, V254)) end end, fun (V255) -> fun (V256) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V255, V256)) end end, fun (V257) -> fun (V258) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V257, V258)) end end, fun (V259) -> fun (V260) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V259, V260)) end end, fun (V261) -> fun (V262) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V261, V262)) end end, fun (V263) -> fun (V264) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V263, V264)) end end, fun (V265) -> fun (V266) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V265, V266)) end end})) end(E26, E27)); {'Idris.Core.CompileExpr.NmOp', E28, E29, E30, E31} -> (fun (V267, V268, V269, V270) -> ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V271) -> fun (V272) -> fun (V273) -> fun (V274) -> fun (V275) -> ('Idris.Idris2.Data.Vect':'dn--un--foldr_Foldable_(Vect $n)'(V273, V274, V275)) end end end end end, fun (V276) -> fun (V277) -> fun (V278) -> fun (V279) -> fun (V280) -> ('Idris.Idris2.Data.Vect':'dn--un--foldl_Foldable_(Vect $n)'(V278, V279, V280)) end end end end end, fun (V281) -> fun (V282) -> ('Idris.Idris2.Data.Vect':'dn--un--null_Foldable_(Vect $n)'(V282)) end end, fun (V283) -> fun (V284) -> fun (V285) -> fun (V286) -> fun (V287) -> fun (V288) -> fun (V289) -> ('Idris.Idris2.Data.Vect':'dn--un--foldlM_Foldable_(Vect $n)'(V286, V287, V288, V289)) end end end end end end end, fun (V290) -> fun (V291) -> ('Idris.Idris2.Data.Vect':'dn--un--toList_Foldable_(Vect $n)'(V291)) end end, fun (V292) -> fun (V293) -> fun (V294) -> fun (V295) -> fun (V296) -> ('Idris.Idris2.Data.Vect':'dn--un--foldMap_Foldable_(Vect $n)'(V294, V295, V296)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V297) -> fun (V298) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V299) -> fun (V300) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V299, V300)) end end, fun (V301) -> fun (V302) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V301, V302)) end end}, fun (V303) -> fun (V304) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V303, V304)) end end, fun (V305) -> fun (V306) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V305, V306)) end end, fun (V307) -> fun (V308) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V307, V308)) end end, fun (V309) -> fun (V310) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V309, V310)) end end, fun (V311) -> fun (V312) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V311, V312)) end end, fun (V313) -> fun (V314) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V313, V314)) end end, fun (V315) -> fun (V316) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V315, V316)) end end}, V297, V298)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V317) -> fun (V318) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V317, V318)) end end, fun (V319) -> fun (V320) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V319, V320)) end end}, fun (V321) -> fun (V322) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V321, V322)) end end, fun (V323) -> fun (V324) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V323, V324)) end end, fun (V325) -> fun (V326) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V325, V326)) end end, fun (V327) -> fun (V328) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V327, V328)) end end, fun (V329) -> fun (V330) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V329, V330)) end end, fun (V331) -> fun (V332) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V331, V332)) end end, fun (V333) -> fun (V334) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V333, V334)) end end}))}}, fun (V335) -> ('dn--un--nsRefs_HasNamespaces_NamedCExp'(V335)) end, V270)) end(E28, E29, E30, E31)); {'Idris.Core.CompileExpr.NmExtPrim', E32, E33, E34} -> (fun (V336, V337, V338) -> ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V339) -> fun (V340) -> fun (V341) -> fun (V342) -> fun (V343) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V341, V342, V343)) end end end end end, fun (V344) -> fun (V345) -> fun (V346) -> fun (V347) -> fun (V348) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V346, V347, V348)) end end end end end, fun (V349) -> fun (V350) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V350)) end end, fun (V351) -> fun (V352) -> fun (V353) -> fun (V354) -> fun (V355) -> fun (V356) -> fun (V357) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V354, V355, V356, V357)) end end end end end end end, fun (V358) -> fun (V359) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V359)) end end, fun (V360) -> fun (V361) -> fun (V362) -> fun (V363) -> fun (V364) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V362, V363, V364)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V365) -> fun (V366) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V367) -> fun (V368) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V367, V368)) end end, fun (V369) -> fun (V370) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V369, V370)) end end}, fun (V371) -> fun (V372) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V371, V372)) end end, fun (V373) -> fun (V374) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V373, V374)) end end, fun (V375) -> fun (V376) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V375, V376)) end end, fun (V377) -> fun (V378) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V377, V378)) end end, fun (V379) -> fun (V380) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V379, V380)) end end, fun (V381) -> fun (V382) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V381, V382)) end end, fun (V383) -> fun (V384) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V383, V384)) end end}, V365, V366)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V385) -> fun (V386) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V385, V386)) end end, fun (V387) -> fun (V388) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V387, V388)) end end}, fun (V389) -> fun (V390) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V389, V390)) end end, fun (V391) -> fun (V392) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V391, V392)) end end, fun (V393) -> fun (V394) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V393, V394)) end end, fun (V395) -> fun (V396) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V395, V396)) end end, fun (V397) -> fun (V398) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V397, V398)) end end, fun (V399) -> fun (V400) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V399, V400)) end end, fun (V401) -> fun (V402) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V401, V402)) end end}))}}, fun (V403) -> ('dn--un--nsRefs_HasNamespaces_NamedCExp'(V403)) end, V338)) end(E32, E33, E34)); {'Idris.Core.CompileExpr.NmConCase', E35, E36, E37, E38} -> (fun (V404, V405, V406, V407) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V408) -> fun (V409) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V408, V409)) end end, fun (V410) -> fun (V411) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V410, V411)) end end}, fun (V412) -> fun (V413) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V412, V413)) end end, fun (V414) -> fun (V415) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V414, V415)) end end, fun (V416) -> fun (V417) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V416, V417)) end end, fun (V418) -> fun (V419) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V418, V419)) end end, fun (V420) -> fun (V421) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V420, V421)) end end, fun (V422) -> fun (V423) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V422, V423)) end end, fun (V424) -> fun (V425) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V424, V425)) end end}, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V426) -> fun (V427) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V426, V427)) end end, fun (V428) -> fun (V429) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V428, V429)) end end}, fun (V430) -> fun (V431) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V430, V431)) end end, fun (V432) -> fun (V433) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V432, V433)) end end, fun (V434) -> fun (V435) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V434, V435)) end end, fun (V436) -> fun (V437) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V436, V437)) end end, fun (V438) -> fun (V439) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V438, V439)) end end, fun (V440) -> fun (V441) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V440, V441)) end end, fun (V442) -> fun (V443) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V442, V443)) end end}, ('dn--un--nsRefs_HasNamespaces_NamedCExp'(V405)), ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V444) -> fun (V445) -> fun (V446) -> fun (V447) -> fun (V448) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V446, V447, V448)) end end end end end, fun (V449) -> fun (V450) -> fun (V451) -> fun (V452) -> fun (V453) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V451, V452, V453)) end end end end end, fun (V454) -> fun (V455) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V455)) end end, fun (V456) -> fun (V457) -> fun (V458) -> fun (V459) -> fun (V460) -> fun (V461) -> fun (V462) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V459, V460, V461, V462)) end end end end end end end, fun (V463) -> fun (V464) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V464)) end end, fun (V465) -> fun (V466) -> fun (V467) -> fun (V468) -> fun (V469) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V467, V468, V469)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V470) -> fun (V471) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V472) -> fun (V473) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V472, V473)) end end, fun (V474) -> fun (V475) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V474, V475)) end end}, fun (V476) -> fun (V477) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V476, V477)) end end, fun (V478) -> fun (V479) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V478, V479)) end end, fun (V480) -> fun (V481) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V480, V481)) end end, fun (V482) -> fun (V483) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V482, V483)) end end, fun (V484) -> fun (V485) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V484, V485)) end end, fun (V486) -> fun (V487) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V486, V487)) end end, fun (V488) -> fun (V489) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V488, V489)) end end}, V470, V471)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V490) -> fun (V491) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V490, V491)) end end, fun (V492) -> fun (V493) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V492, V493)) end end}, fun (V494) -> fun (V495) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V494, V495)) end end, fun (V496) -> fun (V497) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V496, V497)) end end, fun (V498) -> fun (V499) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V498, V499)) end end, fun (V500) -> fun (V501) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V500, V501)) end end, fun (V502) -> fun (V503) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V502, V503)) end end, fun (V504) -> fun (V505) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V504, V505)) end end, fun (V506) -> fun (V507) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V506, V507)) end end}))}}, fun (V508) -> ('dn--un--nsRefs_HasNamespaces_NamedConAlt'(V508)) end, V406)))), ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V509) -> fun (V510) -> fun (V511) -> fun (V512) -> fun (V513) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_Maybe'(V511, V512, V513)) end end end end end, fun (V514) -> fun (V515) -> fun (V516) -> fun (V517) -> fun (V518) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_Maybe'(V516, V517, V518)) end end end end end, fun (V519) -> fun (V520) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_Maybe'(V520)) end end, fun (V521) -> fun (V522) -> fun (V523) -> fun (V524) -> fun (V525) -> fun (V526) -> fun (V527) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_Maybe'(V524, V525, V526, V527)) end end end end end end end, fun (V528) -> fun (V529) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_Maybe'(V529)) end end, fun (V530) -> fun (V531) -> fun (V532) -> fun (V533) -> fun (V534) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_Maybe'(V532, V533, V534)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V535) -> fun (V536) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V537) -> fun (V538) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V537, V538)) end end, fun (V539) -> fun (V540) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V539, V540)) end end}, fun (V541) -> fun (V542) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V541, V542)) end end, fun (V543) -> fun (V544) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V543, V544)) end end, fun (V545) -> fun (V546) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V545, V546)) end end, fun (V547) -> fun (V548) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V547, V548)) end end, fun (V549) -> fun (V550) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V549, V550)) end end, fun (V551) -> fun (V552) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V551, V552)) end end, fun (V553) -> fun (V554) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V553, V554)) end end}, V535, V536)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V555) -> fun (V556) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V555, V556)) end end, fun (V557) -> fun (V558) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V557, V558)) end end}, fun (V559) -> fun (V560) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V559, V560)) end end, fun (V561) -> fun (V562) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V561, V562)) end end, fun (V563) -> fun (V564) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V563, V564)) end end, fun (V565) -> fun (V566) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V565, V566)) end end, fun (V567) -> fun (V568) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V567, V568)) end end, fun (V569) -> fun (V570) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V569, V570)) end end, fun (V571) -> fun (V572) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V571, V572)) end end}))}}, fun (V573) -> ('dn--un--nsRefs_HasNamespaces_NamedCExp'(V573)) end, V407)))) end(E35, E36, E37, E38)); {'Idris.Core.CompileExpr.NmConstCase', E39, E40, E41, E42} -> (fun (V574, V575, V576, V577) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V578) -> fun (V579) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V578, V579)) end end, fun (V580) -> fun (V581) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V580, V581)) end end}, fun (V582) -> fun (V583) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V582, V583)) end end, fun (V584) -> fun (V585) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V584, V585)) end end, fun (V586) -> fun (V587) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V586, V587)) end end, fun (V588) -> fun (V589) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V588, V589)) end end, fun (V590) -> fun (V591) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V590, V591)) end end, fun (V592) -> fun (V593) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V592, V593)) end end, fun (V594) -> fun (V595) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V594, V595)) end end}, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V596) -> fun (V597) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V596, V597)) end end, fun (V598) -> fun (V599) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V598, V599)) end end}, fun (V600) -> fun (V601) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V600, V601)) end end, fun (V602) -> fun (V603) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V602, V603)) end end, fun (V604) -> fun (V605) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V604, V605)) end end, fun (V606) -> fun (V607) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V606, V607)) end end, fun (V608) -> fun (V609) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V608, V609)) end end, fun (V610) -> fun (V611) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V610, V611)) end end, fun (V612) -> fun (V613) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V612, V613)) end end}, ('dn--un--nsRefs_HasNamespaces_NamedCExp'(V575)), ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V614) -> fun (V615) -> fun (V616) -> fun (V617) -> fun (V618) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V616, V617, V618)) end end end end end, fun (V619) -> fun (V620) -> fun (V621) -> fun (V622) -> fun (V623) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V621, V622, V623)) end end end end end, fun (V624) -> fun (V625) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V625)) end end, fun (V626) -> fun (V627) -> fun (V628) -> fun (V629) -> fun (V630) -> fun (V631) -> fun (V632) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V629, V630, V631, V632)) end end end end end end end, fun (V633) -> fun (V634) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V634)) end end, fun (V635) -> fun (V636) -> fun (V637) -> fun (V638) -> fun (V639) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V637, V638, V639)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V640) -> fun (V641) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V642) -> fun (V643) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V642, V643)) end end, fun (V644) -> fun (V645) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V644, V645)) end end}, fun (V646) -> fun (V647) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V646, V647)) end end, fun (V648) -> fun (V649) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V648, V649)) end end, fun (V650) -> fun (V651) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V650, V651)) end end, fun (V652) -> fun (V653) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V652, V653)) end end, fun (V654) -> fun (V655) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V654, V655)) end end, fun (V656) -> fun (V657) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V656, V657)) end end, fun (V658) -> fun (V659) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V658, V659)) end end}, V640, V641)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V660) -> fun (V661) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V660, V661)) end end, fun (V662) -> fun (V663) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V662, V663)) end end}, fun (V664) -> fun (V665) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V664, V665)) end end, fun (V666) -> fun (V667) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V666, V667)) end end, fun (V668) -> fun (V669) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V668, V669)) end end, fun (V670) -> fun (V671) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V670, V671)) end end, fun (V672) -> fun (V673) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V672, V673)) end end, fun (V674) -> fun (V675) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V674, V675)) end end, fun (V676) -> fun (V677) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V676, V677)) end end}))}}, fun (V678) -> ('dn--un--nsRefs_HasNamespaces_NamedConstAlt'(V678)) end, V576)))), ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V679) -> fun (V680) -> fun (V681) -> fun (V682) -> fun (V683) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_Maybe'(V681, V682, V683)) end end end end end, fun (V684) -> fun (V685) -> fun (V686) -> fun (V687) -> fun (V688) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_Maybe'(V686, V687, V688)) end end end end end, fun (V689) -> fun (V690) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_Maybe'(V690)) end end, fun (V691) -> fun (V692) -> fun (V693) -> fun (V694) -> fun (V695) -> fun (V696) -> fun (V697) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_Maybe'(V694, V695, V696, V697)) end end end end end end end, fun (V698) -> fun (V699) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_Maybe'(V699)) end end, fun (V700) -> fun (V701) -> fun (V702) -> fun (V703) -> fun (V704) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_Maybe'(V702, V703, V704)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V705) -> fun (V706) -> ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--<+>_Semigroup_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V707) -> fun (V708) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V707, V708)) end end, fun (V709) -> fun (V710) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V709, V710)) end end}, fun (V711) -> fun (V712) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V711, V712)) end end, fun (V713) -> fun (V714) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V713, V714)) end end, fun (V715) -> fun (V716) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V715, V716)) end end, fun (V717) -> fun (V718) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V717, V718)) end end, fun (V719) -> fun (V720) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V719, V720)) end end, fun (V721) -> fun (V722) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V721, V722)) end end, fun (V723) -> fun (V724) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V723, V724)) end end}, V705, V706)) end end, ('Idris.Idris2.Libraries.Data.SortedSet':'dn--un--neutral_Monoid_(SortedSet $k)'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V725) -> fun (V726) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V725, V726)) end end, fun (V727) -> fun (V728) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V727, V728)) end end}, fun (V729) -> fun (V730) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V729, V730)) end end, fun (V731) -> fun (V732) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V731, V732)) end end, fun (V733) -> fun (V734) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V733, V734)) end end, fun (V735) -> fun (V736) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V735, V736)) end end, fun (V737) -> fun (V738) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V737, V738)) end end, fun (V739) -> fun (V740) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V739, V740)) end end, fun (V741) -> fun (V742) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V741, V742)) end end}))}}, fun (V743) -> ('dn--un--nsRefs_HasNamespaces_NamedCExp'(V743)) end, V577)))) end(E39, E40, E41, E42)); {'Idris.Core.CompileExpr.NmCrash', E43, E44} -> (fun (V744, V745) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V746) -> fun (V747) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V746, V747)) end end, fun (V748) -> fun (V749) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V748, V749)) end end}, fun (V750) -> fun (V751) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V750, V751)) end end, fun (V752) -> fun (V753) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V752, V753)) end end, fun (V754) -> fun (V755) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V754, V755)) end end, fun (V756) -> fun (V757) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V756, V757)) end end, fun (V758) -> fun (V759) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V758, V759)) end end, fun (V760) -> fun (V761) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V760, V761)) end end, fun (V762) -> fun (V763) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V762, V763)) end end})) end(E43, E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--nsRefs_HasNamespaces_(|((Builtin.Pair FC) $a),((Builtin.MkPair FC) $a)|)'(V0, V1) -> case V1 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V2, V3) -> (V0(V3)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--min_Ord_CompilationUnitId'(V0, V1) -> case ('dn--un--<_Ord_CompilationUnitId'(V0, V1)) of 1 -> V0; 0 -> V1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--max_Ord_CompilationUnitId'(V0, V1) -> case ('dn--un-->_Ord_CompilationUnitId'(V0, V1)) of 1 -> V0; 0 -> V1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--hash_Hashable_CompilationUnitId'(V0) -> ('dn--un--hashWithSalt_Hashable_CompilationUnitId'(5381, V0)).
'dn--un--hash_Hashable_(|((Builtin.Pair FC) $def),((Builtin.MkPair FC) $def)|)'(V0, V1) -> ('dn--un--hashWithSalt_Hashable_(|((Builtin.Pair FC) $def),((Builtin.MkPair FC) $def)|)'(V0, 5381, V1)).
'dn--un--hash_Hashable_(CompilationUnit $def)'(V0, V1) -> ('dn--un--hashWithSalt_Hashable_(CompilationUnit $def)'(V0, 5381, V1)).
'dn--un--hashWithSalt_Hashable_CompilationUnitId'(V0, V1) -> ('Idris.Idris2.Core.Hash':'dn--un--hashWithSalt_Hashable_Int'(V0, V1)).
'dn--un--hashWithSalt_Hashable_(|((Builtin.Pair FC) $def),((Builtin.MkPair FC) $def)|)'(V0, V1, V2) -> case V2 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V3, V4) -> case V0 of {'Idris.Core.Hash.dn--un--__mkHashable', E2, E3} -> (fun (V5, V6) -> ((V6(V1))(V4)) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--hashWithSalt_Hashable_(CompilationUnit $def)'(V0, V1, V2) -> ('Idris.Idris2.Core.Hash':'dn--un--hashWithSalt_Hashable_(List $a)'({'Idris.Core.Hash.dn--un--__mkHashable', fun (V3) -> ('Idris.Idris2.Core.Hash':'dn--un--hash_Hashable_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Core.Hash.dn--un--__mkHashable', fun (V4) -> ('Idris.Idris2.Core.Hash':'dn--un--hash_Hashable_Name'(V4)) end, fun (V5) -> fun (V6) -> ('Idris.Idris2.Core.Hash':'dn--un--hashWithSalt_Hashable_Name'(V5, V6)) end end}, V0, V3)) end, fun (V7) -> fun (V8) -> ('Idris.Idris2.Core.Hash':'dn--un--hashWithSalt_Hashable_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Core.Hash.dn--un--__mkHashable', fun (V9) -> ('Idris.Idris2.Core.Hash':'dn--un--hash_Hashable_Name'(V9)) end, fun (V10) -> fun (V11) -> ('Idris.Idris2.Core.Hash':'dn--un--hashWithSalt_Hashable_Name'(V10, V11)) end end}, V0, V7, V8)) end end}, ('Idris.Idris2.Core.Hash':'dn--un--hashWithSalt_Hashable_(List $a)'({'Idris.Core.Hash.dn--un--__mkHashable', fun (V12) -> ('dn--un--hash_Hashable_CompilationUnitId'(V12)) end, fun (V13) -> fun (V14) -> ('dn--un--hashWithSalt_Hashable_CompilationUnitId'(V13, V14)) end end}, V1, ('Idris.Idris2.Libraries.Data.SortedSet':'un--toList'(case V2 of {'Idris.Compiler.Separate.MkCompilationUnit', E0, E1, E2, E3} -> (fun (V15, V16, V17, V18) -> V17 end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))), case V2 of {'Idris.Compiler.Separate.MkCompilationUnit', E4, E5, E6, E7} -> (fun (V19, V20, V21, V22) -> V22 end(E4, E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)).
'dn--un--compare_Ord_CompilationUnitId'(V0, V1) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--compare_Ord_Int'(V0, V1)).
'dn--un--__Impl_Ord_CompilationUnitId'() -> {'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V0) -> fun (V1) -> ('dn--un--==_Eq_CompilationUnitId'(V0, V1)) end end, fun (V2) -> fun (V3) -> ('dn--un--/=_Eq_CompilationUnitId'(V2, V3)) end end}, fun (V4) -> fun (V5) -> ('dn--un--compare_Ord_CompilationUnitId'(V4, V5)) end end, fun (V6) -> fun (V7) -> ('dn--un--<_Ord_CompilationUnitId'(V6, V7)) end end, fun (V8) -> fun (V9) -> ('dn--un-->_Ord_CompilationUnitId'(V8, V9)) end end, fun (V10) -> fun (V11) -> ('dn--un--<=_Ord_CompilationUnitId'(V10, V11)) end end, fun (V12) -> fun (V13) -> ('dn--un-->=_Ord_CompilationUnitId'(V12, V13)) end end, fun (V14) -> fun (V15) -> ('dn--un--max_Ord_CompilationUnitId'(V14, V15)) end end, fun (V16) -> fun (V17) -> ('dn--un--min_Ord_CompilationUnitId'(V16, V17)) end end}.
'dn--un--__Impl_Hashable_CompilationUnitId'() -> {'Idris.Core.Hash.dn--un--__mkHashable', fun (V0) -> ('dn--un--hash_Hashable_CompilationUnitId'(V0)) end, fun (V1) -> fun (V2) -> ('dn--un--hashWithSalt_Hashable_CompilationUnitId'(V1, V2)) end end}.
'dn--un--__Impl_Hashable_(|((Builtin.Pair FC) $def),((Builtin.MkPair FC) $def)|)'(V0) -> {'Idris.Core.Hash.dn--un--__mkHashable', fun (V1) -> ('dn--un--hash_Hashable_(|((Builtin.Pair FC) $def),((Builtin.MkPair FC) $def)|)'(V0, V1)) end, fun (V2) -> fun (V3) -> ('dn--un--hashWithSalt_Hashable_(|((Builtin.Pair FC) $def),((Builtin.MkPair FC) $def)|)'(V0, V2, V3)) end end}.
'dn--un--__Impl_Hashable_(CompilationUnit $def)'(V0) -> {'Idris.Core.Hash.dn--un--__mkHashable', fun (V1) -> ('dn--un--hash_Hashable_(CompilationUnit $def)'(V0, V1)) end, fun (V2) -> fun (V3) -> ('dn--un--hashWithSalt_Hashable_(CompilationUnit $def)'(V0, V2, V3)) end end}.
'dn--un--__Impl_HasNamespaces_VMInst'(V0) -> ('dn--un--nsRefs_HasNamespaces_VMInst'(V0)).
'dn--un--__Impl_HasNamespaces_VMDef'(V0) -> ('dn--un--nsRefs_HasNamespaces_VMDef'(V0)).
'dn--un--__Impl_HasNamespaces_NamedDef'(V0) -> ('dn--un--nsRefs_HasNamespaces_NamedDef'(V0)).
'dn--un--__Impl_HasNamespaces_NamedConstAlt'(V0) -> ('dn--un--nsRefs_HasNamespaces_NamedConstAlt'(V0)).
'dn--un--__Impl_HasNamespaces_NamedConAlt'(V0) -> ('dn--un--nsRefs_HasNamespaces_NamedConAlt'(V0)).
'dn--un--__Impl_HasNamespaces_NamedCExp'(V0) -> ('dn--un--nsRefs_HasNamespaces_NamedCExp'(V0)).
'dn--un--__Impl_HasNamespaces_(|((Builtin.Pair FC) $a),((Builtin.MkPair FC) $a)|)'(V0, V1) -> ('dn--un--nsRefs_HasNamespaces_(|((Builtin.Pair FC) $a),((Builtin.MkPair FC) $a)|)'(V0, V1)).
'dn--un--__Impl_Eq_CompilationUnitId'() -> {'Idris.Prelude.EqOrd.MkEq', fun (V0) -> fun (V1) -> ('dn--un--==_Eq_CompilationUnitId'(V0, V1)) end end, fun (V2) -> fun (V3) -> ('dn--un--/=_Eq_CompilationUnitId'(V2, V3)) end end}.
'dn--un-->_Ord_CompilationUnitId'(V0, V1) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Ordering'(('dn--un--compare_Ord_CompilationUnitId'(V0, V1)), 2)).
'dn--un-->=_Ord_CompilationUnitId'(V0, V1) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Ordering'(('dn--un--compare_Ord_CompilationUnitId'(V0, V1)), 0)).
'dn--un--==_Eq_CompilationUnitId'(V0, V1) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V0, V1)).
'dn--un--<_Ord_CompilationUnitId'(V0, V1) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Ordering'(('dn--un--compare_Ord_CompilationUnitId'(V0, V1)), 0)).
'dn--un--<=_Ord_CompilationUnitId'(V0, V1) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Ordering'(('dn--un--compare_Ord_CompilationUnitId'(V0, V1)), 2)).
'dn--un--/=_Eq_CompilationUnitId'(V0, V1) -> case ('dn--un--==_Eq_CompilationUnitId'(V0, V1)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--splitByNS'(V0) -> ('Idris.Idris2.Libraries.Data.SortedMap':'un--toList'(('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(fun (V1) -> fun (V2) -> ('nested--5848-849--in--un--addOne'(V1, V2)) end end, ('Idris.Idris2.Libraries.Data.SortedMap':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V3) -> fun (V4) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V3, V4)) end end, fun (V5) -> fun (V6) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V5, V6)) end end}, fun (V7) -> fun (V8) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V7, V8)) end end, fun (V9) -> fun (V10) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V9, V10)) end end, fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V11, V12)) end end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V13, V14)) end end, fun (V15) -> fun (V16) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V15, V16)) end end, fun (V17) -> fun (V18) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V17, V18)) end end, fun (V19) -> fun (V20) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V19, V20)) end end})), V0)))).
'un--nsRefs'(V0, V1) -> (V0(V1)).
'un--getNS'(V0) -> case V0 of {'Idris.Core.Name.NS', E0, E1} -> (fun (V1, V2) -> V1 end(E0, E1)); _ -> ('Idris.Idris2.Core.Name.Namespace':'un--emptyNS'()) end.
'un--getCompilationUnits'(V0, V1) -> begin (V20 = ('Idris.Idris2.Libraries.Data.SortedMap':'un--fromList'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V2) -> fun (V3) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V2, V3)) end end, fun (V4) -> fun (V5) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V4, V5)) end end}, fun (V6) -> fun (V7) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V6, V7)) end end, fun (V8) -> fun (V9) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V8, V9)) end end, fun (V10) -> fun (V11) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V10, V11)) end end, fun (V12) -> fun (V13) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V12, V13)) end end, fun (V14) -> fun (V15) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V14, V15)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V16, V17)) end end, fun (V18) -> fun (V19) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V18, V19)) end end}, ('un--splitByNS'(V1))))), begin (V64 = ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(fun (V21) -> fun (V22) -> ('Idris.Idris2.Libraries.Data.SortedMap':'un--mergeWith'(fun (V23) -> fun (V24) -> ('Idris.Idris2.Libraries.Data.SortedSet':'un--union'(V23, V24)) end end, V21, V22)) end end, ('Idris.Idris2.Libraries.Data.SortedMap':'un--empty'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V25) -> fun (V26) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V25, V26)) end end, fun (V27) -> fun (V28) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V27, V28)) end end}, fun (V29) -> fun (V30) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V29, V30)) end end, fun (V31) -> fun (V32) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V31, V32)) end end, fun (V33) -> fun (V34) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V33, V34)) end end, fun (V35) -> fun (V36) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V35, V36)) end end, fun (V37) -> fun (V38) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V37, V38)) end end, fun (V39) -> fun (V40) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V39, V40)) end end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V41, V42)) end end})), ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_List'(V1, fun (V43) -> case V43 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V44, V45) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_List'(('Idris.Idris2.Libraries.Data.SortedMap':'un--singleton'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V46) -> fun (V47) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V46, V47)) end end, fun (V48) -> fun (V49) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V48, V49)) end end}, fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V50, V51)) end end, fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V52, V53)) end end, fun (V54) -> fun (V55) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V54, V55)) end end, fun (V56) -> fun (V57) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V56, V57)) end end, fun (V58) -> fun (V59) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V58, V59)) end end, fun (V60) -> fun (V61) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V60, V61)) end end, fun (V62) -> fun (V63) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V62, V63)) end end}, ('un--getNS'(V44)), ('Idris.Idris2.Libraries.Data.SortedSet':'un--delete'(('un--getNS'(V44)), (V0(V45)))))))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end))))), begin (V83 = ('Idris.Idris2.Prelude.Types.List':'un--reverse'(('Idris.Idris2.Libraries.Data.Graph':'un--tarjan'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V65) -> fun (V66) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V65, V66)) end end, fun (V67) -> fun (V68) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V67, V68)) end end}, fun (V69) -> fun (V70) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V69, V70)) end end, fun (V71) -> fun (V72) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V71, V72)) end end, fun (V73) -> fun (V74) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V73, V74)) end end, fun (V75) -> fun (V76) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V75, V76)) end end, fun (V77) -> fun (V78) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V77, V78)) end end, fun (V79) -> fun (V80) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V79, V80)) end end, fun (V81) -> fun (V82) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V81, V82)) end end}, V64))))), begin (V106 = ('Idris.Idris2.Libraries.Data.SortedMap':'un--fromList'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V84) -> fun (V85) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--==_Eq_Namespace'(V84, V85)) end end, fun (V86) -> fun (V87) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--/=_Eq_Namespace'(V86, V87)) end end}, fun (V88) -> fun (V89) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--compare_Ord_Namespace'(V88, V89)) end end, fun (V90) -> fun (V91) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<_Ord_Namespace'(V90, V91)) end end, fun (V92) -> fun (V93) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->_Ord_Namespace'(V92, V93)) end end, fun (V94) -> fun (V95) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--<=_Ord_Namespace'(V94, V95)) end end, fun (V96) -> fun (V97) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un-->=_Ord_Namespace'(V96, V97)) end end, fun (V98) -> fun (V99) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--max_Ord_Namespace'(V98, V99)) end end, fun (V100) -> fun (V101) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--min_Ord_Namespace'(V100, V101)) end end}, ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_List'(('nested--6559-1523--in--un--withCUID'(V0, V1, V83)), fun (V102) -> case V102 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V103, V104) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_List'(('Idris.Idris2.Data.List1':'un--forget'(V104)), fun (V105) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_List'({'Idris.Builtin.MkPair', V105, V103})) end)) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end))))), begin (V110 = ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_List'(('nested--6559-1523--in--un--withCUID'(V0, V1, V83)), fun (V107) -> case V107 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V108, V109) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_List'(('nested--6559-1524--in--un--mkUnit'(V0, V1, V64, V106, V20, V108, V109)))) end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end))), {'Idris.Compiler.Separate.MkCompilationUnitInfo', V110, ('Idris.Idris2.Libraries.Data.SortedMap':'un--fromList'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V111) -> fun (V112) -> ('dn--un--==_Eq_CompilationUnitId'(V111, V112)) end end, fun (V113) -> fun (V114) -> ('dn--un--/=_Eq_CompilationUnitId'(V113, V114)) end end}, fun (V115) -> fun (V116) -> ('dn--un--compare_Ord_CompilationUnitId'(V115, V116)) end end, fun (V117) -> fun (V118) -> ('dn--un--<_Ord_CompilationUnitId'(V117, V118)) end end, fun (V119) -> fun (V120) -> ('dn--un-->_Ord_CompilationUnitId'(V119, V120)) end end, fun (V121) -> fun (V122) -> ('dn--un--<=_Ord_CompilationUnitId'(V121, V122)) end end, fun (V123) -> fun (V124) -> ('dn--un-->=_Ord_CompilationUnitId'(V123, V124)) end end, fun (V125) -> fun (V126) -> ('dn--un--max_Ord_CompilationUnitId'(V125, V126)) end end, fun (V127) -> fun (V128) -> ('dn--un--min_Ord_CompilationUnitId'(V127, V128)) end end}, ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_List'(V110, fun (V129) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_List'({'Idris.Builtin.MkPair', case V129 of {'Idris.Compiler.Separate.MkCompilationUnit', E6, E7, E8, E9} -> (fun (V130, V131, V132, V133) -> V130 end(E6, E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V129})) end)))), V106} end end end end end.
