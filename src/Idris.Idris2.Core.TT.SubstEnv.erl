-module('Idris.Idris2.Core.TT.SubstEnv').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--find-9977'/6,
  'un--substs'/2,
  'un--substEnv'/3,
  'un--subst'/2,
  'un--findDrop'/4,
  'un--find'/5
]).
'case--find-9977'(V0, V1, V2, V3, V4, V5) -> case V2 of 0 -> case V5 of {'Idris.Core.TT.SizedView.Z'} -> (fun () -> ('un--findDrop'(V4, V3, V1, V0)) end()); _ -> case V5 of {'Idris.Core.TT.SizedView.S', E1} -> (fun (V6) -> case V1 of 0 -> {'Idris.Core.TT.Local', V4, V3, 0}; _ -> begin (V7 = (V1 - 1)), ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Term'(('un--find'(V4, V3, V6, V7, V0)))) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> case V5 of {'Idris.Core.TT.SizedView.S', E0} -> (fun (V8) -> case V1 of 0 -> {'Idris.Core.TT.Local', V4, V3, 0}; _ -> begin (V9 = (V1 - 1)), ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Term'(('un--find'(V4, V3, V8, V9, V0)))) end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--substs'(V0, V1) -> ('un--substEnv'(('Idris.Idris2.Core.TT.SizeOf':'un--zero'()), V0, V1)).
'un--substEnv'(V0, V1, V2) -> case V2 of {'Idris.Core.TT.Local', E0, E1, E2} -> (fun (V3, V4, V5) -> ('un--find'(V3, V4, V0, V5, V1)) end(E0, E1, E2)); {'Idris.Core.TT.Ref', E3, E4, E5} -> (fun (V6, V7, V8) -> {'Idris.Core.TT.Ref', V6, V7, V8} end(E3, E4, E5)); {'Idris.Core.TT.Meta', E6, E7, E8, E9} -> (fun (V9, V10, V11, V12) -> {'Idris.Core.TT.Meta', V9, V10, V11, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V13) -> ('un--substEnv'(V0, V1, V13)) end, V12))} end(E6, E7, E8, E9)); {'Idris.Core.TT.Bind', E10, E11, E12, E13} -> (fun (V14, V15, V16, V17) -> {'Idris.Core.TT.Bind', V14, V15, ('Idris.Idris2.Core.TT':'dn--un--map_Functor_Binder'(fun (V18) -> ('un--substEnv'(V0, V1, V18)) end, V16)), ('un--substEnv'(('Idris.Idris2.Core.TT.SizeOf':'un--suc'(V0)), V1, V17))} end(E10, E11, E12, E13)); {'Idris.Core.TT.App', E14, E15, E16} -> (fun (V19, V20, V21) -> {'Idris.Core.TT.App', V19, ('un--substEnv'(V0, V1, V20)), ('un--substEnv'(V0, V1, V21))} end(E14, E15, E16)); {'Idris.Core.TT.As', E17, E18, E19, E20} -> (fun (V22, V23, V24, V25) -> {'Idris.Core.TT.As', V22, V23, ('un--substEnv'(V0, V1, V24)), ('un--substEnv'(V0, V1, V25))} end(E17, E18, E19, E20)); {'Idris.Core.TT.TDelayed', E21, E22, E23} -> (fun (V26, V27, V28) -> {'Idris.Core.TT.TDelayed', V26, V27, ('un--substEnv'(V0, V1, V28))} end(E21, E22, E23)); {'Idris.Core.TT.TDelay', E24, E25, E26, E27} -> (fun (V29, V30, V31, V32) -> {'Idris.Core.TT.TDelay', V29, V30, ('un--substEnv'(V0, V1, V31)), ('un--substEnv'(V0, V1, V32))} end(E24, E25, E26, E27)); {'Idris.Core.TT.TForce', E28, E29, E30} -> (fun (V33, V34, V35) -> {'Idris.Core.TT.TForce', V33, V34, ('un--substEnv'(V0, V1, V35))} end(E28, E29, E30)); {'Idris.Core.TT.PrimVal', E31, E32} -> (fun (V36, V37) -> {'Idris.Core.TT.PrimVal', V36, V37} end(E31, E32)); {'Idris.Core.TT.Erased', E33, E34} -> (fun (V38, V39) -> {'Idris.Core.TT.Erased', V38, V39} end(E33, E34)); {'Idris.Core.TT.TType', E35} -> (fun (V40) -> {'Idris.Core.TT.TType', V40} end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--subst'(V0, V1) -> ('un--substs'({'Idris.Core.TT.SubstEnv.::', V0, {'Idris.Core.TT.SubstEnv.Nil'}}, V1)).
'un--findDrop'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.TT.SubstEnv.Nil'} -> (fun () -> {'Idris.Core.TT.Local', V0, V1, V2} end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.TT.SubstEnv.::', E2, E3} -> (fun (V4, V5) -> V4 end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> begin (V6 = (V2 - 1)), case V3 of {'Idris.Core.TT.SubstEnv.::', E0, E1} -> (fun (V7, V8) -> ('un--findDrop'(V0, V1, V6, V8)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--find'(V0, V1, V2, V3, V4) -> ('case--find-9977'(V4, V3, V2, V1, V0, ('Idris.Idris2.Core.TT':'un--sizedView'(V2)))).
