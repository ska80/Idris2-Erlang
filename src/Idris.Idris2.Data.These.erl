-module('Idris.Idris2.Data.These').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'dn--un--show_Show_((These $a) $b)'/2,
  'dn--un--showPrec_Show_((These $a) $b)'/3,
  'dn--un--map_Functor_(These $a)'/2,
  'dn--un--mapSnd_Bifunctor_These'/2,
  'dn--un--mapFst_Bifunctor_These'/2,
  'dn--un--bitraverse_Bitraversable_These'/4,
  'dn--un--binull_Bifoldable_These'/1,
  'dn--un--bimap_Bifunctor_These'/3,
  'dn--un--bifoldr_Bifoldable_These'/4,
  'dn--un--bifoldl_Bifoldable_These'/4,
  'dn--un--__Impl_Show_((These $a) $b)'/1,
  'dn--un--__Impl_Functor_(These $a)'/4,
  'dn--un--__Impl_Bitraversable_These'/0,
  'dn--un--__Impl_Bifunctor_These'/0,
  'dn--un--__Impl_Bifoldable_These'/0,
  'un--these'/4,
  'un--fromThis'/1,
  'un--fromThat'/1,
  'un--fromEither'/1,
  'un--bifold'/2
]).
'dn--un--show_Show_((These $a) $b)'(V0, V1) -> ('dn--un--showPrec_Show_((These $a) $b)'(V0, {'Idris.Prelude.Show.Open'}, V1)).
'dn--un--showPrec_Show_((These $a) $b)'(V0, V1, V2) -> case V2 of {'Idris.Data.These.This', E0} -> (fun (V3) -> ('Idris.Idris2.Prelude.Show':'un--showCon'(V1, <<"This"/utf8>>, ('Idris.Idris2.Prelude.Show':'un--showArg'(('Idris.Idris2.Builtin':'un--fst'(V0)), V3)))) end(E0)); {'Idris.Data.These.That', E1} -> (fun (V4) -> ('Idris.Idris2.Prelude.Show':'un--showCon'(V1, <<"That"/utf8>>, ('Idris.Idris2.Prelude.Show':'un--showArg'(('Idris.Idris2.Builtin':'un--snd'(V0)), V4)))) end(E1)); {'Idris.Data.These.Both', E2, E3} -> (fun (V5, V6) -> ('Idris.Idris2.Prelude.Show':'un--showCon'(V1, <<"Both"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'un--showArg'(('Idris.Idris2.Builtin':'un--fst'(V0)), V5)), ('Idris.Idris2.Prelude.Show':'un--showArg'(('Idris.Idris2.Builtin':'un--snd'(V0)), V6)))))) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--map_Functor_(These $a)'(V0, V1) -> case V1 of {'Idris.Data.These.This', E0} -> (fun (V2) -> {'Idris.Data.These.This', V2} end(E0)); {'Idris.Data.These.That', E1} -> (fun (V3) -> {'Idris.Data.These.That', (V0(V3))} end(E1)); {'Idris.Data.These.Both', E2, E3} -> (fun (V4, V5) -> {'Idris.Data.These.Both', V4, (V0(V5))} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--mapSnd_Bifunctor_These'(V0, V1) -> case V1 of {'Idris.Data.These.This', E0} -> (fun (V2) -> {'Idris.Data.These.This', V2} end(E0)); {'Idris.Data.These.That', E1} -> (fun (V3) -> {'Idris.Data.These.That', (V0(V3))} end(E1)); {'Idris.Data.These.Both', E2, E3} -> (fun (V4, V5) -> {'Idris.Data.These.Both', V4, (V0(V5))} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--mapFst_Bifunctor_These'(V0, V1) -> case V1 of {'Idris.Data.These.This', E0} -> (fun (V2) -> {'Idris.Data.These.This', (V0(V2))} end(E0)); {'Idris.Data.These.That', E1} -> (fun (V3) -> {'Idris.Data.These.That', V3} end(E1)); {'Idris.Data.These.Both', E2, E3} -> (fun (V4, V5) -> {'Idris.Data.These.Both', (V0(V4)), V5} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--bitraverse_Bitraversable_These'(V0, V1, V2, V3) -> case V3 of {'Idris.Data.These.This', E0} -> (fun (V4) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(case V0 of {'Idris.Prelude.Interfaces.MkApplicative', E1, E2, E3} -> (fun (V5, V6, V7) -> V5 end(E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, fun (V8) -> {'Idris.Data.These.This', V8} end, (V1(V4)))) end(E0)); {'Idris.Data.These.That', E4} -> (fun (V9) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(case V0 of {'Idris.Prelude.Interfaces.MkApplicative', E5, E6, E7} -> (fun (V10, V11, V12) -> V10 end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, fun (V13) -> {'Idris.Data.These.That', V13} end, (V2(V9)))) end(E4)); {'Idris.Data.These.Both', E8, E9} -> (fun (V14, V15) -> case V0 of {'Idris.Prelude.Interfaces.MkApplicative', E10, E11, E12} -> (fun (V16, V17, V18) -> ((((V18('erased'))('erased'))(case V0 of {'Idris.Prelude.Interfaces.MkApplicative', E13, E14, E15} -> (fun (V19, V20, V21) -> ((((V21('erased'))('erased'))(case V0 of {'Idris.Prelude.Interfaces.MkApplicative', E16, E17, E18} -> (fun (V22, V23, V24) -> ((V23('erased'))(fun (V25) -> fun (V26) -> {'Idris.Data.These.Both', V25, V26} end end)) end(E16, E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))((V1(V14)))) end(E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))((V2(V15)))) end(E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--binull_Bifoldable_These'(V0) -> fun () -> 0 end.
'dn--un--bimap_Bifunctor_These'(V0, V1, V2) -> case V2 of {'Idris.Data.These.This', E0} -> (fun (V3) -> {'Idris.Data.These.This', (V0(V3))} end(E0)); {'Idris.Data.These.That', E1} -> (fun (V4) -> {'Idris.Data.These.That', (V1(V4))} end(E1)); {'Idris.Data.These.Both', E2, E3} -> (fun (V5, V6) -> {'Idris.Data.These.Both', (V0(V5)), (V1(V6))} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--bifoldr_Bifoldable_These'(V0, V1, V2, V3) -> case V3 of {'Idris.Data.These.This', E0} -> (fun (V4) -> ((V0(V4))(V2)) end(E0)); {'Idris.Data.These.That', E1} -> (fun (V5) -> ((V1(V5))(V2)) end(E1)); {'Idris.Data.These.Both', E2, E3} -> (fun (V6, V7) -> ((V0(V6))(((V1(V7))(V2)))) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--bifoldl_Bifoldable_These'(V0, V1, V2, V3) -> case V3 of {'Idris.Data.These.This', E0} -> (fun (V4) -> ((V0(V2))(V4)) end(E0)); {'Idris.Data.These.That', E1} -> (fun (V5) -> ((V1(V2))(V5)) end(E1)); {'Idris.Data.These.Both', E2, E3} -> (fun (V6, V7) -> ((V1(((V0(V2))(V6))))(V7)) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--__Impl_Show_((These $a) $b)'(V0) -> {'Idris.Prelude.Show.MkShow', fun (V1) -> ('dn--un--show_Show_((These $a) $b)'(V0, V1)) end, fun (V2) -> fun (V3) -> ('dn--un--showPrec_Show_((These $a) $b)'(V0, V2, V3)) end end}.
'dn--un--__Impl_Functor_(These $a)'(V0, V1, V2, V3) -> case V3 of {'Idris.Data.These.This', E0} -> (fun (V4) -> {'Idris.Data.These.This', V4} end(E0)); {'Idris.Data.These.That', E1} -> (fun (V5) -> {'Idris.Data.These.That', (V2(V5))} end(E1)); {'Idris.Data.These.Both', E2, E3} -> (fun (V6, V7) -> {'Idris.Data.These.Both', V6, (V2(V7))} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--__Impl_Bitraversable_These'() -> {'Idris.Prelude.Interfaces.MkBitraversable', {'Idris.Prelude.Interfaces.MkBifunctor', fun (V0) -> fun (V1) -> fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> case V6 of {'Idris.Data.These.This', E0} -> (fun (V7) -> {'Idris.Data.These.This', (V4(V7))} end(E0)); {'Idris.Data.These.That', E1} -> (fun (V8) -> {'Idris.Data.These.That', (V5(V8))} end(E1)); {'Idris.Data.These.Both', E2, E3} -> (fun (V9, V10) -> {'Idris.Data.These.Both', (V4(V9)), (V5(V10))} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end, fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> case V15 of {'Idris.Data.These.This', E4} -> (fun (V16) -> {'Idris.Data.These.This', (V14(V16))} end(E4)); {'Idris.Data.These.That', E5} -> (fun (V17) -> {'Idris.Data.These.That', V17} end(E5)); {'Idris.Data.These.Both', E6, E7} -> (fun (V18, V19) -> {'Idris.Data.These.Both', (V14(V18)), V19} end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end, fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> case V24 of {'Idris.Data.These.This', E8} -> (fun (V25) -> {'Idris.Data.These.This', V25} end(E8)); {'Idris.Data.These.That', E9} -> (fun (V26) -> {'Idris.Data.These.That', (V23(V26))} end(E9)); {'Idris.Data.These.Both', E10, E11} -> (fun (V27, V28) -> {'Idris.Data.These.Both', V27, (V23(V28))} end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end}, {'Idris.Prelude.Interfaces.MkBifoldable', fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> case V35 of {'Idris.Data.These.This', E12} -> (fun (V36) -> ((V32(V36))(V34)) end(E12)); {'Idris.Data.These.That', E13} -> (fun (V37) -> ((V33(V37))(V34)) end(E13)); {'Idris.Data.These.Both', E14, E15} -> (fun (V38, V39) -> ((V32(V38))(((V33(V39))(V34)))) end(E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end, fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> case V46 of {'Idris.Data.These.This', E16} -> (fun (V47) -> ((V43(V45))(V47)) end(E16)); {'Idris.Data.These.That', E17} -> (fun (V48) -> ((V44(V45))(V48)) end(E17)); {'Idris.Data.These.Both', E18, E19} -> (fun (V49, V50) -> ((V44(((V43(V45))(V49))))(V50)) end(E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end, fun (V51) -> fun (V52) -> fun (V53) -> fun () -> 0 end end end end}, fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> case V62 of {'Idris.Data.These.This', E20} -> (fun (V63) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(case V59 of {'Idris.Prelude.Interfaces.MkApplicative', E21, E22, E23} -> (fun (V64, V65, V66) -> V64 end(E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, fun (V67) -> {'Idris.Data.These.This', V67} end, (V60(V63)))) end(E20)); {'Idris.Data.These.That', E24} -> (fun (V68) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(case V59 of {'Idris.Prelude.Interfaces.MkApplicative', E25, E26, E27} -> (fun (V69, V70, V71) -> V69 end(E25, E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, fun (V72) -> {'Idris.Data.These.That', V72} end, (V61(V68)))) end(E24)); {'Idris.Data.These.Both', E28, E29} -> (fun (V73, V74) -> case V59 of {'Idris.Prelude.Interfaces.MkApplicative', E30, E31, E32} -> (fun (V75, V76, V77) -> ((((V77('erased'))('erased'))(case V59 of {'Idris.Prelude.Interfaces.MkApplicative', E33, E34, E35} -> (fun (V78, V79, V80) -> ((((V80('erased'))('erased'))(case V59 of {'Idris.Prelude.Interfaces.MkApplicative', E36, E37, E38} -> (fun (V81, V82, V83) -> ((V82('erased'))(fun (V84) -> fun (V85) -> {'Idris.Data.These.Both', V84, V85} end end)) end(E36, E37, E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))((V60(V73)))) end(E33, E34, E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))((V61(V74)))) end(E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end end end}.
'dn--un--__Impl_Bifunctor_These'() -> {'Idris.Prelude.Interfaces.MkBifunctor', fun (V0) -> fun (V1) -> fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> case V6 of {'Idris.Data.These.This', E0} -> (fun (V7) -> {'Idris.Data.These.This', (V4(V7))} end(E0)); {'Idris.Data.These.That', E1} -> (fun (V8) -> {'Idris.Data.These.That', (V5(V8))} end(E1)); {'Idris.Data.These.Both', E2, E3} -> (fun (V9, V10) -> {'Idris.Data.These.Both', (V4(V9)), (V5(V10))} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end, fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> case V15 of {'Idris.Data.These.This', E4} -> (fun (V16) -> {'Idris.Data.These.This', (V14(V16))} end(E4)); {'Idris.Data.These.That', E5} -> (fun (V17) -> {'Idris.Data.These.That', V17} end(E5)); {'Idris.Data.These.Both', E6, E7} -> (fun (V18, V19) -> {'Idris.Data.These.Both', (V14(V18)), V19} end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end, fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> case V24 of {'Idris.Data.These.This', E8} -> (fun (V25) -> {'Idris.Data.These.This', V25} end(E8)); {'Idris.Data.These.That', E9} -> (fun (V26) -> {'Idris.Data.These.That', (V23(V26))} end(E9)); {'Idris.Data.These.Both', E10, E11} -> (fun (V27, V28) -> {'Idris.Data.These.Both', V27, (V23(V28))} end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end}.
'dn--un--__Impl_Bifoldable_These'() -> {'Idris.Prelude.Interfaces.MkBifoldable', fun (V0) -> fun (V1) -> fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> case V6 of {'Idris.Data.These.This', E0} -> (fun (V7) -> ((V3(V7))(V5)) end(E0)); {'Idris.Data.These.That', E1} -> (fun (V8) -> ((V4(V8))(V5)) end(E1)); {'Idris.Data.These.Both', E2, E3} -> (fun (V9, V10) -> ((V3(V9))(((V4(V10))(V5)))) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end, fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> case V17 of {'Idris.Data.These.This', E4} -> (fun (V18) -> ((V14(V16))(V18)) end(E4)); {'Idris.Data.These.That', E5} -> (fun (V19) -> ((V15(V16))(V19)) end(E5)); {'Idris.Data.These.Both', E6, E7} -> (fun (V20, V21) -> ((V15(((V14(V16))(V20))))(V21)) end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end, fun (V22) -> fun (V23) -> fun (V24) -> fun () -> 0 end end end end}.
'un--these'(V0, V1, V2, V3) -> case V3 of {'Idris.Data.These.This', E0} -> (fun (V4) -> (V0(V4)) end(E0)); {'Idris.Data.These.That', E1} -> (fun (V5) -> (V1(V5)) end(E1)); {'Idris.Data.These.Both', E2, E3} -> (fun (V6, V7) -> ((V2(V6))(V7)) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fromThis'(V0) -> case V0 of {'Idris.Data.These.This', E0} -> (fun (V1) -> {'Idris.Prelude.Types.Just', V1} end(E0)); {'Idris.Data.These.That', E1} -> (fun (V2) -> {'Idris.Prelude.Types.Nothing'} end(E1)); {'Idris.Data.These.Both', E2, E3} -> (fun (V3, V4) -> {'Idris.Prelude.Types.Just', V3} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fromThat'(V0) -> case V0 of {'Idris.Data.These.This', E0} -> (fun (V1) -> {'Idris.Prelude.Types.Nothing'} end(E0)); {'Idris.Data.These.That', E1} -> (fun (V2) -> {'Idris.Prelude.Types.Just', V2} end(E1)); {'Idris.Data.These.Both', E2, E3} -> (fun (V3, V4) -> {'Idris.Prelude.Types.Just', V4} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fromEither'(V0) -> ('Idris.Idris2.Prelude.Types':'un--either'(fun () -> fun (V1) -> {'Idris.Data.These.This', V1} end end, fun () -> fun (V2) -> {'Idris.Data.These.That', V2} end end, V0)).
'un--bifold'(V0, V1) -> case V1 of {'Idris.Data.These.This', E0} -> (fun (V2) -> V2 end(E0)); {'Idris.Data.These.That', E1} -> (fun (V3) -> V3 end(E1)); {'Idris.Data.These.Both', E2, E3} -> (fun (V4, V5) -> case V0 of {'Idris.Prelude.Interfaces.MkMonoid', E4, E5} -> (fun (V6, V7) -> ((V6(V4))(V5)) end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
