-module('Idris.Idris2.TTImp.Elab.Quote').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'nested--8476-18702--in--un--unqTuple'/7,
  'nested--8458-18557--in--un--unqPair'/9,
  'un--onLHS'/1,
  'un--getUnquoteUpdate'/5,
  'un--getUnquoteTy'/5,
  'un--getUnquoteRecord'/5,
  'un--getUnquoteField'/5,
  'un--getUnquoteDecl'/5,
  'un--getUnquoteData'/5,
  'un--getUnquoteClause'/5,
  'un--getUnquote'/5,
  'un--checkQuoteName'/13,
  'un--checkQuoteDecl'/13,
  'un--checkQuote'/13,
  'un--bindUnqs'/11
]).
'nested--8476-18702--in--un--unqTuple'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> fun (V9) -> case V8 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V10, V11) -> case V11 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V12, V13) -> begin (V14 = ('un--getUnquote'(V5, V4, V3, V13, V9))), case V14 of {'Idris.Prelude.Types.Left', E6} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V7, {'Idris.Builtin.MkPair', V10, {'Idris.Builtin.MkPair', V12, V16}}}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--8458-18557--in--un--unqPair'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> fun (V11) -> case V10 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V14, V15) -> begin (V16 = ('un--getUnquote'(V7, V6, V5, V15, V11))), case V16 of {'Idris.Prelude.Types.Left', E6} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V9, {'Idris.Builtin.MkPair', V12, {'Idris.Builtin.MkPair', V14, V18}}}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--onLHS'(V0) -> case V0 of {'Idris.TTImp.Elab.Check.InLHS', E0} -> (fun (V1) -> 1 end(E0)); _ -> 0 end.
'un--getUnquoteUpdate'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.TTImp.TTImp.ISetField', E0, E1} -> (fun (V5, V6) -> begin (V7 = ('un--getUnquote'(V0, V1, V2, V6, V4))), case V7 of {'Idris.Prelude.Types.Left', E2} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetField', V5, V9}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); {'Idris.TTImp.TTImp.ISetFieldApp', E4, E5} -> (fun (V10, V11) -> begin (V12 = ('un--getUnquote'(V0, V1, V2, V11, V4))), case V12 of {'Idris.Prelude.Types.Left', E6} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetFieldApp', V10, V14}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getUnquoteTy'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.TTImp.TTImp.MkImpTy', E0, E1, E2, E3} -> (fun (V5, V6, V7, V8) -> begin (V9 = ('un--getUnquote'(V0, V1, V2, V8, V4))), case V9 of {'Idris.Prelude.Types.Left', E4} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpTy', V5, V6, V7, V11}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getUnquoteRecord'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.TTImp.TTImp.MkImpRecord', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V11 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V10) -> ('nested--8458-18557--in--un--unqPair'(V9, V8, V7, V6, V5, V2, V1, V0, V10)) end, V7, [], V4))), case V11 of {'Idris.Prelude.Types.Left', E5} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V13) -> begin (V16 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V14) -> fun (V15) -> ('un--getUnquoteField'(V0, V1, V2, V14, V15)) end end, V9, [], V4))), case V16 of {'Idris.Prelude.Types.Left', E7} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpRecord', V5, V6, V13, V8, V18}} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getUnquoteField'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.TTImp.TTImp.MkIField', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V10 = ('un--getUnquote'(V0, V1, V2, V9, V4))), case V10 of {'Idris.Prelude.Types.Left', E5} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkIField', V5, V6, V7, V8, V12}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getUnquoteDecl'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.TTImp.TTImp.IClaim', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V10 = ('un--getUnquoteTy'(V0, V1, V2, V9, V4))), case V10 of {'Idris.Prelude.Types.Left', E5} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IClaim', V5, V6, V7, V8, V12}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); {'Idris.TTImp.TTImp.IData', E7, E8, E9} -> (fun (V13, V14, V15) -> begin (V16 = ('un--getUnquoteData'(V0, V1, V2, V15, V4))), case V16 of {'Idris.Prelude.Types.Left', E10} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IData', V13, V14, V18}} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7, E8, E9)); {'Idris.TTImp.TTImp.IDef', E12, E13, E14} -> (fun (V19, V20, V21) -> begin (V24 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V22) -> fun (V23) -> ('un--getUnquoteClause'(V0, V1, V2, V22, V23)) end end, V21, [], V4))), case V24 of {'Idris.Prelude.Types.Left', E15} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDef', V19, V20, V26}} end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12, E13, E14)); {'Idris.TTImp.TTImp.IParameters', E17, E18, E19} -> (fun (V27, V28, V29) -> begin (V31 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V30) -> ('nested--8476-18702--in--un--unqTuple'(V29, V28, V27, V2, V1, V0, V30)) end, V28, [], V4))), case V31 of {'Idris.Prelude.Types.Left', E20} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V33) -> begin (V36 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V34) -> fun (V35) -> ('un--getUnquoteDecl'(V0, V1, V2, V34, V35)) end end, V29, [], V4))), case V36 of {'Idris.Prelude.Types.Left', E22} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V38) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IParameters', V27, V33, V38}} end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17, E18, E19)); {'Idris.TTImp.TTImp.IRecord', E24, E25, E26, E27} -> (fun (V39, V40, V41, V42) -> begin (V43 = ('un--getUnquoteRecord'(V0, V1, V2, V42, V4))), case V43 of {'Idris.Prelude.Types.Left', E28} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V45) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRecord', V39, V40, V41, V45}} end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E24, E25, E26, E27)); {'Idris.TTImp.TTImp.INamespace', E30, E31, E32} -> (fun (V46, V47, V48) -> begin (V51 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V49) -> fun (V50) -> ('un--getUnquoteDecl'(V0, V1, V2, V49, V50)) end end, V48, [], V4))), case V51 of {'Idris.Prelude.Types.Left', E33} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V53) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamespace', V46, V47, V53}} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30, E31, E32)); {'Idris.TTImp.TTImp.ITransform', E35, E36, E37, E38} -> (fun (V54, V55, V56, V57) -> begin (V58 = ('un--getUnquote'(V0, V1, V2, V56, V4))), case V58 of {'Idris.Prelude.Types.Left', E39} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V60) -> begin (V61 = ('un--getUnquote'(V0, V1, V2, V57, V4))), case V61 of {'Idris.Prelude.Types.Left', E41} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V63) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ITransform', V54, V55, V60, V63}} end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35, E36, E37, E38)); _ -> {'Idris.Prelude.Types.Right', V3} end.
'un--getUnquoteData'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.TTImp.TTImp.MkImpData', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V10 = ('un--getUnquote'(V0, V1, V2, V7, V4))), case V10 of {'Idris.Prelude.Types.Left', E5} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V12) -> begin (V15 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V13) -> fun (V14) -> ('un--getUnquoteTy'(V0, V1, V2, V13, V14)) end end, V9, [], V4))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpData', V5, V6, V12, V8, V17}} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); {'Idris.TTImp.TTImp.MkImpLater', E9, E10, E11} -> (fun (V18, V19, V20) -> begin (V21 = ('un--getUnquote'(V0, V1, V2, V20, V4))), case V21 of {'Idris.Prelude.Types.Left', E12} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpLater', V18, V19, V23}} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getUnquoteClause'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V5, V6, V7) -> begin (V8 = ('un--getUnquote'(V0, V1, V2, V6, V4))), case V8 of {'Idris.Prelude.Types.Left', E3} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V10) -> begin (V11 = ('un--getUnquote'(V0, V1, V2, V7, V4))), case V11 of {'Idris.Prelude.Types.Left', E5} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PatClause', V5, V10, V13}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2)); {'Idris.TTImp.TTImp.WithClause', E7, E8, E9, E10, E11, E12} -> (fun (V14, V15, V16, V17, V18, V19) -> begin (V20 = ('un--getUnquote'(V0, V1, V2, V15, V4))), case V20 of {'Idris.Prelude.Types.Left', E13} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V22) -> begin (V23 = ('un--getUnquote'(V0, V1, V2, V16, V4))), case V23 of {'Idris.Prelude.Types.Left', E15} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V25) -> begin (V28 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V26) -> fun (V27) -> ('un--getUnquoteClause'(V0, V1, V2, V26, V27)) end end, V19, [], V4))), case V28 of {'Idris.Prelude.Types.Left', E17} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V30) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.WithClause', V14, V22, V25, V17, V18, V30}} end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7, E8, E9, E10, E11, E12)); {'Idris.TTImp.TTImp.ImpossibleClause', E19, E20} -> (fun (V31, V32) -> begin (V33 = ('un--getUnquote'(V0, V1, V2, V32, V4))), case V33 of {'Idris.Prelude.Types.Left', E21} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V35) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ImpossibleClause', V31, V35}} end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getUnquote'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.TTImp.TTImp.IPi', E0, E1, E2, E3, E4, E5} -> (fun (V5, V6, V7, V8, V9, V10) -> begin (V11 = ('un--getUnquote'(V0, V1, V2, V9, V4))), case V11 of {'Idris.Prelude.Types.Left', E6} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V13) -> begin (V14 = ('un--getUnquote'(V0, V1, V2, V10, V4))), case V14 of {'Idris.Prelude.Types.Left', E8} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPi', V5, V6, V7, V8, V13, V16}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4, E5)); {'Idris.TTImp.TTImp.ILam', E10, E11, E12, E13, E14, E15} -> (fun (V17, V18, V19, V20, V21, V22) -> begin (V23 = ('un--getUnquote'(V0, V1, V2, V21, V4))), case V23 of {'Idris.Prelude.Types.Left', E16} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V25) -> begin (V26 = ('un--getUnquote'(V0, V1, V2, V22, V4))), case V26 of {'Idris.Prelude.Types.Left', E18} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V28) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V17, V18, V19, V20, V25, V28}} end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10, E11, E12, E13, E14, E15)); {'Idris.TTImp.TTImp.ILet', E20, E21, E22, E23, E24, E25, E26} -> (fun (V29, V30, V31, V32, V33, V34, V35) -> begin (V36 = ('un--getUnquote'(V0, V1, V2, V33, V4))), case V36 of {'Idris.Prelude.Types.Left', E27} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V38) -> begin (V39 = ('un--getUnquote'(V0, V1, V2, V34, V4))), case V39 of {'Idris.Prelude.Types.Left', E29} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V41) -> begin (V42 = ('un--getUnquote'(V0, V1, V2, V35, V4))), case V42 of {'Idris.Prelude.Types.Left', E31} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V44) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILet', V29, V30, V31, V32, V38, V41, V44}} end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E20, E21, E22, E23, E24, E25, E26)); {'Idris.TTImp.TTImp.ICase', E33, E34, E35, E36} -> (fun (V45, V46, V47, V48) -> begin (V49 = ('un--getUnquote'(V0, V1, V2, V46, V4))), case V49 of {'Idris.Prelude.Types.Left', E37} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V51) -> begin (V52 = ('un--getUnquote'(V0, V1, V2, V47, V4))), case V52 of {'Idris.Prelude.Types.Left', E39} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V54) -> begin (V57 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V55) -> fun (V56) -> ('un--getUnquoteClause'(V0, V1, V2, V55, V56)) end end, V48, [], V4))), case V57 of {'Idris.Prelude.Types.Left', E41} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V59) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V45, V51, V54, V59}} end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E33, E34, E35, E36)); {'Idris.TTImp.TTImp.ILocal', E43, E44, E45} -> (fun (V60, V61, V62) -> begin (V65 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V63) -> fun (V64) -> ('un--getUnquoteDecl'(V0, V1, V2, V63, V64)) end end, V61, [], V4))), case V65 of {'Idris.Prelude.Types.Left', E46} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V67) -> begin (V68 = ('un--getUnquote'(V0, V1, V2, V62, V4))), case V68 of {'Idris.Prelude.Types.Left', E48} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V70) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V60, V67, V70}} end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E43, E44, E45)); {'Idris.TTImp.TTImp.IUpdate', E50, E51, E52} -> (fun (V71, V72, V73) -> begin (V76 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V74) -> fun (V75) -> ('un--getUnquoteUpdate'(V0, V1, V2, V74, V75)) end end, V72, [], V4))), case V76 of {'Idris.Prelude.Types.Left', E53} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V78) -> begin (V79 = ('un--getUnquote'(V0, V1, V2, V73, V4))), case V79 of {'Idris.Prelude.Types.Left', E55} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V81) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUpdate', V71, V78, V81}} end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E50, E51, E52)); {'Idris.TTImp.TTImp.IApp', E57, E58, E59} -> (fun (V82, V83, V84) -> begin (V85 = ('un--getUnquote'(V0, V1, V2, V83, V4))), case V85 of {'Idris.Prelude.Types.Left', E60} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V87) -> begin (V88 = ('un--getUnquote'(V0, V1, V2, V84, V4))), case V88 of {'Idris.Prelude.Types.Left', E62} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V90) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V82, V87, V90}} end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E57, E58, E59)); {'Idris.TTImp.TTImp.IAutoApp', E64, E65, E66} -> (fun (V91, V92, V93) -> begin (V94 = ('un--getUnquote'(V0, V1, V2, V92, V4))), case V94 of {'Idris.Prelude.Types.Left', E67} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V96) -> begin (V97 = ('un--getUnquote'(V0, V1, V2, V93, V4))), case V97 of {'Idris.Prelude.Types.Left', E69} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V99) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAutoApp', V91, V96, V99}} end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64, E65, E66)); {'Idris.TTImp.TTImp.INamedApp', E71, E72, E73, E74} -> (fun (V100, V101, V102, V103) -> begin (V104 = ('un--getUnquote'(V0, V1, V2, V101, V4))), case V104 of {'Idris.Prelude.Types.Left', E75} -> (fun (V105) -> {'Idris.Prelude.Types.Left', V105} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V106) -> begin (V107 = ('un--getUnquote'(V0, V1, V2, V103, V4))), case V107 of {'Idris.Prelude.Types.Left', E77} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V109) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamedApp', V100, V106, V102, V109}} end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E71, E72, E73, E74)); {'Idris.TTImp.TTImp.IWithApp', E79, E80, E81} -> (fun (V110, V111, V112) -> begin (V113 = ('un--getUnquote'(V0, V1, V2, V111, V4))), case V113 of {'Idris.Prelude.Types.Left', E82} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V115) -> begin (V116 = ('un--getUnquote'(V0, V1, V2, V112, V4))), case V116 of {'Idris.Prelude.Types.Left', E84} -> (fun (V117) -> {'Idris.Prelude.Types.Left', V117} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V118) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithApp', V110, V115, V118}} end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E79, E80, E81)); {'Idris.TTImp.TTImp.IAlternative', E86, E87, E88} -> (fun (V119, V120, V121) -> begin (V124 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V122) -> fun (V123) -> ('un--getUnquote'(V0, V1, V2, V122, V123)) end end, V121, [], V4))), case V124 of {'Idris.Prelude.Types.Left', E89} -> (fun (V125) -> {'Idris.Prelude.Types.Left', V125} end(E89)); {'Idris.Prelude.Types.Right', E90} -> (fun (V126) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V119, V120, V126}} end(E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E86, E87, E88)); {'Idris.TTImp.TTImp.IRewrite', E91, E92, E93} -> (fun (V127, V128, V129) -> begin (V130 = ('un--getUnquote'(V0, V1, V2, V128, V4))), case V130 of {'Idris.Prelude.Types.Left', E94} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V132) -> begin (V133 = ('un--getUnquote'(V0, V1, V2, V129, V4))), case V133 of {'Idris.Prelude.Types.Left', E96} -> (fun (V134) -> {'Idris.Prelude.Types.Left', V134} end(E96)); {'Idris.Prelude.Types.Right', E97} -> (fun (V135) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V127, V132, V135}} end(E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E91, E92, E93)); {'Idris.TTImp.TTImp.ICoerced', E98, E99} -> (fun (V136, V137) -> begin (V138 = ('un--getUnquote'(V0, V1, V2, V137, V4))), case V138 of {'Idris.Prelude.Types.Left', E100} -> (fun (V139) -> {'Idris.Prelude.Types.Left', V139} end(E100)); {'Idris.Prelude.Types.Right', E101} -> (fun (V140) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICoerced', V136, V140}} end(E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E98, E99)); {'Idris.TTImp.TTImp.IBindHere', E102, E103, E104} -> (fun (V141, V142, V143) -> begin (V144 = ('un--getUnquote'(V0, V1, V2, V143, V4))), case V144 of {'Idris.Prelude.Types.Left', E105} -> (fun (V145) -> {'Idris.Prelude.Types.Left', V145} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V146) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IBindHere', V141, V142, V146}} end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E102, E103, E104)); {'Idris.TTImp.TTImp.IAs', E107, E108, E109, E110, E111} -> (fun (V147, V148, V149, V150, V151) -> begin (V152 = ('un--getUnquote'(V0, V1, V2, V151, V4))), case V152 of {'Idris.Prelude.Types.Left', E112} -> (fun (V153) -> {'Idris.Prelude.Types.Left', V153} end(E112)); {'Idris.Prelude.Types.Right', E113} -> (fun (V154) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAs', V147, V148, V149, V150, V154}} end(E113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E107, E108, E109, E110, E111)); {'Idris.TTImp.TTImp.IMustUnify', E114, E115, E116} -> (fun (V155, V156, V157) -> begin (V158 = ('un--getUnquote'(V0, V1, V2, V157, V4))), case V158 of {'Idris.Prelude.Types.Left', E117} -> (fun (V159) -> {'Idris.Prelude.Types.Left', V159} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V160) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IMustUnify', V155, V156, V160}} end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E114, E115, E116)); {'Idris.TTImp.TTImp.IDelayed', E119, E120, E121} -> (fun (V161, V162, V163) -> begin (V164 = ('un--getUnquote'(V0, V1, V2, V163, V4))), case V164 of {'Idris.Prelude.Types.Left', E122} -> (fun (V165) -> {'Idris.Prelude.Types.Left', V165} end(E122)); {'Idris.Prelude.Types.Right', E123} -> (fun (V166) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelayed', V161, V162, V166}} end(E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E119, E120, E121)); {'Idris.TTImp.TTImp.IDelay', E124, E125} -> (fun (V167, V168) -> begin (V169 = ('un--getUnquote'(V0, V1, V2, V168, V4))), case V169 of {'Idris.Prelude.Types.Left', E126} -> (fun (V170) -> {'Idris.Prelude.Types.Left', V170} end(E126)); {'Idris.Prelude.Types.Right', E127} -> (fun (V171) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelay', V167, V171}} end(E127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E124, E125)); {'Idris.TTImp.TTImp.IForce', E128, E129} -> (fun (V172, V173) -> begin (V174 = ('un--getUnquote'(V0, V1, V2, V173, V4))), case V174 of {'Idris.Prelude.Types.Left', E130} -> (fun (V175) -> {'Idris.Prelude.Types.Left', V175} end(E130)); {'Idris.Prelude.Types.Right', E131} -> (fun (V176) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IForce', V172, V176}} end(E131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E128, E129)); {'Idris.TTImp.TTImp.IQuote', E132, E133} -> (fun (V177, V178) -> begin (V179 = ('un--getUnquote'(V0, V1, V2, V178, V4))), case V179 of {'Idris.Prelude.Types.Left', E134} -> (fun (V180) -> {'Idris.Prelude.Types.Left', V180} end(E134)); {'Idris.Prelude.Types.Right', E135} -> (fun (V181) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuote', V177, V181}} end(E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E132, E133)); {'Idris.TTImp.TTImp.IUnquote', E136, E137} -> (fun (V182, V183) -> begin (V184 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V0, V2, <<"q"/utf8>>, V4))), case V184 of {'Idris.Prelude.Types.Left', E138} -> (fun (V185) -> {'Idris.Prelude.Types.Left', V185} end(E138)); {'Idris.Prelude.Types.Right', E139} -> (fun (V186) -> begin (V188 = begin (V187 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V187} end), case V188 of {'Idris.Prelude.Types.Left', E140} -> (fun (V189) -> {'Idris.Prelude.Types.Left', V189} end(E140)); {'Idris.Prelude.Types.Right', E141} -> (fun (V190) -> begin (V192 = begin (V191 = ('erlang':'put'(V1, [{'Idris.Builtin.MkPair', V186, {'Idris.Builtin.MkPair', V182, V183}} | V190]))), {'Idris.Prelude.Types.Right', V191} end), case V192 of {'Idris.Prelude.Types.Left', E142} -> (fun (V193) -> {'Idris.Prelude.Types.Left', V193} end(E142)); {'Idris.Prelude.Types.Right', E143} -> (fun (V194) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUnquote', V182, {'Idris.TTImp.TTImp.IVar', V182, V186}}} end(E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E141)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E136, E137)); _ -> {'Idris.Prelude.Types.Right', V3} end.
'un--checkQuoteName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> begin (V14 = begin (V13 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V13} end), case V14 of {'Idris.Prelude.Types.Left', E0} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V16) -> begin (V23 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V9, V16, ('un--onLHS'(case V6 of {'Idris.TTImp.Elab.Check.MkElabInfo', E2, E3, E4, E5, E6, E7} -> (fun (V17, V18, V19, V20, V21, V22) -> V17 end(E2, E3, E4, E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V8, V10, V12))), case V23 of {'Idris.Prelude.Types.Left', E8} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V25) -> begin (V26 = ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V9, V16, ('Idris.Idris2.Core.Reflect':'un--reflectiontt'(<<"Name"/utf8>>)), V12))), case V26 of {'Idris.Prelude.Types.Left', E10} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V28) -> ('Idris.Idris2.TTImp.Elab.Check':'un--checkExp'(V0, V1, V3, V4, V5, V6, V8, V9, V25, ('Idris.Idris2.Core.Normalise.Eval':'un--gnf'(V0, V8, V28)), V11, V12)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--checkQuoteDecl'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> begin (V14 = begin (V13 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V13} end), case V14 of {'Idris.Prelude.Types.Left', E0} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V16) -> begin (V17 = ('Idris.Idris2.Core.Core':'un--newRef'({'Idris.TTImp.Elab.Quote.Unq'}, [], V12))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> begin (V22 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V20) -> fun (V21) -> ('un--getUnquoteDecl'(V1, V19, V3, V20, V21)) end end, V10, [], V12))), case V22 of {'Idris.Prelude.Types.Left', E4} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V24) -> begin (V38 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('Idris.Idris2.TTImp.Reflect':'dn--un--reflect_Reflect_ImpDecl'(V25, V26, V27, V28, V29, V30, V31)) end end end end end end end, V0, V9, V16, ('un--onLHS'(case V6 of {'Idris.TTImp.Elab.Check.MkElabInfo', E6, E7, E8, E9, E10, E11} -> (fun (V32, V33, V34, V35, V36, V37) -> V32 end(E6, E7, E8, E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V8, V24, V12))), case V38 of {'Idris.Prelude.Types.Left', E12} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V40) -> begin (V42 = begin (V41 = ('erlang':'get'(V19))), {'Idris.Prelude.Types.Right', V41} end), case V42 of {'Idris.Prelude.Types.Left', E14} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V44) -> begin (V45 = ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V9, V16, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Decl"/utf8>>)), V12))), case V45 of {'Idris.Prelude.Types.Left', E16} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V47) -> begin (V48 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V9, V16, ('Idris.Idris2.Core.Reflect':'un--basics'(<<"List"/utf8>>)), [V47 | []], V12))), case V48 of {'Idris.Prelude.Types.Left', E18} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V50) -> begin (V51 = (('un--bindUnqs'(V0, V1, V2, V3, V4, V44, V5, V6, V7, V8, V40))(V12))), case V51 of {'Idris.Prelude.Types.Left', E20} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V53) -> ('Idris.Idris2.TTImp.Elab.Check':'un--checkExp'(V0, V1, V3, V4, V5, V6, V8, V9, V53, ('Idris.Idris2.Core.Normalise.Eval':'un--gnf'(V0, V8, V50)), V11, V12)) end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--checkQuote'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> begin (V14 = begin (V13 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V13} end), case V14 of {'Idris.Prelude.Types.Left', E0} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V16) -> begin (V17 = ('Idris.Idris2.Core.Core':'un--newRef'({'Idris.TTImp.Elab.Quote.Unq'}, [], V12))), case V17 of {'Idris.Prelude.Types.Left', E2} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V19) -> begin (V20 = ('un--getUnquote'(V1, V19, V3, V10, V12))), case V20 of {'Idris.Prelude.Types.Left', E4} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V22) -> begin (V29 = (('Idris.Idris2.TTImp.Reflect':'dn--un--reflect_Reflect_RawImp'(V0, V9, V16, ('un--onLHS'(case V6 of {'Idris.TTImp.Elab.Check.MkElabInfo', E6, E7, E8, E9, E10, E11} -> (fun (V23, V24, V25, V26, V27, V28) -> V23 end(E6, E7, E8, E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V8, V22))(V12))), case V29 of {'Idris.Prelude.Types.Left', E12} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V31) -> begin (V33 = begin (V32 = ('erlang':'get'(V19))), {'Idris.Prelude.Types.Right', V32} end), case V33 of {'Idris.Prelude.Types.Left', E14} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V35) -> begin (V36 = ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V9, V16, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"TTImp"/utf8>>)), V12))), case V36 of {'Idris.Prelude.Types.Left', E16} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V38) -> begin (V39 = (('un--bindUnqs'(V0, V1, V2, V3, V4, V35, V5, V6, V7, V8, V31))(V12))), case V39 of {'Idris.Prelude.Types.Left', E18} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V41) -> begin (V42 = ('Idris.Idris2.Core.Normalise':'un--normalise'(V1, V0, V16, V8, V41, V12))), case V42 of {'Idris.Prelude.Types.Left', E20} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V44) -> ('Idris.Idris2.TTImp.Elab.Check':'un--checkExp'(V0, V1, V3, V4, V5, V6, V8, V9, V44, ('Idris.Idris2.Core.Normalise.Eval':'un--gnf'(V0, V8, V38)), V11, V12)) end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--bindUnqs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V5 of [] -> fun (V11) -> {'Idris.Prelude.Types.Right', V10} end; [E0 | E1] -> (fun (V12, V13) -> fun (V14) -> case V12 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V15, V16) -> case V16 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V17, V18) -> begin (V20 = begin (V19 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V19} end), case V20 of {'Idris.Prelude.Types.Left', E6} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V22) -> begin (V53 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExactI'(('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"TTImp"/utf8>>)), case V22 of {'Idris.Core.Context.MkDefs', E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37} -> (fun (V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52) -> V23 end(E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V14))), case V53 of {'Idris.Prelude.Types.Left', E38} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V55) -> case V55 of {'Idris.Prelude.Types.Just', E40} -> (fun (V56) -> case V56 of {'Idris.Builtin.MkPair', E41, E42} -> (fun (V57, V58) -> begin (V59 = ('Idris.Idris2.TTImp.Elab.Check':'un--check'(V0, V1, V2, V3, V4, V6, V7, V8, V9, V18, {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.Normalise.Eval':'un--gnf'(V0, V9, {'Idris.Core.TT.Ref', V17, {'Idris.Core.TT.TyCon', 0, 0}, {'Idris.Core.Name.Resolved', V57}}))}, V14))), case V59 of {'Idris.Prelude.Types.Left', E43} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V61) -> case V61 of {'Idris.Builtin.MkPair', E45, E46} -> (fun (V62, V63) -> begin (V64 = (('un--bindUnqs'(V0, V1, V2, V3, V4, V13, V6, V7, V8, V9, V10))(V14))), case V64 of {'Idris.Prelude.Types.Left', E47} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V66) -> begin (V67 = (('Idris.Idris2.Core.Normalise.Eval':'un--getTerm'(V63))(V14))), case V67 of {'Idris.Prelude.Types.Left', E49} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V69) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Bind', V17, V15, {'Idris.Core.TT.Let', V17, ('Idris.Idris2.Algebra.ZeroOneOmega':'un--rigMult'(('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), V6)), V62, V69}, ('Idris.Idris2.Core.TT':'un--refToLocal'(V15, V15, V66))}} end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45, E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E41, E42)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.UndefinedName', V17, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"TTImp"/utf8>>))}, V14)) end end(E40)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.UndefinedName', V17, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"TTImp"/utf8>>))}, V14)) end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
