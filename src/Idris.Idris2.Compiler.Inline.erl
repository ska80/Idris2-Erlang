-module('Idris.Idris2.Compiler.Inline').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--case block in mergeLamDef-5872'/7,
  'case--case block in updateCallGraph-5684'/6,
  'case--mergeLambdas-5217'/5,
  'case--case block in case block in eval-3140'/15,
  'case--eval-2993'/10,
  'nested--7973-3758--in--un--updateLoc'/15,
  'nested--7973-3759--in--un--update'/15,
  'nested--10202-4844--in--un--traverseArgs'/9,
  'nested--11896-6150--in--un--transform'/3,
  'nested--11896-6151--in--un--nonErased'/3,
  'nested--8008-4269--in--un--matches'/24,
  'nested--10202-5006--in--un--fixArityConstAlt'/9,
  'nested--10202-4953--in--un--fixArityAlt'/9,
  'un--usedConst'/3,
  'un--usedCon'/3,
  'un--used'/3,
  'un--updateCallGraph'/3,
  'un--unloadApp'/3,
  'un--unload'/2,
  'un--tryApply'/8,
  'un--takeFromStack'/3,
  'un--refToLocal'/3,
  'un--pickConstAlt'/10,
  'un--pickAlt'/10,
  'un--mkBounds'/1,
  'un--mergeLambdas'/2,
  'un--mergeLamDef'/3,
  'un--mergeLam'/3,
  'un--largest'/3,
  'un--inlineDef'/3,
  'un--inline'/4,
  'un--getRefs'/1,
  'un--getNewArgs'/2,
  'un--getLams'/4,
  'un--getArity'/1,
  'un--genName'/3,
  'un--fixArityTm'/4,
  'un--fixArityExp'/3,
  'un--fixArityDef'/3,
  'un--fixArity'/3,
  'un--extendLoc'/5,
  'un--extend'/4,
  'un--evalLocal'/9,
  'un--evalConstAlt'/9,
  'un--evalAlt'/10,
  'un--eval'/8,
  'un--doEval'/5,
  'un--compileAndInlineAll'/2,
  'un--addRefsConstAlts'/2,
  'un--addRefsConAlts'/2,
  'un--addRefsArgs'/2,
  'un--addRefs'/2,
  'un--addArityHash'/3
]).
'case--case block in mergeLamDef-5872'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.Core.Context.Context.PMDef', E0, E1, E2, E3, E4} -> (fun (V7, V8, V9, V10, V11) -> begin (V12 = ('Idris.Idris2.Core.Context':'un--getSession'(V1, V6))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> case case ('Idris.Idris2.Data.List':'un--isNil'(case V14 of {'Idris.Core.Options.MkSessionOpts', E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58} -> (fun (V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40) -> V38 end(E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of 1 -> 0; 0 -> case V7 of {'Idris.Core.Context.Context.MkPMDefInfo', E30, E31, E32} -> (fun (V41, V42, V43) -> V43 end(E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> {'Idris.Prelude.Types.Right', 0}; 0 -> case V3 of {'Idris.Core.Context.Context.MkGlobalDef', E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26} -> (fun (V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63) -> case V62 of {'Idris.Prelude.Types.Just', E27} -> (fun (V64) -> begin (V65 = ('un--mergeLam'(V1, V64, V6))), case V65 of {'Idris.Prelude.Types.Left', E28} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V67) -> ('Idris.Idris2.Core.Context':'un--setCompiled'(V1, V0, V67, V6)) end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> {'Idris.Prelude.Types.Right', 0} end.
'case--case block in updateCallGraph-5684'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V6) -> begin (V7 = ('un--getRefs'(V6))), fun (V8) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V9) -> case V9 of {'Idris.Prelude.Types.Left', E1} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Right', 0} end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V12) -> ('Idris.Idris2.Core.Context':'un--addDef'(V1, V0, case V3 of {'Idris.Core.Context.Context.MkGlobalDef', E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22} -> (fun (V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32) -> {'Idris.Core.Context.Context.MkGlobalDef', V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, {'Idris.Prelude.Types.Just', V7}, V27, V28, V29, V30, V31, V32} end(E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V12)) end, V8)) end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V33) -> {'Idris.Prelude.Types.Right', 0} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--mergeLambdas-5217'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V7, V8) -> begin (V9 = ('Idris.Idris2.Core.CompileExpr':'un--substs'(V5, V1, V7, V8))), begin (V10 = ('Idris.Idris2.Prelude.Types.List':'un--reverse'(('un--getNewArgs'(V5, V7))))), begin (V11 = ('Idris.Idris2.Core.CompileExpr':'un--mkLocals'(('Idris.Idris2.Core.TT.SizeOf':'un--mkSizeOf'(V1)), ('un--mkBounds'(V10)), V9))), {'Idris.Builtin.DPair.MkDPair', ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V1, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V10, [])))), V11} end end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in case block in eval-3140'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Prelude.Types.Just', E0} -> (fun (V15) -> begin (V16 = ('un--getArity'(V15))), fun (V17) -> case case ('Idris.Idris2.Prelude.Types':'un--elem'({'Idris.Prelude.EqOrd.MkEq', fun (V18) -> fun (V19) -> ('Idris.Idris2.Core.Context.Context':'dn--un--==_Eq_DefFlag'(V18, V19)) end end, fun (V20) -> fun (V21) -> ('Idris.Idris2.Core.Context.Context':'dn--un--/=_Eq_DefFlag'(V20, V21)) end end}, {'Idris.Core.Context.Context.Inline'}, case V12 of {'Idris.Core.Context.Context.MkGlobalDef', E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22} -> (fun (V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41) -> V33 end(E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of 1 -> case ('Idris.Idris2.Prelude.Types':'un--elem'({'Idris.Prelude.EqOrd.MkEq', fun (V42) -> fun (V43) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V42, V43)) end end, fun (V44) -> fun (V45) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V44, V45)) end end}, V2, V6)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> begin (V46 = (('un--tryApply'(V0, V1, V8, V7, [V2 | V6], V4, V5, V15))(V17))), case V46 of {'Idris.Prelude.Types.Left', E1} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V48) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> ('un--unloadApp'(V16, V4, {'Idris.Core.CompileExpr.CRef', V3, V2})) end, V48))} end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> {'Idris.Prelude.Types.Right', ('un--unloadApp'(V16, V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V49) -> {'Idris.Prelude.Types.Right', ('un--unload'(V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--eval-2993'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V10, V11) -> case V10 of 1 -> case V11 of [E112 | E113] -> (fun (V12, V13) -> fun (V14) -> case V13 of [E169 | E170] -> (fun (V15, V16) -> case V16 of [E226 | E227] -> (fun (V17, V18) -> begin (V19 = ('un--genName'(V7, <<"act"/utf8>>, V14))), case V19 of {'Idris.Prelude.Types.Left', E228} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E228)); {'Idris.Prelude.Types.Right', E229} -> (fun (V21) -> begin (V22 = (('un--eval'([], V1, V8, V7, V6, {'Idris.Compiler.Inline.Nil'}, [], {'Idris.Core.CompileExpr.CApp', V3, V15, [{'Idris.Core.CompileExpr.CRef', V3, V21} | [V17 | []]]}))(V14))), case V22 of {'Idris.Prelude.Types.Left', E230} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E230)); {'Idris.Prelude.Types.Right', E231} -> (fun (V24) -> {'Idris.Prelude.Types.Right', ('un--unload'(V18, {'Idris.Core.CompileExpr.CLet', V3, V21, 0, {'Idris.Core.CompileExpr.CApp', V3, V12, [V17 | []]}, ('un--refToLocal'(V21, V21, V24))}))} end(E231)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E229)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E226, E227)); _ -> begin (V26 = begin (V25 = ('erlang':'get'(V8))), {'Idris.Prelude.Types.Right', V25} end), case V26 of {'Idris.Prelude.Types.Left', E171} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E171)); {'Idris.Prelude.Types.Right', E172} -> (fun (V28) -> begin (V59 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V2, case V28 of {'Idris.Core.Context.MkDefs', E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202} -> (fun (V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58) -> V29 end(E173, E174, E175, E176, E177, E178, E179, E180, E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V14))), case V59 of {'Idris.Prelude.Types.Left', E203} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E203)); {'Idris.Prelude.Types.Right', E204} -> (fun (V61) -> case V61 of {'Idris.Prelude.Types.Just', E205} -> (fun (V62) -> begin (V63 = {'Idris.Prelude.Types.Just', V62}), (('case--case block in case block in eval-3140'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V11, V10, V28, V62, V63, case V62 of {'Idris.Core.Context.Context.MkGlobalDef', E206, E207, E208, E209, E210, E211, E212, E213, E214, E215, E216, E217, E218, E219, E220, E221, E222, E223, E224, E225} -> (fun (V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83) -> V82 end(E206, E207, E208, E209, E210, E211, E212, E213, E214, E215, E216, E217, E218, E219, E220, E221, E222, E223, E224, E225)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V14)) end end(E205)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--unload'(V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E204)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E172)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E169, E170)); _ -> begin (V85 = begin (V84 = ('erlang':'get'(V8))), {'Idris.Prelude.Types.Right', V84} end), case V85 of {'Idris.Prelude.Types.Left', E114} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E114)); {'Idris.Prelude.Types.Right', E115} -> (fun (V87) -> begin (V118 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V2, case V87 of {'Idris.Core.Context.MkDefs', E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145} -> (fun (V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117) -> V88 end(E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V14))), case V118 of {'Idris.Prelude.Types.Left', E146} -> (fun (V119) -> {'Idris.Prelude.Types.Left', V119} end(E146)); {'Idris.Prelude.Types.Right', E147} -> (fun (V120) -> case V120 of {'Idris.Prelude.Types.Just', E148} -> (fun (V121) -> begin (V122 = {'Idris.Prelude.Types.Just', V121}), (('case--case block in case block in eval-3140'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V11, V10, V87, V121, V122, case V121 of {'Idris.Core.Context.Context.MkGlobalDef', E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161, E162, E163, E164, E165, E166, E167, E168} -> (fun (V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142) -> V141 end(E149, E150, E151, E152, E153, E154, E155, E156, E157, E158, E159, E160, E161, E162, E163, E164, E165, E166, E167, E168)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V14)) end end(E148)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--unload'(V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E112, E113)); _ -> fun (V143) -> begin (V145 = begin (V144 = ('erlang':'get'(V8))), {'Idris.Prelude.Types.Right', V144} end), case V145 of {'Idris.Prelude.Types.Left', E57} -> (fun (V146) -> {'Idris.Prelude.Types.Left', V146} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V147) -> begin (V178 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V2, case V147 of {'Idris.Core.Context.MkDefs', E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88} -> (fun (V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177) -> V148 end(E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V143))), case V178 of {'Idris.Prelude.Types.Left', E89} -> (fun (V179) -> {'Idris.Prelude.Types.Left', V179} end(E89)); {'Idris.Prelude.Types.Right', E90} -> (fun (V180) -> case V180 of {'Idris.Prelude.Types.Just', E91} -> (fun (V181) -> begin (V182 = {'Idris.Prelude.Types.Just', V181}), (('case--case block in case block in eval-3140'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V11, V10, V147, V181, V182, case V181 of {'Idris.Core.Context.Context.MkGlobalDef', E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111} -> (fun (V183, V184, V185, V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196, V197, V198, V199, V200, V201, V202) -> V201 end(E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V143)) end end(E91)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--unload'(V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> fun (V203) -> begin (V205 = begin (V204 = ('erlang':'get'(V8))), {'Idris.Prelude.Types.Right', V204} end), case V205 of {'Idris.Prelude.Types.Left', E2} -> (fun (V206) -> {'Idris.Prelude.Types.Left', V206} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V207) -> begin (V238 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V2, case V207 of {'Idris.Core.Context.MkDefs', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33} -> (fun (V208, V209, V210, V211, V212, V213, V214, V215, V216, V217, V218, V219, V220, V221, V222, V223, V224, V225, V226, V227, V228, V229, V230, V231, V232, V233, V234, V235, V236, V237) -> V208 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V203))), case V238 of {'Idris.Prelude.Types.Left', E34} -> (fun (V239) -> {'Idris.Prelude.Types.Left', V239} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V240) -> case V240 of {'Idris.Prelude.Types.Just', E36} -> (fun (V241) -> begin (V242 = {'Idris.Prelude.Types.Just', V241}), (('case--case block in case block in eval-3140'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V11, V10, V207, V241, V242, case V241 of {'Idris.Core.Context.Context.MkGlobalDef', E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56} -> (fun (V243, V244, V245, V246, V247, V248, V249, V250, V251, V252, V253, V254, V255, V256, V257, V258, V259, V260, V261, V262) -> V261 end(E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V203)) end end(E36)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--unload'(V4, {'Idris.Core.CompileExpr.CRef', V3, V2}))} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7973-3758--in--un--updateLoc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V12 of [] -> V13; _ -> case V11 of 0 -> case V12 of [E4 | E5] -> (fun (V15, V16) -> case V13 of {'Idris.Compiler.Inline.::', E6, E7} -> (fun (V17, V18) -> {'Idris.Compiler.Inline.::', V14, V18} end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> begin (V19 = (V11 - 1)), case V12 of [E0 | E1] -> (fun (V20, V21) -> case V13 of {'Idris.Compiler.Inline.::', E2, E3} -> (fun (V22, V23) -> {'Idris.Compiler.Inline.::', V22, ('nested--7973-3758--in--un--updateLoc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V19, V21, V23, V14))} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'nested--7973-3759--in--un--update'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V12 of {'Idris.Core.CompileExpr.CLocal', E0, E1} -> (fun (V15, V16) -> ('nested--7973-3758--in--un--updateLoc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V15, V11, V13, V14)) end(E0, E1)); _ -> V13 end.
'nested--10202-4844--in--un--traverseArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V7 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Data.Vect.Nil'}} end()); {'Idris.Data.Vect.::', E0, E1} -> (fun (V9, V10) -> begin (V11 = (('un--fixArityTm'(V6, V5, V9, []))(V8))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> begin (V14 = ('nested--10202-4844--in--un--traverseArgs'(V0, V1, V2, V3, V4, V5, V6, V10, V8))), case V14 of {'Idris.Prelude.Types.Left', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Data.Vect.::', V13, V16}} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11896-6150--in--un--transform'(V0, V1, V2) -> case V1 of 0 -> fun (V3) -> {'Idris.Prelude.Types.Right', 0} end; _ -> begin (V4 = (V1 - 1)), fun (V5) -> begin (V8 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V6) -> fun (V7) -> ('un--inlineDef'(V0, V6, V7)) end end, V2, V5))), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> begin (V13 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V11) -> fun (V12) -> ('un--mergeLamDef'(V0, V11, V12)) end end, V2, V5))), case V13 of {'Idris.Prelude.Types.Left', E2} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V15) -> begin (V18 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V16) -> fun (V17) -> ('Idris.Idris2.Compiler.CaseOpts':'un--caseLamDef'(V0, V16, V17)) end end, V2, V5))), case V18 of {'Idris.Prelude.Types.Left', E4} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V20) -> begin (V23 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V21) -> fun (V22) -> ('un--fixArityDef'(V0, V21, V22)) end end, V2, V5))), case V23 of {'Idris.Prelude.Types.Left', E6} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V25) -> (('nested--11896-6150--in--un--transform'(V0, V4, V2))(V5)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end.
'nested--11896-6151--in--un--nonErased'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V37 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V7 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> case V39 of {'Idris.Prelude.Types.Just', E34} -> (fun (V40) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--/=_Eq_ZeroOneOmega'(case V40 of {'Idris.Core.Context.Context.MkGlobalDef', E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54} -> (fun (V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60) -> V48 end(E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Algebra.Semiring':'un--erased'({'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V61) -> fun (V62) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring_ZeroOneOmega'(V61, V62)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring_ZeroOneOmega'()), fun (V63) -> fun (V64) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring_ZeroOneOmega'(V63, V64)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring_ZeroOneOmega'())}))))} end(E34)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--8008-4269--in--un--matches'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23) -> case V21 of {'Idris.Prelude.Types.Just', E0} -> (fun (V24) -> case V23 of {'Idris.Prelude.Types.Just', E1} -> (fun (V25) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V24, V25)) end(E1)); _ -> 0 end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V23 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V20, V22)) end()); _ -> 0 end end()); _ -> 0 end.
'nested--10202-5006--in--un--fixArityConstAlt'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V7 of {'Idris.Core.CompileExpr.MkConstAlt', E0, E1} -> (fun (V9, V10) -> begin (V11 = (('un--fixArityTm'(V0, V6, V10, []))(V8))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkConstAlt', V9, V13}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--10202-4953--in--un--fixArityAlt'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V7 of {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3, E4} -> (fun (V9, V10, V11, V12, V13) -> begin (V14 = (('un--fixArityTm'(('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V12, V0)), V6, V13, []))(V8))), case V14 of {'Idris.Prelude.Types.Left', E5} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkConAlt', V9, V10, V11, V12, V16}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--usedConst'(V0, V1, V2) -> case V2 of {'Idris.Core.CompileExpr.MkConstAlt', E0, E1} -> (fun (V3, V4) -> ('un--used'(V0, V1, V4)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--usedCon'(V0, V1, V2) -> case V2 of {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3, E4} -> (fun (V3, V4, V5, V6, V7) -> ('un--used'(('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V6, V0)), ('Idris.Idris2.Core.TT':'dn--un--weakenNs_Weaken_Var'(('Idris.Idris2.Core.TT.SizeOf':'un--mkSizeOf'(V6)), V1)), V7)) end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--used'(V0, V1, V2) -> case V2 of {'Idris.Core.CompileExpr.CLocal', E0, E1} -> (fun (V3, V4) -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V1, V3)) of 1 -> 1; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); {'Idris.Core.CompileExpr.CLam', E2, E3, E4} -> (fun (V5, V6, V7) -> ('un--used'([V6 | V0], (1 + V1), V7)) end(E2, E3, E4)); {'Idris.Core.CompileExpr.CLet', E5, E6, E7, E8, E9} -> (fun (V8, V9, V10, V11, V12) -> case V10 of 0 -> begin (V13 = ((('un--used'(V0, V1, V11)) + ('un--used'([V9 | V0], (1 + V1), V12))) rem 9223372036854775808)), case ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V13, 0)) of 1 -> 1000; 0 -> V13; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> ((('un--used'(V0, V1, V11)) + ('un--used'([V9 | V0], (1 + V1), V12))) rem 9223372036854775808); _ -> 0 end end(E5, E6, E7, E8, E9)); {'Idris.Core.CompileExpr.CApp', E10, E11, E12} -> (fun (V14, V15, V16) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(fun (V17) -> fun (V18) -> ((V17 + V18) rem 9223372036854775808) end end, ('un--used'(V0, V1, V15)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V19) -> ('un--used'(V0, V1, V19)) end, V16)))) end(E10, E11, E12)); {'Idris.Core.CompileExpr.CCon', E13, E14, E15, E16, E17} -> (fun (V20, V21, V22, V23, V24) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(fun (V25) -> fun (V26) -> ((V25 + V26) rem 9223372036854775808) end end, 0, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V27) -> ('un--used'(V0, V1, V27)) end, V24)))) end(E13, E14, E15, E16, E17)); {'Idris.Core.CompileExpr.COp', E18, E19, E20, E21} -> (fun (V28, V29, V30, V31) -> ('Idris.Idris2.Data.Vect':'dn--un--foldr_Foldable_(Vect $n)'(fun (V32) -> fun (V33) -> ((V32 + V33) rem 9223372036854775808) end end, 0, ('Idris.Idris2.Data.Vect':'dn--un--map_Functor_(Vect $n)'(fun (V34) -> ('un--used'(V0, V1, V34)) end, V31)))) end(E18, E19, E20, E21)); {'Idris.Core.CompileExpr.CExtPrim', E22, E23, E24} -> (fun (V35, V36, V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(fun (V38) -> fun (V39) -> ((V38 + V39) rem 9223372036854775808) end end, 0, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V40) -> ('un--used'(V0, V1, V40)) end, V37)))) end(E22, E23, E24)); {'Idris.Core.CompileExpr.CForce', E25, E26, E27} -> (fun (V41, V42, V43) -> ('un--used'(V0, V1, V43)) end(E25, E26, E27)); {'Idris.Core.CompileExpr.CDelay', E28, E29, E30} -> (fun (V44, V45, V46) -> ('un--used'(V0, V1, V46)) end(E28, E29, E30)); {'Idris.Core.CompileExpr.CConCase', E31, E32, E33, E34} -> (fun (V47, V48, V49, V50) -> ((('un--used'(V0, V1, V48)) + ('un--largest'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V51) -> fun (V52) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V51, V52)) end end, fun (V53) -> fun (V54) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(V53, V54)) end end}, fun (V55) -> fun (V56) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--compare_Ord_Int'(V55, V56)) end end, fun (V57) -> fun (V58) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V57, V58)) end end, fun (V59) -> fun (V60) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V59, V60)) end end, fun (V61) -> fun (V62) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<=_Ord_Int'(V61, V62)) end end, fun (V63) -> fun (V64) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Int'(V63, V64)) end end, fun (V65) -> fun (V66) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--max_Ord_Int'(V65, V66)) end end, fun (V67) -> fun (V68) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--min_Ord_Int'(V67, V68)) end end}, ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> 0 end, fun () -> fun (V69) -> ('un--used'(V0, V1, V69)) end end, V50)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V70) -> ('un--usedCon'(V0, V1, V70)) end, V49))))) rem 9223372036854775808) end(E31, E32, E33, E34)); {'Idris.Core.CompileExpr.CConstCase', E35, E36, E37, E38} -> (fun (V71, V72, V73, V74) -> ((('un--used'(V0, V1, V72)) + ('un--largest'({'Idris.Prelude.EqOrd.MkOrd', {'Idris.Prelude.EqOrd.MkEq', fun (V75) -> fun (V76) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V75, V76)) end end, fun (V77) -> fun (V78) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(V77, V78)) end end}, fun (V79) -> fun (V80) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--compare_Ord_Int'(V79, V80)) end end, fun (V81) -> fun (V82) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V81, V82)) end end, fun (V83) -> fun (V84) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->_Ord_Int'(V83, V84)) end end, fun (V85) -> fun (V86) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--<=_Ord_Int'(V85, V86)) end end, fun (V87) -> fun (V88) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Int'(V87, V88)) end end, fun (V89) -> fun (V90) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--max_Ord_Int'(V89, V90)) end end, fun (V91) -> fun (V92) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--min_Ord_Int'(V91, V92)) end end}, ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> 0 end, fun () -> fun (V93) -> ('un--used'(V0, V1, V93)) end end, V74)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V94) -> ('un--usedConst'(V0, V1, V94)) end, V73))))) rem 9223372036854775808) end(E35, E36, E37, E38)); _ -> 0 end.
'un--updateCallGraph'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V37 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V7 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> case V39 of {'Idris.Prelude.Types.Just', E34} -> (fun (V40) -> begin (V41 = {'Idris.Prelude.Types.Just', V40}), (('case--case block in updateCallGraph-5684'(V1, V0, V6, V40, V41, case V40 of {'Idris.Core.Context.Context.MkGlobalDef', E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54} -> (fun (V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61) -> V60 end(E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2)) end end(E34)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unloadApp'(V0, V1, V2) -> ('un--unload'(('Idris.Idris2.Data.List':'un--drop'(V0, V1)), {'Idris.Core.CompileExpr.CApp', ('Idris.Idris2.Core.CompileExpr':'un--getFC'(V2)), V2, ('Idris.Idris2.Data.List':'un--take'(V0, V1))})).
'un--unload'(V0, V1) -> case V0 of [] -> V1; [E0 | E1] -> (fun (V2, V3) -> ('un--unload'(V3, {'Idris.Core.CompileExpr.CApp', ('Idris.Idris2.Core.CompileExpr':'un--getFC'(V1)), V1, [V2 | []]})) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--tryApply'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.CompileExpr.MkFun', E0, E1} -> (fun (V8, V9) -> fun (V10) -> case ('un--takeFromStack'(V6, V5, V8)) of {'Idris.Prelude.Types.Just', E2} -> (fun (V11) -> case V11 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V12, V13) -> begin (V14 = (('un--eval'(('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V8, V0)), V1, V2, V3, V4, V12, V13, ('Idris.Idris2.Core.CompileExpr':'un--embed'(V9))))(V10))), case V14 of {'Idris.Prelude.Types.Left', E5} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V16}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> fun (V17) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end.
'un--takeFromStack'(V0, V1, V2) -> case V1 of [E0 | E1] -> (fun (V3, V4) -> case V2 of [E2 | E3] -> (fun (V5, V6) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('un--takeFromStack'(V0, V4, V6)), fun (V7) -> case V7 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V8, V9) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'({'Idris.Builtin.MkPair', {'Idris.Compiler.Inline.::', V3, V8}, V9})) end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E2, E3)); _ -> case V2 of [] -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'({'Idris.Builtin.MkPair', V0, V1})); _ -> case V1 of [] -> {'Idris.Prelude.Types.Nothing'}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> case V2 of [] -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'({'Idris.Builtin.MkPair', V0, V1})); _ -> case V1 of [] -> {'Idris.Prelude.Types.Nothing'}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--refToLocal'(V0, V1, V2) -> ('Idris.Idris2.Core.CompileExpr':'un--refsToLocals'({'Idris.Core.TT.Bounds.Add', V1, V0, {'Idris.Core.TT.Bounds.None'}}, V2)).
'un--pickConstAlt'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V7 of {'Idris.Core.CompileExpr.CPrimVal', E0, E1} -> (fun (V10, V11) -> case V8 of [] -> fun (V12) -> case V9 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V13) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V14) -> case V14 of {'Idris.Prelude.Types.Left', E3} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V16}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V13)), V12)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; [E5 | E6] -> (fun (V17, V18) -> case V17 of {'Idris.Core.CompileExpr.MkConstAlt', E7, E8} -> (fun (V19, V20) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V11, V19)) of 1 -> fun (V21) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V22) -> case V22 of {'Idris.Prelude.Types.Left', E9} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V24}} end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V20)), V21)) end; 0 -> ('un--pickConstAlt'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Core.CompileExpr.CPrimVal', V10, V11}, V18, V9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E7, E8)); _ -> fun (V25) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end(E5, E6)); _ -> fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end(E0, E1)); _ -> fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end.
'un--pickAlt'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V7 of {'Idris.Core.CompileExpr.CCon', E0, E1, E2, E3, E4} -> (fun (V10, V11, V12, V13, V14) -> case V8 of [] -> fun (V15) -> case V9 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E5} -> (fun (V16) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V17) -> case V17 of {'Idris.Prelude.Types.Left', E6} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V19) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V19}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V16)), V15)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; [E8 | E9] -> (fun (V20, V21) -> case V20 of {'Idris.Core.CompileExpr.MkConAlt', E10, E11, E12, E13, E14} -> (fun (V22, V23, V24, V25, V26) -> begin (V27 = {'Idris.Core.CompileExpr.CCon', V10, V11, V12, V13, V14}), case ('nested--8008-4269--in--un--matches'(V23, V1, V14, V13, V12, V11, V10, V27, V25, V0, V26, V24, V22, V21, V9, V6, V5, V4, V3, V2, V11, V13, V22, V24)) of 1 -> case ('Idris.Idris2.Libraries.Data.LengthMatch':'un--checkLengthMatch'(V14, V25)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V28) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end()); {'Idris.Prelude.Types.Just', E15} -> (fun (V29) -> begin (V30 = ('un--extend'(V5, V14, V25, V29))), fun (V31) -> begin (V32 = (('un--eval'(('Idris.Idris2.Prelude.Types.List':'un--++'(V25, V0)), V1, V2, V3, V4, V30, V6, V26))(V31))), case V32 of {'Idris.Prelude.Types.Left', E16} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V34) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V34}} end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> ('un--pickAlt'(V0, V1, V2, V3, V4, V5, V6, V27, V21, V9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10, E11, E12, E13, E14)); _ -> fun (V35) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end(E8, E9)); _ -> fun (V36) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end(E0, E1, E2, E3, E4)); _ -> fun (V37) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end.
'un--mkBounds'(V0) -> case V0 of [] -> {'Idris.Core.TT.Bounds.None'}; [E0 | E1] -> (fun (V1, V2) -> {'Idris.Core.TT.Bounds.Add', V1, V1, ('un--mkBounds'(V2))} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--mergeLambdas'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.CLam', E0, E1, E2} -> (fun (V2, V3, V4) -> ('case--mergeLambdas-5217'(V3, V0, V4, V2, ('un--getLams'([], 0, {'Idris.Core.CompileExpr.SubstCEnv.Nil'}, {'Idris.Core.CompileExpr.CLam', V2, V3, V4})))) end(E0, E1, E2)); _ -> {'Idris.Builtin.DPair.MkDPair', V0, V1} end.
'un--mergeLamDef'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V37 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V7 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> case V39 of {'Idris.Prelude.Types.Just', E34} -> (fun (V40) -> begin (V41 = {'Idris.Prelude.Types.Just', V40}), ('case--case block in mergeLamDef-5872'(V1, V0, V6, V40, V41, case V40 of {'Idris.Core.Context.Context.MkGlobalDef', E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54} -> (fun (V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61) -> V59 end(E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V2)) end end(E34)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--mergeLam'(V0, V1, V2) -> case V1 of {'Idris.Core.CompileExpr.MkFun', E0, E1} -> (fun (V3, V4) -> case ('un--mergeLambdas'(V3, V4)) of {'Idris.Builtin.DPair.MkDPair', E2, E3} -> (fun (V5, V6) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkFun', V5, V6}} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> {'Idris.Prelude.Types.Right', V1} end.
'un--largest'(V0, V1, V2) -> case V2 of [] -> V1; [E0 | E1] -> (fun (V3, V4) -> case case V0 of {'Idris.Prelude.EqOrd.MkOrd', E2, E3, E4, E5, E6, E7, E8, E9} -> (fun (V5, V6, V7, V8, V9, V10, V11, V12) -> ((V8(V3))(V1)) end(E2, E3, E4, E5, E6, E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> ('un--largest'(V0, V3, V4)); 0 -> ('un--largest'(V0, V1, V4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--inlineDef'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V37 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V7 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> case V39 of {'Idris.Prelude.Types.Just', E34} -> (fun (V40) -> case V40 of {'Idris.Core.Context.Context.MkGlobalDef', E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54} -> (fun (V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60) -> case V59 of {'Idris.Prelude.Types.Just', E55} -> (fun (V61) -> begin (V62 = ('un--inline'(V0, V1, V61, V2))), case V62 of {'Idris.Prelude.Types.Left', E56} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V64) -> ('Idris.Idris2.Core.Context':'un--setCompiled'(V0, V1, V64, V2)) end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E34)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--inline'(V0, V1, V2, V3) -> case V2 of {'Idris.Core.CompileExpr.MkFun', E0, E1} -> (fun (V4, V5) -> begin (V6 = ('un--doEval'(V4, V0, V1, V5, V3))), case V6 of {'Idris.Prelude.Types.Left', E2} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkFun', V4, V8}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> {'Idris.Prelude.Types.Right', V2} end.
'un--getRefs'(V0) -> case V0 of {'Idris.Core.CompileExpr.MkFun', E0, E1} -> (fun (V1, V2) -> ('un--addRefs'(('Idris.Idris2.Libraries.Data.NameMap':'un--empty'()), V2)) end(E0, E1)); _ -> ('Idris.Idris2.Libraries.Data.NameMap':'un--empty'()) end.
'un--getNewArgs'(V0, V1) -> case V0 of [] -> case V1 of {'Idris.Core.CompileExpr.SubstCEnv.Nil'} -> (fun () -> [] end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; [E0 | E1] -> (fun (V2, V3) -> case V1 of {'Idris.Core.CompileExpr.SubstCEnv.::', E2, E3} -> (fun (V4, V5) -> case V4 of {'Idris.Core.CompileExpr.CRef', E4, E5} -> (fun (V6, V7) -> [V7 | ('un--getNewArgs'(V3, V5))] end(E4, E5)); _ -> [V2 | ('un--getNewArgs'(V3, V5))] end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getLams'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.CompileExpr.CLam', E0, E1, E2} -> (fun (V4, V5, V6) -> ('un--getLams'([V5 | V0], ((V1 + 1) rem 9223372036854775808), {'Idris.Core.CompileExpr.SubstCEnv.::', {'Idris.Core.CompileExpr.CRef', V4, {'Idris.Core.Name.MN', <<"ext"/utf8>>, V1}}, V2}, V6)) end(E0, E1, E2)); _ -> {'Idris.Builtin.DPair.MkDPair', V0, {'Idris.Builtin.MkPair', V2, V3}} end.
'un--getArity'(V0) -> case V0 of {'Idris.Core.CompileExpr.MkFun', E0, E1} -> (fun (V1, V2) -> ('Idris.Idris2.Prelude.Types.List':'un--length'(V1)) end(E0, E1)); {'Idris.Core.CompileExpr.MkCon', E2, E3, E4} -> (fun (V3, V4, V5) -> V4 end(E2, E3, E4)); {'Idris.Core.CompileExpr.MkForeign', E5, E6, E7} -> (fun (V6, V7, V8) -> ('Idris.Idris2.Prelude.Types.List':'un--length'(V7)) end(E5, E6, E7)); {'Idris.Core.CompileExpr.MkError', E8} -> (fun (V9) -> 0 end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--genName'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V8 = begin (V7 = ('erlang':'put'(V0, ((V6 + 1) rem 9223372036854775808)))), {'Idris.Prelude.Types.Right', V7} end), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.Core.Name.MN', V1, V6}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--fixArityTm'(V0, V1, V2, V3) -> case V2 of {'Idris.Core.CompileExpr.CRef', E0, E1} -> (fun (V4, V5) -> fun (V6) -> begin (V8 = begin (V7 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V7} end), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> begin (V41 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V5, case V10 of {'Idris.Core.Context.MkDefs', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33} -> (fun (V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40) -> V11 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V6))), case V41 of {'Idris.Prelude.Types.Left', E34} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V43) -> case V43 of {'Idris.Prelude.Types.Just', E36} -> (fun (V44) -> begin (V66 = case V44 of {'Idris.Core.Context.Context.MkGlobalDef', E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56} -> (fun (V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64) -> case V63 of {'Idris.Prelude.Types.Just', E57} -> (fun (V65) -> ('un--getArity'(V65)) end(E57)); _ -> 0 end end(E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, V66, {'Idris.Core.CompileExpr.CApp', V4, {'Idris.Core.CompileExpr.CRef', V4, V5}, []}, V3))} end end(E36)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--unload'(V3, {'Idris.Core.CompileExpr.CRef', V4, V5}))} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); {'Idris.Core.CompileExpr.CLam', E58, E59, E60} -> (fun (V67, V68, V69) -> fun (V70) -> begin (V71 = (('un--fixArityTm'([V68 | V0], V1, V69, []))(V70))), case V71 of {'Idris.Prelude.Types.Left', E61} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V73) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, {'Idris.Core.CompileExpr.CLam', V67, V68, V73}, V3))} end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E58, E59, E60)); {'Idris.Core.CompileExpr.CLet', E63, E64, E65, E66, E67} -> (fun (V74, V75, V76, V77, V78) -> fun (V79) -> begin (V80 = (('un--fixArityTm'(V0, V1, V77, []))(V79))), case V80 of {'Idris.Prelude.Types.Left', E68} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V82) -> begin (V83 = (('un--fixArityTm'([V75 | V0], V1, V78, []))(V79))), case V83 of {'Idris.Prelude.Types.Left', E70} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V85) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, {'Idris.Core.CompileExpr.CLet', V74, V75, V76, V82, V85}, V3))} end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E63, E64, E65, E66, E67)); {'Idris.Core.CompileExpr.CApp', E72, E73, E74} -> (fun (V86, V87, V88) -> fun (V89) -> begin (V91 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V90) -> ('un--fixArityTm'(V0, V1, V90, [])) end, V88, [], V89))), case V91 of {'Idris.Prelude.Types.Left', E75} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V93) -> (('un--fixArityTm'(V0, V1, V87, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V93, V3))))(V89)) end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E72, E73, E74)); {'Idris.Core.CompileExpr.CCon', E77, E78, E79, E80, E81} -> (fun (V94, V95, V96, V97, V98) -> fun (V99) -> case V3 of [] -> begin (V101 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V100) -> ('un--fixArityTm'(V0, V1, V100, [])) end, V98, [], V99))), case V101 of {'Idris.Prelude.Types.Left', E82} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V103) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCon', V94, V95, V96, V97, V103}} end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> case V3 of [] -> {'Idris.Prelude.Types.Right', V2}; _ -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, V2, V3))} end end end end(E77, E78, E79, E80, E81)); {'Idris.Core.CompileExpr.COp', E84, E85, E86, E87} -> (fun (V104, V105, V106, V107) -> fun (V108) -> case V3 of [] -> begin (V109 = ('nested--10202-4844--in--un--traverseArgs'(V0, V104, V107, V106, V105, V1, V0, V107, V108))), case V109 of {'Idris.Prelude.Types.Left', E88} -> (fun (V110) -> {'Idris.Prelude.Types.Left', V110} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V111) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.COp', V104, V105, V106, V111}} end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> case V3 of [] -> {'Idris.Prelude.Types.Right', V2}; _ -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, V2, V3))} end end end end(E84, E85, E86, E87)); {'Idris.Core.CompileExpr.CExtPrim', E90, E91, E92} -> (fun (V112, V113, V114) -> fun (V115) -> case V3 of [] -> begin (V117 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V116) -> ('un--fixArityTm'(V0, V1, V116, [])) end, V114, [], V115))), case V117 of {'Idris.Prelude.Types.Left', E93} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E93)); {'Idris.Prelude.Types.Right', E94} -> (fun (V119) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CExtPrim', V112, V113, V119}} end(E94)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> case V3 of [] -> {'Idris.Prelude.Types.Right', V2}; _ -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, V2, V3))} end end end end(E90, E91, E92)); {'Idris.Core.CompileExpr.CForce', E95, E96, E97} -> (fun (V120, V121, V122) -> fun (V123) -> begin (V124 = (('un--fixArityTm'(V0, V1, V122, []))(V123))), case V124 of {'Idris.Prelude.Types.Left', E98} -> (fun (V125) -> {'Idris.Prelude.Types.Left', V125} end(E98)); {'Idris.Prelude.Types.Right', E99} -> (fun (V126) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, {'Idris.Core.CompileExpr.CForce', V120, V121, V126}, V3))} end(E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E95, E96, E97)); {'Idris.Core.CompileExpr.CDelay', E100, E101, E102} -> (fun (V127, V128, V129) -> fun (V130) -> begin (V131 = (('un--fixArityTm'(V0, V1, V129, []))(V130))), case V131 of {'Idris.Prelude.Types.Left', E103} -> (fun (V132) -> {'Idris.Prelude.Types.Left', V132} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V133) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, {'Idris.Core.CompileExpr.CDelay', V127, V128, V133}, V3))} end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E100, E101, E102)); {'Idris.Core.CompileExpr.CConCase', E105, E106, E107, E108} -> (fun (V134, V135, V136, V137) -> fun (V138) -> begin (V139 = (('un--fixArityTm'(V0, V1, V135, []))(V138))), case V139 of {'Idris.Prelude.Types.Left', E109} -> (fun (V140) -> {'Idris.Prelude.Types.Left', V140} end(E109)); {'Idris.Prelude.Types.Right', E110} -> (fun (V141) -> begin (V144 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V142) -> fun (V143) -> ('nested--10202-4953--in--un--fixArityAlt'(V0, V137, V136, V135, V134, V3, V1, V142, V143)) end end, V136, [], V138))), case V144 of {'Idris.Prelude.Types.Left', E111} -> (fun (V145) -> {'Idris.Prelude.Types.Left', V145} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V146) -> begin (V151 = case V137 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E113} -> (fun (V147) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V148) -> case V148 of {'Idris.Prelude.Types.Left', E114} -> (fun (V149) -> {'Idris.Prelude.Types.Left', V149} end(E114)); {'Idris.Prelude.Types.Right', E115} -> (fun (V150) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V150}} end(E115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--fixArityTm'(V0, V1, V147, [])), V138)) end(E113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V151 of {'Idris.Prelude.Types.Left', E116} -> (fun (V152) -> {'Idris.Prelude.Types.Left', V152} end(E116)); {'Idris.Prelude.Types.Right', E117} -> (fun (V153) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, {'Idris.Core.CompileExpr.CConCase', V134, V141, V146, V153}, V3))} end(E117)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E105, E106, E107, E108)); {'Idris.Core.CompileExpr.CConstCase', E118, E119, E120, E121} -> (fun (V154, V155, V156, V157) -> fun (V158) -> begin (V159 = (('un--fixArityTm'(V0, V1, V155, []))(V158))), case V159 of {'Idris.Prelude.Types.Left', E122} -> (fun (V160) -> {'Idris.Prelude.Types.Left', V160} end(E122)); {'Idris.Prelude.Types.Right', E123} -> (fun (V161) -> begin (V164 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V162) -> fun (V163) -> ('nested--10202-5006--in--un--fixArityConstAlt'(V0, V157, V156, V155, V154, V3, V1, V162, V163)) end end, V156, [], V158))), case V164 of {'Idris.Prelude.Types.Left', E124} -> (fun (V165) -> {'Idris.Prelude.Types.Left', V165} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V166) -> begin (V171 = case V157 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E126} -> (fun (V167) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V168) -> case V168 of {'Idris.Prelude.Types.Left', E127} -> (fun (V169) -> {'Idris.Prelude.Types.Left', V169} end(E127)); {'Idris.Prelude.Types.Right', E128} -> (fun (V170) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V170}} end(E128)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--fixArityTm'(V0, V1, V167, [])), V158)) end(E126)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V171 of {'Idris.Prelude.Types.Left', E129} -> (fun (V172) -> {'Idris.Prelude.Types.Left', V172} end(E129)); {'Idris.Prelude.Types.Right', E130} -> (fun (V173) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, {'Idris.Core.CompileExpr.CConstCase', V154, V161, V166, V173}, V3))} end(E130)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E118, E119, E120, E121)); _ -> fun (V174) -> case V3 of [] -> {'Idris.Prelude.Types.Right', V2}; _ -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CompileExpr':'un--expandToArity'(V0, 0, V2, V3))} end end end.
'un--fixArityExp'(V0, V1, V2) -> ('un--fixArityTm'(V0, V1, V2, [])).
'un--fixArityDef'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V37 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V7 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> case V39 of {'Idris.Prelude.Types.Just', E34} -> (fun (V40) -> case V40 of {'Idris.Core.Context.Context.MkGlobalDef', E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54} -> (fun (V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60) -> case V59 of {'Idris.Prelude.Types.Just', E55} -> (fun (V61) -> begin (V62 = ('un--fixArity'(V0, V61, V2))), case V62 of {'Idris.Prelude.Types.Left', E56} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V64) -> ('Idris.Idris2.Core.Context':'un--setCompiled'(V0, V1, V64, V2)) end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E34)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--fixArity'(V0, V1, V2) -> case V1 of {'Idris.Core.CompileExpr.MkFun', E0, E1} -> (fun (V3, V4) -> begin (V5 = (('un--fixArityTm'(V3, V0, V4, []))(V2))), case V5 of {'Idris.Prelude.Types.Left', E2} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkFun', V3, V7}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); {'Idris.Core.CompileExpr.MkError', E4} -> (fun (V8) -> begin (V9 = (('un--fixArityTm'([], V0, V8, []))(V2))), case V9 of {'Idris.Prelude.Types.Left', E5} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkError', V11}} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> {'Idris.Prelude.Types.Right', V1} end.
'un--extendLoc'(V0, V1, V2, V3, V4) -> case V3 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Core.TT.Bounds.None'}, V2}}; [E0 | E1] -> (fun (V5, V6) -> begin (V7 = ('un--genName'(V0, <<"cv"/utf8>>, V4))), case V7 of {'Idris.Prelude.Types.Left', E2} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> begin (V10 = ('un--extendLoc'(V0, V1, V2, V6, V4))), case V10 of {'Idris.Prelude.Types.Left', E4} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V12) -> case V12 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V13, V14) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Core.TT.Bounds.Add', V5, V9, V13}, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V1, V9}, V14}}} end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--extend'(V0, V1, V2, V3) -> case V1 of [] -> case V2 of [] -> case V3 of 0 -> V0; _ -> ('erlang':'throw'("Nat case not covered")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; [E0 | E1] -> (fun (V4, V5) -> case V2 of [E2 | E3] -> (fun (V6, V7) -> case V3 of 0 -> ('erlang':'throw'("Nat case not covered")); _ -> begin (V8 = (V3 - 1)), {'Idris.Compiler.Inline.::', V4, ('un--extend'(V0, V5, V7, V8))} end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--evalLocal'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V0 of [] -> fun (V9) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CLocal', V8, V4}))} end; [E0 | E1] -> (fun (V10, V11) -> case V7 of {'Idris.Compiler.Inline.::', E2, E3} -> (fun (V12, V13) -> case V8 of 0 -> case V6 of [] -> fun (V14) -> {'Idris.Prelude.Types.Right', V12} end; _ -> ('un--eval'(V11, V1, V2, V3, V5, V13, V6, ('Idris.Idris2.Core.CompileExpr':'dn--un--weakenNs_Weaken_CExp'(('Idris.Idris2.Core.TT.SizeOf':'un--mkSizeOf'(V11)), V12)))) end; _ -> begin (V15 = (V8 - 1)), ('un--evalLocal'(V11, V1, V2, V3, V4, V5, V6, V13, V15)) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--evalConstAlt'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V7 of {'Idris.Core.CompileExpr.MkConstAlt', E0, E1} -> (fun (V9, V10) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V11) -> case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkConstAlt', V9, V13}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V10)), V8)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--evalAlt'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V8 of {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3, E4} -> (fun (V10, V11, V12, V13, V14) -> begin (V15 = ('un--extendLoc'(V3, V4, V6, V13, V9))), case V15 of {'Idris.Prelude.Types.Left', E5} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V17) -> case V17 of {'Idris.Builtin.MkPair', E7, E8} -> (fun (V18, V19) -> begin (V20 = (('un--eval'(('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V13, V0)), V1, V2, V3, V5, V19, V7, V14))(V9))), case V20 of {'Idris.Prelude.Types.Left', E9} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V22) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkConAlt', V10, V11, V12, V13, ('Idris.Idris2.Core.CompileExpr':'un--refsToLocals'(V18, V22))}} end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--eval'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Core.CompileExpr.CLocal', E288, E289} -> (fun (V8, V9) -> ('un--evalLocal'(V0, V1, V2, V3, V9, V4, V6, V5, V8)) end(E288, E289)); {'Idris.Core.CompileExpr.CRef', E290, E291} -> (fun (V10, V11) -> ('case--eval-2993'(V0, V1, V11, V10, V6, V5, V4, V3, V2, {'Idris.Builtin.MkPair', ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V11, {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--primIONS'()), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"io_bind"/utf8>>}}})), V6})) end(E290, E291)); _ -> case V6 of [] -> case V7 of {'Idris.Core.CompileExpr.CLam', E184, E185, E186} -> (fun (V12, V13, V14) -> fun (V15) -> begin (V16 = ('un--genName'(V3, <<"lamv"/utf8>>, V15))), case V16 of {'Idris.Prelude.Types.Left', E187} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E187)); {'Idris.Prelude.Types.Right', E188} -> (fun (V18) -> begin (V19 = (('un--eval'([V13 | V0], V1, V2, V3, V4, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V12, V18}, V5}, [], V14))(V15))), case V19 of {'Idris.Prelude.Types.Left', E189} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E189)); {'Idris.Prelude.Types.Right', E190} -> (fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CLam', V12, V13, ('un--refToLocal'(V18, V13, V21))}} end(E190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E188)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E184, E185, E186)); _ -> case V7 of {'Idris.Core.CompileExpr.CLet', E92, E93, E94, E95, E96} -> (fun (V22, V23, V24, V25, V26) -> case V24 of 0 -> fun (V27) -> begin (V28 = ('un--genName'(V3, <<"letv"/utf8>>, V27))), case V28 of {'Idris.Prelude.Types.Left', E97} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V30) -> begin (V31 = (('un--eval'([V23 | V0], V1, V2, V3, V4, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V22, V30}, V5}, [], V26))(V27))), case V31 of {'Idris.Prelude.Types.Left', E99} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V33) -> begin (V34 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V25))(V27))), case V34 of {'Idris.Prelude.Types.Left', E101} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V36) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CLet', V22, V23, 0, V36, ('un--refToLocal'(V30, V23, V33))}))} end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> begin (V37 = ('un--used'([V23 | ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V0, V1))], 0, V26))), fun (V38) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V37, 1)) of 1 -> begin (V39 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V25))(V38))), case V39 of {'Idris.Prelude.Types.Left', E103} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V41) -> (('un--eval'([V23 | V0], V1, V2, V3, V4, {'Idris.Compiler.Inline.::', V41, V5}, V6, V26))(V38)) end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V42 = ('un--genName'(V3, <<"letv"/utf8>>, V38))), case V42 of {'Idris.Prelude.Types.Left', E105} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V44) -> begin (V45 = (('un--eval'([V23 | V0], V1, V2, V3, V4, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V22, V44}, V5}, V6, V26))(V38))), case V45 of {'Idris.Prelude.Types.Left', E107} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V47) -> begin (V48 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V25))(V38))), case V48 of {'Idris.Prelude.Types.Left', E109} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E109)); {'Idris.Prelude.Types.Right', E110} -> (fun (V50) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CLet', V22, V23, 1, V50, ('un--refToLocal'(V44, V23, V47))}} end(E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E92, E93, E94, E95, E96)); {'Idris.Core.CompileExpr.CApp', E111, E112, E113} -> (fun (V51, V52, V53) -> fun (V54) -> begin (V56 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V55) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V55)) end, V53, [], V54))), case V56 of {'Idris.Prelude.Types.Left', E114} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E114)); {'Idris.Prelude.Types.Right', E115} -> (fun (V58) -> (('un--eval'(V0, V1, V2, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V58, V6)), V52))(V54)) end(E115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E111, E112, E113)); {'Idris.Core.CompileExpr.CCon', E116, E117, E118, E119, E120} -> (fun (V59, V60, V61, V62, V63) -> fun (V64) -> begin (V66 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V65) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V65)) end, V63, [], V64))), case V66 of {'Idris.Prelude.Types.Left', E121} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E121)); {'Idris.Prelude.Types.Right', E122} -> (fun (V68) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CCon', V59, V60, V61, V62, V68}))} end(E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E116, E117, E118, E119, E120)); {'Idris.Core.CompileExpr.COp', E123, E124, E125, E126} -> (fun (V69, V70, V71, V72) -> fun (V73) -> begin (V75 = ('Idris.Idris2.Core.Core':'un--traverseVect'(fun (V74) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V74)) end, V72, V73))), case V75 of {'Idris.Prelude.Types.Left', E127} -> (fun (V76) -> {'Idris.Prelude.Types.Left', V76} end(E127)); {'Idris.Prelude.Types.Right', E128} -> (fun (V77) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.COp', V69, V70, V71, V77}))} end(E128)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E123, E124, E125, E126)); {'Idris.Core.CompileExpr.CExtPrim', E129, E130, E131} -> (fun (V78, V79, V80) -> fun (V81) -> begin (V83 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V82) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V82)) end, V80, [], V81))), case V83 of {'Idris.Prelude.Types.Left', E132} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E132)); {'Idris.Prelude.Types.Right', E133} -> (fun (V85) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CExtPrim', V78, V79, V85}))} end(E133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E129, E130, E131)); {'Idris.Core.CompileExpr.CForce', E134, E135, E136} -> (fun (V86, V87, V88) -> fun (V89) -> begin (V90 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V88))(V89))), case V90 of {'Idris.Prelude.Types.Left', E137} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E137)); {'Idris.Prelude.Types.Right', E138} -> (fun (V92) -> case V92 of {'Idris.Core.CompileExpr.CDelay', E139, E140, E141} -> (fun (V93, V94, V95) -> (('un--eval'([], V1, V2, V3, V4, {'Idris.Compiler.Inline.Nil'}, V6, V95))(V89)) end(E139, E140, E141)); _ -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CForce', V86, V87, V92}))} end end(E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E134, E135, E136)); {'Idris.Core.CompileExpr.CDelay', E142, E143, E144} -> (fun (V96, V97, V98) -> fun (V99) -> begin (V100 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V98))(V99))), case V100 of {'Idris.Prelude.Types.Left', E145} -> (fun (V101) -> {'Idris.Prelude.Types.Left', V101} end(E145)); {'Idris.Prelude.Types.Right', E146} -> (fun (V102) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CDelay', V96, V97, V102}))} end(E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E142, E143, E144)); {'Idris.Core.CompileExpr.CConCase', E147, E148, E149, E150} -> (fun (V103, V104, V105, V106) -> fun (V107) -> begin (V108 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V104))(V107))), case V108 of {'Idris.Prelude.Types.Left', E151} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E151)); {'Idris.Prelude.Types.Right', E152} -> (fun (V110) -> begin (V111 = ('nested--7973-3759--in--un--update'(V0, V1, V106, V105, V104, V103, V6, V5, V4, V3, V2, V0, V104, V5, V110))), begin (V112 = (('un--pickAlt'(V0, V1, V2, V3, V4, V111, V6, V110, V105, V106))(V107))), case V112 of {'Idris.Prelude.Types.Left', E153} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E153)); {'Idris.Prelude.Types.Right', E154} -> (fun (V114) -> case V114 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V119 = case V106 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E155} -> (fun (V115) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V116) -> case V116 of {'Idris.Prelude.Types.Left', E156} -> (fun (V117) -> {'Idris.Prelude.Types.Left', V117} end(E156)); {'Idris.Prelude.Types.Right', E157} -> (fun (V118) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V118}} end(E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V111, V6, V115)), V107)) end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V119 of {'Idris.Prelude.Types.Left', E158} -> (fun (V120) -> {'Idris.Prelude.Types.Left', V120} end(E158)); {'Idris.Prelude.Types.Right', E159} -> (fun (V121) -> begin (V124 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V122) -> fun (V123) -> ('un--evalAlt'(V0, V1, V2, V3, V103, V4, V111, V6, V122, V123)) end end, V105, [], V107))), case V124 of {'Idris.Prelude.Types.Left', E160} -> (fun (V125) -> {'Idris.Prelude.Types.Left', V125} end(E160)); {'Idris.Prelude.Types.Right', E161} -> (fun (V126) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CaseOpts':'un--caseOfCase'({'Idris.Core.CompileExpr.CConCase', V103, V110, V126, V121}))} end(E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E162} -> (fun (V127) -> {'Idris.Prelude.Types.Right', V127} end(E162)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E152)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E147, E148, E149, E150)); {'Idris.Core.CompileExpr.CConstCase', E163, E164, E165, E166} -> (fun (V128, V129, V130, V131) -> fun (V132) -> begin (V133 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V129))(V132))), case V133 of {'Idris.Prelude.Types.Left', E167} -> (fun (V134) -> {'Idris.Prelude.Types.Left', V134} end(E167)); {'Idris.Prelude.Types.Right', E168} -> (fun (V135) -> begin (V136 = (('un--pickConstAlt'(V0, V1, V2, V3, V4, V5, V6, V135, V130, V131))(V132))), case V136 of {'Idris.Prelude.Types.Left', E169} -> (fun (V137) -> {'Idris.Prelude.Types.Left', V137} end(E169)); {'Idris.Prelude.Types.Right', E170} -> (fun (V138) -> case V138 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V143 = case V131 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E171} -> (fun (V139) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V140) -> case V140 of {'Idris.Prelude.Types.Left', E172} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E172)); {'Idris.Prelude.Types.Right', E173} -> (fun (V142) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V142}} end(E173)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V139)), V132)) end(E171)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V143 of {'Idris.Prelude.Types.Left', E174} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E174)); {'Idris.Prelude.Types.Right', E175} -> (fun (V145) -> begin (V148 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V146) -> fun (V147) -> ('un--evalConstAlt'(V0, V1, V2, V3, V4, V5, V6, V146, V147)) end end, V130, [], V132))), case V148 of {'Idris.Prelude.Types.Left', E176} -> (fun (V149) -> {'Idris.Prelude.Types.Left', V149} end(E176)); {'Idris.Prelude.Types.Right', E177} -> (fun (V150) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CaseOpts':'un--caseOfCase'({'Idris.Core.CompileExpr.CConstCase', V128, V135, V150, V145}))} end(E177)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E175)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E178} -> (fun (V151) -> {'Idris.Prelude.Types.Right', V151} end(E178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E170)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E168)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E163, E164, E165, E166)); {'Idris.Core.CompileExpr.CPrimVal', E179, E180} -> (fun (V152, V153) -> fun (V154) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CPrimVal', V152, V153}))} end end(E179, E180)); {'Idris.Core.CompileExpr.CErased', E181} -> (fun (V155) -> fun (V156) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CErased', V155}))} end end(E181)); {'Idris.Core.CompileExpr.CCrash', E182, E183} -> (fun (V157, V158) -> fun (V159) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CCrash', V157, V158}))} end end(E182, E183)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; [E191 | E192] -> (fun (V160, V161) -> case V7 of {'Idris.Core.CompileExpr.CLam', E285, E286, E287} -> (fun (V162, V163, V164) -> ('un--eval'([V163 | V0], V1, V2, V3, V4, {'Idris.Compiler.Inline.::', V160, V5}, V161, V164)) end(E285, E286, E287)); _ -> case V7 of {'Idris.Core.CompileExpr.CLet', E193, E194, E195, E196, E197} -> (fun (V165, V166, V167, V168, V169) -> case V167 of 0 -> fun (V170) -> begin (V171 = ('un--genName'(V3, <<"letv"/utf8>>, V170))), case V171 of {'Idris.Prelude.Types.Left', E198} -> (fun (V172) -> {'Idris.Prelude.Types.Left', V172} end(E198)); {'Idris.Prelude.Types.Right', E199} -> (fun (V173) -> begin (V174 = (('un--eval'([V166 | V0], V1, V2, V3, V4, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V165, V173}, V5}, [], V169))(V170))), case V174 of {'Idris.Prelude.Types.Left', E200} -> (fun (V175) -> {'Idris.Prelude.Types.Left', V175} end(E200)); {'Idris.Prelude.Types.Right', E201} -> (fun (V176) -> begin (V177 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V168))(V170))), case V177 of {'Idris.Prelude.Types.Left', E202} -> (fun (V178) -> {'Idris.Prelude.Types.Left', V178} end(E202)); {'Idris.Prelude.Types.Right', E203} -> (fun (V179) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CLet', V165, V166, 0, V179, ('un--refToLocal'(V173, V166, V176))}))} end(E203)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E201)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E199)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> begin (V180 = ('un--used'([V166 | ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V0, V1))], 0, V169))), fun (V181) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V180, 1)) of 1 -> begin (V182 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V168))(V181))), case V182 of {'Idris.Prelude.Types.Left', E204} -> (fun (V183) -> {'Idris.Prelude.Types.Left', V183} end(E204)); {'Idris.Prelude.Types.Right', E205} -> (fun (V184) -> (('un--eval'([V166 | V0], V1, V2, V3, V4, {'Idris.Compiler.Inline.::', V184, V5}, V6, V169))(V181)) end(E205)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V185 = ('un--genName'(V3, <<"letv"/utf8>>, V181))), case V185 of {'Idris.Prelude.Types.Left', E206} -> (fun (V186) -> {'Idris.Prelude.Types.Left', V186} end(E206)); {'Idris.Prelude.Types.Right', E207} -> (fun (V187) -> begin (V188 = (('un--eval'([V166 | V0], V1, V2, V3, V4, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V165, V187}, V5}, V6, V169))(V181))), case V188 of {'Idris.Prelude.Types.Left', E208} -> (fun (V189) -> {'Idris.Prelude.Types.Left', V189} end(E208)); {'Idris.Prelude.Types.Right', E209} -> (fun (V190) -> begin (V191 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V168))(V181))), case V191 of {'Idris.Prelude.Types.Left', E210} -> (fun (V192) -> {'Idris.Prelude.Types.Left', V192} end(E210)); {'Idris.Prelude.Types.Right', E211} -> (fun (V193) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CLet', V165, V166, 1, V193, ('un--refToLocal'(V187, V166, V190))}} end(E211)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E209)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E207)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E193, E194, E195, E196, E197)); {'Idris.Core.CompileExpr.CApp', E212, E213, E214} -> (fun (V194, V195, V196) -> fun (V197) -> begin (V199 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V198) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V198)) end, V196, [], V197))), case V199 of {'Idris.Prelude.Types.Left', E215} -> (fun (V200) -> {'Idris.Prelude.Types.Left', V200} end(E215)); {'Idris.Prelude.Types.Right', E216} -> (fun (V201) -> (('un--eval'(V0, V1, V2, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V201, V6)), V195))(V197)) end(E216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E212, E213, E214)); {'Idris.Core.CompileExpr.CCon', E217, E218, E219, E220, E221} -> (fun (V202, V203, V204, V205, V206) -> fun (V207) -> begin (V209 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V208) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V208)) end, V206, [], V207))), case V209 of {'Idris.Prelude.Types.Left', E222} -> (fun (V210) -> {'Idris.Prelude.Types.Left', V210} end(E222)); {'Idris.Prelude.Types.Right', E223} -> (fun (V211) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CCon', V202, V203, V204, V205, V211}))} end(E223)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E217, E218, E219, E220, E221)); {'Idris.Core.CompileExpr.COp', E224, E225, E226, E227} -> (fun (V212, V213, V214, V215) -> fun (V216) -> begin (V218 = ('Idris.Idris2.Core.Core':'un--traverseVect'(fun (V217) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V217)) end, V215, V216))), case V218 of {'Idris.Prelude.Types.Left', E228} -> (fun (V219) -> {'Idris.Prelude.Types.Left', V219} end(E228)); {'Idris.Prelude.Types.Right', E229} -> (fun (V220) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.COp', V212, V213, V214, V220}))} end(E229)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E224, E225, E226, E227)); {'Idris.Core.CompileExpr.CExtPrim', E230, E231, E232} -> (fun (V221, V222, V223) -> fun (V224) -> begin (V226 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V225) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V225)) end, V223, [], V224))), case V226 of {'Idris.Prelude.Types.Left', E233} -> (fun (V227) -> {'Idris.Prelude.Types.Left', V227} end(E233)); {'Idris.Prelude.Types.Right', E234} -> (fun (V228) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CExtPrim', V221, V222, V228}))} end(E234)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E230, E231, E232)); {'Idris.Core.CompileExpr.CForce', E235, E236, E237} -> (fun (V229, V230, V231) -> fun (V232) -> begin (V233 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V231))(V232))), case V233 of {'Idris.Prelude.Types.Left', E238} -> (fun (V234) -> {'Idris.Prelude.Types.Left', V234} end(E238)); {'Idris.Prelude.Types.Right', E239} -> (fun (V235) -> case V235 of {'Idris.Core.CompileExpr.CDelay', E240, E241, E242} -> (fun (V236, V237, V238) -> (('un--eval'([], V1, V2, V3, V4, {'Idris.Compiler.Inline.Nil'}, V6, V238))(V232)) end(E240, E241, E242)); _ -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CForce', V229, V230, V235}))} end end(E239)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E235, E236, E237)); {'Idris.Core.CompileExpr.CDelay', E243, E244, E245} -> (fun (V239, V240, V241) -> fun (V242) -> begin (V243 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V241))(V242))), case V243 of {'Idris.Prelude.Types.Left', E246} -> (fun (V244) -> {'Idris.Prelude.Types.Left', V244} end(E246)); {'Idris.Prelude.Types.Right', E247} -> (fun (V245) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CDelay', V239, V240, V245}))} end(E247)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E243, E244, E245)); {'Idris.Core.CompileExpr.CConCase', E248, E249, E250, E251} -> (fun (V246, V247, V248, V249) -> fun (V250) -> begin (V251 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V247))(V250))), case V251 of {'Idris.Prelude.Types.Left', E252} -> (fun (V252) -> {'Idris.Prelude.Types.Left', V252} end(E252)); {'Idris.Prelude.Types.Right', E253} -> (fun (V253) -> begin (V254 = ('nested--7973-3759--in--un--update'(V0, V1, V249, V248, V247, V246, V6, V5, V4, V3, V2, V0, V247, V5, V253))), begin (V255 = (('un--pickAlt'(V0, V1, V2, V3, V4, V254, V6, V253, V248, V249))(V250))), case V255 of {'Idris.Prelude.Types.Left', E254} -> (fun (V256) -> {'Idris.Prelude.Types.Left', V256} end(E254)); {'Idris.Prelude.Types.Right', E255} -> (fun (V257) -> case V257 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V262 = case V249 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E256} -> (fun (V258) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V259) -> case V259 of {'Idris.Prelude.Types.Left', E257} -> (fun (V260) -> {'Idris.Prelude.Types.Left', V260} end(E257)); {'Idris.Prelude.Types.Right', E258} -> (fun (V261) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V261}} end(E258)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V254, V6, V258)), V250)) end(E256)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V262 of {'Idris.Prelude.Types.Left', E259} -> (fun (V263) -> {'Idris.Prelude.Types.Left', V263} end(E259)); {'Idris.Prelude.Types.Right', E260} -> (fun (V264) -> begin (V267 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V265) -> fun (V266) -> ('un--evalAlt'(V0, V1, V2, V3, V246, V4, V254, V6, V265, V266)) end end, V248, [], V250))), case V267 of {'Idris.Prelude.Types.Left', E261} -> (fun (V268) -> {'Idris.Prelude.Types.Left', V268} end(E261)); {'Idris.Prelude.Types.Right', E262} -> (fun (V269) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CaseOpts':'un--caseOfCase'({'Idris.Core.CompileExpr.CConCase', V246, V253, V269, V264}))} end(E262)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E260)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E263} -> (fun (V270) -> {'Idris.Prelude.Types.Right', V270} end(E263)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E255)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E253)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E248, E249, E250, E251)); {'Idris.Core.CompileExpr.CConstCase', E264, E265, E266, E267} -> (fun (V271, V272, V273, V274) -> fun (V275) -> begin (V276 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V272))(V275))), case V276 of {'Idris.Prelude.Types.Left', E268} -> (fun (V277) -> {'Idris.Prelude.Types.Left', V277} end(E268)); {'Idris.Prelude.Types.Right', E269} -> (fun (V278) -> begin (V279 = (('un--pickConstAlt'(V0, V1, V2, V3, V4, V5, V6, V278, V273, V274))(V275))), case V279 of {'Idris.Prelude.Types.Left', E270} -> (fun (V280) -> {'Idris.Prelude.Types.Left', V280} end(E270)); {'Idris.Prelude.Types.Right', E271} -> (fun (V281) -> case V281 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V286 = case V274 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E272} -> (fun (V282) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V283) -> case V283 of {'Idris.Prelude.Types.Left', E273} -> (fun (V284) -> {'Idris.Prelude.Types.Left', V284} end(E273)); {'Idris.Prelude.Types.Right', E274} -> (fun (V285) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V285}} end(E274)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V282)), V275)) end(E272)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V286 of {'Idris.Prelude.Types.Left', E275} -> (fun (V287) -> {'Idris.Prelude.Types.Left', V287} end(E275)); {'Idris.Prelude.Types.Right', E276} -> (fun (V288) -> begin (V291 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V289) -> fun (V290) -> ('un--evalConstAlt'(V0, V1, V2, V3, V4, V5, V6, V289, V290)) end end, V273, [], V275))), case V291 of {'Idris.Prelude.Types.Left', E277} -> (fun (V292) -> {'Idris.Prelude.Types.Left', V292} end(E277)); {'Idris.Prelude.Types.Right', E278} -> (fun (V293) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CaseOpts':'un--caseOfCase'({'Idris.Core.CompileExpr.CConstCase', V271, V278, V293, V288}))} end(E278)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E276)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E279} -> (fun (V294) -> {'Idris.Prelude.Types.Right', V294} end(E279)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E271)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E269)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E264, E265, E266, E267)); {'Idris.Core.CompileExpr.CPrimVal', E280, E281} -> (fun (V295, V296) -> fun (V297) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CPrimVal', V295, V296}))} end end(E280, E281)); {'Idris.Core.CompileExpr.CErased', E282} -> (fun (V298) -> fun (V299) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CErased', V298}))} end end(E282)); {'Idris.Core.CompileExpr.CCrash', E283, E284} -> (fun (V300, V301) -> fun (V302) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CCrash', V300, V301}))} end end(E283, E284)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E191, E192)); _ -> case V7 of {'Idris.Core.CompileExpr.CLet', E0, E1, E2, E3, E4} -> (fun (V303, V304, V305, V306, V307) -> case V305 of 0 -> fun (V308) -> begin (V309 = ('un--genName'(V3, <<"letv"/utf8>>, V308))), case V309 of {'Idris.Prelude.Types.Left', E5} -> (fun (V310) -> {'Idris.Prelude.Types.Left', V310} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V311) -> begin (V312 = (('un--eval'([V304 | V0], V1, V2, V3, V4, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V303, V311}, V5}, [], V307))(V308))), case V312 of {'Idris.Prelude.Types.Left', E7} -> (fun (V313) -> {'Idris.Prelude.Types.Left', V313} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V314) -> begin (V315 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V306))(V308))), case V315 of {'Idris.Prelude.Types.Left', E9} -> (fun (V316) -> {'Idris.Prelude.Types.Left', V316} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V317) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CLet', V303, V304, 0, V317, ('un--refToLocal'(V311, V304, V314))}))} end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 1 -> begin (V318 = ('un--used'([V304 | ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V0, V1))], 0, V307))), fun (V319) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V318, 1)) of 1 -> begin (V320 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V306))(V319))), case V320 of {'Idris.Prelude.Types.Left', E11} -> (fun (V321) -> {'Idris.Prelude.Types.Left', V321} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V322) -> (('un--eval'([V304 | V0], V1, V2, V3, V4, {'Idris.Compiler.Inline.::', V322, V5}, V6, V307))(V319)) end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V323 = ('un--genName'(V3, <<"letv"/utf8>>, V319))), case V323 of {'Idris.Prelude.Types.Left', E13} -> (fun (V324) -> {'Idris.Prelude.Types.Left', V324} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V325) -> begin (V326 = (('un--eval'([V304 | V0], V1, V2, V3, V4, {'Idris.Compiler.Inline.::', {'Idris.Core.CompileExpr.CRef', V303, V325}, V5}, V6, V307))(V319))), case V326 of {'Idris.Prelude.Types.Left', E15} -> (fun (V327) -> {'Idris.Prelude.Types.Left', V327} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V328) -> begin (V329 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V306))(V319))), case V329 of {'Idris.Prelude.Types.Left', E17} -> (fun (V330) -> {'Idris.Prelude.Types.Left', V330} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V331) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CLet', V303, V304, 1, V331, ('un--refToLocal'(V325, V304, V328))}} end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1, E2, E3, E4)); {'Idris.Core.CompileExpr.CApp', E19, E20, E21} -> (fun (V332, V333, V334) -> fun (V335) -> begin (V337 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V336) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V336)) end, V334, [], V335))), case V337 of {'Idris.Prelude.Types.Left', E22} -> (fun (V338) -> {'Idris.Prelude.Types.Left', V338} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V339) -> (('un--eval'(V0, V1, V2, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V339, V6)), V333))(V335)) end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E19, E20, E21)); {'Idris.Core.CompileExpr.CCon', E24, E25, E26, E27, E28} -> (fun (V340, V341, V342, V343, V344) -> fun (V345) -> begin (V347 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V346) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V346)) end, V344, [], V345))), case V347 of {'Idris.Prelude.Types.Left', E29} -> (fun (V348) -> {'Idris.Prelude.Types.Left', V348} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V349) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CCon', V340, V341, V342, V343, V349}))} end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E24, E25, E26, E27, E28)); {'Idris.Core.CompileExpr.COp', E31, E32, E33, E34} -> (fun (V350, V351, V352, V353) -> fun (V354) -> begin (V356 = ('Idris.Idris2.Core.Core':'un--traverseVect'(fun (V355) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V355)) end, V353, V354))), case V356 of {'Idris.Prelude.Types.Left', E35} -> (fun (V357) -> {'Idris.Prelude.Types.Left', V357} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V358) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.COp', V350, V351, V352, V358}))} end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E31, E32, E33, E34)); {'Idris.Core.CompileExpr.CExtPrim', E37, E38, E39} -> (fun (V359, V360, V361) -> fun (V362) -> begin (V364 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V363) -> ('un--eval'(V0, V1, V2, V3, V4, V5, [], V363)) end, V361, [], V362))), case V364 of {'Idris.Prelude.Types.Left', E40} -> (fun (V365) -> {'Idris.Prelude.Types.Left', V365} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V366) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CExtPrim', V359, V360, V366}))} end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E37, E38, E39)); {'Idris.Core.CompileExpr.CForce', E42, E43, E44} -> (fun (V367, V368, V369) -> fun (V370) -> begin (V371 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V369))(V370))), case V371 of {'Idris.Prelude.Types.Left', E45} -> (fun (V372) -> {'Idris.Prelude.Types.Left', V372} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V373) -> case V373 of {'Idris.Core.CompileExpr.CDelay', E47, E48, E49} -> (fun (V374, V375, V376) -> (('un--eval'([], V1, V2, V3, V4, {'Idris.Compiler.Inline.Nil'}, V6, V376))(V370)) end(E47, E48, E49)); _ -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CForce', V367, V368, V373}))} end end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E42, E43, E44)); {'Idris.Core.CompileExpr.CDelay', E50, E51, E52} -> (fun (V377, V378, V379) -> fun (V380) -> begin (V381 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V379))(V380))), case V381 of {'Idris.Prelude.Types.Left', E53} -> (fun (V382) -> {'Idris.Prelude.Types.Left', V382} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V383) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CDelay', V377, V378, V383}))} end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E50, E51, E52)); {'Idris.Core.CompileExpr.CConCase', E55, E56, E57, E58} -> (fun (V384, V385, V386, V387) -> fun (V388) -> begin (V389 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V385))(V388))), case V389 of {'Idris.Prelude.Types.Left', E59} -> (fun (V390) -> {'Idris.Prelude.Types.Left', V390} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V391) -> begin (V392 = ('nested--7973-3759--in--un--update'(V0, V1, V387, V386, V385, V384, V6, V5, V4, V3, V2, V0, V385, V5, V391))), begin (V393 = (('un--pickAlt'(V0, V1, V2, V3, V4, V392, V6, V391, V386, V387))(V388))), case V393 of {'Idris.Prelude.Types.Left', E61} -> (fun (V394) -> {'Idris.Prelude.Types.Left', V394} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V395) -> case V395 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V400 = case V387 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E63} -> (fun (V396) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V397) -> case V397 of {'Idris.Prelude.Types.Left', E64} -> (fun (V398) -> {'Idris.Prelude.Types.Left', V398} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V399) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V399}} end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V392, V6, V396)), V388)) end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V400 of {'Idris.Prelude.Types.Left', E66} -> (fun (V401) -> {'Idris.Prelude.Types.Left', V401} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V402) -> begin (V405 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V403) -> fun (V404) -> ('un--evalAlt'(V0, V1, V2, V3, V384, V4, V392, V6, V403, V404)) end end, V386, [], V388))), case V405 of {'Idris.Prelude.Types.Left', E68} -> (fun (V406) -> {'Idris.Prelude.Types.Left', V406} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V407) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CaseOpts':'un--caseOfCase'({'Idris.Core.CompileExpr.CConCase', V384, V391, V407, V402}))} end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E70} -> (fun (V408) -> {'Idris.Prelude.Types.Right', V408} end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E55, E56, E57, E58)); {'Idris.Core.CompileExpr.CConstCase', E71, E72, E73, E74} -> (fun (V409, V410, V411, V412) -> fun (V413) -> begin (V414 = (('un--eval'(V0, V1, V2, V3, V4, V5, [], V410))(V413))), case V414 of {'Idris.Prelude.Types.Left', E75} -> (fun (V415) -> {'Idris.Prelude.Types.Left', V415} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V416) -> begin (V417 = (('un--pickConstAlt'(V0, V1, V2, V3, V4, V5, V6, V416, V411, V412))(V413))), case V417 of {'Idris.Prelude.Types.Left', E77} -> (fun (V418) -> {'Idris.Prelude.Types.Left', V418} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V419) -> case V419 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V424 = case V412 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E79} -> (fun (V420) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V421) -> case V421 of {'Idris.Prelude.Types.Left', E80} -> (fun (V422) -> {'Idris.Prelude.Types.Left', V422} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V423) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V423}} end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--eval'(V0, V1, V2, V3, V4, V5, V6, V420)), V413)) end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V424 of {'Idris.Prelude.Types.Left', E82} -> (fun (V425) -> {'Idris.Prelude.Types.Left', V425} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V426) -> begin (V429 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V427) -> fun (V428) -> ('un--evalConstAlt'(V0, V1, V2, V3, V4, V5, V6, V427, V428)) end end, V411, [], V413))), case V429 of {'Idris.Prelude.Types.Left', E84} -> (fun (V430) -> {'Idris.Prelude.Types.Left', V430} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V431) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Compiler.CaseOpts':'un--caseOfCase'({'Idris.Core.CompileExpr.CConstCase', V409, V416, V431, V426}))} end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E86} -> (fun (V432) -> {'Idris.Prelude.Types.Right', V432} end(E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E71, E72, E73, E74)); {'Idris.Core.CompileExpr.CPrimVal', E87, E88} -> (fun (V433, V434) -> fun (V435) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CPrimVal', V433, V434}))} end end(E87, E88)); {'Idris.Core.CompileExpr.CErased', E89} -> (fun (V436) -> fun (V437) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CErased', V436}))} end end(E89)); {'Idris.Core.CompileExpr.CCrash', E90, E91} -> (fun (V438, V439) -> fun (V440) -> {'Idris.Prelude.Types.Right', ('un--unload'(V6, {'Idris.Core.CompileExpr.CCrash', V438, V439}))} end end(E90, E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--doEval'(V0, V1, V2, V3, V4) -> begin (V5 = ('Idris.Idris2.Core.Core':'un--newRef'({'Idris.Compiler.Inline.LVar'}, 0, V4))), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> begin (V8 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"compiler.inline.eval"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<": "/utf8>>, ('Idris.Idris2.Core.CompileExpr':'dn--un--show_Show_(CExp $vars)'(V0, V3)))))) end, V4))), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> begin (V11 = (('un--eval'([], V0, V1, V7, [], {'Idris.Compiler.Inline.Nil'}, [], V3))(V4))), case V11 of {'Idris.Prelude.Types.Left', E4} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V13) -> begin (V14 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"compiler.inline.eval"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Inlined: "/utf8>>, ('Idris.Idris2.Core.CompileExpr':'dn--un--show_Show_(CExp $vars)'(V0, V13)))) end, V4))), case V14 of {'Idris.Prelude.Types.Left', E6} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Right', V13} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--compileAndInlineAll'(V0, V1) -> begin (V3 = begin (V2 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2} end), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> begin (V36 = ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'(case V5 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V30 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), begin (V39 = ('Idris.Idris2.Core.Core':'un--filterM'(fun (V37) -> fun (V38) -> ('nested--11896-6151--in--un--nonErased'(V0, V37, V38)) end end, V36, V1))), case V39 of {'Idris.Prelude.Types.Left', E32} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V41) -> begin (V44 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V42) -> fun (V43) -> ('Idris.Idris2.Compiler.CompileExpr':'un--compileDef'(V0, V42, V43)) end end, V41, V1))), case V44 of {'Idris.Prelude.Types.Left', E34} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V46) -> begin (V49 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V47) -> fun (V48) -> ('Idris.Idris2.Compiler.Identity':'un--setIdentity'(V0, V47, V48)) end end, V41, V1))), case V49 of {'Idris.Prelude.Types.Left', E36} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V51) -> begin (V52 = (('nested--11896-6150--in--un--transform'(V0, (1 + (1 + (1 + 0))), V41))(V1))), case V52 of {'Idris.Prelude.Types.Left', E38} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V54) -> begin (V57 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V55) -> fun (V56) -> ('un--updateCallGraph'(V0, V55, V56)) end end, V41, V1))), case V57 of {'Idris.Prelude.Types.Left', E40} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V59) -> begin (V60 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V1))), case V60 of {'Idris.Prelude.Types.Left', E42} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V62) -> case ('Idris.Idris2.Data.List':'un--isNil'(case V62 of {'Idris.Core.Options.MkSessionOpts', E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69} -> (fun (V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88) -> V86 end(E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of 1 -> {'Idris.Prelude.Types.Right', 0}; 0 -> ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V89) -> fun (V90) -> ('un--addArityHash'(V0, V89, V90)) end end, V41, V1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--addRefsConstAlts'(V0, V1) -> case V1 of [] -> V0; [E0 | E1] -> (fun (V2, V3) -> case V2 of {'Idris.Core.CompileExpr.MkConstAlt', E2, E3} -> (fun (V4, V5) -> ('un--addRefsConstAlts'(('un--addRefs'(V0, V5)), V3)) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--addRefsConAlts'(V0, V1) -> case V1 of [] -> V0; [E0 | E1] -> (fun (V2, V3) -> case V2 of {'Idris.Core.CompileExpr.MkConAlt', E2, E3, E4, E5, E6} -> (fun (V4, V5, V6, V7, V8) -> ('un--addRefsConAlts'(('un--addRefs'(V0, V8)), V3)) end(E2, E3, E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--addRefsArgs'(V0, V1) -> case V1 of [] -> V0; [E0 | E1] -> (fun (V2, V3) -> ('un--addRefsArgs'(('un--addRefs'(V0, V2)), V3)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--addRefs'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.CRef', E0, E1} -> (fun (V2, V3) -> ('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V3, 0, V0)) end(E0, E1)); {'Idris.Core.CompileExpr.CLam', E2, E3, E4} -> (fun (V4, V5, V6) -> ('un--addRefs'(V0, V6)) end(E2, E3, E4)); {'Idris.Core.CompileExpr.CLet', E5, E6, E7, E8, E9} -> (fun (V7, V8, V9, V10, V11) -> ('un--addRefs'(('un--addRefs'(V0, V10)), V11)) end(E5, E6, E7, E8, E9)); {'Idris.Core.CompileExpr.CApp', E10, E11, E12} -> (fun (V12, V13, V14) -> ('un--addRefsArgs'(('un--addRefs'(V0, V13)), V14)) end(E10, E11, E12)); {'Idris.Core.CompileExpr.CCon', E13, E14, E15, E16, E17} -> (fun (V15, V16, V17, V18, V19) -> ('un--addRefsArgs'(('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V16, 0, V0)), V19)) end(E13, E14, E15, E16, E17)); {'Idris.Core.CompileExpr.COp', E18, E19, E20, E21} -> (fun (V20, V21, V22, V23) -> ('un--addRefsArgs'(V0, ('Idris.Idris2.Data.Vect':'dn--un--toList_Foldable_(Vect $n)'(V23)))) end(E18, E19, E20, E21)); {'Idris.Core.CompileExpr.CExtPrim', E22, E23, E24} -> (fun (V24, V25, V26) -> ('un--addRefsArgs'(V0, V26)) end(E22, E23, E24)); {'Idris.Core.CompileExpr.CForce', E25, E26, E27} -> (fun (V27, V28, V29) -> ('un--addRefs'(V0, V29)) end(E25, E26, E27)); {'Idris.Core.CompileExpr.CDelay', E28, E29, E30} -> (fun (V30, V31, V32) -> ('un--addRefs'(V0, V32)) end(E28, E29, E30)); {'Idris.Core.CompileExpr.CConCase', E31, E32, E33, E34} -> (fun (V33, V34, V35, V36) -> begin (V38 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> V0 end, fun () -> fun (V37) -> ('un--addRefs'(V0, V37)) end end, V36))), ('un--addRefsConAlts'(('un--addRefs'(V38, V34)), V35)) end end(E31, E32, E33, E34)); {'Idris.Core.CompileExpr.CConstCase', E35, E36, E37, E38} -> (fun (V39, V40, V41, V42) -> begin (V44 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> V0 end, fun () -> fun (V43) -> ('un--addRefs'(V0, V43)) end end, V42))), ('un--addRefsConstAlts'(('un--addRefs'(V44, V40)), V41)) end end(E35, E36, E37, E38)); _ -> V0 end.
'un--addArityHash'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V37 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V7 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> case V39 of {'Idris.Prelude.Types.Just', E34} -> (fun (V40) -> case V40 of {'Idris.Core.Context.Context.MkGlobalDef', E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54} -> (fun (V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60) -> case V59 of {'Idris.Prelude.Types.Just', E55} -> (fun (V61) -> case V61 of {'Idris.Core.CompileExpr.MkFun', E56, E57} -> (fun (V62, V63) -> ('Idris.Idris2.Core.Context':'un--addHash'(V0, {'Idris.Core.Hash.dn--un--__mkHashable', fun (V64) -> ('Idris.Idris2.Core.Hash':'dn--un--hash_Hashable_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Core.Hash.dn--un--__mkHashable', fun (V65) -> ('Idris.Idris2.Core.Hash':'dn--un--hash_Hashable_Name'(V65)) end, fun (V66) -> fun (V67) -> ('Idris.Idris2.Core.Hash':'dn--un--hashWithSalt_Hashable_Name'(V66, V67)) end end}, {'Idris.Core.Hash.dn--un--__mkHashable', fun (V68) -> ('Idris.Idris2.Core.Hash':'dn--un--hash_Hashable_Nat'(V68)) end, fun (V69) -> fun (V70) -> ('Idris.Idris2.Core.Hash':'dn--un--hashWithSalt_Hashable_Nat'(V69, V70)) end end}, V64)) end, fun (V71) -> fun (V72) -> ('Idris.Idris2.Core.Hash':'dn--un--hashWithSalt_Hashable_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Core.Hash.dn--un--__mkHashable', fun (V73) -> ('Idris.Idris2.Core.Hash':'dn--un--hash_Hashable_Name'(V73)) end, fun (V74) -> fun (V75) -> ('Idris.Idris2.Core.Hash':'dn--un--hashWithSalt_Hashable_Name'(V74, V75)) end end}, {'Idris.Core.Hash.dn--un--__mkHashable', fun (V76) -> ('Idris.Idris2.Core.Hash':'dn--un--hash_Hashable_Nat'(V76)) end, fun (V77) -> fun (V78) -> ('Idris.Idris2.Core.Hash':'dn--un--hashWithSalt_Hashable_Nat'(V77, V78)) end end}, V71, V72)) end end}, {'Idris.Builtin.MkPair', V1, ('Idris.Idris2.Prelude.Types.List':'un--length'(V62))}, V2)) end(E56, E57)); _ -> {'Idris.Prelude.Types.Right', 0} end end(E55)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E34)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
