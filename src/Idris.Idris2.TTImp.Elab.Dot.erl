-module('Idris.Idris2.TTImp.Elab.Dot').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--checkDot-9309'/15,
  'un--registerDot'/12,
  'un--checkDot'/13
]).
'case--checkDot-9309'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V13 of {'Idris.TTImp.Elab.Check.InLHS', E0} -> (fun (V15) -> begin (V22 = ('Idris.Idris2.TTImp.Elab.Check':'un--check'(V0, V12, V11, V10, V9, V8, case V7 of {'Idris.TTImp.Elab.Check.MkElabInfo', E1, E2, E3, E4, E5, E6} -> (fun (V16, V17, V18, V19, V20, V21) -> {'Idris.TTImp.Elab.Check.MkElabInfo', {'Idris.TTImp.Elab.Check.InExpr'}, V17, V18, V19, V20, V21} end(E1, E2, E3, E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V5, V2, {'Idris.Prelude.Types.Just', V1}, V14))), case V22 of {'Idris.Prelude.Types.Left', E7} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V24) -> case V24 of {'Idris.Builtin.MkPair', E9, E10} -> (fun (V25, V26) -> ('un--registerDot'(V0, V12, V11, V10, V9, V8, V5, V4, V3, V25, V1, V14)) end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V4, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Dot pattern not valid here (Not LHS) "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V27) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V27)) end, fun (V28) -> fun (V29) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V28, V29)) end end}, V2))))}, V14)) end.
'un--registerDot'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> begin (V12 = ('Idris.Idris2.Core.UnifyState':'un--genName'(V1, V3, <<"dotTm"/utf8>>, V11))), case V12 of {'Idris.Prelude.Types.Left', E0} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V14) -> begin (V15 = (('Idris.Idris2.Core.Normalise.Eval':'un--getTerm'(V10))(V11))), case V15 of {'Idris.Prelude.Types.Left', E2} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V17) -> begin (V18 = ('Idris.Idris2.TTImp.Elab.Check':'un--metaVar'(V0, V1, V3, V7, V5, V6, V14, V17, V11))), case V18 of {'Idris.Prelude.Types.Left', E4} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V20) -> begin (V21 = ('Idris.Idris2.Core.UnifyState':'un--addDot'(V0, V1, V3, V7, V6, V14, V9, V8, V20, V11))), case V21 of {'Idris.Prelude.Types.Left', E6} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V20, V10}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--checkDot'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V13) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V9, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Dot pattern not valid here (unknown type) "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V14) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V14)) end, fun (V15) -> fun (V16) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V15, V16)) end end}, V11))))}, V13)) end end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V17) -> fun (V18) -> ('case--checkDot-9309'(V0, V17, V11, V10, V9, V8, V7, V6, V5, V4, V3, V2, V1, case V6 of {'Idris.TTImp.Elab.Check.MkElabInfo', E1, E2, E3, E4, E5, E6} -> (fun (V19, V20, V21, V22, V23, V24) -> V19 end(E1, E2, E3, E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V18)) end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
