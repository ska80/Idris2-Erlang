-module('Idris.Idris2.Idris.Doc.HTML').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'with--tryCanonicalName-2541'/5,
  'nested--7808-3125--in--un--moduleLink'/2,
  'nested--7688-3009--in--un--go'/2,
  'un--tryCanonicalName'/4,
  'un--renderModuleDoc'/4,
  'un--renderHtml'/2,
  'un--renderDocIndex'/1,
  'un--removeNewlinesFromDeclarations'/1,
  'un--preserveLayout'/1,
  'un--packageInternal'/2,
  'un--htmlPreamble'/3,
  'un--htmlFooter'/0,
  'un--hasNS'/1,
  'un--getNS'/1,
  'un--docDocToHtml'/2,
  'un--addLink'/4
]).
'with--tryCanonicalName-2541'(V0, V1, V2, V3, V4) -> case V1 of 1 -> begin (V6 = begin (V5 = ('erlang':'get'(V3))), {'Idris.Prelude.Types.Right', V5} end), case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V8) -> begin (V39 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V0, case V8 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38) -> V9 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4))), case V39 of {'Idris.Prelude.Types.Left', E32} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V41) -> case V41 of [E34 | E35] -> (fun (V42, V43) -> case V42 of {'Idris.Builtin.MkPair', E36, E37} -> (fun (V44, V45) -> case V45 of {'Idris.Builtin.MkPair', E38, E39} -> (fun (V46, V47) -> case V43 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V44}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E38, E39)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E36, E37)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E34, E35)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7808-3125--in--un--moduleLink'(V0, V1) -> case V1 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V2, V3) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"<li><a class=\x{22}code\x{22} href=\x{22}docs/"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show_ModuleIdent'(V2)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<".html\x{22}>"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show_ModuleIdent'(V2)), <<"</a></li>"/utf8>>)))))))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7688-3009--in--un--go'(V0, V1) -> case V0 of 0 -> case V1 of {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STLine', E6} -> (fun (V2) -> V1 end(E6)); _ -> case V1 of {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', E3} -> (fun (V3) -> {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4) -> ('nested--7688-3009--in--un--go'(V0, V4)) end, V3))} end(E3)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', E4, E5} -> (fun (V5, V6) -> case V5 of {'Idris.Idris.Doc.String.Declarations'} -> (fun () -> {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', {'Idris.Idris.Doc.String.Declarations'}, ('nested--7688-3009--in--un--go'(1, V6))} end()); _ -> {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', V5, ('nested--7688-3009--in--un--go'(0, V6))} end end(E4, E5)); _ -> V1 end end; 1 -> case V1 of {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STLine', E10} -> (fun (V7) -> {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STEmpty'} end(E10)); _ -> case V1 of {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', E7} -> (fun (V8) -> {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V9) -> ('nested--7688-3009--in--un--go'(V0, V9)) end, V8))} end(E7)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', E8, E9} -> (fun (V10, V11) -> case V10 of {'Idris.Idris.Doc.String.Declarations'} -> (fun () -> {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', {'Idris.Idris.Doc.String.Declarations'}, ('nested--7688-3009--in--un--go'(1, V11))} end()); _ -> {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', V10, ('nested--7688-3009--in--un--go'(0, V11))} end end(E8, E9)); _ -> V1 end end; _ -> case V1 of {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', E0} -> (fun (V12) -> {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V13) -> ('nested--7688-3009--in--un--go'(V0, V13)) end, V12))} end(E0)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', E1, E2} -> (fun (V14, V15) -> case V14 of {'Idris.Idris.Doc.String.Declarations'} -> (fun () -> {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', {'Idris.Idris.Doc.String.Declarations'}, ('nested--7688-3009--in--un--go'(1, V15))} end()); _ -> {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', V14, ('nested--7688-3009--in--un--go'(0, V15))} end end(E1, E2)); _ -> V1 end end.
'un--tryCanonicalName'(V0, V1, V2, V3) -> ('with--tryCanonicalName-2541'(V2, ('un--hasNS'(V2)), V1, V0, V3)).
'un--renderModuleDoc'(V0, V1, V2, V3) -> begin (V5 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> <<""/utf8>> end, fun () -> fun (V4) -> ('un--preserveLayout'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Render.HTML':'un--htmlEscape'(V4)))) end end, V2))), fun (V6) -> begin (V7 = (('un--docDocToHtml'(V0, V3))(V6))), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types':'un--fastConcat'([('un--htmlPreamble'(('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show_ModuleIdent'(V1)), <<"../"/utf8>>, <<"namespace"/utf8>>)) | [<<"<div id=\x{22}moduleHeader\x{22}>"/utf8>> | [<<"<h1>"/utf8>> | [('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show_ModuleIdent'(V1)) | [<<"</h1>"/utf8>> | [V5 | [<<"</div>"/utf8>> | [V9 | [('un--htmlFooter'()) | []]]]]]]]]]))} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--renderHtml'(V0, V1) -> case V1 of {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STEmpty'} -> (fun () -> fun (V2) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_String'())} end end()); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STChar', E0} -> (fun (V3) -> fun (V4) -> case V3 of $  -> {'Idris.Prelude.Types.Right', <<"&ensp;"/utf8>>}; _ -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Char_String'(V3))} end end end(E0)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STText', E1, E2} -> (fun (V5, V6) -> fun (V7) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Render.HTML':'un--htmlEscape'(V6))} end end(E1, E2)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STLine', E3} -> (fun (V8) -> fun (V9) -> {'Idris.Prelude.Types.Right', <<"<br>"/utf8>>} end end(E3)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', E4, E5} -> (fun (V10, V11) -> fun (V12) -> case V10 of {'Idris.Idris.Doc.String.Declarations'} -> (fun () -> begin (V13 = (('un--renderHtml'(V0, V11))(V12))), case V13 of {'Idris.Prelude.Types.Left', E8} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V15) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(<<"<dl class=\x{22}decls\x{22}>"/utf8>>, V15)), <<"</dl>"/utf8>>))} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Idris.Doc.String.Decl', E10} -> (fun (V16) -> begin (V17 = (('un--renderHtml'(V0, V11))(V12))), case V17 of {'Idris.Prelude.Types.Left', E11} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V19) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"<dt id=\x{22}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Render.HTML':'un--htmlEscape'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V16)))), ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(<<"\x{22}>"/utf8>>, V19)), <<"</dt>"/utf8>>))))))} end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); {'Idris.Idris.Doc.String.DocStringBody'} -> (fun () -> begin (V20 = (('un--renderHtml'(V0, V11))(V12))), case V20 of {'Idris.Prelude.Types.Left', E13} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V22) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(<<"<dd>"/utf8>>, V22)), <<"</dd>"/utf8>>))} end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Idris.Doc.String.UserDocString'} -> (fun () -> begin (V23 = (('un--renderHtml'(V0, V11))(V12))), case V23 of {'Idris.Prelude.Types.Left', E15} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V25) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(<<"<pre>"/utf8>>, V25)), <<"</pre>"/utf8>>))} end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Idris.Doc.String.Syntax', E17} -> (fun (V26) -> case V26 of {'Idris.Idris.Pretty.DCon', E20} -> (fun (V27) -> begin (V28 = (('un--renderHtml'(V0, V11))(V12))), case V28 of {'Idris.Prelude.Types.Left', E21} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V30) -> ('un--addLink'(V0, V27, ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(<<"<span class=\x{22}name constructor\x{22}>"/utf8>>, V30)), <<"</span>"/utf8>>)), V12)) end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E20)); {'Idris.Idris.Pretty.TCon', E23} -> (fun (V31) -> begin (V32 = (('un--renderHtml'(V0, V11))(V12))), case V32 of {'Idris.Prelude.Types.Left', E24} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V34) -> ('un--addLink'(V0, V31, ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(<<"<span class=\x{22}name type\x{22}>"/utf8>>, V34)), <<"</span>"/utf8>>)), V12)) end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); {'Idris.Idris.Pretty.Fun', E26} -> (fun (V35) -> begin (V36 = (('un--renderHtml'(V0, V11))(V12))), case V36 of {'Idris.Prelude.Types.Left', E27} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V38) -> ('un--addLink'(V0, {'Idris.Prelude.Types.Just', V35}, ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(<<"<span class=\x{22}name function\x{22}>"/utf8>>, V38)), <<"</span>"/utf8>>)), V12)) end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26)); _ -> begin (V39 = (('un--renderHtml'(V0, V11))(V12))), case V39 of {'Idris.Prelude.Types.Left', E18} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V41) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"<!-- ann ignored START -->"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V41, <<"<!-- ann END -->"/utf8>>))))} end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E17)); {'Idris.Idris.Doc.String.Header'} -> (fun () -> begin (V42 = (('un--renderHtml'(V0, V11))(V12))), case V42 of {'Idris.Prelude.Types.Left', E29} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V44) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(<<"<b>"/utf8>>, V44)), <<"</b>"/utf8>>))} end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> begin (V45 = (('un--renderHtml'(V0, V11))(V12))), case V45 of {'Idris.Prelude.Types.Left', E6} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V47) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"<!-- ann ignored START -->"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V47, <<"<!-- ann END -->"/utf8>>))))} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E4, E5)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', E31} -> (fun (V48) -> fun (V49) -> begin (V51 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V50) -> ('un--renderHtml'(V0, V50)) end, V48, [], V49))), case V51 of {'Idris.Prelude.Types.Left', E32} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V53) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types':'un--fastConcat'(V53))} end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--renderDocIndex'(V0) -> ('Idris.Idris2.Prelude.Types':'un--fastConcat'(('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'([('un--htmlPreamble'(case V0 of {'Idris.Idris.Package.Types.MkPkgDesc', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24} -> (fun (V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25) -> V1 end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, <<""/utf8>>, <<"index"/utf8>>)) | [<<"<h1>Package "/utf8>> | [case V0 of {'Idris.Idris.Package.Types.MkPkgDesc', E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49} -> (fun (V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50) -> V26 end(E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end | [<<" - Namespaces</h1>"/utf8>> | [<<"<ul class=\x{22}names\x{22}>"/utf8>> | []]]]]], ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V51) -> ('nested--7808-3125--in--un--moduleLink'(V0, V51)) end, case V0 of {'Idris.Idris.Package.Types.MkPkgDesc', E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74} -> (fun (V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76) -> V63 end(E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), [<<"</ul>"/utf8>> | [('un--htmlFooter'()) | []]])))))).
'un--removeNewlinesFromDeclarations'(V0) -> ('nested--7688-3009--in--un--go'(0, V0)).
'un--preserveLayout'(V0) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"<pre>"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V0, <<"</pre>"/utf8>>)))).
'un--packageInternal'(V0, V1) -> case V1 of {'Idris.Core.Name.NS', E0, E1} -> (fun (V2, V3) -> begin (V4 = ('Idris.Idris2.Core.Name.Namespace':'un--nsAsModuleIdent'(V2))), fun (V5) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(fun (V6) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V7) -> case V7 of {'Idris.Prelude.Types.Left', E2} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> {'Idris.Prelude.Types.Right', 1} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V10) -> ('Idris.Idris2.Core.Directory':'un--nsToSource'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V4, V10)) end, V6)) end, fun (V11) -> fun (V12) -> {'Idris.Prelude.Types.Right', 0} end end, V5)) end end end(E0, E1)); _ -> fun (V13) -> {'Idris.Prelude.Types.Right', 0} end end.
'un--htmlPreamble'(V0, V1, V2) -> begin (V3 = ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Render.HTML':'un--htmlEscape'(V0))), begin (V4 = <<"preferredStyle"/utf8>>), begin (V5 = <<"selectPreferredStyle"/utf8>>), begin (V6 = <<"default"/utf8>>), begin (V7 = <<"stylefile"/utf8>>), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"<!DOCTYPE html><html lang=\x{22}en\x{22}>\x{a}<head>\x{a}  <meta charset=\x{22}utf-8\x{22}>\x{a}  <title>"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V3, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"</title>\x{a}  <link rel=\x{22}stylesheet\x{22} type=\x{22}text/css\x{22} id=\x{22}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V4, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{22} href=\x{22}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V1, ('Idris.Idris2.Prelude.Types.String':'un--++'(V6, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<".css\x{22}>\x{a}  <script>\x{a}    /* Updates the stylesheet to use the preferred one.\x{a}       Note that we set the link to root ++ sourceLoc because the config\x{a}       is shared across the whole website, so the root may differ from\x{a}       page to page.\x{a}    */\x{a}    function setStyleSource (sourceLoc) {\x{a}      document.getElementById(\x{22}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V4, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{22}).href = \x{22}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V1, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{22} + sourceLoc + \x{22}.css\x{22};\x{a}      document.getElementById(\x{22}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V5, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{22}).value = sourceLoc;\x{a}    }\x{a}    /* Initialises the preferred style sheet:\x{a}       1. if there is a stored value then use that\x{a}          otherwise select the default\x{a}       2. set both the css link href & the drop down menu selected option\x{a}    */\x{a}    function initStyleSource () {\x{a}      var preferredStyle = localStorage.getItem(\x{22}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V7, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{22});\x{a}      if (preferredStyle !== null) {\x{a}        setStyleSource(preferredStyle);\x{a}      } else {\x{a}        setStyleSource(\x{22}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V6, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{22});\x{a}      };\x{a}    }\x{a}    function saveStyleSource (preferredStyle) {\x{a}      localStorage."/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V7, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" = preferredStyle;\x{a}    }\x{a}    </script>\x{a}</head>\x{a}<body class=\x{22}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V2, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{22}>\x{a}<header>\x{a}  <strong>Idris2Doc</strong> : "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V3, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}  <nav><a href=\x{22}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V1, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"index.html\x{22}>Index</a>\x{a}  <select id=\x{22}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V5, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{22}>\x{a}    "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Data.String':'un--fastUnlines'(('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V8) -> fun (V9) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V8, V9)) end end, ('Idris.Idris2.Idris.Package.Types':'un--cssFiles'()), fun (V10) -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"<option value=\x{22}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(case V10 of {'Idris.Idris.Package.Types.MkCSS', E0, E1} -> (fun (V11, V12) -> V12 end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{22}>"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(case V10 of {'Idris.Idris.Package.Types.MkCSS', E2, E3} -> (fun (V13, V14) -> V13 end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, <<"</option>"/utf8>>)))))))) end)))), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}  </select>\x{a}  </nav>\x{a}  <script>\x{a}  /* We start by initialising the style source */\x{a}  initStyleSource();\x{a}  /* This listens for changes on the drop down menu and updates the\x{a}     css used for the current page when a selection is made.\x{a}  */\x{a}  document.getElementById(\x{22}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V5, <<"\x{22}).addEventListener(\x{22}change\x{22}, function(){\x{a}    var selected = this.options[this.selectedIndex].value; /* the option chosen */\x{a}    setStyleSource (selected);\x{a}    saveStyleSource (selected);\x{a}  });\x{a}</script>\x{a}</header>\x{a}<div class=\x{22}container\x{22}>"/utf8>>)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) end end end end end.
'un--htmlFooter'() -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"</div><footer>Produced by Idris 2 version "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Libraries.Data.Version':'un--showVersion'(1, ('Idris.Idris2.Idris.Version':'un--version'()))), <<"</footer></body></html>"/utf8>>)))).
'un--hasNS'(V0) -> case V0 of {'Idris.Core.Name.NS', E0, E1} -> (fun (V1, V2) -> 1 end(E0, E1)); _ -> 0 end.
'un--getNS'(V0) -> case V0 of {'Idris.Core.Name.NS', E0, E1} -> (fun (V1, V2) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show_Namespace'(V1)) end(E0, E1)); _ -> <<""/utf8>> end.
'un--docDocToHtml'(V0, V1) -> begin (V2 = ('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree':'un--fromStream'(('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Doc':'un--layoutUnbounded'(V1))))), ('un--renderHtml'(V0, ('un--removeNewlinesFromDeclarations'(V2)))) end.
'un--addLink'(V0, V1, V2, V3) -> case V1 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', V2} end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V4) -> begin (V5 = ('un--tryCanonicalName'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V4, V3))), case V5 of {'Idris.Prelude.Types.Left', E1} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V7) -> case V7 of {'Idris.Prelude.Types.Just', E3} -> (fun (V8) -> begin (V9 = (('un--packageInternal'(V0, V8))(V3))), case V9 of {'Idris.Prelude.Types.Left', E4} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V11) -> case V11 of 1 -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types':'un--fastConcat'([<<"<a class=\x{22}type\x{22} href=\x{22}"/utf8>> | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Render.HTML':'un--htmlEscape'(('un--getNS'(V8)))) | [<<".html#"/utf8>> | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Render.HTML':'un--htmlEscape'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)))) | [<<"\x{22}>"/utf8>> | [V2 | [<<"</a>"/utf8>> | []]]]]]]]))}; 0 -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types':'un--fastConcat'([<<"<span class=\x{22}type resolved\x{22} title=\x{22}"/utf8>> | [('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.Render.HTML':'un--htmlEscape'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)))) | [<<"\x{22}>"/utf8>> | [V2 | [<<"</span>"/utf8>> | []]]]]]))}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(<<"<span class=\x{22}implicit\x{22}>"/utf8>>, V2)), <<"</span>"/utf8>>))} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
