-module('Idris.Idris2.Data.Bits').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--popCount-4186'/7,
  'case--popCount-4039'/7,
  'case--popCount-3892'/7,
  'case--popCount-3749'/6,
  'case--popCount-3616'/7,
  'dn--un--zeroBits_Bits_Integer'/0,
  'dn--un--zeroBits_Bits_Int8'/0,
  'dn--un--zeroBits_Bits_Int64'/0,
  'dn--un--zeroBits_Bits_Int32'/0,
  'dn--un--zeroBits_Bits_Int16'/0,
  'dn--un--zeroBits_Bits_Int'/0,
  'dn--un--zeroBits_Bits_Bits8'/0,
  'dn--un--zeroBits_Bits_Bits64'/0,
  'dn--un--zeroBits_Bits_Bits32'/0,
  'dn--un--zeroBits_Bits_Bits16'/0,
  'dn--un--xor_Bits_Integer'/2,
  'dn--un--xor_Bits_Int8'/2,
  'dn--un--xor_Bits_Int64'/2,
  'dn--un--xor_Bits_Int32'/2,
  'dn--un--xor_Bits_Int16'/2,
  'dn--un--xor_Bits_Int'/2,
  'dn--un--xor_Bits_Bits8'/2,
  'dn--un--xor_Bits_Bits64'/2,
  'dn--un--xor_Bits_Bits32'/2,
  'dn--un--xor_Bits_Bits16'/2,
  'dn--un--testBit_Bits_Integer'/2,
  'dn--un--testBit_Bits_Int8'/2,
  'dn--un--testBit_Bits_Int64'/2,
  'dn--un--testBit_Bits_Int32'/2,
  'dn--un--testBit_Bits_Int16'/2,
  'dn--un--testBit_Bits_Int'/2,
  'dn--un--testBit_Bits_Bits8'/2,
  'dn--un--testBit_Bits_Bits64'/2,
  'dn--un--testBit_Bits_Bits32'/2,
  'dn--un--testBit_Bits_Bits16'/2,
  'dn--un--shiftR_Bits_Integer'/2,
  'dn--un--shiftR_Bits_Int8'/2,
  'dn--un--shiftR_Bits_Int64'/2,
  'dn--un--shiftR_Bits_Int32'/2,
  'dn--un--shiftR_Bits_Int16'/2,
  'dn--un--shiftR_Bits_Int'/2,
  'dn--un--shiftR_Bits_Bits8'/2,
  'dn--un--shiftR_Bits_Bits64'/2,
  'dn--un--shiftR_Bits_Bits32'/2,
  'dn--un--shiftR_Bits_Bits16'/2,
  'dn--un--shiftL_Bits_Integer'/2,
  'dn--un--shiftL_Bits_Int8'/2,
  'dn--un--shiftL_Bits_Int64'/2,
  'dn--un--shiftL_Bits_Int32'/2,
  'dn--un--shiftL_Bits_Int16'/2,
  'dn--un--shiftL_Bits_Int'/2,
  'dn--un--shiftL_Bits_Bits8'/2,
  'dn--un--shiftL_Bits_Bits64'/2,
  'dn--un--shiftL_Bits_Bits32'/2,
  'dn--un--shiftL_Bits_Bits16'/2,
  'dn--un--setBit_Bits_Integer'/2,
  'dn--un--setBit_Bits_Int8'/2,
  'dn--un--setBit_Bits_Int64'/2,
  'dn--un--setBit_Bits_Int32'/2,
  'dn--un--setBit_Bits_Int16'/2,
  'dn--un--setBit_Bits_Int'/2,
  'dn--un--setBit_Bits_Bits8'/2,
  'dn--un--setBit_Bits_Bits64'/2,
  'dn--un--setBit_Bits_Bits32'/2,
  'dn--un--setBit_Bits_Bits16'/2,
  'dn--un--popCount_FiniteBits_Int8'/1,
  'dn--un--popCount_FiniteBits_Int64'/1,
  'dn--un--popCount_FiniteBits_Int32'/1,
  'dn--un--popCount_FiniteBits_Int16'/1,
  'dn--un--popCount_FiniteBits_Int'/1,
  'dn--un--popCount_FiniteBits_Bits8'/1,
  'dn--un--popCount_FiniteBits_Bits64'/1,
  'dn--un--popCount_FiniteBits_Bits32'/1,
  'dn--un--popCount_FiniteBits_Bits16'/1,
  'dn--un--oneBits_Bits_Integer'/0,
  'dn--un--oneBits_Bits_Int8'/0,
  'dn--un--oneBits_Bits_Int64'/0,
  'dn--un--oneBits_Bits_Int32'/0,
  'dn--un--oneBits_Bits_Int16'/0,
  'dn--un--oneBits_Bits_Int'/0,
  'dn--un--oneBits_Bits_Bits8'/0,
  'dn--un--oneBits_Bits_Bits64'/0,
  'dn--un--oneBits_Bits_Bits32'/0,
  'dn--un--oneBits_Bits_Bits16'/0,
  'dn--un--complement_Bits_Integer'/1,
  'dn--un--complement_Bits_Int8'/1,
  'dn--un--complement_Bits_Int64'/1,
  'dn--un--complement_Bits_Int32'/1,
  'dn--un--complement_Bits_Int16'/1,
  'dn--un--complement_Bits_Int'/1,
  'dn--un--complement_Bits_Bits8'/1,
  'dn--un--complement_Bits_Bits64'/1,
  'dn--un--complement_Bits_Bits32'/1,
  'dn--un--complement_Bits_Bits16'/1,
  'dn--un--complementBit_Bits_Integer'/2,
  'dn--un--complementBit_Bits_Int8'/2,
  'dn--un--complementBit_Bits_Int64'/2,
  'dn--un--complementBit_Bits_Int32'/2,
  'dn--un--complementBit_Bits_Int16'/2,
  'dn--un--complementBit_Bits_Int'/2,
  'dn--un--complementBit_Bits_Bits8'/2,
  'dn--un--complementBit_Bits_Bits64'/2,
  'dn--un--complementBit_Bits_Bits32'/2,
  'dn--un--complementBit_Bits_Bits16'/2,
  'dn--un--clearBit_Bits_Integer'/2,
  'dn--un--clearBit_Bits_Int8'/2,
  'dn--un--clearBit_Bits_Int64'/2,
  'dn--un--clearBit_Bits_Int32'/2,
  'dn--un--clearBit_Bits_Int16'/2,
  'dn--un--clearBit_Bits_Int'/2,
  'dn--un--clearBit_Bits_Bits8'/2,
  'dn--un--clearBit_Bits_Bits64'/2,
  'dn--un--clearBit_Bits_Bits32'/2,
  'dn--un--clearBit_Bits_Bits16'/2,
  'dn--un--bitsToIndex_FiniteBits_Int8'/1,
  'dn--un--bitsToIndex_FiniteBits_Int64'/1,
  'dn--un--bitsToIndex_FiniteBits_Int32'/1,
  'dn--un--bitsToIndex_FiniteBits_Int16'/1,
  'dn--un--bitsToIndex_FiniteBits_Int'/1,
  'dn--un--bitsToIndex_FiniteBits_Bits8'/1,
  'dn--un--bitsToIndex_FiniteBits_Bits64'/1,
  'dn--un--bitsToIndex_FiniteBits_Bits32'/1,
  'dn--un--bitsToIndex_FiniteBits_Bits16'/1,
  'dn--un--bit_Bits_Integer'/1,
  'dn--un--bit_Bits_Int8'/1,
  'dn--un--bit_Bits_Int64'/1,
  'dn--un--bit_Bits_Int32'/1,
  'dn--un--bit_Bits_Int16'/1,
  'dn--un--bit_Bits_Int'/1,
  'dn--un--bit_Bits_Bits8'/1,
  'dn--un--bit_Bits_Bits64'/1,
  'dn--un--bit_Bits_Bits32'/1,
  'dn--un--bit_Bits_Bits16'/1,
  'dn--un--bitSize_FiniteBits_Int8'/0,
  'dn--un--bitSize_FiniteBits_Int64'/0,
  'dn--un--bitSize_FiniteBits_Int32'/0,
  'dn--un--bitSize_FiniteBits_Int16'/0,
  'dn--un--bitSize_FiniteBits_Int'/0,
  'dn--un--bitSize_FiniteBits_Bits8'/0,
  'dn--un--bitSize_FiniteBits_Bits64'/0,
  'dn--un--bitSize_FiniteBits_Bits32'/0,
  'dn--un--bitSize_FiniteBits_Bits16'/0,
  'dn--un--__Impl_FiniteBits_Int8'/0,
  'dn--un--__Impl_FiniteBits_Int64'/0,
  'dn--un--__Impl_FiniteBits_Int32'/0,
  'dn--un--__Impl_FiniteBits_Int16'/0,
  'dn--un--__Impl_FiniteBits_Int'/0,
  'dn--un--__Impl_FiniteBits_Bits8'/0,
  'dn--un--__Impl_FiniteBits_Bits64'/0,
  'dn--un--__Impl_FiniteBits_Bits32'/0,
  'dn--un--__Impl_FiniteBits_Bits16'/0,
  'dn--un--__Impl_Bits_Integer'/0,
  'dn--un--__Impl_Bits_Int8'/0,
  'dn--un--__Impl_Bits_Int64'/0,
  'dn--un--__Impl_Bits_Int32'/0,
  'dn--un--__Impl_Bits_Int16'/0,
  'dn--un--__Impl_Bits_Int'/0,
  'dn--un--__Impl_Bits_Bits8'/0,
  'dn--un--__Impl_Bits_Bits64'/0,
  'dn--un--__Impl_Bits_Bits32'/0,
  'dn--un--__Impl_Bits_Bits16'/0,
  'dn--un--__FiniteBits_(Bits a)'/1,
  'dn--un--.|._Bits_Integer'/2,
  'dn--un--.|._Bits_Int8'/2,
  'dn--un--.|._Bits_Int64'/2,
  'dn--un--.|._Bits_Int32'/2,
  'dn--un--.|._Bits_Int16'/2,
  'dn--un--.|._Bits_Int'/2,
  'dn--un--.|._Bits_Bits8'/2,
  'dn--un--.|._Bits_Bits64'/2,
  'dn--un--.|._Bits_Bits32'/2,
  'dn--un--.|._Bits_Bits16'/2,
  'dn--un--.&._Bits_Integer'/2,
  'dn--un--.&._Bits_Int8'/2,
  'dn--un--.&._Bits_Int64'/2,
  'dn--un--.&._Bits_Int32'/2,
  'dn--un--.&._Bits_Int16'/2,
  'dn--un--.&._Bits_Int'/2,
  'dn--un--.&._Bits_Bits8'/2,
  'dn--un--.&._Bits_Bits64'/2,
  'dn--un--.&._Bits_Bits32'/2,
  'dn--un--.&._Bits_Bits16'/2,
  'un--zeroBits'/1,
  'un--xor'/3,
  'un--testBit'/3,
  'un--shiftR'/3,
  'un--shiftL'/3,
  'un--setBit'/3,
  'un--popCount'/2,
  'un--oneBits'/1,
  'un--fromNat'/2,
  'un--complementBit'/3,
  'un--complement'/2,
  'un--clearBit'/3,
  'un--bitsToIndex'/2,
  'un--bitSize'/1,
  'un--bit'/2,
  'un--.|.'/3,
  'un--.&.'/3
]).
'case--popCount-4186'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of 1 -> (V5 + 1); 0 -> V5; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--popCount-4039'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of 1 -> (V5 + 1); 0 -> V5; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--popCount-3892'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of 1 -> (V5 + 1); 0 -> V5; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--popCount-3749'(V0, V1, V2, V3, V4, V5) -> case V5 of 1 -> (V4 + 1); 0 -> V4; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--popCount-3616'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of 1 -> ((V5 + 1) rem 9223372036854775808); 0 -> V5; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--zeroBits_Bits_Integer'() -> 0.
'dn--un--zeroBits_Bits_Int8'() -> 0.
'dn--un--zeroBits_Bits_Int64'() -> 0.
'dn--un--zeroBits_Bits_Int32'() -> 0.
'dn--un--zeroBits_Bits_Int16'() -> 0.
'dn--un--zeroBits_Bits_Int'() -> 0.
'dn--un--zeroBits_Bits_Bits8'() -> 0.
'dn--un--zeroBits_Bits_Bits64'() -> 0.
'dn--un--zeroBits_Bits_Bits32'() -> 0.
'dn--un--zeroBits_Bits_Bits16'() -> 0.
'dn--un--xor_Bits_Integer'(V0, V1) -> (V0 bxor V1).
'dn--un--xor_Bits_Int8'(V0, V1) -> (V0 bxor V1).
'dn--un--xor_Bits_Int64'(V0, V1) -> (V0 bxor V1).
'dn--un--xor_Bits_Int32'(V0, V1) -> (V0 bxor V1).
'dn--un--xor_Bits_Int16'(V0, V1) -> (V0 bxor V1).
'dn--un--xor_Bits_Int'(V0, V1) -> (V0 bxor V1).
'dn--un--xor_Bits_Bits8'(V0, V1) -> (V0 bxor V1).
'dn--un--xor_Bits_Bits64'(V0, V1) -> (V0 bxor V1).
'dn--un--xor_Bits_Bits32'(V0, V1) -> (V0 bxor V1).
'dn--un--xor_Bits_Bits16'(V0, V1) -> (V0 bxor V1).
'dn--un--testBit_Bits_Integer'(V0, V1) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Integer'((V0 band (1 bsl V1)), 0)).
'dn--un--testBit_Bits_Int8'(V0, V1) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int8'((V0 band (('erlang':'throw'("Invalid cast Integer->Int8")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(V1)))), ('erlang':'throw'("Invalid cast Integer->Int8")))).
'dn--un--testBit_Bits_Int64'(V0, V1) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int64'((V0 band (('erlang':'throw'("Invalid cast Integer->Int64")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(V1)))), ('erlang':'throw'("Invalid cast Integer->Int64")))).
'dn--un--testBit_Bits_Int32'(V0, V1) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int32'((V0 band (('erlang':'throw'("Invalid cast Integer->Int32")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(V1)))), ('erlang':'throw'("Invalid cast Integer->Int32")))).
'dn--un--testBit_Bits_Int16'(V0, V1) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int16'((V0 band (('erlang':'throw'("Invalid cast Integer->Int16")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(V1)))), ('erlang':'throw'("Invalid cast Integer->Int16")))).
'dn--un--testBit_Bits_Int'(V0, V1) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'((V0 band ((1 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V1))) rem 9223372036854775808)), 0)).
'dn--un--testBit_Bits_Bits8'(V0, V1) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Bits8'((V0 band ((case (1 >= 0) of 'true' -> (1 rem 256); _ -> ((1 + 256) rem 256) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(V1))) rem 256)), case (0 >= 0) of 'true' -> (0 rem 256); _ -> ((0 + 256) rem 256) end)).
'dn--un--testBit_Bits_Bits64'(V0, V1) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Bits64'((V0 band ((case (1 >= 0) of 'true' -> (1 rem 18446744073709551616); _ -> ((1 + 18446744073709551616) rem 18446744073709551616) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(V1))) rem 18446744073709551616)), case (0 >= 0) of 'true' -> (0 rem 18446744073709551616); _ -> ((0 + 18446744073709551616) rem 18446744073709551616) end)).
'dn--un--testBit_Bits_Bits32'(V0, V1) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Bits32'((V0 band ((case (1 >= 0) of 'true' -> (1 rem 4294967296); _ -> ((1 + 4294967296) rem 4294967296) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(V1))) rem 4294967296)), case (0 >= 0) of 'true' -> (0 rem 4294967296); _ -> ((0 + 4294967296) rem 4294967296) end)).
'dn--un--testBit_Bits_Bits16'(V0, V1) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Bits16'((V0 band ((case (1 >= 0) of 'true' -> (1 rem 65536); _ -> ((1 + 65536) rem 65536) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(V1))) rem 65536)), case (0 >= 0) of 'true' -> (0 rem 65536); _ -> ((0 + 65536) rem 65536) end)).
'dn--un--shiftR_Bits_Integer'(V0, V1) -> (V0 bsr V1).
'dn--un--shiftR_Bits_Int8'(V0, V1) -> (V0 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(V1))).
'dn--un--shiftR_Bits_Int64'(V0, V1) -> (V0 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(V1))).
'dn--un--shiftR_Bits_Int32'(V0, V1) -> (V0 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(V1))).
'dn--un--shiftR_Bits_Int16'(V0, V1) -> (V0 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(V1))).
'dn--un--shiftR_Bits_Int'(V0, V1) -> (V0 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V1))).
'dn--un--shiftR_Bits_Bits8'(V0, V1) -> (V0 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(V1))).
'dn--un--shiftR_Bits_Bits64'(V0, V1) -> (V0 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(V1))).
'dn--un--shiftR_Bits_Bits32'(V0, V1) -> (V0 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(V1))).
'dn--un--shiftR_Bits_Bits16'(V0, V1) -> (V0 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(V1))).
'dn--un--shiftL_Bits_Integer'(V0, V1) -> (V0 bsl V1).
'dn--un--shiftL_Bits_Int8'(V0, V1) -> (V0 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(V1))).
'dn--un--shiftL_Bits_Int64'(V0, V1) -> (V0 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(V1))).
'dn--un--shiftL_Bits_Int32'(V0, V1) -> (V0 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(V1))).
'dn--un--shiftL_Bits_Int16'(V0, V1) -> (V0 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(V1))).
'dn--un--shiftL_Bits_Int'(V0, V1) -> ((V0 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V1))) rem 9223372036854775808).
'dn--un--shiftL_Bits_Bits8'(V0, V1) -> ((V0 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(V1))) rem 256).
'dn--un--shiftL_Bits_Bits64'(V0, V1) -> ((V0 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(V1))) rem 18446744073709551616).
'dn--un--shiftL_Bits_Bits32'(V0, V1) -> ((V0 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(V1))) rem 4294967296).
'dn--un--shiftL_Bits_Bits16'(V0, V1) -> ((V0 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(V1))) rem 65536).
'dn--un--setBit_Bits_Integer'(V0, V1) -> (V0 bor (1 bsl V1)).
'dn--un--setBit_Bits_Int8'(V0, V1) -> (V0 bor (('erlang':'throw'("Invalid cast Integer->Int8")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(V1)))).
'dn--un--setBit_Bits_Int64'(V0, V1) -> (V0 bor (('erlang':'throw'("Invalid cast Integer->Int64")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(V1)))).
'dn--un--setBit_Bits_Int32'(V0, V1) -> (V0 bor (('erlang':'throw'("Invalid cast Integer->Int32")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(V1)))).
'dn--un--setBit_Bits_Int16'(V0, V1) -> (V0 bor (('erlang':'throw'("Invalid cast Integer->Int16")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(V1)))).
'dn--un--setBit_Bits_Int'(V0, V1) -> (V0 bor ((1 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V1))) rem 9223372036854775808)).
'dn--un--setBit_Bits_Bits8'(V0, V1) -> (V0 bor ((case (1 >= 0) of 'true' -> (1 rem 256); _ -> ((1 + 256) rem 256) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(V1))) rem 256)).
'dn--un--setBit_Bits_Bits64'(V0, V1) -> (V0 bor ((case (1 >= 0) of 'true' -> (1 rem 18446744073709551616); _ -> ((1 + 18446744073709551616) rem 18446744073709551616) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(V1))) rem 18446744073709551616)).
'dn--un--setBit_Bits_Bits32'(V0, V1) -> (V0 bor ((case (1 >= 0) of 'true' -> (1 rem 4294967296); _ -> ((1 + 4294967296) rem 4294967296) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(V1))) rem 4294967296)).
'dn--un--setBit_Bits_Bits16'(V0, V1) -> (V0 bor ((case (1 >= 0) of 'true' -> (1 rem 65536); _ -> ((1 + 65536) rem 65536) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(V1))) rem 65536)).
'dn--un--popCount_FiniteBits_Int8'(V0) -> begin (V1 = (V0 bxor ((('erlang':'throw'("Invalid cast Integer->Int8")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))) band V0))), begin (V2 = ((V1 band 85) + ((V1 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(('un--fromNat'((1 + 0), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))) band 85))), begin (V3 = ((V2 band 51) + ((V2 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(('un--fromNat'((1 + (1 + 0)), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))) band 51))), begin (V4 = ((V3 + (V3 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(('un--fromNat'((1 + (1 + (1 + (1 + 0)))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))) band 15)), begin (V5 = case ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int8'(V0, ('erlang':'throw'("Invalid cast Integer->Int8")))) of 1 -> (V4 + 1); 0 -> V4; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int8_Nat'(V5)) end end end end end.
'dn--un--popCount_FiniteBits_Int64'(V0) -> begin (V1 = (V0 bxor ((('erlang':'throw'("Invalid cast Integer->Int64")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) band V0))), begin (V2 = ((V1 band ('erlang':'throw'("Invalid cast Integer->Int64"))) + ((V1 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(('un--fromNat'((1 + 0), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) band ('erlang':'throw'("Invalid cast Integer->Int64"))))), begin (V3 = ((V2 band ('erlang':'throw'("Invalid cast Integer->Int64"))) + ((V2 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(('un--fromNat'((1 + (1 + 0)), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) band ('erlang':'throw'("Invalid cast Integer->Int64"))))), begin (V4 = ((V3 + (V3 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(('un--fromNat'((1 + (1 + (1 + (1 + 0)))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) band ('erlang':'throw'("Invalid cast Integer->Int64")))), begin (V5 = ((V4 * ('erlang':'throw'("Invalid cast Integer->Int64"))) bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), begin (V6 = case ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int64'(V0, ('erlang':'throw'("Invalid cast Integer->Int64")))) of 1 -> (V5 + 1); 0 -> V5; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int64_Nat'(V6)) end end end end end end.
'dn--un--popCount_FiniteBits_Int32'(V0) -> begin (V1 = (V0 bxor ((('erlang':'throw'("Invalid cast Integer->Int32")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))) band V0))), begin (V2 = ((V1 band ('erlang':'throw'("Invalid cast Integer->Int32"))) + ((V1 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(('un--fromNat'((1 + 0), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))) band ('erlang':'throw'("Invalid cast Integer->Int32"))))), begin (V3 = ((V2 band ('erlang':'throw'("Invalid cast Integer->Int32"))) + ((V2 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(('un--fromNat'((1 + (1 + 0)), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))) band ('erlang':'throw'("Invalid cast Integer->Int32"))))), begin (V4 = ((V3 + (V3 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(('un--fromNat'((1 + (1 + (1 + (1 + 0)))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))) band ('erlang':'throw'("Invalid cast Integer->Int32")))), begin (V5 = ((V4 * ('erlang':'throw'("Invalid cast Integer->Int32"))) bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))), begin (V6 = case ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int32'(V0, ('erlang':'throw'("Invalid cast Integer->Int32")))) of 1 -> (V5 + 1); 0 -> V5; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int32_Nat'(V6)) end end end end end end.
'dn--un--popCount_FiniteBits_Int16'(V0) -> begin (V1 = (V0 bxor ((('erlang':'throw'("Invalid cast Integer->Int16")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))) band V0))), begin (V2 = ((V1 band ('erlang':'throw'("Invalid cast Integer->Int16"))) + ((V1 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(('un--fromNat'((1 + 0), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))) band ('erlang':'throw'("Invalid cast Integer->Int16"))))), begin (V3 = ((V2 band ('erlang':'throw'("Invalid cast Integer->Int16"))) + ((V2 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(('un--fromNat'((1 + (1 + 0)), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))) band ('erlang':'throw'("Invalid cast Integer->Int16"))))), begin (V4 = ((V3 + (V3 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(('un--fromNat'((1 + (1 + (1 + (1 + 0)))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))) band ('erlang':'throw'("Invalid cast Integer->Int16")))), begin (V5 = ((V4 * ('erlang':'throw'("Invalid cast Integer->Int16"))) bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))), begin (V6 = case ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int16'(V0, ('erlang':'throw'("Invalid cast Integer->Int16")))) of 1 -> (V5 + 1); 0 -> V5; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int16_Nat'(V6)) end end end end end end.
'dn--un--popCount_FiniteBits_Int'(V0) -> begin (V1 = (V0 bxor (((1 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) rem 9223372036854775808) band V0))), begin (V2 = (((V1 band 6148914691236517205) + ((V1 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(('un--fromNat'((1 + 0), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) band 6148914691236517205)) rem 9223372036854775808)), begin (V3 = (((V2 band 3689348814741910323) + ((V2 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(('un--fromNat'((1 + (1 + 0)), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) band 3689348814741910323)) rem 9223372036854775808)), begin (V4 = (((V3 + (V3 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(('un--fromNat'((1 + (1 + (1 + (1 + 0)))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) rem 9223372036854775808) band 1085102592571150095)), begin (V5 = (((V4 * 72340172838076673) rem 9223372036854775808) bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), begin (V6 = case ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V0, 0)) of 1 -> ((V5 + 1) rem 9223372036854775808); 0 -> V5; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Nat'(V6)) end end end end end end.
'dn--un--popCount_FiniteBits_Bits8'(V0) -> begin (V1 = (((V0 band 85) + ((V0 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(('un--fromNat'((1 + 0), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))) band 85)) rem 256)), begin (V2 = (((V1 band 51) + ((V1 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(('un--fromNat'((1 + (1 + 0)), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))) band 51)) rem 256)), begin (V3 = (((V2 + (V2 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(('un--fromNat'((1 + (1 + (1 + (1 + 0)))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))) rem 256) band 15)), ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Bits8_Nat'(V3)) end end end.
'dn--un--popCount_FiniteBits_Bits64'(V0) -> begin (V1 = (((V0 band case (6148914691236517205 >= 0) of 'true' -> (6148914691236517205 rem 18446744073709551616); _ -> ((6148914691236517205 + 18446744073709551616) rem 18446744073709551616) end) + ((V0 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(('un--fromNat'((1 + 0), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) band case (6148914691236517205 >= 0) of 'true' -> (6148914691236517205 rem 18446744073709551616); _ -> ((6148914691236517205 + 18446744073709551616) rem 18446744073709551616) end)) rem 18446744073709551616)), begin (V2 = (((V1 band case (3689348814741910323 >= 0) of 'true' -> (3689348814741910323 rem 18446744073709551616); _ -> ((3689348814741910323 + 18446744073709551616) rem 18446744073709551616) end) + ((V1 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(('un--fromNat'((1 + (1 + 0)), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) band case (3689348814741910323 >= 0) of 'true' -> (3689348814741910323 rem 18446744073709551616); _ -> ((3689348814741910323 + 18446744073709551616) rem 18446744073709551616) end)) rem 18446744073709551616)), begin (V3 = (((V2 + (V2 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(('un--fromNat'((1 + (1 + (1 + (1 + 0)))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) rem 18446744073709551616) band case (252645135 >= 0) of 'true' -> (252645135 rem 18446744073709551616); _ -> ((252645135 + 18446744073709551616) rem 18446744073709551616) end)), begin (V4 = (((V3 * case (72340172838076673 >= 0) of 'true' -> (72340172838076673 rem 18446744073709551616); _ -> ((72340172838076673 + 18446744073709551616) rem 18446744073709551616) end) rem 18446744073709551616) bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Bits64_Nat'(V4)) end end end end.
'dn--un--popCount_FiniteBits_Bits32'(V0) -> begin (V1 = (((V0 band case (1431655765 >= 0) of 'true' -> (1431655765 rem 4294967296); _ -> ((1431655765 + 4294967296) rem 4294967296) end) + ((V0 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(('un--fromNat'((1 + 0), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))) band case (1431655765 >= 0) of 'true' -> (1431655765 rem 4294967296); _ -> ((1431655765 + 4294967296) rem 4294967296) end)) rem 4294967296)), begin (V2 = (((V1 band case (858993459 >= 0) of 'true' -> (858993459 rem 4294967296); _ -> ((858993459 + 4294967296) rem 4294967296) end) + ((V1 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(('un--fromNat'((1 + (1 + 0)), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))) band case (858993459 >= 0) of 'true' -> (858993459 rem 4294967296); _ -> ((858993459 + 4294967296) rem 4294967296) end)) rem 4294967296)), begin (V3 = (((V2 + (V2 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(('un--fromNat'((1 + (1 + (1 + (1 + 0)))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))) rem 4294967296) band case (252645135 >= 0) of 'true' -> (252645135 rem 4294967296); _ -> ((252645135 + 4294967296) rem 4294967296) end)), begin (V4 = (((V3 * case (16843009 >= 0) of 'true' -> (16843009 rem 4294967296); _ -> ((16843009 + 4294967296) rem 4294967296) end) rem 4294967296) bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))), ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Bits32_Nat'(V4)) end end end end.
'dn--un--popCount_FiniteBits_Bits16'(V0) -> begin (V1 = (((V0 band case (21845 >= 0) of 'true' -> (21845 rem 65536); _ -> ((21845 + 65536) rem 65536) end) + ((V0 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(('un--fromNat'((1 + 0), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))) band case (21845 >= 0) of 'true' -> (21845 rem 65536); _ -> ((21845 + 65536) rem 65536) end)) rem 65536)), begin (V2 = (((V1 band case (13107 >= 0) of 'true' -> (13107 rem 65536); _ -> ((13107 + 65536) rem 65536) end) + ((V1 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(('un--fromNat'((1 + (1 + 0)), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))) band case (13107 >= 0) of 'true' -> (13107 rem 65536); _ -> ((13107 + 65536) rem 65536) end)) rem 65536)), begin (V3 = (((V2 + (V2 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(('un--fromNat'((1 + (1 + (1 + (1 + 0)))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))) rem 65536) band case (3855 >= 0) of 'true' -> (3855 rem 65536); _ -> ((3855 + 65536) rem 65536) end)), begin (V4 = (((V3 * case (257 >= 0) of 'true' -> (257 rem 65536); _ -> ((257 + 65536) rem 65536) end) rem 65536) bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))), ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Bits16_Nat'(V4)) end end end end.
'dn--un--oneBits_Bits_Integer'() -> -1.
'dn--un--oneBits_Bits_Int8'() -> -1.
'dn--un--oneBits_Bits_Int64'() -> -1.
'dn--un--oneBits_Bits_Int32'() -> -1.
'dn--un--oneBits_Bits_Int16'() -> -1.
'dn--un--oneBits_Bits_Int'() -> -1.
'dn--un--oneBits_Bits_Bits8'() -> case (255 >= 0) of 'true' -> (255 rem 256); _ -> ((255 + 256) rem 256) end.
'dn--un--oneBits_Bits_Bits64'() -> case (18446744073709551615 >= 0) of 'true' -> (18446744073709551615 rem 18446744073709551616); _ -> ((18446744073709551615 + 18446744073709551616) rem 18446744073709551616) end.
'dn--un--oneBits_Bits_Bits32'() -> case (4294967295 >= 0) of 'true' -> (4294967295 rem 4294967296); _ -> ((4294967295 + 4294967296) rem 4294967296) end.
'dn--un--oneBits_Bits_Bits16'() -> case (65535 >= 0) of 'true' -> (65535 rem 65536); _ -> ((65535 + 65536) rem 65536) end.
'dn--un--complement_Bits_Integer'(V0) -> (-1 bxor V0).
'dn--un--complement_Bits_Int8'(V0) -> (('erlang':'throw'("Invalid cast Integer->Int8")) bxor V0).
'dn--un--complement_Bits_Int64'(V0) -> (('erlang':'throw'("Invalid cast Integer->Int64")) bxor V0).
'dn--un--complement_Bits_Int32'(V0) -> (('erlang':'throw'("Invalid cast Integer->Int32")) bxor V0).
'dn--un--complement_Bits_Int16'(V0) -> (('erlang':'throw'("Invalid cast Integer->Int16")) bxor V0).
'dn--un--complement_Bits_Int'(V0) -> (-1 bxor V0).
'dn--un--complement_Bits_Bits8'(V0) -> (case (255 >= 0) of 'true' -> (255 rem 256); _ -> ((255 + 256) rem 256) end bxor V0).
'dn--un--complement_Bits_Bits64'(V0) -> (case (18446744073709551615 >= 0) of 'true' -> (18446744073709551615 rem 18446744073709551616); _ -> ((18446744073709551615 + 18446744073709551616) rem 18446744073709551616) end bxor V0).
'dn--un--complement_Bits_Bits32'(V0) -> (case (4294967295 >= 0) of 'true' -> (4294967295 rem 4294967296); _ -> ((4294967295 + 4294967296) rem 4294967296) end bxor V0).
'dn--un--complement_Bits_Bits16'(V0) -> (case (65535 >= 0) of 'true' -> (65535 rem 65536); _ -> ((65535 + 65536) rem 65536) end bxor V0).
'dn--un--complementBit_Bits_Integer'(V0, V1) -> (V0 bxor (1 bsl V1)).
'dn--un--complementBit_Bits_Int8'(V0, V1) -> (V0 bxor (('erlang':'throw'("Invalid cast Integer->Int8")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(V1)))).
'dn--un--complementBit_Bits_Int64'(V0, V1) -> (V0 bxor (('erlang':'throw'("Invalid cast Integer->Int64")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(V1)))).
'dn--un--complementBit_Bits_Int32'(V0, V1) -> (V0 bxor (('erlang':'throw'("Invalid cast Integer->Int32")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(V1)))).
'dn--un--complementBit_Bits_Int16'(V0, V1) -> (V0 bxor (('erlang':'throw'("Invalid cast Integer->Int16")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(V1)))).
'dn--un--complementBit_Bits_Int'(V0, V1) -> (V0 bxor ((1 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V1))) rem 9223372036854775808)).
'dn--un--complementBit_Bits_Bits8'(V0, V1) -> (V0 bxor ((case (1 >= 0) of 'true' -> (1 rem 256); _ -> ((1 + 256) rem 256) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(V1))) rem 256)).
'dn--un--complementBit_Bits_Bits64'(V0, V1) -> (V0 bxor ((case (1 >= 0) of 'true' -> (1 rem 18446744073709551616); _ -> ((1 + 18446744073709551616) rem 18446744073709551616) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(V1))) rem 18446744073709551616)).
'dn--un--complementBit_Bits_Bits32'(V0, V1) -> (V0 bxor ((case (1 >= 0) of 'true' -> (1 rem 4294967296); _ -> ((1 + 4294967296) rem 4294967296) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(V1))) rem 4294967296)).
'dn--un--complementBit_Bits_Bits16'(V0, V1) -> (V0 bxor ((case (1 >= 0) of 'true' -> (1 rem 65536); _ -> ((1 + 65536) rem 65536) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(V1))) rem 65536)).
'dn--un--clearBit_Bits_Integer'(V0, V1) -> (V0 bxor ((1 bsl V1) band V0)).
'dn--un--clearBit_Bits_Int8'(V0, V1) -> (V0 bxor ((('erlang':'throw'("Invalid cast Integer->Int8")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(V1))) band V0)).
'dn--un--clearBit_Bits_Int64'(V0, V1) -> (V0 bxor ((('erlang':'throw'("Invalid cast Integer->Int64")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(V1))) band V0)).
'dn--un--clearBit_Bits_Int32'(V0, V1) -> (V0 bxor ((('erlang':'throw'("Invalid cast Integer->Int32")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(V1))) band V0)).
'dn--un--clearBit_Bits_Int16'(V0, V1) -> (V0 bxor ((('erlang':'throw'("Invalid cast Integer->Int16")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(V1))) band V0)).
'dn--un--clearBit_Bits_Int'(V0, V1) -> (V0 bxor (((1 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V1))) rem 9223372036854775808) band V0)).
'dn--un--clearBit_Bits_Bits8'(V0, V1) -> (V0 bxor (((case (1 >= 0) of 'true' -> (1 rem 256); _ -> ((1 + 256) rem 256) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(V1))) rem 256) band V0)).
'dn--un--clearBit_Bits_Bits64'(V0, V1) -> (V0 bxor (((case (1 >= 0) of 'true' -> (1 rem 18446744073709551616); _ -> ((1 + 18446744073709551616) rem 18446744073709551616) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(V1))) rem 18446744073709551616) band V0)).
'dn--un--clearBit_Bits_Bits32'(V0, V1) -> (V0 bxor (((case (1 >= 0) of 'true' -> (1 rem 4294967296); _ -> ((1 + 4294967296) rem 4294967296) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(V1))) rem 4294967296) band V0)).
'dn--un--clearBit_Bits_Bits16'(V0, V1) -> (V0 bxor (((case (1 >= 0) of 'true' -> (1 rem 65536); _ -> ((1 + 65536) rem 65536) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(V1))) rem 65536) band V0)).
'dn--un--bitsToIndex_FiniteBits_Int8'(V0) -> V0.
'dn--un--bitsToIndex_FiniteBits_Int64'(V0) -> V0.
'dn--un--bitsToIndex_FiniteBits_Int32'(V0) -> V0.
'dn--un--bitsToIndex_FiniteBits_Int16'(V0) -> V0.
'dn--un--bitsToIndex_FiniteBits_Int'(V0) -> V0.
'dn--un--bitsToIndex_FiniteBits_Bits8'(V0) -> V0.
'dn--un--bitsToIndex_FiniteBits_Bits64'(V0) -> V0.
'dn--un--bitsToIndex_FiniteBits_Bits32'(V0) -> V0.
'dn--un--bitsToIndex_FiniteBits_Bits16'(V0) -> V0.
'dn--un--bit_Bits_Integer'(V0) -> (1 bsl V0).
'dn--un--bit_Bits_Int8'(V0) -> (('erlang':'throw'("Invalid cast Integer->Int8")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(V0))).
'dn--un--bit_Bits_Int64'(V0) -> (('erlang':'throw'("Invalid cast Integer->Int64")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(V0))).
'dn--un--bit_Bits_Int32'(V0) -> (('erlang':'throw'("Invalid cast Integer->Int32")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(V0))).
'dn--un--bit_Bits_Int16'(V0) -> (('erlang':'throw'("Invalid cast Integer->Int16")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(V0))).
'dn--un--bit_Bits_Int'(V0) -> ((1 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V0))) rem 9223372036854775808).
'dn--un--bit_Bits_Bits8'(V0) -> ((case (1 >= 0) of 'true' -> (1 rem 256); _ -> ((1 + 256) rem 256) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(V0))) rem 256).
'dn--un--bit_Bits_Bits64'(V0) -> ((case (1 >= 0) of 'true' -> (1 rem 18446744073709551616); _ -> ((1 + 18446744073709551616) rem 18446744073709551616) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(V0))) rem 18446744073709551616).
'dn--un--bit_Bits_Bits32'(V0) -> ((case (1 >= 0) of 'true' -> (1 rem 4294967296); _ -> ((1 + 4294967296) rem 4294967296) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(V0))) rem 4294967296).
'dn--un--bit_Bits_Bits16'(V0) -> ((case (1 >= 0) of 'true' -> (1 rem 65536); _ -> ((1 + 65536) rem 65536) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(V0))) rem 65536).
'dn--un--bitSize_FiniteBits_Int8'() -> (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))).
'dn--un--bitSize_FiniteBits_Int64'() -> (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
'dn--un--bitSize_FiniteBits_Int32'() -> (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))).
'dn--un--bitSize_FiniteBits_Int16'() -> (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))).
'dn--un--bitSize_FiniteBits_Int'() -> (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
'dn--un--bitSize_FiniteBits_Bits8'() -> (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))).
'dn--un--bitSize_FiniteBits_Bits64'() -> (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
'dn--un--bitSize_FiniteBits_Bits32'() -> (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))).
'dn--un--bitSize_FiniteBits_Bits16'() -> (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))).
'dn--un--__Impl_FiniteBits_Int8'() -> {'Idris.Data.Bits.dn--un--__mkFiniteBits', {'Idris.Data.Bits.dn--un--__mkBits', fun (V0) -> fun (V1) -> (V0 band V1) end end, fun (V2) -> fun (V3) -> (V2 bor V3) end end, fun (V4) -> fun (V5) -> (V4 bxor V5) end end, fun (V6) -> fun (V7) -> (V6 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(V7))) end end, fun (V8) -> fun (V9) -> (V8 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(V9))) end end, fun (V10) -> (('erlang':'throw'("Invalid cast Integer->Int8")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(V10))) end, 0, fun (V11) -> (('erlang':'throw'("Invalid cast Integer->Int8")) bxor V11) end, -1, fun (V12) -> fun (V13) -> (V12 bxor (('erlang':'throw'("Invalid cast Integer->Int8")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(V13)))) end end, fun (V14) -> fun (V15) -> (V14 bxor ((('erlang':'throw'("Invalid cast Integer->Int8")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(V15))) band V14)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int8'((V16 band (('erlang':'throw'("Invalid cast Integer->Int8")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(V17)))), ('erlang':'throw'("Invalid cast Integer->Int8")))) end end, fun (V18) -> fun (V19) -> (V18 bor (('erlang':'throw'("Invalid cast Integer->Int8")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(V19)))) end end}, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))), fun (V20) -> V20 end, fun (V21) -> begin (V22 = (V21 bxor ((('erlang':'throw'("Invalid cast Integer->Int8")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))) band V21))), begin (V23 = ((V22 band 85) + ((V22 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(('un--fromNat'((1 + 0), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))) band 85))), begin (V24 = ((V23 band 51) + ((V23 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(('un--fromNat'((1 + (1 + 0)), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))) band 51))), begin (V25 = ((V24 + (V24 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(('un--fromNat'((1 + (1 + (1 + (1 + 0)))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))) band 15)), begin (V26 = case ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int8'(V21, ('erlang':'throw'("Invalid cast Integer->Int8")))) of 1 -> (V25 + 1); 0 -> V25; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int8_Nat'(V26)) end end end end end end}.
'dn--un--__Impl_FiniteBits_Int64'() -> {'Idris.Data.Bits.dn--un--__mkFiniteBits', {'Idris.Data.Bits.dn--un--__mkBits', fun (V0) -> fun (V1) -> (V0 band V1) end end, fun (V2) -> fun (V3) -> (V2 bor V3) end end, fun (V4) -> fun (V5) -> (V4 bxor V5) end end, fun (V6) -> fun (V7) -> (V6 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(V7))) end end, fun (V8) -> fun (V9) -> (V8 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(V9))) end end, fun (V10) -> (('erlang':'throw'("Invalid cast Integer->Int64")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(V10))) end, 0, fun (V11) -> (('erlang':'throw'("Invalid cast Integer->Int64")) bxor V11) end, -1, fun (V12) -> fun (V13) -> (V12 bxor (('erlang':'throw'("Invalid cast Integer->Int64")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(V13)))) end end, fun (V14) -> fun (V15) -> (V14 bxor ((('erlang':'throw'("Invalid cast Integer->Int64")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(V15))) band V14)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int64'((V16 band (('erlang':'throw'("Invalid cast Integer->Int64")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(V17)))), ('erlang':'throw'("Invalid cast Integer->Int64")))) end end, fun (V18) -> fun (V19) -> (V18 bor (('erlang':'throw'("Invalid cast Integer->Int64")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(V19)))) end end}, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), fun (V20) -> V20 end, fun (V21) -> begin (V22 = (V21 bxor ((('erlang':'throw'("Invalid cast Integer->Int64")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) band V21))), begin (V23 = ((V22 band ('erlang':'throw'("Invalid cast Integer->Int64"))) + ((V22 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(('un--fromNat'((1 + 0), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) band ('erlang':'throw'("Invalid cast Integer->Int64"))))), begin (V24 = ((V23 band ('erlang':'throw'("Invalid cast Integer->Int64"))) + ((V23 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(('un--fromNat'((1 + (1 + 0)), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) band ('erlang':'throw'("Invalid cast Integer->Int64"))))), begin (V25 = ((V24 + (V24 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(('un--fromNat'((1 + (1 + (1 + (1 + 0)))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) band ('erlang':'throw'("Invalid cast Integer->Int64")))), begin (V26 = ((V25 * ('erlang':'throw'("Invalid cast Integer->Int64"))) bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), begin (V27 = case ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int64'(V21, ('erlang':'throw'("Invalid cast Integer->Int64")))) of 1 -> (V26 + 1); 0 -> V26; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int64_Nat'(V27)) end end end end end end end}.
'dn--un--__Impl_FiniteBits_Int32'() -> {'Idris.Data.Bits.dn--un--__mkFiniteBits', {'Idris.Data.Bits.dn--un--__mkBits', fun (V0) -> fun (V1) -> (V0 band V1) end end, fun (V2) -> fun (V3) -> (V2 bor V3) end end, fun (V4) -> fun (V5) -> (V4 bxor V5) end end, fun (V6) -> fun (V7) -> (V6 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(V7))) end end, fun (V8) -> fun (V9) -> (V8 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(V9))) end end, fun (V10) -> (('erlang':'throw'("Invalid cast Integer->Int32")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(V10))) end, 0, fun (V11) -> (('erlang':'throw'("Invalid cast Integer->Int32")) bxor V11) end, -1, fun (V12) -> fun (V13) -> (V12 bxor (('erlang':'throw'("Invalid cast Integer->Int32")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(V13)))) end end, fun (V14) -> fun (V15) -> (V14 bxor ((('erlang':'throw'("Invalid cast Integer->Int32")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(V15))) band V14)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int32'((V16 band (('erlang':'throw'("Invalid cast Integer->Int32")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(V17)))), ('erlang':'throw'("Invalid cast Integer->Int32")))) end end, fun (V18) -> fun (V19) -> (V18 bor (('erlang':'throw'("Invalid cast Integer->Int32")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(V19)))) end end}, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))), fun (V20) -> V20 end, fun (V21) -> begin (V22 = (V21 bxor ((('erlang':'throw'("Invalid cast Integer->Int32")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))) band V21))), begin (V23 = ((V22 band ('erlang':'throw'("Invalid cast Integer->Int32"))) + ((V22 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(('un--fromNat'((1 + 0), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))) band ('erlang':'throw'("Invalid cast Integer->Int32"))))), begin (V24 = ((V23 band ('erlang':'throw'("Invalid cast Integer->Int32"))) + ((V23 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(('un--fromNat'((1 + (1 + 0)), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))) band ('erlang':'throw'("Invalid cast Integer->Int32"))))), begin (V25 = ((V24 + (V24 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(('un--fromNat'((1 + (1 + (1 + (1 + 0)))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))) band ('erlang':'throw'("Invalid cast Integer->Int32")))), begin (V26 = ((V25 * ('erlang':'throw'("Invalid cast Integer->Int32"))) bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))), begin (V27 = case ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int32'(V21, ('erlang':'throw'("Invalid cast Integer->Int32")))) of 1 -> (V26 + 1); 0 -> V26; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int32_Nat'(V27)) end end end end end end end}.
'dn--un--__Impl_FiniteBits_Int16'() -> {'Idris.Data.Bits.dn--un--__mkFiniteBits', {'Idris.Data.Bits.dn--un--__mkBits', fun (V0) -> fun (V1) -> (V0 band V1) end end, fun (V2) -> fun (V3) -> (V2 bor V3) end end, fun (V4) -> fun (V5) -> (V4 bxor V5) end end, fun (V6) -> fun (V7) -> (V6 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(V7))) end end, fun (V8) -> fun (V9) -> (V8 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(V9))) end end, fun (V10) -> (('erlang':'throw'("Invalid cast Integer->Int16")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(V10))) end, 0, fun (V11) -> (('erlang':'throw'("Invalid cast Integer->Int16")) bxor V11) end, -1, fun (V12) -> fun (V13) -> (V12 bxor (('erlang':'throw'("Invalid cast Integer->Int16")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(V13)))) end end, fun (V14) -> fun (V15) -> (V14 bxor ((('erlang':'throw'("Invalid cast Integer->Int16")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(V15))) band V14)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int16'((V16 band (('erlang':'throw'("Invalid cast Integer->Int16")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(V17)))), ('erlang':'throw'("Invalid cast Integer->Int16")))) end end, fun (V18) -> fun (V19) -> (V18 bor (('erlang':'throw'("Invalid cast Integer->Int16")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(V19)))) end end}, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))), fun (V20) -> V20 end, fun (V21) -> begin (V22 = (V21 bxor ((('erlang':'throw'("Invalid cast Integer->Int16")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))) band V21))), begin (V23 = ((V22 band ('erlang':'throw'("Invalid cast Integer->Int16"))) + ((V22 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(('un--fromNat'((1 + 0), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))) band ('erlang':'throw'("Invalid cast Integer->Int16"))))), begin (V24 = ((V23 band ('erlang':'throw'("Invalid cast Integer->Int16"))) + ((V23 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(('un--fromNat'((1 + (1 + 0)), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))) band ('erlang':'throw'("Invalid cast Integer->Int16"))))), begin (V25 = ((V24 + (V24 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(('un--fromNat'((1 + (1 + (1 + (1 + 0)))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))) band ('erlang':'throw'("Invalid cast Integer->Int16")))), begin (V26 = ((V25 * ('erlang':'throw'("Invalid cast Integer->Int16"))) bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))), begin (V27 = case ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int16'(V21, ('erlang':'throw'("Invalid cast Integer->Int16")))) of 1 -> (V26 + 1); 0 -> V26; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int16_Nat'(V27)) end end end end end end end}.
'dn--un--__Impl_FiniteBits_Int'() -> {'Idris.Data.Bits.dn--un--__mkFiniteBits', {'Idris.Data.Bits.dn--un--__mkBits', fun (V0) -> fun (V1) -> (V0 band V1) end end, fun (V2) -> fun (V3) -> (V2 bor V3) end end, fun (V4) -> fun (V5) -> (V4 bxor V5) end end, fun (V6) -> fun (V7) -> ((V6 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V7))) rem 9223372036854775808) end end, fun (V8) -> fun (V9) -> (V8 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V9))) end end, fun (V10) -> ((1 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V10))) rem 9223372036854775808) end, 0, fun (V11) -> (-1 bxor V11) end, -1, fun (V12) -> fun (V13) -> (V12 bxor ((1 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V13))) rem 9223372036854775808)) end end, fun (V14) -> fun (V15) -> (V14 bxor (((1 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V15))) rem 9223372036854775808) band V14)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'((V16 band ((1 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V17))) rem 9223372036854775808)), 0)) end end, fun (V18) -> fun (V19) -> (V18 bor ((1 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V19))) rem 9223372036854775808)) end end}, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), fun (V20) -> V20 end, fun (V21) -> begin (V22 = (V21 bxor (((1 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) rem 9223372036854775808) band V21))), begin (V23 = (((V22 band 6148914691236517205) + ((V22 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(('un--fromNat'((1 + 0), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) band 6148914691236517205)) rem 9223372036854775808)), begin (V24 = (((V23 band 3689348814741910323) + ((V23 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(('un--fromNat'((1 + (1 + 0)), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) band 3689348814741910323)) rem 9223372036854775808)), begin (V25 = (((V24 + (V24 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(('un--fromNat'((1 + (1 + (1 + (1 + 0)))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) rem 9223372036854775808) band 1085102592571150095)), begin (V26 = (((V25 * 72340172838076673) rem 9223372036854775808) bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), begin (V27 = case ('Idris.Idris2.Prelude.EqOrd':'dn--un--<_Ord_Int'(V21, 0)) of 1 -> ((V26 + 1) rem 9223372036854775808); 0 -> V26; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Int_Nat'(V27)) end end end end end end end}.
'dn--un--__Impl_FiniteBits_Bits8'() -> {'Idris.Data.Bits.dn--un--__mkFiniteBits', {'Idris.Data.Bits.dn--un--__mkBits', fun (V0) -> fun (V1) -> (V0 band V1) end end, fun (V2) -> fun (V3) -> (V2 bor V3) end end, fun (V4) -> fun (V5) -> (V4 bxor V5) end end, fun (V6) -> fun (V7) -> ((V6 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(V7))) rem 256) end end, fun (V8) -> fun (V9) -> (V8 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(V9))) end end, fun (V10) -> ((case (1 >= 0) of 'true' -> (1 rem 256); _ -> ((1 + 256) rem 256) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(V10))) rem 256) end, 0, fun (V11) -> (case (255 >= 0) of 'true' -> (255 rem 256); _ -> ((255 + 256) rem 256) end bxor V11) end, case (255 >= 0) of 'true' -> (255 rem 256); _ -> ((255 + 256) rem 256) end, fun (V12) -> fun (V13) -> (V12 bxor ((case (1 >= 0) of 'true' -> (1 rem 256); _ -> ((1 + 256) rem 256) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(V13))) rem 256)) end end, fun (V14) -> fun (V15) -> (V14 bxor (((case (1 >= 0) of 'true' -> (1 rem 256); _ -> ((1 + 256) rem 256) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(V15))) rem 256) band V14)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Bits8'((V16 band ((case (1 >= 0) of 'true' -> (1 rem 256); _ -> ((1 + 256) rem 256) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(V17))) rem 256)), case (0 >= 0) of 'true' -> (0 rem 256); _ -> ((0 + 256) rem 256) end)) end end, fun (V18) -> fun (V19) -> (V18 bor ((case (1 >= 0) of 'true' -> (1 rem 256); _ -> ((1 + 256) rem 256) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(V19))) rem 256)) end end}, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))), fun (V20) -> V20 end, fun (V21) -> begin (V22 = (((V21 band 85) + ((V21 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(('un--fromNat'((1 + 0), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))) band 85)) rem 256)), begin (V23 = (((V22 band 51) + ((V22 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(('un--fromNat'((1 + (1 + 0)), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))) band 51)) rem 256)), begin (V24 = (((V23 + (V23 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(('un--fromNat'((1 + (1 + (1 + (1 + 0)))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))) rem 256) band 15)), ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Bits8_Nat'(V24)) end end end end}.
'dn--un--__Impl_FiniteBits_Bits64'() -> {'Idris.Data.Bits.dn--un--__mkFiniteBits', {'Idris.Data.Bits.dn--un--__mkBits', fun (V0) -> fun (V1) -> (V0 band V1) end end, fun (V2) -> fun (V3) -> (V2 bor V3) end end, fun (V4) -> fun (V5) -> (V4 bxor V5) end end, fun (V6) -> fun (V7) -> ((V6 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(V7))) rem 18446744073709551616) end end, fun (V8) -> fun (V9) -> (V8 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(V9))) end end, fun (V10) -> ((case (1 >= 0) of 'true' -> (1 rem 18446744073709551616); _ -> ((1 + 18446744073709551616) rem 18446744073709551616) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(V10))) rem 18446744073709551616) end, 0, fun (V11) -> (case (18446744073709551615 >= 0) of 'true' -> (18446744073709551615 rem 18446744073709551616); _ -> ((18446744073709551615 + 18446744073709551616) rem 18446744073709551616) end bxor V11) end, case (18446744073709551615 >= 0) of 'true' -> (18446744073709551615 rem 18446744073709551616); _ -> ((18446744073709551615 + 18446744073709551616) rem 18446744073709551616) end, fun (V12) -> fun (V13) -> (V12 bxor ((case (1 >= 0) of 'true' -> (1 rem 18446744073709551616); _ -> ((1 + 18446744073709551616) rem 18446744073709551616) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(V13))) rem 18446744073709551616)) end end, fun (V14) -> fun (V15) -> (V14 bxor (((case (1 >= 0) of 'true' -> (1 rem 18446744073709551616); _ -> ((1 + 18446744073709551616) rem 18446744073709551616) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(V15))) rem 18446744073709551616) band V14)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Bits64'((V16 band ((case (1 >= 0) of 'true' -> (1 rem 18446744073709551616); _ -> ((1 + 18446744073709551616) rem 18446744073709551616) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(V17))) rem 18446744073709551616)), case (0 >= 0) of 'true' -> (0 rem 18446744073709551616); _ -> ((0 + 18446744073709551616) rem 18446744073709551616) end)) end end, fun (V18) -> fun (V19) -> (V18 bor ((case (1 >= 0) of 'true' -> (1 rem 18446744073709551616); _ -> ((1 + 18446744073709551616) rem 18446744073709551616) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(V19))) rem 18446744073709551616)) end end}, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), fun (V20) -> V20 end, fun (V21) -> begin (V22 = (((V21 band case (6148914691236517205 >= 0) of 'true' -> (6148914691236517205 rem 18446744073709551616); _ -> ((6148914691236517205 + 18446744073709551616) rem 18446744073709551616) end) + ((V21 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(('un--fromNat'((1 + 0), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) band case (6148914691236517205 >= 0) of 'true' -> (6148914691236517205 rem 18446744073709551616); _ -> ((6148914691236517205 + 18446744073709551616) rem 18446744073709551616) end)) rem 18446744073709551616)), begin (V23 = (((V22 band case (3689348814741910323 >= 0) of 'true' -> (3689348814741910323 rem 18446744073709551616); _ -> ((3689348814741910323 + 18446744073709551616) rem 18446744073709551616) end) + ((V22 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(('un--fromNat'((1 + (1 + 0)), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) band case (3689348814741910323 >= 0) of 'true' -> (3689348814741910323 rem 18446744073709551616); _ -> ((3689348814741910323 + 18446744073709551616) rem 18446744073709551616) end)) rem 18446744073709551616)), begin (V24 = (((V23 + (V23 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(('un--fromNat'((1 + (1 + (1 + (1 + 0)))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) rem 18446744073709551616) band case (252645135 >= 0) of 'true' -> (252645135 rem 18446744073709551616); _ -> ((252645135 + 18446744073709551616) rem 18446744073709551616) end)), begin (V25 = (((V24 * case (72340172838076673 >= 0) of 'true' -> (72340172838076673 rem 18446744073709551616); _ -> ((72340172838076673 + 18446744073709551616) rem 18446744073709551616) end) rem 18446744073709551616) bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Bits64_Nat'(V25)) end end end end end}.
'dn--un--__Impl_FiniteBits_Bits32'() -> {'Idris.Data.Bits.dn--un--__mkFiniteBits', {'Idris.Data.Bits.dn--un--__mkBits', fun (V0) -> fun (V1) -> (V0 band V1) end end, fun (V2) -> fun (V3) -> (V2 bor V3) end end, fun (V4) -> fun (V5) -> (V4 bxor V5) end end, fun (V6) -> fun (V7) -> ((V6 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(V7))) rem 4294967296) end end, fun (V8) -> fun (V9) -> (V8 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(V9))) end end, fun (V10) -> ((case (1 >= 0) of 'true' -> (1 rem 4294967296); _ -> ((1 + 4294967296) rem 4294967296) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(V10))) rem 4294967296) end, 0, fun (V11) -> (case (4294967295 >= 0) of 'true' -> (4294967295 rem 4294967296); _ -> ((4294967295 + 4294967296) rem 4294967296) end bxor V11) end, case (4294967295 >= 0) of 'true' -> (4294967295 rem 4294967296); _ -> ((4294967295 + 4294967296) rem 4294967296) end, fun (V12) -> fun (V13) -> (V12 bxor ((case (1 >= 0) of 'true' -> (1 rem 4294967296); _ -> ((1 + 4294967296) rem 4294967296) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(V13))) rem 4294967296)) end end, fun (V14) -> fun (V15) -> (V14 bxor (((case (1 >= 0) of 'true' -> (1 rem 4294967296); _ -> ((1 + 4294967296) rem 4294967296) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(V15))) rem 4294967296) band V14)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Bits32'((V16 band ((case (1 >= 0) of 'true' -> (1 rem 4294967296); _ -> ((1 + 4294967296) rem 4294967296) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(V17))) rem 4294967296)), case (0 >= 0) of 'true' -> (0 rem 4294967296); _ -> ((0 + 4294967296) rem 4294967296) end)) end end, fun (V18) -> fun (V19) -> (V18 bor ((case (1 >= 0) of 'true' -> (1 rem 4294967296); _ -> ((1 + 4294967296) rem 4294967296) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(V19))) rem 4294967296)) end end}, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))), fun (V20) -> V20 end, fun (V21) -> begin (V22 = (((V21 band case (1431655765 >= 0) of 'true' -> (1431655765 rem 4294967296); _ -> ((1431655765 + 4294967296) rem 4294967296) end) + ((V21 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(('un--fromNat'((1 + 0), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))) band case (1431655765 >= 0) of 'true' -> (1431655765 rem 4294967296); _ -> ((1431655765 + 4294967296) rem 4294967296) end)) rem 4294967296)), begin (V23 = (((V22 band case (858993459 >= 0) of 'true' -> (858993459 rem 4294967296); _ -> ((858993459 + 4294967296) rem 4294967296) end) + ((V22 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(('un--fromNat'((1 + (1 + 0)), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))))))))))))))) band case (858993459 >= 0) of 'true' -> (858993459 rem 4294967296); _ -> ((858993459 + 4294967296) rem 4294967296) end)) rem 4294967296)), begin (V24 = (((V23 + (V23 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(('un--fromNat'((1 + (1 + (1 + (1 + 0)))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))) rem 4294967296) band case (252645135 >= 0) of 'true' -> (252645135 rem 4294967296); _ -> ((252645135 + 4294967296) rem 4294967296) end)), begin (V25 = (((V24 * case (16843009 >= 0) of 'true' -> (16843009 rem 4294967296); _ -> ((16843009 + 4294967296) rem 4294967296) end) rem 4294967296) bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))))))))))))))))))), ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Bits32_Nat'(V25)) end end end end end}.
'dn--un--__Impl_FiniteBits_Bits16'() -> {'Idris.Data.Bits.dn--un--__mkFiniteBits', {'Idris.Data.Bits.dn--un--__mkBits', fun (V0) -> fun (V1) -> (V0 band V1) end end, fun (V2) -> fun (V3) -> (V2 bor V3) end end, fun (V4) -> fun (V5) -> (V4 bxor V5) end end, fun (V6) -> fun (V7) -> ((V6 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(V7))) rem 65536) end end, fun (V8) -> fun (V9) -> (V8 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(V9))) end end, fun (V10) -> ((case (1 >= 0) of 'true' -> (1 rem 65536); _ -> ((1 + 65536) rem 65536) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(V10))) rem 65536) end, 0, fun (V11) -> (case (65535 >= 0) of 'true' -> (65535 rem 65536); _ -> ((65535 + 65536) rem 65536) end bxor V11) end, case (65535 >= 0) of 'true' -> (65535 rem 65536); _ -> ((65535 + 65536) rem 65536) end, fun (V12) -> fun (V13) -> (V12 bxor ((case (1 >= 0) of 'true' -> (1 rem 65536); _ -> ((1 + 65536) rem 65536) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(V13))) rem 65536)) end end, fun (V14) -> fun (V15) -> (V14 bxor (((case (1 >= 0) of 'true' -> (1 rem 65536); _ -> ((1 + 65536) rem 65536) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(V15))) rem 65536) band V14)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Bits16'((V16 band ((case (1 >= 0) of 'true' -> (1 rem 65536); _ -> ((1 + 65536) rem 65536) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(V17))) rem 65536)), case (0 >= 0) of 'true' -> (0 rem 65536); _ -> ((0 + 65536) rem 65536) end)) end end, fun (V18) -> fun (V19) -> (V18 bor ((case (1 >= 0) of 'true' -> (1 rem 65536); _ -> ((1 + 65536) rem 65536) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(V19))) rem 65536)) end end}, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))), fun (V20) -> V20 end, fun (V21) -> begin (V22 = (((V21 band case (21845 >= 0) of 'true' -> (21845 rem 65536); _ -> ((21845 + 65536) rem 65536) end) + ((V21 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(('un--fromNat'((1 + 0), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))) band case (21845 >= 0) of 'true' -> (21845 rem 65536); _ -> ((21845 + 65536) rem 65536) end)) rem 65536)), begin (V23 = (((V22 band case (13107 >= 0) of 'true' -> (13107 rem 65536); _ -> ((13107 + 65536) rem 65536) end) + ((V22 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(('un--fromNat'((1 + (1 + 0)), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))) band case (13107 >= 0) of 'true' -> (13107 rem 65536); _ -> ((13107 + 65536) rem 65536) end)) rem 65536)), begin (V24 = (((V23 + (V23 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(('un--fromNat'((1 + (1 + (1 + (1 + 0)))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))) rem 65536) band case (3855 >= 0) of 'true' -> (3855 rem 65536); _ -> ((3855 + 65536) rem 65536) end)), begin (V25 = (((V24 * case (257 >= 0) of 'true' -> (257 rem 65536); _ -> ((257 + 65536) rem 65536) end) rem 65536) bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(('un--fromNat'((1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))), (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))))), ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Bits16_Nat'(V25)) end end end end end}.
'dn--un--__Impl_Bits_Integer'() -> {'Idris.Data.Bits.dn--un--__mkBits', fun (V0) -> fun (V1) -> (V0 band V1) end end, fun (V2) -> fun (V3) -> (V2 bor V3) end end, fun (V4) -> fun (V5) -> (V4 bxor V5) end end, fun (V6) -> fun (V7) -> (V6 bsl V7) end end, fun (V8) -> fun (V9) -> (V8 bsr V9) end end, fun (V10) -> (1 bsl V10) end, 0, fun (V11) -> (-1 bxor V11) end, -1, fun (V12) -> fun (V13) -> (V12 bxor (1 bsl V13)) end end, fun (V14) -> fun (V15) -> (V14 bxor ((1 bsl V15) band V14)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Integer'((V16 band (1 bsl V17)), 0)) end end, fun (V18) -> fun (V19) -> (V18 bor (1 bsl V19)) end end}.
'dn--un--__Impl_Bits_Int8'() -> {'Idris.Data.Bits.dn--un--__mkBits', fun (V0) -> fun (V1) -> (V0 band V1) end end, fun (V2) -> fun (V3) -> (V2 bor V3) end end, fun (V4) -> fun (V5) -> (V4 bxor V5) end end, fun (V6) -> fun (V7) -> (V6 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(V7))) end end, fun (V8) -> fun (V9) -> (V8 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(V9))) end end, fun (V10) -> (('erlang':'throw'("Invalid cast Integer->Int8")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(V10))) end, 0, fun (V11) -> (('erlang':'throw'("Invalid cast Integer->Int8")) bxor V11) end, -1, fun (V12) -> fun (V13) -> (V12 bxor (('erlang':'throw'("Invalid cast Integer->Int8")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(V13)))) end end, fun (V14) -> fun (V15) -> (V14 bxor ((('erlang':'throw'("Invalid cast Integer->Int8")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(V15))) band V14)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int8'((V16 band (('erlang':'throw'("Invalid cast Integer->Int8")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(V17)))), ('erlang':'throw'("Invalid cast Integer->Int8")))) end end, fun (V18) -> fun (V19) -> (V18 bor (('erlang':'throw'("Invalid cast Integer->Int8")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int8'(V19)))) end end}.
'dn--un--__Impl_Bits_Int64'() -> {'Idris.Data.Bits.dn--un--__mkBits', fun (V0) -> fun (V1) -> (V0 band V1) end end, fun (V2) -> fun (V3) -> (V2 bor V3) end end, fun (V4) -> fun (V5) -> (V4 bxor V5) end end, fun (V6) -> fun (V7) -> (V6 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(V7))) end end, fun (V8) -> fun (V9) -> (V8 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(V9))) end end, fun (V10) -> (('erlang':'throw'("Invalid cast Integer->Int64")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(V10))) end, 0, fun (V11) -> (('erlang':'throw'("Invalid cast Integer->Int64")) bxor V11) end, -1, fun (V12) -> fun (V13) -> (V12 bxor (('erlang':'throw'("Invalid cast Integer->Int64")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(V13)))) end end, fun (V14) -> fun (V15) -> (V14 bxor ((('erlang':'throw'("Invalid cast Integer->Int64")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(V15))) band V14)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int64'((V16 band (('erlang':'throw'("Invalid cast Integer->Int64")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(V17)))), ('erlang':'throw'("Invalid cast Integer->Int64")))) end end, fun (V18) -> fun (V19) -> (V18 bor (('erlang':'throw'("Invalid cast Integer->Int64")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int64'(V19)))) end end}.
'dn--un--__Impl_Bits_Int32'() -> {'Idris.Data.Bits.dn--un--__mkBits', fun (V0) -> fun (V1) -> (V0 band V1) end end, fun (V2) -> fun (V3) -> (V2 bor V3) end end, fun (V4) -> fun (V5) -> (V4 bxor V5) end end, fun (V6) -> fun (V7) -> (V6 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(V7))) end end, fun (V8) -> fun (V9) -> (V8 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(V9))) end end, fun (V10) -> (('erlang':'throw'("Invalid cast Integer->Int32")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(V10))) end, 0, fun (V11) -> (('erlang':'throw'("Invalid cast Integer->Int32")) bxor V11) end, -1, fun (V12) -> fun (V13) -> (V12 bxor (('erlang':'throw'("Invalid cast Integer->Int32")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(V13)))) end end, fun (V14) -> fun (V15) -> (V14 bxor ((('erlang':'throw'("Invalid cast Integer->Int32")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(V15))) band V14)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int32'((V16 band (('erlang':'throw'("Invalid cast Integer->Int32")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(V17)))), ('erlang':'throw'("Invalid cast Integer->Int32")))) end end, fun (V18) -> fun (V19) -> (V18 bor (('erlang':'throw'("Invalid cast Integer->Int32")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int32'(V19)))) end end}.
'dn--un--__Impl_Bits_Int16'() -> {'Idris.Data.Bits.dn--un--__mkBits', fun (V0) -> fun (V1) -> (V0 band V1) end end, fun (V2) -> fun (V3) -> (V2 bor V3) end end, fun (V4) -> fun (V5) -> (V4 bxor V5) end end, fun (V6) -> fun (V7) -> (V6 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(V7))) end end, fun (V8) -> fun (V9) -> (V8 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(V9))) end end, fun (V10) -> (('erlang':'throw'("Invalid cast Integer->Int16")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(V10))) end, 0, fun (V11) -> (('erlang':'throw'("Invalid cast Integer->Int16")) bxor V11) end, -1, fun (V12) -> fun (V13) -> (V12 bxor (('erlang':'throw'("Invalid cast Integer->Int16")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(V13)))) end end, fun (V14) -> fun (V15) -> (V14 bxor ((('erlang':'throw'("Invalid cast Integer->Int16")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(V15))) band V14)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int16'((V16 band (('erlang':'throw'("Invalid cast Integer->Int16")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(V17)))), ('erlang':'throw'("Invalid cast Integer->Int16")))) end end, fun (V18) -> fun (V19) -> (V18 bor (('erlang':'throw'("Invalid cast Integer->Int16")) bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int16'(V19)))) end end}.
'dn--un--__Impl_Bits_Int'() -> {'Idris.Data.Bits.dn--un--__mkBits', fun (V0) -> fun (V1) -> (V0 band V1) end end, fun (V2) -> fun (V3) -> (V2 bor V3) end end, fun (V4) -> fun (V5) -> (V4 bxor V5) end end, fun (V6) -> fun (V7) -> ((V6 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V7))) rem 9223372036854775808) end end, fun (V8) -> fun (V9) -> (V8 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V9))) end end, fun (V10) -> ((1 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V10))) rem 9223372036854775808) end, 0, fun (V11) -> (-1 bxor V11) end, -1, fun (V12) -> fun (V13) -> (V12 bxor ((1 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V13))) rem 9223372036854775808)) end end, fun (V14) -> fun (V15) -> (V14 bxor (((1 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V15))) rem 9223372036854775808) band V14)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'((V16 band ((1 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V17))) rem 9223372036854775808)), 0)) end end, fun (V18) -> fun (V19) -> (V18 bor ((1 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(V19))) rem 9223372036854775808)) end end}.
'dn--un--__Impl_Bits_Bits8'() -> {'Idris.Data.Bits.dn--un--__mkBits', fun (V0) -> fun (V1) -> (V0 band V1) end end, fun (V2) -> fun (V3) -> (V2 bor V3) end end, fun (V4) -> fun (V5) -> (V4 bxor V5) end end, fun (V6) -> fun (V7) -> ((V6 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(V7))) rem 256) end end, fun (V8) -> fun (V9) -> (V8 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(V9))) end end, fun (V10) -> ((case (1 >= 0) of 'true' -> (1 rem 256); _ -> ((1 + 256) rem 256) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(V10))) rem 256) end, 0, fun (V11) -> (case (255 >= 0) of 'true' -> (255 rem 256); _ -> ((255 + 256) rem 256) end bxor V11) end, case (255 >= 0) of 'true' -> (255 rem 256); _ -> ((255 + 256) rem 256) end, fun (V12) -> fun (V13) -> (V12 bxor ((case (1 >= 0) of 'true' -> (1 rem 256); _ -> ((1 + 256) rem 256) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(V13))) rem 256)) end end, fun (V14) -> fun (V15) -> (V14 bxor (((case (1 >= 0) of 'true' -> (1 rem 256); _ -> ((1 + 256) rem 256) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(V15))) rem 256) band V14)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Bits8'((V16 band ((case (1 >= 0) of 'true' -> (1 rem 256); _ -> ((1 + 256) rem 256) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(V17))) rem 256)), case (0 >= 0) of 'true' -> (0 rem 256); _ -> ((0 + 256) rem 256) end)) end end, fun (V18) -> fun (V19) -> (V18 bor ((case (1 >= 0) of 'true' -> (1 rem 256); _ -> ((1 + 256) rem 256) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits8'(V19))) rem 256)) end end}.
'dn--un--__Impl_Bits_Bits64'() -> {'Idris.Data.Bits.dn--un--__mkBits', fun (V0) -> fun (V1) -> (V0 band V1) end end, fun (V2) -> fun (V3) -> (V2 bor V3) end end, fun (V4) -> fun (V5) -> (V4 bxor V5) end end, fun (V6) -> fun (V7) -> ((V6 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(V7))) rem 18446744073709551616) end end, fun (V8) -> fun (V9) -> (V8 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(V9))) end end, fun (V10) -> ((case (1 >= 0) of 'true' -> (1 rem 18446744073709551616); _ -> ((1 + 18446744073709551616) rem 18446744073709551616) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(V10))) rem 18446744073709551616) end, 0, fun (V11) -> (case (18446744073709551615 >= 0) of 'true' -> (18446744073709551615 rem 18446744073709551616); _ -> ((18446744073709551615 + 18446744073709551616) rem 18446744073709551616) end bxor V11) end, case (18446744073709551615 >= 0) of 'true' -> (18446744073709551615 rem 18446744073709551616); _ -> ((18446744073709551615 + 18446744073709551616) rem 18446744073709551616) end, fun (V12) -> fun (V13) -> (V12 bxor ((case (1 >= 0) of 'true' -> (1 rem 18446744073709551616); _ -> ((1 + 18446744073709551616) rem 18446744073709551616) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(V13))) rem 18446744073709551616)) end end, fun (V14) -> fun (V15) -> (V14 bxor (((case (1 >= 0) of 'true' -> (1 rem 18446744073709551616); _ -> ((1 + 18446744073709551616) rem 18446744073709551616) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(V15))) rem 18446744073709551616) band V14)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Bits64'((V16 band ((case (1 >= 0) of 'true' -> (1 rem 18446744073709551616); _ -> ((1 + 18446744073709551616) rem 18446744073709551616) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(V17))) rem 18446744073709551616)), case (0 >= 0) of 'true' -> (0 rem 18446744073709551616); _ -> ((0 + 18446744073709551616) rem 18446744073709551616) end)) end end, fun (V18) -> fun (V19) -> (V18 bor ((case (1 >= 0) of 'true' -> (1 rem 18446744073709551616); _ -> ((1 + 18446744073709551616) rem 18446744073709551616) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits64'(V19))) rem 18446744073709551616)) end end}.
'dn--un--__Impl_Bits_Bits32'() -> {'Idris.Data.Bits.dn--un--__mkBits', fun (V0) -> fun (V1) -> (V0 band V1) end end, fun (V2) -> fun (V3) -> (V2 bor V3) end end, fun (V4) -> fun (V5) -> (V4 bxor V5) end end, fun (V6) -> fun (V7) -> ((V6 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(V7))) rem 4294967296) end end, fun (V8) -> fun (V9) -> (V8 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(V9))) end end, fun (V10) -> ((case (1 >= 0) of 'true' -> (1 rem 4294967296); _ -> ((1 + 4294967296) rem 4294967296) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(V10))) rem 4294967296) end, 0, fun (V11) -> (case (4294967295 >= 0) of 'true' -> (4294967295 rem 4294967296); _ -> ((4294967295 + 4294967296) rem 4294967296) end bxor V11) end, case (4294967295 >= 0) of 'true' -> (4294967295 rem 4294967296); _ -> ((4294967295 + 4294967296) rem 4294967296) end, fun (V12) -> fun (V13) -> (V12 bxor ((case (1 >= 0) of 'true' -> (1 rem 4294967296); _ -> ((1 + 4294967296) rem 4294967296) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(V13))) rem 4294967296)) end end, fun (V14) -> fun (V15) -> (V14 bxor (((case (1 >= 0) of 'true' -> (1 rem 4294967296); _ -> ((1 + 4294967296) rem 4294967296) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(V15))) rem 4294967296) band V14)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Bits32'((V16 band ((case (1 >= 0) of 'true' -> (1 rem 4294967296); _ -> ((1 + 4294967296) rem 4294967296) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(V17))) rem 4294967296)), case (0 >= 0) of 'true' -> (0 rem 4294967296); _ -> ((0 + 4294967296) rem 4294967296) end)) end end, fun (V18) -> fun (V19) -> (V18 bor ((case (1 >= 0) of 'true' -> (1 rem 4294967296); _ -> ((1 + 4294967296) rem 4294967296) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits32'(V19))) rem 4294967296)) end end}.
'dn--un--__Impl_Bits_Bits16'() -> {'Idris.Data.Bits.dn--un--__mkBits', fun (V0) -> fun (V1) -> (V0 band V1) end end, fun (V2) -> fun (V3) -> (V2 bor V3) end end, fun (V4) -> fun (V5) -> (V4 bxor V5) end end, fun (V6) -> fun (V7) -> ((V6 bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(V7))) rem 65536) end end, fun (V8) -> fun (V9) -> (V8 bsr ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(V9))) end end, fun (V10) -> ((case (1 >= 0) of 'true' -> (1 rem 65536); _ -> ((1 + 65536) rem 65536) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(V10))) rem 65536) end, 0, fun (V11) -> (case (65535 >= 0) of 'true' -> (65535 rem 65536); _ -> ((65535 + 65536) rem 65536) end bxor V11) end, case (65535 >= 0) of 'true' -> (65535 rem 65536); _ -> ((65535 + 65536) rem 65536) end, fun (V12) -> fun (V13) -> (V12 bxor ((case (1 >= 0) of 'true' -> (1 rem 65536); _ -> ((1 + 65536) rem 65536) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(V13))) rem 65536)) end end, fun (V14) -> fun (V15) -> (V14 bxor (((case (1 >= 0) of 'true' -> (1 rem 65536); _ -> ((1 + 65536) rem 65536) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(V15))) rem 65536) band V14)) end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Bits16'((V16 band ((case (1 >= 0) of 'true' -> (1 rem 65536); _ -> ((1 + 65536) rem 65536) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(V17))) rem 65536)), case (0 >= 0) of 'true' -> (0 rem 65536); _ -> ((0 + 65536) rem 65536) end)) end end, fun (V18) -> fun (V19) -> (V18 bor ((case (1 >= 0) of 'true' -> (1 rem 65536); _ -> ((1 + 65536) rem 65536) end bsl ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Bits16'(V19))) rem 65536)) end end}.
'dn--un--__FiniteBits_(Bits a)'(V0) -> case V0 of {'Idris.Data.Bits.dn--un--__mkFiniteBits', E0, E1, E2, E3} -> (fun (V1, V2, V3, V4) -> V1 end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--.|._Bits_Integer'(V0, V1) -> (V0 bor V1).
'dn--un--.|._Bits_Int8'(V0, V1) -> (V0 bor V1).
'dn--un--.|._Bits_Int64'(V0, V1) -> (V0 bor V1).
'dn--un--.|._Bits_Int32'(V0, V1) -> (V0 bor V1).
'dn--un--.|._Bits_Int16'(V0, V1) -> (V0 bor V1).
'dn--un--.|._Bits_Int'(V0, V1) -> (V0 bor V1).
'dn--un--.|._Bits_Bits8'(V0, V1) -> (V0 bor V1).
'dn--un--.|._Bits_Bits64'(V0, V1) -> (V0 bor V1).
'dn--un--.|._Bits_Bits32'(V0, V1) -> (V0 bor V1).
'dn--un--.|._Bits_Bits16'(V0, V1) -> (V0 bor V1).
'dn--un--.&._Bits_Integer'(V0, V1) -> (V0 band V1).
'dn--un--.&._Bits_Int8'(V0, V1) -> (V0 band V1).
'dn--un--.&._Bits_Int64'(V0, V1) -> (V0 band V1).
'dn--un--.&._Bits_Int32'(V0, V1) -> (V0 band V1).
'dn--un--.&._Bits_Int16'(V0, V1) -> (V0 band V1).
'dn--un--.&._Bits_Int'(V0, V1) -> (V0 band V1).
'dn--un--.&._Bits_Bits8'(V0, V1) -> (V0 band V1).
'dn--un--.&._Bits_Bits64'(V0, V1) -> (V0 band V1).
'dn--un--.&._Bits_Bits32'(V0, V1) -> (V0 band V1).
'dn--un--.&._Bits_Bits16'(V0, V1) -> (V0 band V1).
'un--zeroBits'(V0) -> case V0 of {'Idris.Data.Bits.dn--un--__mkBits', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12} -> (fun (V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> V7 end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--xor'(V0, V1, V2) -> case V0 of {'Idris.Data.Bits.dn--un--__mkBits', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12} -> (fun (V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> ((V5(V1))(V2)) end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--testBit'(V0, V1, V2) -> case V0 of {'Idris.Data.Bits.dn--un--__mkBits', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12} -> (fun (V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> ((V14(V1))(V2)) end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--shiftR'(V0, V1, V2) -> case V0 of {'Idris.Data.Bits.dn--un--__mkBits', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12} -> (fun (V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> ((V7(V1))(V2)) end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--shiftL'(V0, V1, V2) -> case V0 of {'Idris.Data.Bits.dn--un--__mkBits', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12} -> (fun (V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> ((V6(V1))(V2)) end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--setBit'(V0, V1, V2) -> case V0 of {'Idris.Data.Bits.dn--un--__mkBits', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12} -> (fun (V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> ((V15(V1))(V2)) end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--popCount'(V0, V1) -> case V0 of {'Idris.Data.Bits.dn--un--__mkFiniteBits', E0, E1, E2, E3} -> (fun (V2, V3, V4, V5) -> (V5(V1)) end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--oneBits'(V0) -> case V0 of {'Idris.Data.Bits.dn--un--__mkBits', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12} -> (fun (V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> V9 end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--fromNat'(V0, V1) -> V0.
'un--complementBit'(V0, V1, V2) -> case V0 of {'Idris.Data.Bits.dn--un--__mkBits', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12} -> (fun (V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> ((V12(V1))(V2)) end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--complement'(V0, V1) -> case V0 of {'Idris.Data.Bits.dn--un--__mkBits', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12} -> (fun (V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> (V9(V1)) end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--clearBit'(V0, V1, V2) -> case V0 of {'Idris.Data.Bits.dn--un--__mkBits', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12} -> (fun (V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> ((V13(V1))(V2)) end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--bitsToIndex'(V0, V1) -> case V0 of {'Idris.Data.Bits.dn--un--__mkFiniteBits', E0, E1, E2, E3} -> (fun (V2, V3, V4, V5) -> (V4(V1)) end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--bitSize'(V0) -> case V0 of {'Idris.Data.Bits.dn--un--__mkFiniteBits', E0, E1, E2, E3} -> (fun (V1, V2, V3, V4) -> V2 end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--bit'(V0, V1) -> case V0 of {'Idris.Data.Bits.dn--un--__mkBits', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12} -> (fun (V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> (V7(V1)) end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--.|.'(V0, V1, V2) -> case V0 of {'Idris.Data.Bits.dn--un--__mkBits', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12} -> (fun (V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> ((V4(V1))(V2)) end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--.&.'(V0, V1, V2) -> case V0 of {'Idris.Data.Bits.dn--un--__mkBits', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12} -> (fun (V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> ((V3(V1))(V2)) end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
