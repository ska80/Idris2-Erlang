-module('Idris.Idris2.Control.Monad.RWS.CPS').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case-->>=-1703'/7,
  'case--case block in <*>-1437'/11,
  'case--<*>-1389'/7,
  'case--map-1215'/7,
  'case--mapRWS-1109'/3,
  'case--execRWS-1035'/5,
  'case--evalRWS-977'/5,
  'case--rws-909'/6,
  'case--mapRWST-763'/7,
  'case--execRWST-667'/5,
  'case--evalRWST-597'/5,
  'case--rwsT-519'/6,
  'dn--un--pure_Applicative_((((RWST $r) $w) $s) $m)'/5,
  'dn--un--map_Functor_((((RWST $r) $w) $s) $m)'/6,
  'dn--un--lift_MonadTrans_(((RWST $r) $w) $s)'/5,
  'dn--un--liftIO_HasIO_((((RWST $r) $w) $s) $m)'/5,
  'dn--un--join_Monad_((((RWST $r) $w) $s) $m)'/5,
  'dn--un--empty_Alternative_((((RWST $r) $w) $s) $m)'/4,
  'dn--un--__Impl_Monad_((((RWST $r) $w) $s) $m)'/1,
  'dn--un--__Impl_MonadTrans_(((RWST $r) $w) $s)'/7,
  'dn--un--__Impl_HasIO_((((RWST $r) $w) $s) $m)'/1,
  'dn--un--__Impl_Functor_((((RWST $r) $w) $s) $m)'/8,
  'dn--un--__Impl_Applicative_((((RWST $r) $w) $s) $m)'/1,
  'dn--un--__Impl_Alternative_((((RWST $r) $w) $s) $m)'/1,
  'dn--un-->>=_Monad_((((RWST $r) $w) $s) $m)'/6,
  'dn--un--<|>_Alternative_((((RWST $r) $w) $s) $m)'/6,
  'dn--un--<*>_Applicative_((((RWST $r) $w) $s) $m)'/6,
  'un--withRWST'/4,
  'un--withRWS'/4,
  'un--rwsT'/5,
  'un--rws'/5,
  'un--runRWST'/4,
  'un--runRWS'/4,
  'un--mapRWST'/6,
  'un--mapRWS'/6,
  'un--execRWST'/4,
  'un--execRWS'/4,
  'un--evalRWST'/4,
  'un--evalRWS'/4,
  'un--RWS'/4
]).
'case-->>=-1703'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V9, V10) -> ((((V1(V7))(V3))(V9))(V10)) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in <*>-1437'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V12 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V13, V14) -> case V0 of {'Idris.Prelude.Interfaces.MkMonad', E4, E5, E6} -> (fun (V15, V16, V17) -> case V15 of {'Idris.Prelude.Interfaces.MkApplicative', E7, E8, E9} -> (fun (V18, V19, V20) -> ((V19('erased'))({'Idris.Builtin.MkPair', (V6(V11)), {'Idris.Builtin.MkPair', V13, V14}})) end(E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--<*>-1389'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V9, V10) -> case V0 of {'Idris.Prelude.Interfaces.MkMonad', E4, E5, E6} -> (fun (V11, V12, V13) -> ((((V12('erased'))('erased'))((((V2(V3))(V9))(V10))))(fun (V14) -> case V14 of {'Idris.Builtin.MkPair', E7, E8} -> (fun (V15, V16) -> case V16 of {'Idris.Builtin.MkPair', E9, E10} -> (fun (V17, V18) -> case V0 of {'Idris.Prelude.Interfaces.MkMonad', E11, E12, E13} -> (fun (V19, V20, V21) -> case V19 of {'Idris.Prelude.Interfaces.MkApplicative', E14, E15, E16} -> (fun (V22, V23, V24) -> ((V23('erased'))({'Idris.Builtin.MkPair', (V7(V15)), {'Idris.Builtin.MkPair', V17, V18}})) end(E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--map-1215'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V9, V10) -> {'Idris.Builtin.MkPair', (V2(V7)), {'Idris.Builtin.MkPair', V9, V10}} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--mapRWS-1109'(V0, V1, V2) -> (V1(V2)).
'case--execRWS-1035'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V7, V8) -> {'Idris.Builtin.MkPair', V7, V8} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--evalRWS-977'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V7, V8) -> {'Idris.Builtin.MkPair', V5, V8} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--rws-909'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V8, V9) -> {'Idris.Builtin.MkPair', V6, {'Idris.Builtin.MkPair', V8, ((V0(V4))(V9))}} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--mapRWST-763'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V9, V10) -> {'Idris.Builtin.MkPair', V7, {'Idris.Builtin.MkPair', V9, ((('Idris.Idris2.Builtin':'un--snd'(('Idris.Idris2.Builtin':'un--snd'(V0))))(V5))(V10))}} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--execRWST-667'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V7, V8) -> {'Idris.Builtin.MkPair', V7, V8} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--evalRWST-597'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V7, V8) -> {'Idris.Builtin.MkPair', V5, V8} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--rwsT-519'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V8, V9) -> {'Idris.Builtin.MkPair', V6, {'Idris.Builtin.MkPair', V8, ((('Idris.Idris2.Builtin':'un--snd'(V0))(V4))(V9))}} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--pure_Applicative_((((RWST $r) $w) $s) $m)'(V0, V1, V2, V3, V4) -> case V0 of {'Idris.Prelude.Interfaces.MkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> case V5 of {'Idris.Prelude.Interfaces.MkApplicative', E3, E4, E5} -> (fun (V8, V9, V10) -> ((V9('erased'))({'Idris.Builtin.MkPair', V1, {'Idris.Builtin.MkPair', V3, V4}})) end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--map_Functor_((((RWST $r) $w) $s) $m)'(V0, V1, V2, V3, V4, V5) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(V0, fun (V6) -> case V6 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V9, V10) -> {'Idris.Builtin.MkPair', (V1(V7)), {'Idris.Builtin.MkPair', V9, V10}} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, (((V2(V3))(V4))(V5)))).
'dn--un--lift_MonadTrans_(((RWST $r) $w) $s)'(V0, V1, V2, V3, V4) -> case V0 of {'Idris.Prelude.Interfaces.MkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> case V5 of {'Idris.Prelude.Interfaces.MkApplicative', E3, E4, E5} -> (fun (V8, V9, V10) -> ((((V8('erased'))('erased'))(fun (V11) -> {'Idris.Builtin.MkPair', V11, {'Idris.Builtin.MkPair', V3, V4}} end))(V1)) end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--liftIO_HasIO_((((RWST $r) $w) $s) $m)'(V0, V1, V2, V3, V4) -> case V0 of {'Idris.Prelude.IO.MkHasIO', E0, E1} -> (fun (V5, V6) -> case V5 of {'Idris.Prelude.Interfaces.MkMonad', E2, E3, E4} -> (fun (V7, V8, V9) -> case V7 of {'Idris.Prelude.Interfaces.MkApplicative', E5, E6, E7} -> (fun (V10, V11, V12) -> ((((V10('erased'))('erased'))(fun (V15) -> {'Idris.Builtin.MkPair', V15, {'Idris.Builtin.MkPair', V3, V4}} end))(case V0 of {'Idris.Prelude.IO.MkHasIO', E8, E9} -> (fun (V13, V14) -> ((V14('erased'))(V1)) end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--join_Monad_((((RWST $r) $w) $s) $m)'(V0, V1, V2, V3, V4) -> case V0 of {'Idris.Prelude.Interfaces.MkMonad', E0, E1, E2} -> (fun (V5, V6, V7) -> ((((V6('erased'))('erased'))((((V1(V2))(V3))(V4))))(fun (V8) -> case V8 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V11, V12) -> (((V9(V2))(V11))(V12)) end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--empty_Alternative_((((RWST $r) $w) $s) $m)'(V0, V1, V2, V3) -> case ('Idris.Idris2.Builtin':'un--snd'(V0)) of {'Idris.Prelude.Interfaces.MkAlternative', E0, E1, E2} -> (fun (V4, V5, V6) -> (V5('erased')) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--__Impl_Monad_((((RWST $r) $w) $s) $m)'(V0) -> {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V1) -> fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(case V0 of {'Idris.Prelude.Interfaces.MkMonad', E0, E1, E2} -> (fun (V8, V9, V10) -> case V8 of {'Idris.Prelude.Interfaces.MkApplicative', E3, E4, E5} -> (fun (V11, V12, V13) -> V11 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, fun (V14) -> case V14 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V15, V16) -> case V16 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V17, V18) -> {'Idris.Builtin.MkPair', (V3(V15)), {'Idris.Builtin.MkPair', V17, V18}} end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, (((V4(V5))(V6))(V7)))) end end end end end end end, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> case V0 of {'Idris.Prelude.Interfaces.MkMonad', E10, E11, E12} -> (fun (V24, V25, V26) -> case V24 of {'Idris.Prelude.Interfaces.MkApplicative', E13, E14, E15} -> (fun (V27, V28, V29) -> ((V28('erased'))({'Idris.Builtin.MkPair', V20, {'Idris.Builtin.MkPair', V22, V23}})) end(E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> case V0 of {'Idris.Prelude.Interfaces.MkMonad', E16, E17, E18} -> (fun (V37, V38, V39) -> ((((V38('erased'))('erased'))((((V32(V34))(V35))(V36))))(fun (V40) -> case V40 of {'Idris.Builtin.MkPair', E19, E20} -> (fun (V41, V42) -> case V42 of {'Idris.Builtin.MkPair', E21, E22} -> (fun (V43, V44) -> case V0 of {'Idris.Prelude.Interfaces.MkMonad', E23, E24, E25} -> (fun (V45, V46, V47) -> ((((V46('erased'))('erased'))((((V33(V34))(V43))(V44))))(fun (V48) -> case V48 of {'Idris.Builtin.MkPair', E26, E27} -> (fun (V49, V50) -> case V50 of {'Idris.Builtin.MkPair', E28, E29} -> (fun (V51, V52) -> case V0 of {'Idris.Prelude.Interfaces.MkMonad', E30, E31, E32} -> (fun (V53, V54, V55) -> case V53 of {'Idris.Prelude.Interfaces.MkApplicative', E33, E34, E35} -> (fun (V56, V57, V58) -> ((V57('erased'))({'Idris.Builtin.MkPair', (V41(V49)), {'Idris.Builtin.MkPair', V51, V52}})) end(E33, E34, E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E23, E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E16, E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end}, fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> case V0 of {'Idris.Prelude.Interfaces.MkMonad', E36, E37, E38} -> (fun (V66, V67, V68) -> ((((V67('erased'))('erased'))((((V61(V63))(V64))(V65))))(fun (V69) -> case V69 of {'Idris.Builtin.MkPair', E39, E40} -> (fun (V70, V71) -> case V71 of {'Idris.Builtin.MkPair', E41, E42} -> (fun (V72, V73) -> ((((V62(V70))(V63))(V72))(V73)) end(E41, E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E39, E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E36, E37, E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end, fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> case V0 of {'Idris.Prelude.Interfaces.MkMonad', E43, E44, E45} -> (fun (V79, V80, V81) -> ((((V80('erased'))('erased'))((((V75(V76))(V77))(V78))))(fun (V82) -> case V82 of {'Idris.Builtin.MkPair', E46, E47} -> (fun (V83, V84) -> case V84 of {'Idris.Builtin.MkPair', E48, E49} -> (fun (V85, V86) -> (((V83(V76))(V85))(V86)) end(E48, E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E43, E44, E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end}.
'dn--un--__Impl_MonadTrans_(((RWST $r) $w) $s)'(V0, V1, V2, V3, V4, V5, V6) -> case V2 of {'Idris.Prelude.Interfaces.MkMonad', E0, E1, E2} -> (fun (V7, V8, V9) -> case V7 of {'Idris.Prelude.Interfaces.MkApplicative', E3, E4, E5} -> (fun (V10, V11, V12) -> ((((V10('erased'))('erased'))(fun (V13) -> {'Idris.Builtin.MkPair', V13, {'Idris.Builtin.MkPair', V5, V6}} end))(V3)) end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--__Impl_HasIO_((((RWST $r) $w) $s) $m)'(V0) -> {'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V1) -> fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(case V0 of {'Idris.Prelude.IO.MkHasIO', E0, E1} -> (fun (V8, V9) -> case V8 of {'Idris.Prelude.Interfaces.MkMonad', E2, E3, E4} -> (fun (V10, V11, V12) -> case V10 of {'Idris.Prelude.Interfaces.MkApplicative', E5, E6, E7} -> (fun (V13, V14, V15) -> V13 end(E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, fun (V16) -> case V16 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V17, V18) -> case V18 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V19, V20) -> {'Idris.Builtin.MkPair', (V3(V17)), {'Idris.Builtin.MkPair', V19, V20}} end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, (((V4(V5))(V6))(V7)))) end end end end end end end, fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> case V0 of {'Idris.Prelude.IO.MkHasIO', E12, E13} -> (fun (V26, V27) -> case V26 of {'Idris.Prelude.Interfaces.MkMonad', E14, E15, E16} -> (fun (V28, V29, V30) -> case V28 of {'Idris.Prelude.Interfaces.MkApplicative', E17, E18, E19} -> (fun (V31, V32, V33) -> ((V32('erased'))({'Idris.Builtin.MkPair', V22, {'Idris.Builtin.MkPair', V24, V25}})) end(E17, E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end, fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> case V0 of {'Idris.Prelude.IO.MkHasIO', E20, E21} -> (fun (V41, V42) -> case V41 of {'Idris.Prelude.Interfaces.MkMonad', E22, E23, E24} -> (fun (V43, V44, V45) -> ((((V44('erased'))('erased'))((((V36(V38))(V39))(V40))))(fun (V46) -> case V46 of {'Idris.Builtin.MkPair', E25, E26} -> (fun (V47, V48) -> case V48 of {'Idris.Builtin.MkPair', E27, E28} -> (fun (V49, V50) -> case V0 of {'Idris.Prelude.IO.MkHasIO', E29, E30} -> (fun (V51, V52) -> case V51 of {'Idris.Prelude.Interfaces.MkMonad', E31, E32, E33} -> (fun (V53, V54, V55) -> ((((V54('erased'))('erased'))((((V37(V38))(V49))(V50))))(fun (V56) -> case V56 of {'Idris.Builtin.MkPair', E34, E35} -> (fun (V57, V58) -> case V58 of {'Idris.Builtin.MkPair', E36, E37} -> (fun (V59, V60) -> case V0 of {'Idris.Prelude.IO.MkHasIO', E38, E39} -> (fun (V61, V62) -> case V61 of {'Idris.Prelude.Interfaces.MkMonad', E40, E41, E42} -> (fun (V63, V64, V65) -> case V63 of {'Idris.Prelude.Interfaces.MkApplicative', E43, E44, E45} -> (fun (V66, V67, V68) -> ((V67('erased'))({'Idris.Builtin.MkPair', (V47(V57)), {'Idris.Builtin.MkPair', V59, V60}})) end(E43, E44, E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E40, E41, E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E38, E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E36, E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E34, E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E31, E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end}, fun (V69) -> fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> case V0 of {'Idris.Prelude.IO.MkHasIO', E46, E47} -> (fun (V76, V77) -> case V76 of {'Idris.Prelude.Interfaces.MkMonad', E48, E49, E50} -> (fun (V78, V79, V80) -> ((((V79('erased'))('erased'))((((V71(V73))(V74))(V75))))(fun (V81) -> case V81 of {'Idris.Builtin.MkPair', E51, E52} -> (fun (V82, V83) -> case V83 of {'Idris.Builtin.MkPair', E53, E54} -> (fun (V84, V85) -> ((((V72(V82))(V73))(V84))(V85)) end(E53, E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E51, E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E48, E49, E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end, fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> case V0 of {'Idris.Prelude.IO.MkHasIO', E55, E56} -> (fun (V91, V92) -> case V91 of {'Idris.Prelude.Interfaces.MkMonad', E57, E58, E59} -> (fun (V93, V94, V95) -> ((((V94('erased'))('erased'))((((V87(V88))(V89))(V90))))(fun (V96) -> case V96 of {'Idris.Builtin.MkPair', E60, E61} -> (fun (V97, V98) -> case V98 of {'Idris.Builtin.MkPair', E62, E63} -> (fun (V99, V100) -> (((V97(V88))(V99))(V100)) end(E62, E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E60, E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E57, E58, E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E55, E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end}, fun (V101) -> fun (V102) -> fun (V103) -> fun (V104) -> fun (V105) -> case V0 of {'Idris.Prelude.IO.MkHasIO', E64, E65} -> (fun (V106, V107) -> case V106 of {'Idris.Prelude.Interfaces.MkMonad', E66, E67, E68} -> (fun (V108, V109, V110) -> case V108 of {'Idris.Prelude.Interfaces.MkApplicative', E69, E70, E71} -> (fun (V111, V112, V113) -> ((((V111('erased'))('erased'))(fun (V116) -> {'Idris.Builtin.MkPair', V116, {'Idris.Builtin.MkPair', V104, V105}} end))(case V0 of {'Idris.Prelude.IO.MkHasIO', E72, E73} -> (fun (V114, V115) -> ((V115('erased'))(V102)) end(E72, E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end(E69, E70, E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E66, E67, E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E64, E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end}.
'dn--un--__Impl_Functor_((((RWST $r) $w) $s) $m)'(V0, V1, V2, V3, V4, V5, V6, V7) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(V0, fun (V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V11, V12) -> {'Idris.Builtin.MkPair', (V3(V9)), {'Idris.Builtin.MkPair', V11, V12}} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, (((V4(V5))(V6))(V7)))).
'dn--un--__Impl_Applicative_((((RWST $r) $w) $s) $m)'(V0) -> {'Idris.Prelude.Interfaces.MkApplicative', fun (V1) -> fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(case V0 of {'Idris.Prelude.Interfaces.MkMonad', E0, E1, E2} -> (fun (V8, V9, V10) -> case V8 of {'Idris.Prelude.Interfaces.MkApplicative', E3, E4, E5} -> (fun (V11, V12, V13) -> V11 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, fun (V14) -> case V14 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V15, V16) -> case V16 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V17, V18) -> {'Idris.Builtin.MkPair', (V3(V15)), {'Idris.Builtin.MkPair', V17, V18}} end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, (((V4(V5))(V6))(V7)))) end end end end end end end, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> case V0 of {'Idris.Prelude.Interfaces.MkMonad', E10, E11, E12} -> (fun (V24, V25, V26) -> case V24 of {'Idris.Prelude.Interfaces.MkApplicative', E13, E14, E15} -> (fun (V27, V28, V29) -> ((V28('erased'))({'Idris.Builtin.MkPair', V20, {'Idris.Builtin.MkPair', V22, V23}})) end(E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> case V0 of {'Idris.Prelude.Interfaces.MkMonad', E16, E17, E18} -> (fun (V37, V38, V39) -> ((((V38('erased'))('erased'))((((V32(V34))(V35))(V36))))(fun (V40) -> case V40 of {'Idris.Builtin.MkPair', E19, E20} -> (fun (V41, V42) -> case V42 of {'Idris.Builtin.MkPair', E21, E22} -> (fun (V43, V44) -> case V0 of {'Idris.Prelude.Interfaces.MkMonad', E23, E24, E25} -> (fun (V45, V46, V47) -> ((((V46('erased'))('erased'))((((V33(V34))(V43))(V44))))(fun (V48) -> case V48 of {'Idris.Builtin.MkPair', E26, E27} -> (fun (V49, V50) -> case V50 of {'Idris.Builtin.MkPair', E28, E29} -> (fun (V51, V52) -> case V0 of {'Idris.Prelude.Interfaces.MkMonad', E30, E31, E32} -> (fun (V53, V54, V55) -> case V53 of {'Idris.Prelude.Interfaces.MkApplicative', E33, E34, E35} -> (fun (V56, V57, V58) -> ((V57('erased'))({'Idris.Builtin.MkPair', (V41(V49)), {'Idris.Builtin.MkPair', V51, V52}})) end(E33, E34, E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E23, E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E16, E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end}.
'dn--un--__Impl_Alternative_((((RWST $r) $w) $s) $m)'(V0) -> {'Idris.Prelude.Interfaces.MkAlternative', {'Idris.Prelude.Interfaces.MkApplicative', fun (V1) -> fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(case ('Idris.Idris2.Builtin':'un--fst'(V0)) of {'Idris.Prelude.Interfaces.MkMonad', E0, E1, E2} -> (fun (V8, V9, V10) -> case V8 of {'Idris.Prelude.Interfaces.MkApplicative', E3, E4, E5} -> (fun (V11, V12, V13) -> V11 end(E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, fun (V14) -> case V14 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V15, V16) -> case V16 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V17, V18) -> {'Idris.Builtin.MkPair', (V3(V15)), {'Idris.Builtin.MkPair', V17, V18}} end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, (((V4(V5))(V6))(V7)))) end end end end end end end, fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> case ('Idris.Idris2.Builtin':'un--fst'(V0)) of {'Idris.Prelude.Interfaces.MkMonad', E10, E11, E12} -> (fun (V24, V25, V26) -> case V24 of {'Idris.Prelude.Interfaces.MkApplicative', E13, E14, E15} -> (fun (V27, V28, V29) -> ((V28('erased'))({'Idris.Builtin.MkPair', V20, {'Idris.Builtin.MkPair', V22, V23}})) end(E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> case ('Idris.Idris2.Builtin':'un--fst'(V0)) of {'Idris.Prelude.Interfaces.MkMonad', E16, E17, E18} -> (fun (V37, V38, V39) -> ((((V38('erased'))('erased'))((((V32(V34))(V35))(V36))))(fun (V40) -> case V40 of {'Idris.Builtin.MkPair', E19, E20} -> (fun (V41, V42) -> case V42 of {'Idris.Builtin.MkPair', E21, E22} -> (fun (V43, V44) -> case ('Idris.Idris2.Builtin':'un--fst'(V0)) of {'Idris.Prelude.Interfaces.MkMonad', E23, E24, E25} -> (fun (V45, V46, V47) -> ((((V46('erased'))('erased'))((((V33(V34))(V43))(V44))))(fun (V48) -> case V48 of {'Idris.Builtin.MkPair', E26, E27} -> (fun (V49, V50) -> case V50 of {'Idris.Builtin.MkPair', E28, E29} -> (fun (V51, V52) -> case ('Idris.Idris2.Builtin':'un--fst'(V0)) of {'Idris.Prelude.Interfaces.MkMonad', E30, E31, E32} -> (fun (V53, V54, V55) -> case V53 of {'Idris.Prelude.Interfaces.MkApplicative', E33, E34, E35} -> (fun (V56, V57, V58) -> ((V57('erased'))({'Idris.Builtin.MkPair', (V41(V49)), {'Idris.Builtin.MkPair', V51, V52}})) end(E33, E34, E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E23, E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E16, E17, E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end}, fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> case ('Idris.Idris2.Builtin':'un--snd'(V0)) of {'Idris.Prelude.Interfaces.MkAlternative', E36, E37, E38} -> (fun (V63, V64, V65) -> (V64('erased')) end(E36, E37, E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> fun (V71) -> case ('Idris.Idris2.Builtin':'un--snd'(V0)) of {'Idris.Prelude.Interfaces.MkAlternative', E39, E40, E41} -> (fun (V72, V73, V74) -> (((V74('erased'))((((V67(V69))(V70))(V71))))(fun () -> ((((V68())(V69))(V70))(V71)) end)) end(E39, E40, E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end}.
'dn--un-->>=_Monad_((((RWST $r) $w) $s) $m)'(V0, V1, V2, V3, V4, V5) -> case V0 of {'Idris.Prelude.Interfaces.MkMonad', E0, E1, E2} -> (fun (V6, V7, V8) -> ((((V7('erased'))('erased'))((((V1(V3))(V4))(V5))))(fun (V9) -> case V9 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V10, V11) -> case V11 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V12, V13) -> ((((V2(V10))(V3))(V12))(V13)) end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--<|>_Alternative_((((RWST $r) $w) $s) $m)'(V0, V1, V2, V3, V4, V5) -> case ('Idris.Idris2.Builtin':'un--snd'(V0)) of {'Idris.Prelude.Interfaces.MkAlternative', E0, E1, E2} -> (fun (V6, V7, V8) -> (((V8('erased'))((((V1(V3))(V4))(V5))))(fun () -> ((((V2())(V3))(V4))(V5)) end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--<*>_Applicative_((((RWST $r) $w) $s) $m)'(V0, V1, V2, V3, V4, V5) -> case V0 of {'Idris.Prelude.Interfaces.MkMonad', E0, E1, E2} -> (fun (V6, V7, V8) -> ((((V7('erased'))('erased'))((((V1(V3))(V4))(V5))))(fun (V9) -> case V9 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V10, V11) -> case V11 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V12, V13) -> case V0 of {'Idris.Prelude.Interfaces.MkMonad', E7, E8, E9} -> (fun (V14, V15, V16) -> ((((V15('erased'))('erased'))((((V2(V3))(V12))(V13))))(fun (V17) -> case V17 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V18, V19) -> case V19 of {'Idris.Builtin.MkPair', E12, E13} -> (fun (V20, V21) -> case V0 of {'Idris.Prelude.Interfaces.MkMonad', E14, E15, E16} -> (fun (V22, V23, V24) -> case V22 of {'Idris.Prelude.Interfaces.MkApplicative', E17, E18, E19} -> (fun (V25, V26, V27) -> ((V26('erased'))({'Idris.Builtin.MkPair', (V10(V18)), {'Idris.Builtin.MkPair', V20, V21}})) end(E17, E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E14, E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end)) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--withRWST'(V0, V1, V2, V3) -> ('Idris.Idris2.Prelude.Basics':'un--uncurry'(V1, ((V0(V2))(V3)))).
'un--withRWS'(V0, V1, V2, V3) -> ('Idris.Idris2.Prelude.Basics':'un--uncurry'(V1, ((V0(V2))(V3)))).
'un--rwsT'(V0, V1, V2, V3, V4) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(('Idris.Idris2.Builtin':'un--fst'(V0)), fun (V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V8, V9) -> {'Idris.Builtin.MkPair', V6, {'Idris.Builtin.MkPair', V8, ((('Idris.Idris2.Builtin':'un--snd'(V0))(V4))(V9))}} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ((V1(V2))(V3)))).
'un--rws'(V0, V1, V2, V3, V4) -> case ((V1(V2))(V3)) of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V7, V8) -> {'Idris.Builtin.MkPair', V5, {'Idris.Builtin.MkPair', V7, ((V0(V4))(V8))}} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--runRWST'(V0, V1, V2, V3) -> (((V1(V2))(V3))(case V0 of {'Idris.Prelude.Interfaces.MkMonoid', E0, E1} -> (fun (V4, V5) -> V5 end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)).
'un--runRWS'(V0, V1, V2, V3) -> (((V1(V2))(V3))(case V0 of {'Idris.Prelude.Interfaces.MkMonoid', E0, E1} -> (fun (V4, V5) -> V5 end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)).
'un--mapRWST'(V0, V1, V2, V3, V4, V5) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(('Idris.Idris2.Builtin':'un--fst'(V0)), fun (V6) -> case V6 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V9, V10) -> {'Idris.Builtin.MkPair', V7, {'Idris.Builtin.MkPair', V9, ((('Idris.Idris2.Builtin':'un--snd'(('Idris.Idris2.Builtin':'un--snd'(V0))))(V5))(V10))}} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, (V1((((V2(V3))(V4))(case ('Idris.Idris2.Builtin':'un--fst'(('Idris.Idris2.Builtin':'un--snd'(V0)))) of {'Idris.Prelude.Interfaces.MkMonoid', E4, E5} -> (fun (V11, V12) -> V12 end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))))).
'un--mapRWS'(V0, V1, V2, V3, V4, V5) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(('Idris.Idris2.Builtin':'un--fst'({'Idris.Builtin.MkPair', fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> ('Idris.Idris2.Control.Monad.Identity':'dn--un--map_Functor_Identity'(V8, V9)) end end end end, V0})), fun (V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V12 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V13, V14) -> {'Idris.Builtin.MkPair', V11, {'Idris.Builtin.MkPair', V13, ((('Idris.Idris2.Builtin':'un--snd'(('Idris.Idris2.Builtin':'un--snd'({'Idris.Builtin.MkPair', fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> ('Idris.Idris2.Control.Monad.Identity':'dn--un--map_Functor_Identity'(V17, V18)) end end end end, V0}))))(V5))(V14))}} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, (V1((((V2(V3))(V4))(case ('Idris.Idris2.Builtin':'un--fst'(('Idris.Idris2.Builtin':'un--snd'({'Idris.Builtin.MkPair', fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Control.Monad.Identity':'dn--un--map_Functor_Identity'(V21, V22)) end end end end, V0})))) of {'Idris.Prelude.Interfaces.MkMonoid', E4, E5} -> (fun (V23, V24) -> V24 end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))))).
'un--execRWST'(V0, V1, V2, V3) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(('Idris.Idris2.Builtin':'un--fst'(V0)), fun (V4) -> case V4 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V7, V8) -> {'Idris.Builtin.MkPair', V7, V8} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, (((V1(V2))(V3))(case ('Idris.Idris2.Builtin':'un--snd'(V0)) of {'Idris.Prelude.Interfaces.MkMonoid', E4, E5} -> (fun (V9, V10) -> V10 end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))).
'un--execRWS'(V0, V1, V2, V3) -> case (((V1(V2))(V3))(case V0 of {'Idris.Prelude.Interfaces.MkMonoid', E4, E5} -> (fun (V4, V5) -> V5 end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V8, V9) -> {'Idris.Builtin.MkPair', V8, V9} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--evalRWST'(V0, V1, V2, V3) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(('Idris.Idris2.Builtin':'un--fst'(V0)), fun (V4) -> case V4 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V7, V8) -> {'Idris.Builtin.MkPair', V5, V8} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, (((V1(V2))(V3))(case ('Idris.Idris2.Builtin':'un--snd'(V0)) of {'Idris.Prelude.Interfaces.MkMonoid', E4, E5} -> (fun (V9, V10) -> V10 end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))).
'un--evalRWS'(V0, V1, V2, V3) -> case (((V1(V2))(V3))(case V0 of {'Idris.Prelude.Interfaces.MkMonoid', E4, E5} -> (fun (V4, V5) -> V5 end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V8, V9) -> {'Idris.Builtin.MkPair', V6, V9} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--RWS'(V0, V1, V2, V3) -> {'Idris.Control.Monad.RWS.CPS.RWST', V0, V1, V2, fun (V4) -> {'Idris.Control.Monad.Identity.Identity', V4} end, V3}.
