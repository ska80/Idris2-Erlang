-module('Idris.Idris2.TTImp.Reflect').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'dn--un--reify_Reify_WithFlag'/5,
  'dn--un--reify_Reify_UseSide'/5,
  'dn--un--reify_Reify_RawImp'/5,
  'dn--un--reify_Reify_ImpTy'/5,
  'dn--un--reify_Reify_ImpRecord'/5,
  'dn--un--reify_Reify_ImpDecl'/5,
  'dn--un--reify_Reify_ImpData'/5,
  'dn--un--reify_Reify_ImpClause'/5,
  'dn--un--reify_Reify_IFieldUpdate'/5,
  'dn--un--reify_Reify_IField'/5,
  'dn--un--reify_Reify_FnOpt'/5,
  'dn--un--reify_Reify_DotReason'/5,
  'dn--un--reify_Reify_DataOpt'/5,
  'dn--un--reify_Reify_BindMode'/5,
  'dn--un--reify_Reify_AltType'/5,
  'dn--un--reflect_Reflect_WithFlag'/7,
  'dn--un--reflect_Reflect_UseSide'/7,
  'dn--un--reflect_Reflect_RawImp'/6,
  'dn--un--reflect_Reflect_ImpTy'/7,
  'dn--un--reflect_Reflect_ImpRecord'/7,
  'dn--un--reflect_Reflect_ImpDecl'/7,
  'dn--un--reflect_Reflect_ImpData'/7,
  'dn--un--reflect_Reflect_ImpClause'/7,
  'dn--un--reflect_Reflect_IFieldUpdate'/7,
  'dn--un--reflect_Reflect_IField'/7,
  'dn--un--reflect_Reflect_FnOpt'/7,
  'dn--un--reflect_Reflect_DotReason'/7,
  'dn--un--reflect_Reflect_DataOpt'/7,
  'dn--un--reflect_Reflect_BindMode'/7,
  'dn--un--reflect_Reflect_AltType'/7,
  'dn--un--__Impl_Reify_WithFlag'/5,
  'dn--un--__Impl_Reify_UseSide'/5,
  'dn--un--__Impl_Reify_RawImp'/5,
  'dn--un--__Impl_Reify_ImpTy'/5,
  'dn--un--__Impl_Reify_ImpRecord'/5,
  'dn--un--__Impl_Reify_ImpDecl'/5,
  'dn--un--__Impl_Reify_ImpData'/5,
  'dn--un--__Impl_Reify_ImpClause'/5,
  'dn--un--__Impl_Reify_IFieldUpdate'/5,
  'dn--un--__Impl_Reify_IField'/5,
  'dn--un--__Impl_Reify_FnOpt'/5,
  'dn--un--__Impl_Reify_DotReason'/5,
  'dn--un--__Impl_Reify_DataOpt'/5,
  'dn--un--__Impl_Reify_BindMode'/5,
  'dn--un--__Impl_Reify_AltType'/5,
  'dn--un--__Impl_Reflect_WithFlag'/7,
  'dn--un--__Impl_Reflect_UseSide'/7,
  'dn--un--__Impl_Reflect_RawImp'/6,
  'dn--un--__Impl_Reflect_ImpTy'/7,
  'dn--un--__Impl_Reflect_ImpRecord'/7,
  'dn--un--__Impl_Reflect_ImpDecl'/7,
  'dn--un--__Impl_Reflect_ImpData'/7,
  'dn--un--__Impl_Reflect_ImpClause'/7,
  'dn--un--__Impl_Reflect_IFieldUpdate'/7,
  'dn--un--__Impl_Reflect_IField'/7,
  'dn--un--__Impl_Reflect_FnOpt'/7,
  'dn--un--__Impl_Reflect_DotReason'/7,
  'dn--un--__Impl_Reflect_DataOpt'/7,
  'dn--un--__Impl_Reflect_BindMode'/7,
  'dn--un--__Impl_Reflect_AltType'/7
]).
'dn--un--reify_Reify_WithFlag'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V40 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V40 of {'Idris.Prelude.Types.Left', E35} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V42) -> begin (V43 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V42)) of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of {'Idris.Core.Name.Basic', E38} -> (fun (V45) -> case V45 of <<"Syntactic"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V46) -> ('Idris.Idris2.Builtin':'un--snd'(V46)) end, V9)) of [] -> {'Idris.Prelude.Types.Right', 0}; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"WithFlag"/utf8>>, V4)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"WithFlag"/utf8>>, V4)) end end(E38)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"WithFlag"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"WithFlag"/utf8>>, V4)) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"WithFlag"/utf8>>, V4)) end.
'dn--un--reify_Reify_UseSide'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V40 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V40 of {'Idris.Prelude.Types.Left', E35} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V42) -> begin (V43 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V42)) of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of {'Idris.Core.Name.Basic', E38} -> (fun (V45) -> case V45 of <<"UseLeft"/utf8>> -> {'Idris.Prelude.Types.Right', 0}; <<"UseRight"/utf8>> -> {'Idris.Prelude.Types.Right', 1}; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"UseSide"/utf8>>, V4)) end end(E38)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"UseSide"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"UseSide"/utf8>>, V4)) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"UseSide"/utf8>>, V4)) end.
'dn--un--reify_Reify_RawImp'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V40 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V40 of {'Idris.Prelude.Types.Left', E35} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V42) -> begin (V43 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V42)) of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of {'Idris.Core.Name.Basic', E38} -> (fun (V45) -> case V45 of <<"IVar"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V46) -> ('Idris.Idris2.Builtin':'un--snd'(V46)) end, V9)) of [E39 | E40] -> (fun (V47, V48) -> case V48 of [E41 | E42] -> (fun (V49, V50) -> case V50 of [] -> begin (V54 = begin (V51 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V47))(V4))), case V51 of {'Idris.Prelude.Types.Left', E43} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V53) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V53, V4)) end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V54 of {'Idris.Prelude.Types.Left', E45} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V56) -> begin (V60 = begin (V57 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V49))(V4))), case V57 of {'Idris.Prelude.Types.Left', E47} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V59) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V59, V4)) end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V60 of {'Idris.Prelude.Types.Left', E49} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V62) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', V56, V62}} end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E41, E42)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E39, E40)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IPi"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V63) -> ('Idris.Idris2.Builtin':'un--snd'(V63)) end, V9)) of [E51 | E52] -> (fun (V64, V65) -> case V65 of [E53 | E54] -> (fun (V66, V67) -> case V67 of [E55 | E56] -> (fun (V68, V69) -> case V69 of [E57 | E58] -> (fun (V70, V71) -> case V71 of [E59 | E60] -> (fun (V72, V73) -> case V73 of [E61 | E62] -> (fun (V74, V75) -> case V75 of [] -> begin (V79 = begin (V76 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V64))(V4))), case V76 of {'Idris.Prelude.Types.Left', E63} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V78) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V78, V4)) end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V79 of {'Idris.Prelude.Types.Left', E65} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V81) -> begin (V85 = begin (V82 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V66))(V4))), case V82 of {'Idris.Prelude.Types.Left', E67} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V84) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V0, V1, V2, V84, V4)) end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V85 of {'Idris.Prelude.Types.Left', E69} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V87) -> begin (V96 = begin (V88 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V68))(V4))), case V88 of {'Idris.Prelude.Types.Left', E71} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V90) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(PiInfo $t)'(fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> ('dn--un--reify_Reify_RawImp'(V91, V92, V93, V94, V95)) end end end end end, V0, V1, V2, V90, V4)) end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V96 of {'Idris.Prelude.Types.Left', E73} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V98) -> begin (V107 = begin (V99 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V70))(V4))), case V99 of {'Idris.Prelude.Types.Left', E75} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V101) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(Maybe $a)'(fun (V102) -> fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V102, V103, V104, V105, V106)) end end end end end, V0, V1, V2, V101, V4)) end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V107 of {'Idris.Prelude.Types.Left', E77} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V109) -> begin (V113 = begin (V110 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V72))(V4))), case V110 of {'Idris.Prelude.Types.Left', E79} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E79)); {'Idris.Prelude.Types.Right', E80} -> (fun (V112) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V112, V4)) end(E80)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V113 of {'Idris.Prelude.Types.Left', E81} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V115) -> begin (V119 = begin (V116 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V74))(V4))), case V116 of {'Idris.Prelude.Types.Left', E83} -> (fun (V117) -> {'Idris.Prelude.Types.Left', V117} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V118) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V118, V4)) end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V119 of {'Idris.Prelude.Types.Left', E85} -> (fun (V120) -> {'Idris.Prelude.Types.Left', V120} end(E85)); {'Idris.Prelude.Types.Right', E86} -> (fun (V121) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPi', V81, V87, V98, V109, V115, V121}} end(E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E61, E62)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E59, E60)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E57, E58)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E55, E56)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E53, E54)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E51, E52)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"ILam"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V122) -> ('Idris.Idris2.Builtin':'un--snd'(V122)) end, V9)) of [E87 | E88] -> (fun (V123, V124) -> case V124 of [E89 | E90] -> (fun (V125, V126) -> case V126 of [E91 | E92] -> (fun (V127, V128) -> case V128 of [E93 | E94] -> (fun (V129, V130) -> case V130 of [E95 | E96] -> (fun (V131, V132) -> case V132 of [E97 | E98] -> (fun (V133, V134) -> case V134 of [] -> begin (V138 = begin (V135 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V123))(V4))), case V135 of {'Idris.Prelude.Types.Left', E99} -> (fun (V136) -> {'Idris.Prelude.Types.Left', V136} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V137) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V137, V4)) end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V138 of {'Idris.Prelude.Types.Left', E101} -> (fun (V139) -> {'Idris.Prelude.Types.Left', V139} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V140) -> begin (V144 = begin (V141 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V125))(V4))), case V141 of {'Idris.Prelude.Types.Left', E103} -> (fun (V142) -> {'Idris.Prelude.Types.Left', V142} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V143) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V0, V1, V2, V143, V4)) end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V144 of {'Idris.Prelude.Types.Left', E105} -> (fun (V145) -> {'Idris.Prelude.Types.Left', V145} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V146) -> begin (V155 = begin (V147 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V127))(V4))), case V147 of {'Idris.Prelude.Types.Left', E107} -> (fun (V148) -> {'Idris.Prelude.Types.Left', V148} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V149) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(PiInfo $t)'(fun (V150) -> fun (V151) -> fun (V152) -> fun (V153) -> fun (V154) -> ('dn--un--reify_Reify_RawImp'(V150, V151, V152, V153, V154)) end end end end end, V0, V1, V2, V149, V4)) end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V155 of {'Idris.Prelude.Types.Left', E109} -> (fun (V156) -> {'Idris.Prelude.Types.Left', V156} end(E109)); {'Idris.Prelude.Types.Right', E110} -> (fun (V157) -> begin (V166 = begin (V158 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V129))(V4))), case V158 of {'Idris.Prelude.Types.Left', E111} -> (fun (V159) -> {'Idris.Prelude.Types.Left', V159} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V160) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(Maybe $a)'(fun (V161) -> fun (V162) -> fun (V163) -> fun (V164) -> fun (V165) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V161, V162, V163, V164, V165)) end end end end end, V0, V1, V2, V160, V4)) end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V166 of {'Idris.Prelude.Types.Left', E113} -> (fun (V167) -> {'Idris.Prelude.Types.Left', V167} end(E113)); {'Idris.Prelude.Types.Right', E114} -> (fun (V168) -> begin (V172 = begin (V169 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V131))(V4))), case V169 of {'Idris.Prelude.Types.Left', E115} -> (fun (V170) -> {'Idris.Prelude.Types.Left', V170} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V171) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V171, V4)) end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V172 of {'Idris.Prelude.Types.Left', E117} -> (fun (V173) -> {'Idris.Prelude.Types.Left', V173} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V174) -> begin (V178 = begin (V175 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V133))(V4))), case V175 of {'Idris.Prelude.Types.Left', E119} -> (fun (V176) -> {'Idris.Prelude.Types.Left', V176} end(E119)); {'Idris.Prelude.Types.Right', E120} -> (fun (V177) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V177, V4)) end(E120)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V178 of {'Idris.Prelude.Types.Left', E121} -> (fun (V179) -> {'Idris.Prelude.Types.Left', V179} end(E121)); {'Idris.Prelude.Types.Right', E122} -> (fun (V180) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V140, V146, V157, V168, V174, V180}} end(E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E97, E98)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E95, E96)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E93, E94)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E91, E92)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E89, E90)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E87, E88)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"ILet"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V181) -> ('Idris.Idris2.Builtin':'un--snd'(V181)) end, V9)) of [E123 | E124] -> (fun (V182, V183) -> case V183 of [E125 | E126] -> (fun (V184, V185) -> case V185 of [E127 | E128] -> (fun (V186, V187) -> case V187 of [E129 | E130] -> (fun (V188, V189) -> case V189 of [E131 | E132] -> (fun (V190, V191) -> case V191 of [E133 | E134] -> (fun (V192, V193) -> case V193 of [E135 | E136] -> (fun (V194, V195) -> case V195 of [] -> begin (V199 = begin (V196 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V182))(V4))), case V196 of {'Idris.Prelude.Types.Left', E137} -> (fun (V197) -> {'Idris.Prelude.Types.Left', V197} end(E137)); {'Idris.Prelude.Types.Right', E138} -> (fun (V198) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V198, V4)) end(E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V199 of {'Idris.Prelude.Types.Left', E139} -> (fun (V200) -> {'Idris.Prelude.Types.Left', V200} end(E139)); {'Idris.Prelude.Types.Right', E140} -> (fun (V201) -> begin (V205 = begin (V202 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V184))(V4))), case V202 of {'Idris.Prelude.Types.Left', E141} -> (fun (V203) -> {'Idris.Prelude.Types.Left', V203} end(E141)); {'Idris.Prelude.Types.Right', E142} -> (fun (V204) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V204, V4)) end(E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V205 of {'Idris.Prelude.Types.Left', E143} -> (fun (V206) -> {'Idris.Prelude.Types.Left', V206} end(E143)); {'Idris.Prelude.Types.Right', E144} -> (fun (V207) -> begin (V211 = begin (V208 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V186))(V4))), case V208 of {'Idris.Prelude.Types.Left', E145} -> (fun (V209) -> {'Idris.Prelude.Types.Left', V209} end(E145)); {'Idris.Prelude.Types.Right', E146} -> (fun (V210) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V0, V1, V2, V210, V4)) end(E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V211 of {'Idris.Prelude.Types.Left', E147} -> (fun (V212) -> {'Idris.Prelude.Types.Left', V212} end(E147)); {'Idris.Prelude.Types.Right', E148} -> (fun (V213) -> begin (V217 = begin (V214 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V188))(V4))), case V214 of {'Idris.Prelude.Types.Left', E149} -> (fun (V215) -> {'Idris.Prelude.Types.Left', V215} end(E149)); {'Idris.Prelude.Types.Right', E150} -> (fun (V216) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V216, V4)) end(E150)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V217 of {'Idris.Prelude.Types.Left', E151} -> (fun (V218) -> {'Idris.Prelude.Types.Left', V218} end(E151)); {'Idris.Prelude.Types.Right', E152} -> (fun (V219) -> begin (V223 = begin (V220 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V190))(V4))), case V220 of {'Idris.Prelude.Types.Left', E153} -> (fun (V221) -> {'Idris.Prelude.Types.Left', V221} end(E153)); {'Idris.Prelude.Types.Right', E154} -> (fun (V222) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V222, V4)) end(E154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V223 of {'Idris.Prelude.Types.Left', E155} -> (fun (V224) -> {'Idris.Prelude.Types.Left', V224} end(E155)); {'Idris.Prelude.Types.Right', E156} -> (fun (V225) -> begin (V229 = begin (V226 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V192))(V4))), case V226 of {'Idris.Prelude.Types.Left', E157} -> (fun (V227) -> {'Idris.Prelude.Types.Left', V227} end(E157)); {'Idris.Prelude.Types.Right', E158} -> (fun (V228) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V228, V4)) end(E158)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V229 of {'Idris.Prelude.Types.Left', E159} -> (fun (V230) -> {'Idris.Prelude.Types.Left', V230} end(E159)); {'Idris.Prelude.Types.Right', E160} -> (fun (V231) -> begin (V235 = begin (V232 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V194))(V4))), case V232 of {'Idris.Prelude.Types.Left', E161} -> (fun (V233) -> {'Idris.Prelude.Types.Left', V233} end(E161)); {'Idris.Prelude.Types.Right', E162} -> (fun (V234) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V234, V4)) end(E162)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V235 of {'Idris.Prelude.Types.Left', E163} -> (fun (V236) -> {'Idris.Prelude.Types.Left', V236} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V237) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILet', V201, V207, V213, V219, V225, V231, V237}} end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E160)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E152)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E148)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E135, E136)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E133, E134)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E131, E132)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E129, E130)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E127, E128)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E125, E126)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E123, E124)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"ICase"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V238) -> ('Idris.Idris2.Builtin':'un--snd'(V238)) end, V9)) of [E165 | E166] -> (fun (V239, V240) -> case V240 of [E167 | E168] -> (fun (V241, V242) -> case V242 of [E169 | E170] -> (fun (V243, V244) -> case V244 of [E171 | E172] -> (fun (V245, V246) -> case V246 of [] -> begin (V250 = begin (V247 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V239))(V4))), case V247 of {'Idris.Prelude.Types.Left', E173} -> (fun (V248) -> {'Idris.Prelude.Types.Left', V248} end(E173)); {'Idris.Prelude.Types.Right', E174} -> (fun (V249) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V249, V4)) end(E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V250 of {'Idris.Prelude.Types.Left', E175} -> (fun (V251) -> {'Idris.Prelude.Types.Left', V251} end(E175)); {'Idris.Prelude.Types.Right', E176} -> (fun (V252) -> begin (V256 = begin (V253 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V241))(V4))), case V253 of {'Idris.Prelude.Types.Left', E177} -> (fun (V254) -> {'Idris.Prelude.Types.Left', V254} end(E177)); {'Idris.Prelude.Types.Right', E178} -> (fun (V255) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V255, V4)) end(E178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V256 of {'Idris.Prelude.Types.Left', E179} -> (fun (V257) -> {'Idris.Prelude.Types.Left', V257} end(E179)); {'Idris.Prelude.Types.Right', E180} -> (fun (V258) -> begin (V262 = begin (V259 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V243))(V4))), case V259 of {'Idris.Prelude.Types.Left', E181} -> (fun (V260) -> {'Idris.Prelude.Types.Left', V260} end(E181)); {'Idris.Prelude.Types.Right', E182} -> (fun (V261) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V261, V4)) end(E182)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V262 of {'Idris.Prelude.Types.Left', E183} -> (fun (V263) -> {'Idris.Prelude.Types.Left', V263} end(E183)); {'Idris.Prelude.Types.Right', E184} -> (fun (V264) -> begin (V273 = begin (V265 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V245))(V4))), case V265 of {'Idris.Prelude.Types.Left', E185} -> (fun (V266) -> {'Idris.Prelude.Types.Left', V266} end(E185)); {'Idris.Prelude.Types.Right', E186} -> (fun (V267) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V268) -> fun (V269) -> fun (V270) -> fun (V271) -> fun (V272) -> ('dn--un--reify_Reify_ImpClause'(V268, V269, V270, V271, V272)) end end end end end, V0, V1, V2, V267, V4)) end(E186)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V273 of {'Idris.Prelude.Types.Left', E187} -> (fun (V274) -> {'Idris.Prelude.Types.Left', V274} end(E187)); {'Idris.Prelude.Types.Right', E188} -> (fun (V275) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V252, V258, V264, V275}} end(E188)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E184)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E171, E172)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E169, E170)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E167, E168)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E165, E166)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"ILocal"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V276) -> ('Idris.Idris2.Builtin':'un--snd'(V276)) end, V9)) of [E189 | E190] -> (fun (V277, V278) -> case V278 of [E191 | E192] -> (fun (V279, V280) -> case V280 of [E193 | E194] -> (fun (V281, V282) -> case V282 of [] -> begin (V286 = begin (V283 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V277))(V4))), case V283 of {'Idris.Prelude.Types.Left', E195} -> (fun (V284) -> {'Idris.Prelude.Types.Left', V284} end(E195)); {'Idris.Prelude.Types.Right', E196} -> (fun (V285) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V285, V4)) end(E196)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V286 of {'Idris.Prelude.Types.Left', E197} -> (fun (V287) -> {'Idris.Prelude.Types.Left', V287} end(E197)); {'Idris.Prelude.Types.Right', E198} -> (fun (V288) -> begin (V297 = begin (V289 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V279))(V4))), case V289 of {'Idris.Prelude.Types.Left', E199} -> (fun (V290) -> {'Idris.Prelude.Types.Left', V290} end(E199)); {'Idris.Prelude.Types.Right', E200} -> (fun (V291) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V292) -> fun (V293) -> fun (V294) -> fun (V295) -> fun (V296) -> ('dn--un--reify_Reify_ImpDecl'(V292, V293, V294, V295, V296)) end end end end end, V0, V1, V2, V291, V4)) end(E200)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V297 of {'Idris.Prelude.Types.Left', E201} -> (fun (V298) -> {'Idris.Prelude.Types.Left', V298} end(E201)); {'Idris.Prelude.Types.Right', E202} -> (fun (V299) -> begin (V303 = begin (V300 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V281))(V4))), case V300 of {'Idris.Prelude.Types.Left', E203} -> (fun (V301) -> {'Idris.Prelude.Types.Left', V301} end(E203)); {'Idris.Prelude.Types.Right', E204} -> (fun (V302) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V302, V4)) end(E204)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V303 of {'Idris.Prelude.Types.Left', E205} -> (fun (V304) -> {'Idris.Prelude.Types.Left', V304} end(E205)); {'Idris.Prelude.Types.Right', E206} -> (fun (V305) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V288, V299, V305}} end(E206)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E202)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E198)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E193, E194)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E191, E192)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E189, E190)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IUpdate"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V306) -> ('Idris.Idris2.Builtin':'un--snd'(V306)) end, V9)) of [E207 | E208] -> (fun (V307, V308) -> case V308 of [E209 | E210] -> (fun (V309, V310) -> case V310 of [E211 | E212] -> (fun (V311, V312) -> case V312 of [] -> begin (V316 = begin (V313 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V307))(V4))), case V313 of {'Idris.Prelude.Types.Left', E213} -> (fun (V314) -> {'Idris.Prelude.Types.Left', V314} end(E213)); {'Idris.Prelude.Types.Right', E214} -> (fun (V315) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V315, V4)) end(E214)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V316 of {'Idris.Prelude.Types.Left', E215} -> (fun (V317) -> {'Idris.Prelude.Types.Left', V317} end(E215)); {'Idris.Prelude.Types.Right', E216} -> (fun (V318) -> begin (V327 = begin (V319 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V309))(V4))), case V319 of {'Idris.Prelude.Types.Left', E217} -> (fun (V320) -> {'Idris.Prelude.Types.Left', V320} end(E217)); {'Idris.Prelude.Types.Right', E218} -> (fun (V321) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V322) -> fun (V323) -> fun (V324) -> fun (V325) -> fun (V326) -> ('dn--un--reify_Reify_IFieldUpdate'(V322, V323, V324, V325, V326)) end end end end end, V0, V1, V2, V321, V4)) end(E218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V327 of {'Idris.Prelude.Types.Left', E219} -> (fun (V328) -> {'Idris.Prelude.Types.Left', V328} end(E219)); {'Idris.Prelude.Types.Right', E220} -> (fun (V329) -> begin (V333 = begin (V330 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V311))(V4))), case V330 of {'Idris.Prelude.Types.Left', E221} -> (fun (V331) -> {'Idris.Prelude.Types.Left', V331} end(E221)); {'Idris.Prelude.Types.Right', E222} -> (fun (V332) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V332, V4)) end(E222)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V333 of {'Idris.Prelude.Types.Left', E223} -> (fun (V334) -> {'Idris.Prelude.Types.Left', V334} end(E223)); {'Idris.Prelude.Types.Right', E224} -> (fun (V335) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUpdate', V318, V329, V335}} end(E224)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E220)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E211, E212)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E209, E210)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E207, E208)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IApp"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V336) -> ('Idris.Idris2.Builtin':'un--snd'(V336)) end, V9)) of [E225 | E226] -> (fun (V337, V338) -> case V338 of [E227 | E228] -> (fun (V339, V340) -> case V340 of [E229 | E230] -> (fun (V341, V342) -> case V342 of [] -> begin (V346 = begin (V343 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V337))(V4))), case V343 of {'Idris.Prelude.Types.Left', E231} -> (fun (V344) -> {'Idris.Prelude.Types.Left', V344} end(E231)); {'Idris.Prelude.Types.Right', E232} -> (fun (V345) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V345, V4)) end(E232)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V346 of {'Idris.Prelude.Types.Left', E233} -> (fun (V347) -> {'Idris.Prelude.Types.Left', V347} end(E233)); {'Idris.Prelude.Types.Right', E234} -> (fun (V348) -> begin (V352 = begin (V349 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V339))(V4))), case V349 of {'Idris.Prelude.Types.Left', E235} -> (fun (V350) -> {'Idris.Prelude.Types.Left', V350} end(E235)); {'Idris.Prelude.Types.Right', E236} -> (fun (V351) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V351, V4)) end(E236)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V352 of {'Idris.Prelude.Types.Left', E237} -> (fun (V353) -> {'Idris.Prelude.Types.Left', V353} end(E237)); {'Idris.Prelude.Types.Right', E238} -> (fun (V354) -> begin (V358 = begin (V355 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V341))(V4))), case V355 of {'Idris.Prelude.Types.Left', E239} -> (fun (V356) -> {'Idris.Prelude.Types.Left', V356} end(E239)); {'Idris.Prelude.Types.Right', E240} -> (fun (V357) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V357, V4)) end(E240)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V358 of {'Idris.Prelude.Types.Left', E241} -> (fun (V359) -> {'Idris.Prelude.Types.Left', V359} end(E241)); {'Idris.Prelude.Types.Right', E242} -> (fun (V360) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V348, V354, V360}} end(E242)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E238)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E234)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E229, E230)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E227, E228)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E225, E226)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"INamedApp"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V361) -> ('Idris.Idris2.Builtin':'un--snd'(V361)) end, V9)) of [E243 | E244] -> (fun (V362, V363) -> case V363 of [E245 | E246] -> (fun (V364, V365) -> case V365 of [E247 | E248] -> (fun (V366, V367) -> case V367 of [E249 | E250] -> (fun (V368, V369) -> case V369 of [] -> begin (V373 = begin (V370 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V362))(V4))), case V370 of {'Idris.Prelude.Types.Left', E251} -> (fun (V371) -> {'Idris.Prelude.Types.Left', V371} end(E251)); {'Idris.Prelude.Types.Right', E252} -> (fun (V372) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V372, V4)) end(E252)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V373 of {'Idris.Prelude.Types.Left', E253} -> (fun (V374) -> {'Idris.Prelude.Types.Left', V374} end(E253)); {'Idris.Prelude.Types.Right', E254} -> (fun (V375) -> begin (V379 = begin (V376 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V364))(V4))), case V376 of {'Idris.Prelude.Types.Left', E255} -> (fun (V377) -> {'Idris.Prelude.Types.Left', V377} end(E255)); {'Idris.Prelude.Types.Right', E256} -> (fun (V378) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V378, V4)) end(E256)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V379 of {'Idris.Prelude.Types.Left', E257} -> (fun (V380) -> {'Idris.Prelude.Types.Left', V380} end(E257)); {'Idris.Prelude.Types.Right', E258} -> (fun (V381) -> begin (V385 = begin (V382 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V366))(V4))), case V382 of {'Idris.Prelude.Types.Left', E259} -> (fun (V383) -> {'Idris.Prelude.Types.Left', V383} end(E259)); {'Idris.Prelude.Types.Right', E260} -> (fun (V384) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V384, V4)) end(E260)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V385 of {'Idris.Prelude.Types.Left', E261} -> (fun (V386) -> {'Idris.Prelude.Types.Left', V386} end(E261)); {'Idris.Prelude.Types.Right', E262} -> (fun (V387) -> begin (V391 = begin (V388 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V368))(V4))), case V388 of {'Idris.Prelude.Types.Left', E263} -> (fun (V389) -> {'Idris.Prelude.Types.Left', V389} end(E263)); {'Idris.Prelude.Types.Right', E264} -> (fun (V390) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V390, V4)) end(E264)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V391 of {'Idris.Prelude.Types.Left', E265} -> (fun (V392) -> {'Idris.Prelude.Types.Left', V392} end(E265)); {'Idris.Prelude.Types.Right', E266} -> (fun (V393) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamedApp', V375, V381, V387, V393}} end(E266)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E262)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E258)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E254)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E249, E250)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E247, E248)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E245, E246)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E243, E244)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IAutoApp"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V394) -> ('Idris.Idris2.Builtin':'un--snd'(V394)) end, V9)) of [E267 | E268] -> (fun (V395, V396) -> case V396 of [E269 | E270] -> (fun (V397, V398) -> case V398 of [E271 | E272] -> (fun (V399, V400) -> case V400 of [] -> begin (V404 = begin (V401 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V395))(V4))), case V401 of {'Idris.Prelude.Types.Left', E273} -> (fun (V402) -> {'Idris.Prelude.Types.Left', V402} end(E273)); {'Idris.Prelude.Types.Right', E274} -> (fun (V403) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V403, V4)) end(E274)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V404 of {'Idris.Prelude.Types.Left', E275} -> (fun (V405) -> {'Idris.Prelude.Types.Left', V405} end(E275)); {'Idris.Prelude.Types.Right', E276} -> (fun (V406) -> begin (V410 = begin (V407 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V397))(V4))), case V407 of {'Idris.Prelude.Types.Left', E277} -> (fun (V408) -> {'Idris.Prelude.Types.Left', V408} end(E277)); {'Idris.Prelude.Types.Right', E278} -> (fun (V409) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V409, V4)) end(E278)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V410 of {'Idris.Prelude.Types.Left', E279} -> (fun (V411) -> {'Idris.Prelude.Types.Left', V411} end(E279)); {'Idris.Prelude.Types.Right', E280} -> (fun (V412) -> begin (V416 = begin (V413 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V399))(V4))), case V413 of {'Idris.Prelude.Types.Left', E281} -> (fun (V414) -> {'Idris.Prelude.Types.Left', V414} end(E281)); {'Idris.Prelude.Types.Right', E282} -> (fun (V415) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V415, V4)) end(E282)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V416 of {'Idris.Prelude.Types.Left', E283} -> (fun (V417) -> {'Idris.Prelude.Types.Left', V417} end(E283)); {'Idris.Prelude.Types.Right', E284} -> (fun (V418) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAutoApp', V406, V412, V418}} end(E284)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E280)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E276)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E271, E272)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E269, E270)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E267, E268)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IWithApp"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V419) -> ('Idris.Idris2.Builtin':'un--snd'(V419)) end, V9)) of [E285 | E286] -> (fun (V420, V421) -> case V421 of [E287 | E288] -> (fun (V422, V423) -> case V423 of [E289 | E290] -> (fun (V424, V425) -> case V425 of [] -> begin (V429 = begin (V426 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V420))(V4))), case V426 of {'Idris.Prelude.Types.Left', E291} -> (fun (V427) -> {'Idris.Prelude.Types.Left', V427} end(E291)); {'Idris.Prelude.Types.Right', E292} -> (fun (V428) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V428, V4)) end(E292)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V429 of {'Idris.Prelude.Types.Left', E293} -> (fun (V430) -> {'Idris.Prelude.Types.Left', V430} end(E293)); {'Idris.Prelude.Types.Right', E294} -> (fun (V431) -> begin (V435 = begin (V432 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V422))(V4))), case V432 of {'Idris.Prelude.Types.Left', E295} -> (fun (V433) -> {'Idris.Prelude.Types.Left', V433} end(E295)); {'Idris.Prelude.Types.Right', E296} -> (fun (V434) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V434, V4)) end(E296)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V435 of {'Idris.Prelude.Types.Left', E297} -> (fun (V436) -> {'Idris.Prelude.Types.Left', V436} end(E297)); {'Idris.Prelude.Types.Right', E298} -> (fun (V437) -> begin (V441 = begin (V438 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V424))(V4))), case V438 of {'Idris.Prelude.Types.Left', E299} -> (fun (V439) -> {'Idris.Prelude.Types.Left', V439} end(E299)); {'Idris.Prelude.Types.Right', E300} -> (fun (V440) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V440, V4)) end(E300)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V441 of {'Idris.Prelude.Types.Left', E301} -> (fun (V442) -> {'Idris.Prelude.Types.Left', V442} end(E301)); {'Idris.Prelude.Types.Right', E302} -> (fun (V443) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithApp', V431, V437, V443}} end(E302)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E298)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E294)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E289, E290)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E287, E288)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E285, E286)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"ISearch"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V444) -> ('Idris.Idris2.Builtin':'un--snd'(V444)) end, V9)) of [E303 | E304] -> (fun (V445, V446) -> case V446 of [E305 | E306] -> (fun (V447, V448) -> case V448 of [] -> begin (V452 = begin (V449 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V445))(V4))), case V449 of {'Idris.Prelude.Types.Left', E307} -> (fun (V450) -> {'Idris.Prelude.Types.Left', V450} end(E307)); {'Idris.Prelude.Types.Right', E308} -> (fun (V451) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V451, V4)) end(E308)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V452 of {'Idris.Prelude.Types.Left', E309} -> (fun (V453) -> {'Idris.Prelude.Types.Left', V453} end(E309)); {'Idris.Prelude.Types.Right', E310} -> (fun (V454) -> begin (V458 = begin (V455 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V447))(V4))), case V455 of {'Idris.Prelude.Types.Left', E311} -> (fun (V456) -> {'Idris.Prelude.Types.Left', V456} end(E311)); {'Idris.Prelude.Types.Right', E312} -> (fun (V457) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Nat'(V0, V1, V2, V457, V4)) end(E312)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V458 of {'Idris.Prelude.Types.Left', E313} -> (fun (V459) -> {'Idris.Prelude.Types.Left', V459} end(E313)); {'Idris.Prelude.Types.Right', E314} -> (fun (V460) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISearch', V454, V460}} end(E314)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E310)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E305, E306)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E303, E304)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IAlternative"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V461) -> ('Idris.Idris2.Builtin':'un--snd'(V461)) end, V9)) of [E315 | E316] -> (fun (V462, V463) -> case V463 of [E317 | E318] -> (fun (V464, V465) -> case V465 of [E319 | E320] -> (fun (V466, V467) -> case V467 of [] -> begin (V471 = begin (V468 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V462))(V4))), case V468 of {'Idris.Prelude.Types.Left', E321} -> (fun (V469) -> {'Idris.Prelude.Types.Left', V469} end(E321)); {'Idris.Prelude.Types.Right', E322} -> (fun (V470) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V470, V4)) end(E322)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V471 of {'Idris.Prelude.Types.Left', E323} -> (fun (V472) -> {'Idris.Prelude.Types.Left', V472} end(E323)); {'Idris.Prelude.Types.Right', E324} -> (fun (V473) -> begin (V477 = begin (V474 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V464))(V4))), case V474 of {'Idris.Prelude.Types.Left', E325} -> (fun (V475) -> {'Idris.Prelude.Types.Left', V475} end(E325)); {'Idris.Prelude.Types.Right', E326} -> (fun (V476) -> ('dn--un--reify_Reify_AltType'(V0, V1, V2, V476, V4)) end(E326)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V477 of {'Idris.Prelude.Types.Left', E327} -> (fun (V478) -> {'Idris.Prelude.Types.Left', V478} end(E327)); {'Idris.Prelude.Types.Right', E328} -> (fun (V479) -> begin (V488 = begin (V480 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V466))(V4))), case V480 of {'Idris.Prelude.Types.Left', E329} -> (fun (V481) -> {'Idris.Prelude.Types.Left', V481} end(E329)); {'Idris.Prelude.Types.Right', E330} -> (fun (V482) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V483) -> fun (V484) -> fun (V485) -> fun (V486) -> fun (V487) -> ('dn--un--reify_Reify_RawImp'(V483, V484, V485, V486, V487)) end end end end end, V0, V1, V2, V482, V4)) end(E330)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V488 of {'Idris.Prelude.Types.Left', E331} -> (fun (V489) -> {'Idris.Prelude.Types.Left', V489} end(E331)); {'Idris.Prelude.Types.Right', E332} -> (fun (V490) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V473, V479, V490}} end(E332)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E328)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E324)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E319, E320)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E317, E318)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E315, E316)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IRewrite"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V491) -> ('Idris.Idris2.Builtin':'un--snd'(V491)) end, V9)) of [E333 | E334] -> (fun (V492, V493) -> case V493 of [E335 | E336] -> (fun (V494, V495) -> case V495 of [E337 | E338] -> (fun (V496, V497) -> case V497 of [] -> begin (V501 = begin (V498 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V492))(V4))), case V498 of {'Idris.Prelude.Types.Left', E339} -> (fun (V499) -> {'Idris.Prelude.Types.Left', V499} end(E339)); {'Idris.Prelude.Types.Right', E340} -> (fun (V500) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V500, V4)) end(E340)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V501 of {'Idris.Prelude.Types.Left', E341} -> (fun (V502) -> {'Idris.Prelude.Types.Left', V502} end(E341)); {'Idris.Prelude.Types.Right', E342} -> (fun (V503) -> begin (V507 = begin (V504 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V494))(V4))), case V504 of {'Idris.Prelude.Types.Left', E343} -> (fun (V505) -> {'Idris.Prelude.Types.Left', V505} end(E343)); {'Idris.Prelude.Types.Right', E344} -> (fun (V506) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V506, V4)) end(E344)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V507 of {'Idris.Prelude.Types.Left', E345} -> (fun (V508) -> {'Idris.Prelude.Types.Left', V508} end(E345)); {'Idris.Prelude.Types.Right', E346} -> (fun (V509) -> begin (V513 = begin (V510 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V496))(V4))), case V510 of {'Idris.Prelude.Types.Left', E347} -> (fun (V511) -> {'Idris.Prelude.Types.Left', V511} end(E347)); {'Idris.Prelude.Types.Right', E348} -> (fun (V512) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V512, V4)) end(E348)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V513 of {'Idris.Prelude.Types.Left', E349} -> (fun (V514) -> {'Idris.Prelude.Types.Left', V514} end(E349)); {'Idris.Prelude.Types.Right', E350} -> (fun (V515) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V503, V509, V515}} end(E350)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E346)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E342)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E337, E338)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E335, E336)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E333, E334)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IBindHere"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V516) -> ('Idris.Idris2.Builtin':'un--snd'(V516)) end, V9)) of [E351 | E352] -> (fun (V517, V518) -> case V518 of [E353 | E354] -> (fun (V519, V520) -> case V520 of [E355 | E356] -> (fun (V521, V522) -> case V522 of [] -> begin (V526 = begin (V523 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V517))(V4))), case V523 of {'Idris.Prelude.Types.Left', E357} -> (fun (V524) -> {'Idris.Prelude.Types.Left', V524} end(E357)); {'Idris.Prelude.Types.Right', E358} -> (fun (V525) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V525, V4)) end(E358)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V526 of {'Idris.Prelude.Types.Left', E359} -> (fun (V527) -> {'Idris.Prelude.Types.Left', V527} end(E359)); {'Idris.Prelude.Types.Right', E360} -> (fun (V528) -> begin (V532 = begin (V529 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V519))(V4))), case V529 of {'Idris.Prelude.Types.Left', E361} -> (fun (V530) -> {'Idris.Prelude.Types.Left', V530} end(E361)); {'Idris.Prelude.Types.Right', E362} -> (fun (V531) -> ('dn--un--reify_Reify_BindMode'(V0, V1, V2, V531, V4)) end(E362)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V532 of {'Idris.Prelude.Types.Left', E363} -> (fun (V533) -> {'Idris.Prelude.Types.Left', V533} end(E363)); {'Idris.Prelude.Types.Right', E364} -> (fun (V534) -> begin (V538 = begin (V535 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V521))(V4))), case V535 of {'Idris.Prelude.Types.Left', E365} -> (fun (V536) -> {'Idris.Prelude.Types.Left', V536} end(E365)); {'Idris.Prelude.Types.Right', E366} -> (fun (V537) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V537, V4)) end(E366)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V538 of {'Idris.Prelude.Types.Left', E367} -> (fun (V539) -> {'Idris.Prelude.Types.Left', V539} end(E367)); {'Idris.Prelude.Types.Right', E368} -> (fun (V540) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IBindHere', V528, V534, V540}} end(E368)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E364)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E360)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E355, E356)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E353, E354)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E351, E352)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IBindVar"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V541) -> ('Idris.Idris2.Builtin':'un--snd'(V541)) end, V9)) of [E369 | E370] -> (fun (V542, V543) -> case V543 of [E371 | E372] -> (fun (V544, V545) -> case V545 of [] -> begin (V549 = begin (V546 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V542))(V4))), case V546 of {'Idris.Prelude.Types.Left', E373} -> (fun (V547) -> {'Idris.Prelude.Types.Left', V547} end(E373)); {'Idris.Prelude.Types.Right', E374} -> (fun (V548) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V548, V4)) end(E374)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V549 of {'Idris.Prelude.Types.Left', E375} -> (fun (V550) -> {'Idris.Prelude.Types.Left', V550} end(E375)); {'Idris.Prelude.Types.Right', E376} -> (fun (V551) -> begin (V555 = begin (V552 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V544))(V4))), case V552 of {'Idris.Prelude.Types.Left', E377} -> (fun (V553) -> {'Idris.Prelude.Types.Left', V553} end(E377)); {'Idris.Prelude.Types.Right', E378} -> (fun (V554) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V0, V1, V2, V554))(V4)) end(E378)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V555 of {'Idris.Prelude.Types.Left', E379} -> (fun (V556) -> {'Idris.Prelude.Types.Left', V556} end(E379)); {'Idris.Prelude.Types.Right', E380} -> (fun (V557) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IBindVar', V551, V557}} end(E380)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E376)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E371, E372)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E369, E370)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IAs"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V558) -> ('Idris.Idris2.Builtin':'un--snd'(V558)) end, V9)) of [E381 | E382] -> (fun (V559, V560) -> case V560 of [E383 | E384] -> (fun (V561, V562) -> case V562 of [E385 | E386] -> (fun (V563, V564) -> case V564 of [E387 | E388] -> (fun (V565, V566) -> case V566 of [E389 | E390] -> (fun (V567, V568) -> case V568 of [] -> begin (V572 = begin (V569 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V559))(V4))), case V569 of {'Idris.Prelude.Types.Left', E391} -> (fun (V570) -> {'Idris.Prelude.Types.Left', V570} end(E391)); {'Idris.Prelude.Types.Right', E392} -> (fun (V571) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V571, V4)) end(E392)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V572 of {'Idris.Prelude.Types.Left', E393} -> (fun (V573) -> {'Idris.Prelude.Types.Left', V573} end(E393)); {'Idris.Prelude.Types.Right', E394} -> (fun (V574) -> begin (V578 = begin (V575 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V561))(V4))), case V575 of {'Idris.Prelude.Types.Left', E395} -> (fun (V576) -> {'Idris.Prelude.Types.Left', V576} end(E395)); {'Idris.Prelude.Types.Right', E396} -> (fun (V577) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V577, V4)) end(E396)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V578 of {'Idris.Prelude.Types.Left', E397} -> (fun (V579) -> {'Idris.Prelude.Types.Left', V579} end(E397)); {'Idris.Prelude.Types.Right', E398} -> (fun (V580) -> begin (V584 = begin (V581 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V563))(V4))), case V581 of {'Idris.Prelude.Types.Left', E399} -> (fun (V582) -> {'Idris.Prelude.Types.Left', V582} end(E399)); {'Idris.Prelude.Types.Right', E400} -> (fun (V583) -> ('dn--un--reify_Reify_UseSide'(V0, V1, V2, V583, V4)) end(E400)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V584 of {'Idris.Prelude.Types.Left', E401} -> (fun (V585) -> {'Idris.Prelude.Types.Left', V585} end(E401)); {'Idris.Prelude.Types.Right', E402} -> (fun (V586) -> begin (V590 = begin (V587 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V565))(V4))), case V587 of {'Idris.Prelude.Types.Left', E403} -> (fun (V588) -> {'Idris.Prelude.Types.Left', V588} end(E403)); {'Idris.Prelude.Types.Right', E404} -> (fun (V589) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V589, V4)) end(E404)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V590 of {'Idris.Prelude.Types.Left', E405} -> (fun (V591) -> {'Idris.Prelude.Types.Left', V591} end(E405)); {'Idris.Prelude.Types.Right', E406} -> (fun (V592) -> begin (V596 = begin (V593 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V567))(V4))), case V593 of {'Idris.Prelude.Types.Left', E407} -> (fun (V594) -> {'Idris.Prelude.Types.Left', V594} end(E407)); {'Idris.Prelude.Types.Right', E408} -> (fun (V595) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V595, V4)) end(E408)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V596 of {'Idris.Prelude.Types.Left', E409} -> (fun (V597) -> {'Idris.Prelude.Types.Left', V597} end(E409)); {'Idris.Prelude.Types.Right', E410} -> (fun (V598) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAs', V574, V580, V586, V592, V598}} end(E410)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E406)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E402)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E398)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E394)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E389, E390)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E387, E388)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E385, E386)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E383, E384)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E381, E382)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IMustUnify"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V599) -> ('Idris.Idris2.Builtin':'un--snd'(V599)) end, V9)) of [E411 | E412] -> (fun (V600, V601) -> case V601 of [E413 | E414] -> (fun (V602, V603) -> case V603 of [E415 | E416] -> (fun (V604, V605) -> case V605 of [] -> begin (V609 = begin (V606 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V600))(V4))), case V606 of {'Idris.Prelude.Types.Left', E417} -> (fun (V607) -> {'Idris.Prelude.Types.Left', V607} end(E417)); {'Idris.Prelude.Types.Right', E418} -> (fun (V608) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V608, V4)) end(E418)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V609 of {'Idris.Prelude.Types.Left', E419} -> (fun (V610) -> {'Idris.Prelude.Types.Left', V610} end(E419)); {'Idris.Prelude.Types.Right', E420} -> (fun (V611) -> begin (V615 = begin (V612 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V602))(V4))), case V612 of {'Idris.Prelude.Types.Left', E421} -> (fun (V613) -> {'Idris.Prelude.Types.Left', V613} end(E421)); {'Idris.Prelude.Types.Right', E422} -> (fun (V614) -> ('dn--un--reify_Reify_DotReason'(V0, V1, V2, V614, V4)) end(E422)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V615 of {'Idris.Prelude.Types.Left', E423} -> (fun (V616) -> {'Idris.Prelude.Types.Left', V616} end(E423)); {'Idris.Prelude.Types.Right', E424} -> (fun (V617) -> begin (V621 = begin (V618 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V604))(V4))), case V618 of {'Idris.Prelude.Types.Left', E425} -> (fun (V619) -> {'Idris.Prelude.Types.Left', V619} end(E425)); {'Idris.Prelude.Types.Right', E426} -> (fun (V620) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V620, V4)) end(E426)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V621 of {'Idris.Prelude.Types.Left', E427} -> (fun (V622) -> {'Idris.Prelude.Types.Left', V622} end(E427)); {'Idris.Prelude.Types.Right', E428} -> (fun (V623) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IMustUnify', V611, V617, V623}} end(E428)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E424)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E420)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E415, E416)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E413, E414)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E411, E412)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IDelayed"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V624) -> ('Idris.Idris2.Builtin':'un--snd'(V624)) end, V9)) of [E429 | E430] -> (fun (V625, V626) -> case V626 of [E431 | E432] -> (fun (V627, V628) -> case V628 of [E433 | E434] -> (fun (V629, V630) -> case V630 of [] -> begin (V634 = begin (V631 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V625))(V4))), case V631 of {'Idris.Prelude.Types.Left', E435} -> (fun (V632) -> {'Idris.Prelude.Types.Left', V632} end(E435)); {'Idris.Prelude.Types.Right', E436} -> (fun (V633) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V633, V4)) end(E436)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V634 of {'Idris.Prelude.Types.Left', E437} -> (fun (V635) -> {'Idris.Prelude.Types.Left', V635} end(E437)); {'Idris.Prelude.Types.Right', E438} -> (fun (V636) -> begin (V640 = begin (V637 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V627))(V4))), case V637 of {'Idris.Prelude.Types.Left', E439} -> (fun (V638) -> {'Idris.Prelude.Types.Left', V638} end(E439)); {'Idris.Prelude.Types.Right', E440} -> (fun (V639) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_LazyReason'(V0, V1, V2, V639, V4)) end(E440)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V640 of {'Idris.Prelude.Types.Left', E441} -> (fun (V641) -> {'Idris.Prelude.Types.Left', V641} end(E441)); {'Idris.Prelude.Types.Right', E442} -> (fun (V642) -> begin (V646 = begin (V643 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V629))(V4))), case V643 of {'Idris.Prelude.Types.Left', E443} -> (fun (V644) -> {'Idris.Prelude.Types.Left', V644} end(E443)); {'Idris.Prelude.Types.Right', E444} -> (fun (V645) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V645, V4)) end(E444)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V646 of {'Idris.Prelude.Types.Left', E445} -> (fun (V647) -> {'Idris.Prelude.Types.Left', V647} end(E445)); {'Idris.Prelude.Types.Right', E446} -> (fun (V648) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelayed', V636, V642, V648}} end(E446)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E442)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E438)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E433, E434)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E431, E432)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E429, E430)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IDelay"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V649) -> ('Idris.Idris2.Builtin':'un--snd'(V649)) end, V9)) of [E447 | E448] -> (fun (V650, V651) -> case V651 of [E449 | E450] -> (fun (V652, V653) -> case V653 of [] -> begin (V657 = begin (V654 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V650))(V4))), case V654 of {'Idris.Prelude.Types.Left', E451} -> (fun (V655) -> {'Idris.Prelude.Types.Left', V655} end(E451)); {'Idris.Prelude.Types.Right', E452} -> (fun (V656) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V656, V4)) end(E452)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V657 of {'Idris.Prelude.Types.Left', E453} -> (fun (V658) -> {'Idris.Prelude.Types.Left', V658} end(E453)); {'Idris.Prelude.Types.Right', E454} -> (fun (V659) -> begin (V663 = begin (V660 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V652))(V4))), case V660 of {'Idris.Prelude.Types.Left', E455} -> (fun (V661) -> {'Idris.Prelude.Types.Left', V661} end(E455)); {'Idris.Prelude.Types.Right', E456} -> (fun (V662) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V662, V4)) end(E456)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V663 of {'Idris.Prelude.Types.Left', E457} -> (fun (V664) -> {'Idris.Prelude.Types.Left', V664} end(E457)); {'Idris.Prelude.Types.Right', E458} -> (fun (V665) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelay', V659, V665}} end(E458)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E454)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E449, E450)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E447, E448)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IForce"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V666) -> ('Idris.Idris2.Builtin':'un--snd'(V666)) end, V9)) of [E459 | E460] -> (fun (V667, V668) -> case V668 of [E461 | E462] -> (fun (V669, V670) -> case V670 of [] -> begin (V674 = begin (V671 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V667))(V4))), case V671 of {'Idris.Prelude.Types.Left', E463} -> (fun (V672) -> {'Idris.Prelude.Types.Left', V672} end(E463)); {'Idris.Prelude.Types.Right', E464} -> (fun (V673) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V673, V4)) end(E464)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V674 of {'Idris.Prelude.Types.Left', E465} -> (fun (V675) -> {'Idris.Prelude.Types.Left', V675} end(E465)); {'Idris.Prelude.Types.Right', E466} -> (fun (V676) -> begin (V680 = begin (V677 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V669))(V4))), case V677 of {'Idris.Prelude.Types.Left', E467} -> (fun (V678) -> {'Idris.Prelude.Types.Left', V678} end(E467)); {'Idris.Prelude.Types.Right', E468} -> (fun (V679) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V679, V4)) end(E468)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V680 of {'Idris.Prelude.Types.Left', E469} -> (fun (V681) -> {'Idris.Prelude.Types.Left', V681} end(E469)); {'Idris.Prelude.Types.Right', E470} -> (fun (V682) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IForce', V676, V682}} end(E470)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E466)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E461, E462)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E459, E460)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IQuote"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V683) -> ('Idris.Idris2.Builtin':'un--snd'(V683)) end, V9)) of [E471 | E472] -> (fun (V684, V685) -> case V685 of [E473 | E474] -> (fun (V686, V687) -> case V687 of [] -> begin (V691 = begin (V688 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V684))(V4))), case V688 of {'Idris.Prelude.Types.Left', E475} -> (fun (V689) -> {'Idris.Prelude.Types.Left', V689} end(E475)); {'Idris.Prelude.Types.Right', E476} -> (fun (V690) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V690, V4)) end(E476)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V691 of {'Idris.Prelude.Types.Left', E477} -> (fun (V692) -> {'Idris.Prelude.Types.Left', V692} end(E477)); {'Idris.Prelude.Types.Right', E478} -> (fun (V693) -> begin (V697 = begin (V694 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V686))(V4))), case V694 of {'Idris.Prelude.Types.Left', E479} -> (fun (V695) -> {'Idris.Prelude.Types.Left', V695} end(E479)); {'Idris.Prelude.Types.Right', E480} -> (fun (V696) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V696, V4)) end(E480)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V697 of {'Idris.Prelude.Types.Left', E481} -> (fun (V698) -> {'Idris.Prelude.Types.Left', V698} end(E481)); {'Idris.Prelude.Types.Right', E482} -> (fun (V699) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuote', V693, V699}} end(E482)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E478)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E473, E474)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E471, E472)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IQuoteName"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V700) -> ('Idris.Idris2.Builtin':'un--snd'(V700)) end, V9)) of [E483 | E484] -> (fun (V701, V702) -> case V702 of [E485 | E486] -> (fun (V703, V704) -> case V704 of [] -> begin (V708 = begin (V705 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V701))(V4))), case V705 of {'Idris.Prelude.Types.Left', E487} -> (fun (V706) -> {'Idris.Prelude.Types.Left', V706} end(E487)); {'Idris.Prelude.Types.Right', E488} -> (fun (V707) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V707, V4)) end(E488)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V708 of {'Idris.Prelude.Types.Left', E489} -> (fun (V709) -> {'Idris.Prelude.Types.Left', V709} end(E489)); {'Idris.Prelude.Types.Right', E490} -> (fun (V710) -> begin (V714 = begin (V711 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V703))(V4))), case V711 of {'Idris.Prelude.Types.Left', E491} -> (fun (V712) -> {'Idris.Prelude.Types.Left', V712} end(E491)); {'Idris.Prelude.Types.Right', E492} -> (fun (V713) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V713, V4)) end(E492)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V714 of {'Idris.Prelude.Types.Left', E493} -> (fun (V715) -> {'Idris.Prelude.Types.Left', V715} end(E493)); {'Idris.Prelude.Types.Right', E494} -> (fun (V716) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuoteName', V710, V716}} end(E494)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E490)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E485, E486)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E483, E484)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IQuoteDecl"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V717) -> ('Idris.Idris2.Builtin':'un--snd'(V717)) end, V9)) of [E495 | E496] -> (fun (V718, V719) -> case V719 of [E497 | E498] -> (fun (V720, V721) -> case V721 of [] -> begin (V725 = begin (V722 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V718))(V4))), case V722 of {'Idris.Prelude.Types.Left', E499} -> (fun (V723) -> {'Idris.Prelude.Types.Left', V723} end(E499)); {'Idris.Prelude.Types.Right', E500} -> (fun (V724) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V724, V4)) end(E500)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V725 of {'Idris.Prelude.Types.Left', E501} -> (fun (V726) -> {'Idris.Prelude.Types.Left', V726} end(E501)); {'Idris.Prelude.Types.Right', E502} -> (fun (V727) -> begin (V736 = begin (V728 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V720))(V4))), case V728 of {'Idris.Prelude.Types.Left', E503} -> (fun (V729) -> {'Idris.Prelude.Types.Left', V729} end(E503)); {'Idris.Prelude.Types.Right', E504} -> (fun (V730) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V731) -> fun (V732) -> fun (V733) -> fun (V734) -> fun (V735) -> ('dn--un--reify_Reify_ImpDecl'(V731, V732, V733, V734, V735)) end end end end end, V0, V1, V2, V730, V4)) end(E504)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V736 of {'Idris.Prelude.Types.Left', E505} -> (fun (V737) -> {'Idris.Prelude.Types.Left', V737} end(E505)); {'Idris.Prelude.Types.Right', E506} -> (fun (V738) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuoteDecl', V727, V738}} end(E506)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E502)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E497, E498)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E495, E496)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IUnquote"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V739) -> ('Idris.Idris2.Builtin':'un--snd'(V739)) end, V9)) of [E507 | E508] -> (fun (V740, V741) -> case V741 of [E509 | E510] -> (fun (V742, V743) -> case V743 of [] -> begin (V747 = begin (V744 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V740))(V4))), case V744 of {'Idris.Prelude.Types.Left', E511} -> (fun (V745) -> {'Idris.Prelude.Types.Left', V745} end(E511)); {'Idris.Prelude.Types.Right', E512} -> (fun (V746) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V746, V4)) end(E512)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V747 of {'Idris.Prelude.Types.Left', E513} -> (fun (V748) -> {'Idris.Prelude.Types.Left', V748} end(E513)); {'Idris.Prelude.Types.Right', E514} -> (fun (V749) -> begin (V753 = begin (V750 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V742))(V4))), case V750 of {'Idris.Prelude.Types.Left', E515} -> (fun (V751) -> {'Idris.Prelude.Types.Left', V751} end(E515)); {'Idris.Prelude.Types.Right', E516} -> (fun (V752) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V752, V4)) end(E516)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V753 of {'Idris.Prelude.Types.Left', E517} -> (fun (V754) -> {'Idris.Prelude.Types.Left', V754} end(E517)); {'Idris.Prelude.Types.Right', E518} -> (fun (V755) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUnquote', V749, V755}} end(E518)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E514)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E509, E510)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E507, E508)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IPrimVal"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V756) -> ('Idris.Idris2.Builtin':'un--snd'(V756)) end, V9)) of [E519 | E520] -> (fun (V757, V758) -> case V758 of [E521 | E522] -> (fun (V759, V760) -> case V760 of [] -> begin (V764 = begin (V761 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V757))(V4))), case V761 of {'Idris.Prelude.Types.Left', E523} -> (fun (V762) -> {'Idris.Prelude.Types.Left', V762} end(E523)); {'Idris.Prelude.Types.Right', E524} -> (fun (V763) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V763, V4)) end(E524)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V764 of {'Idris.Prelude.Types.Left', E525} -> (fun (V765) -> {'Idris.Prelude.Types.Left', V765} end(E525)); {'Idris.Prelude.Types.Right', E526} -> (fun (V766) -> begin (V770 = begin (V767 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V759))(V4))), case V767 of {'Idris.Prelude.Types.Left', E527} -> (fun (V768) -> {'Idris.Prelude.Types.Left', V768} end(E527)); {'Idris.Prelude.Types.Right', E528} -> (fun (V769) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Constant'(V0, V1, V2, V769, V4)) end(E528)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V770 of {'Idris.Prelude.Types.Left', E529} -> (fun (V771) -> {'Idris.Prelude.Types.Left', V771} end(E529)); {'Idris.Prelude.Types.Right', E530} -> (fun (V772) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPrimVal', V766, V772}} end(E530)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E526)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E521, E522)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E519, E520)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IType"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V773) -> ('Idris.Idris2.Builtin':'un--snd'(V773)) end, V9)) of [E531 | E532] -> (fun (V774, V775) -> case V775 of [] -> begin (V779 = begin (V776 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V774))(V4))), case V776 of {'Idris.Prelude.Types.Left', E533} -> (fun (V777) -> {'Idris.Prelude.Types.Left', V777} end(E533)); {'Idris.Prelude.Types.Right', E534} -> (fun (V778) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V778, V4)) end(E534)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V779 of {'Idris.Prelude.Types.Left', E535} -> (fun (V780) -> {'Idris.Prelude.Types.Left', V780} end(E535)); {'Idris.Prelude.Types.Right', E536} -> (fun (V781) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IType', V781}} end(E536)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E531, E532)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IHole"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V782) -> ('Idris.Idris2.Builtin':'un--snd'(V782)) end, V9)) of [E537 | E538] -> (fun (V783, V784) -> case V784 of [E539 | E540] -> (fun (V785, V786) -> case V786 of [] -> begin (V790 = begin (V787 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V783))(V4))), case V787 of {'Idris.Prelude.Types.Left', E541} -> (fun (V788) -> {'Idris.Prelude.Types.Left', V788} end(E541)); {'Idris.Prelude.Types.Right', E542} -> (fun (V789) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V789, V4)) end(E542)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V790 of {'Idris.Prelude.Types.Left', E543} -> (fun (V791) -> {'Idris.Prelude.Types.Left', V791} end(E543)); {'Idris.Prelude.Types.Right', E544} -> (fun (V792) -> begin (V796 = begin (V793 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V785))(V4))), case V793 of {'Idris.Prelude.Types.Left', E545} -> (fun (V794) -> {'Idris.Prelude.Types.Left', V794} end(E545)); {'Idris.Prelude.Types.Right', E546} -> (fun (V795) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V0, V1, V2, V795))(V4)) end(E546)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V796 of {'Idris.Prelude.Types.Left', E547} -> (fun (V797) -> {'Idris.Prelude.Types.Left', V797} end(E547)); {'Idris.Prelude.Types.Right', E548} -> (fun (V798) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IHole', V792, V798}} end(E548)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E544)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E539, E540)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E537, E538)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"Implicit"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V799) -> ('Idris.Idris2.Builtin':'un--snd'(V799)) end, V9)) of [E549 | E550] -> (fun (V800, V801) -> case V801 of [E551 | E552] -> (fun (V802, V803) -> case V803 of [] -> begin (V807 = begin (V804 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V800))(V4))), case V804 of {'Idris.Prelude.Types.Left', E553} -> (fun (V805) -> {'Idris.Prelude.Types.Left', V805} end(E553)); {'Idris.Prelude.Types.Right', E554} -> (fun (V806) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V806, V4)) end(E554)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V807 of {'Idris.Prelude.Types.Left', E555} -> (fun (V808) -> {'Idris.Prelude.Types.Left', V808} end(E555)); {'Idris.Prelude.Types.Right', E556} -> (fun (V809) -> begin (V813 = begin (V810 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V802))(V4))), case V810 of {'Idris.Prelude.Types.Left', E557} -> (fun (V811) -> {'Idris.Prelude.Types.Left', V811} end(E557)); {'Idris.Prelude.Types.Right', E558} -> (fun (V812) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Bool'(V0, V1, V2, V812, V4)) end(E558)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V813 of {'Idris.Prelude.Types.Left', E559} -> (fun (V814) -> {'Idris.Prelude.Types.Left', V814} end(E559)); {'Idris.Prelude.Types.Right', E560} -> (fun (V815) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Implicit', V809, V815}} end(E560)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E556)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E551, E552)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E549, E550)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; <<"IWithUnambigNames"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V816) -> ('Idris.Idris2.Builtin':'un--snd'(V816)) end, V9)) of [E561 | E562] -> (fun (V817, V818) -> case V818 of [E563 | E564] -> (fun (V819, V820) -> case V820 of [E565 | E566] -> (fun (V821, V822) -> case V822 of [] -> begin (V826 = begin (V823 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V817))(V4))), case V823 of {'Idris.Prelude.Types.Left', E567} -> (fun (V824) -> {'Idris.Prelude.Types.Left', V824} end(E567)); {'Idris.Prelude.Types.Right', E568} -> (fun (V825) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V825, V4)) end(E568)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V826 of {'Idris.Prelude.Types.Left', E569} -> (fun (V827) -> {'Idris.Prelude.Types.Left', V827} end(E569)); {'Idris.Prelude.Types.Right', E570} -> (fun (V828) -> begin (V837 = begin (V829 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V819))(V4))), case V829 of {'Idris.Prelude.Types.Left', E571} -> (fun (V830) -> {'Idris.Prelude.Types.Left', V830} end(E571)); {'Idris.Prelude.Types.Right', E572} -> (fun (V831) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V832) -> fun (V833) -> fun (V834) -> fun (V835) -> fun (V836) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V832, V833, V834, V835, V836)) end end end end end, V0, V1, V2, V831, V4)) end(E572)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V837 of {'Idris.Prelude.Types.Left', E573} -> (fun (V838) -> {'Idris.Prelude.Types.Left', V838} end(E573)); {'Idris.Prelude.Types.Right', E574} -> (fun (V839) -> begin (V843 = begin (V840 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V821))(V4))), case V840 of {'Idris.Prelude.Types.Left', E575} -> (fun (V841) -> {'Idris.Prelude.Types.Left', V841} end(E575)); {'Idris.Prelude.Types.Right', E576} -> (fun (V842) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V842, V4)) end(E576)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V843 of {'Idris.Prelude.Types.Left', E577} -> (fun (V844) -> {'Idris.Prelude.Types.Left', V844} end(E577)); {'Idris.Prelude.Types.Right', E578} -> (fun (V845) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithUnambigNames', V828, V839, V845}} end(E578)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E574)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E570)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E565, E566)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E563, E564)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E561, E562)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E38)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"TTImp"/utf8>>, V4)) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"TTImp"/utf8>>, V4)) end.
'dn--un--reify_Reify_ImpTy'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V40 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V40 of {'Idris.Prelude.Types.Left', E35} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V42) -> begin (V43 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V42)) of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of {'Idris.Core.Name.Basic', E38} -> (fun (V45) -> case V45 of <<"MkTy"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V46) -> ('Idris.Idris2.Builtin':'un--snd'(V46)) end, V9)) of [E39 | E40] -> (fun (V47, V48) -> case V48 of [E41 | E42] -> (fun (V49, V50) -> case V50 of [E43 | E44] -> (fun (V51, V52) -> case V52 of [E45 | E46] -> (fun (V53, V54) -> case V54 of [] -> begin (V58 = begin (V55 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V47))(V4))), case V55 of {'Idris.Prelude.Types.Left', E47} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V57) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V57, V4)) end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V58 of {'Idris.Prelude.Types.Left', E49} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V60) -> begin (V64 = begin (V61 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V49))(V4))), case V61 of {'Idris.Prelude.Types.Left', E51} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V63) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V63, V4)) end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V64 of {'Idris.Prelude.Types.Left', E53} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V66) -> begin (V70 = begin (V67 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V51))(V4))), case V67 of {'Idris.Prelude.Types.Left', E55} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V69) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V69, V4)) end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V70 of {'Idris.Prelude.Types.Left', E57} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V72) -> begin (V76 = begin (V73 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V53))(V4))), case V73 of {'Idris.Prelude.Types.Left', E59} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V75) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V75, V4)) end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V76 of {'Idris.Prelude.Types.Left', E61} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V78) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpTy', V60, V66, V72, V78}} end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"ITy"/utf8>>, V4)) end end(E45, E46)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"ITy"/utf8>>, V4)) end end(E43, E44)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"ITy"/utf8>>, V4)) end end(E41, E42)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"ITy"/utf8>>, V4)) end end(E39, E40)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"ITy"/utf8>>, V4)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"ITy"/utf8>>, V4)) end end(E38)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"ITy"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"ITy"/utf8>>, V4)) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"ITy"/utf8>>, V4)) end.
'dn--un--reify_Reify_ImpRecord'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V40 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V40 of {'Idris.Prelude.Types.Left', E35} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V42) -> begin (V43 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V42)) of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of {'Idris.Core.Name.Basic', E38} -> (fun (V45) -> case V45 of <<"MkRecord"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V46) -> ('Idris.Idris2.Builtin':'un--snd'(V46)) end, V9)) of [E39 | E40] -> (fun (V47, V48) -> case V48 of [E41 | E42] -> (fun (V49, V50) -> case V50 of [E43 | E44] -> (fun (V51, V52) -> case V52 of [E45 | E46] -> (fun (V53, V54) -> case V54 of [E47 | E48] -> (fun (V55, V56) -> case V56 of [] -> begin (V60 = begin (V57 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V47))(V4))), case V57 of {'Idris.Prelude.Types.Left', E49} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V59) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V59, V4)) end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V60 of {'Idris.Prelude.Types.Left', E51} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V62) -> begin (V66 = begin (V63 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V49))(V4))), case V63 of {'Idris.Prelude.Types.Left', E53} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V65) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V65, V4)) end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V66 of {'Idris.Prelude.Types.Left', E55} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V68) -> begin (V109 = begin (V69 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V51))(V4))), case V69 of {'Idris.Prelude.Types.Left', E57} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V71) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V76, V77, V78, V79, V80)) end end end end end, fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V85, V86, V87, V88, V89)) end end end end end, fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(PiInfo $t)'(fun (V99) -> fun (V100) -> fun (V101) -> fun (V102) -> fun (V103) -> ('dn--un--reify_Reify_RawImp'(V99, V100, V101, V102, V103)) end end end end end, V94, V95, V96, V97, V98)) end end end end end, fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> ('dn--un--reify_Reify_RawImp'(V104, V105, V106, V107, V108)) end end end end end}, V90, V91, V92, V93)) end end end end}, V81, V82, V83, V84)) end end end end}, V72, V73, V74, V75)) end end end end, V0, V1, V2, V71, V4)) end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V109 of {'Idris.Prelude.Types.Left', E59} -> (fun (V110) -> {'Idris.Prelude.Types.Left', V110} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V111) -> begin (V115 = begin (V112 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V53))(V4))), case V112 of {'Idris.Prelude.Types.Left', E61} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V114) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V114, V4)) end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V115 of {'Idris.Prelude.Types.Left', E63} -> (fun (V116) -> {'Idris.Prelude.Types.Left', V116} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V117) -> begin (V126 = begin (V118 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V55))(V4))), case V118 of {'Idris.Prelude.Types.Left', E65} -> (fun (V119) -> {'Idris.Prelude.Types.Left', V119} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V120) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V121) -> fun (V122) -> fun (V123) -> fun (V124) -> fun (V125) -> ('dn--un--reify_Reify_IField'(V121, V122, V123, V124, V125)) end end end end end, V0, V1, V2, V120, V4)) end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V126 of {'Idris.Prelude.Types.Left', E67} -> (fun (V127) -> {'Idris.Prelude.Types.Left', V127} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V128) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpRecord', V62, V68, V111, V117, V128}} end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Record"/utf8>>, V4)) end end(E47, E48)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Record"/utf8>>, V4)) end end(E45, E46)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Record"/utf8>>, V4)) end end(E43, E44)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Record"/utf8>>, V4)) end end(E41, E42)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Record"/utf8>>, V4)) end end(E39, E40)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Record"/utf8>>, V4)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Record"/utf8>>, V4)) end end(E38)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Record"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Record"/utf8>>, V4)) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"Record"/utf8>>, V4)) end.
'dn--un--reify_Reify_ImpDecl'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V40 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V40 of {'Idris.Prelude.Types.Left', E35} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V42) -> begin (V43 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V42)) of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of {'Idris.Core.Name.Basic', E38} -> (fun (V45) -> case V45 of <<"IClaim"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V46) -> ('Idris.Idris2.Builtin':'un--snd'(V46)) end, V9)) of [E39 | E40] -> (fun (V47, V48) -> case V48 of [E41 | E42] -> (fun (V49, V50) -> case V50 of [E43 | E44] -> (fun (V51, V52) -> case V52 of [E45 | E46] -> (fun (V53, V54) -> case V54 of [E47 | E48] -> (fun (V55, V56) -> case V56 of [] -> begin (V60 = begin (V57 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V47))(V4))), case V57 of {'Idris.Prelude.Types.Left', E49} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V59) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V59, V4)) end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V60 of {'Idris.Prelude.Types.Left', E51} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V62) -> begin (V66 = begin (V63 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V49))(V4))), case V63 of {'Idris.Prelude.Types.Left', E53} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V65) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V0, V1, V2, V65, V4)) end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V66 of {'Idris.Prelude.Types.Left', E55} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V68) -> begin (V72 = begin (V69 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V51))(V4))), case V69 of {'Idris.Prelude.Types.Left', E57} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V71) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Visibility'(V0, V1, V2, V71, V4)) end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V72 of {'Idris.Prelude.Types.Left', E59} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V74) -> begin (V83 = begin (V75 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V53))(V4))), case V75 of {'Idris.Prelude.Types.Left', E61} -> (fun (V76) -> {'Idris.Prelude.Types.Left', V76} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V77) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> ('dn--un--reify_Reify_FnOpt'(V78, V79, V80, V81, V82)) end end end end end, V0, V1, V2, V77, V4)) end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V83 of {'Idris.Prelude.Types.Left', E63} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V85) -> begin (V89 = begin (V86 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V55))(V4))), case V86 of {'Idris.Prelude.Types.Left', E65} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V88) -> ('dn--un--reify_Reify_ImpTy'(V0, V1, V2, V88, V4)) end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V89 of {'Idris.Prelude.Types.Left', E67} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V91) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IClaim', V62, V68, V74, V85, V91}} end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E47, E48)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E45, E46)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E43, E44)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E41, E42)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E39, E40)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end; <<"IData"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V92) -> ('Idris.Idris2.Builtin':'un--snd'(V92)) end, V9)) of [E69 | E70] -> (fun (V93, V94) -> case V94 of [E71 | E72] -> (fun (V95, V96) -> case V96 of [E73 | E74] -> (fun (V97, V98) -> case V98 of [] -> begin (V102 = begin (V99 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V93))(V4))), case V99 of {'Idris.Prelude.Types.Left', E75} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V101) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V101, V4)) end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V102 of {'Idris.Prelude.Types.Left', E77} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V104) -> begin (V108 = begin (V105 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V95))(V4))), case V105 of {'Idris.Prelude.Types.Left', E79} -> (fun (V106) -> {'Idris.Prelude.Types.Left', V106} end(E79)); {'Idris.Prelude.Types.Right', E80} -> (fun (V107) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Visibility'(V0, V1, V2, V107, V4)) end(E80)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V108 of {'Idris.Prelude.Types.Left', E81} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V110) -> begin (V114 = begin (V111 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V97))(V4))), case V111 of {'Idris.Prelude.Types.Left', E83} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V113) -> ('dn--un--reify_Reify_ImpData'(V0, V1, V2, V113, V4)) end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V114 of {'Idris.Prelude.Types.Left', E85} -> (fun (V115) -> {'Idris.Prelude.Types.Left', V115} end(E85)); {'Idris.Prelude.Types.Right', E86} -> (fun (V116) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IData', V104, V110, V116}} end(E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E73, E74)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E71, E72)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E69, E70)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end; <<"IDef"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V117) -> ('Idris.Idris2.Builtin':'un--snd'(V117)) end, V9)) of [E87 | E88] -> (fun (V118, V119) -> case V119 of [E89 | E90] -> (fun (V120, V121) -> case V121 of [E91 | E92] -> (fun (V122, V123) -> case V123 of [] -> begin (V127 = begin (V124 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V118))(V4))), case V124 of {'Idris.Prelude.Types.Left', E93} -> (fun (V125) -> {'Idris.Prelude.Types.Left', V125} end(E93)); {'Idris.Prelude.Types.Right', E94} -> (fun (V126) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V126, V4)) end(E94)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V127 of {'Idris.Prelude.Types.Left', E95} -> (fun (V128) -> {'Idris.Prelude.Types.Left', V128} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V129) -> begin (V133 = begin (V130 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V120))(V4))), case V130 of {'Idris.Prelude.Types.Left', E97} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V132) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V132, V4)) end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V133 of {'Idris.Prelude.Types.Left', E99} -> (fun (V134) -> {'Idris.Prelude.Types.Left', V134} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V135) -> begin (V144 = begin (V136 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V122))(V4))), case V136 of {'Idris.Prelude.Types.Left', E101} -> (fun (V137) -> {'Idris.Prelude.Types.Left', V137} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V138) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V139) -> fun (V140) -> fun (V141) -> fun (V142) -> fun (V143) -> ('dn--un--reify_Reify_ImpClause'(V139, V140, V141, V142, V143)) end end end end end, V0, V1, V2, V138, V4)) end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V144 of {'Idris.Prelude.Types.Left', E103} -> (fun (V145) -> {'Idris.Prelude.Types.Left', V145} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V146) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDef', V129, V135, V146}} end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E91, E92)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E89, E90)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E87, E88)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end; <<"IParameters"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V147) -> ('Idris.Idris2.Builtin':'un--snd'(V147)) end, V9)) of [E105 | E106] -> (fun (V148, V149) -> case V149 of [E107 | E108] -> (fun (V150, V151) -> case V151 of [E109 | E110] -> (fun (V152, V153) -> case V153 of [] -> begin (V157 = begin (V154 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V148))(V4))), case V154 of {'Idris.Prelude.Types.Left', E111} -> (fun (V155) -> {'Idris.Prelude.Types.Left', V155} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V156) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V156, V4)) end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V157 of {'Idris.Prelude.Types.Left', E113} -> (fun (V158) -> {'Idris.Prelude.Types.Left', V158} end(E113)); {'Idris.Prelude.Types.Right', E114} -> (fun (V159) -> begin (V200 = begin (V160 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V150))(V4))), case V160 of {'Idris.Prelude.Types.Left', E115} -> (fun (V161) -> {'Idris.Prelude.Types.Left', V161} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V162) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V163) -> fun (V164) -> fun (V165) -> fun (V166) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V167) -> fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V167, V168, V169, V170, V171)) end end end end end, fun (V172) -> fun (V173) -> fun (V174) -> fun (V175) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V176) -> fun (V177) -> fun (V178) -> fun (V179) -> fun (V180) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V176, V177, V178, V179, V180)) end end end end end, fun (V181) -> fun (V182) -> fun (V183) -> fun (V184) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V185) -> fun (V186) -> fun (V187) -> fun (V188) -> fun (V189) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(PiInfo $t)'(fun (V190) -> fun (V191) -> fun (V192) -> fun (V193) -> fun (V194) -> ('dn--un--reify_Reify_RawImp'(V190, V191, V192, V193, V194)) end end end end end, V185, V186, V187, V188, V189)) end end end end end, fun (V195) -> fun (V196) -> fun (V197) -> fun (V198) -> fun (V199) -> ('dn--un--reify_Reify_RawImp'(V195, V196, V197, V198, V199)) end end end end end}, V181, V182, V183, V184)) end end end end}, V172, V173, V174, V175)) end end end end}, V163, V164, V165, V166)) end end end end, V0, V1, V2, V162, V4)) end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V200 of {'Idris.Prelude.Types.Left', E117} -> (fun (V201) -> {'Idris.Prelude.Types.Left', V201} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V202) -> begin (V211 = begin (V203 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V152))(V4))), case V203 of {'Idris.Prelude.Types.Left', E119} -> (fun (V204) -> {'Idris.Prelude.Types.Left', V204} end(E119)); {'Idris.Prelude.Types.Right', E120} -> (fun (V205) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V206) -> fun (V207) -> fun (V208) -> fun (V209) -> fun (V210) -> ('dn--un--reify_Reify_ImpDecl'(V206, V207, V208, V209, V210)) end end end end end, V0, V1, V2, V205, V4)) end(E120)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V211 of {'Idris.Prelude.Types.Left', E121} -> (fun (V212) -> {'Idris.Prelude.Types.Left', V212} end(E121)); {'Idris.Prelude.Types.Right', E122} -> (fun (V213) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IParameters', V159, V202, V213}} end(E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E109, E110)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E107, E108)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E105, E106)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end; <<"IRecord"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V214) -> ('Idris.Idris2.Builtin':'un--snd'(V214)) end, V9)) of [E123 | E124] -> (fun (V215, V216) -> case V216 of [E125 | E126] -> (fun (V217, V218) -> case V218 of [E127 | E128] -> (fun (V219, V220) -> case V220 of [E129 | E130] -> (fun (V221, V222) -> case V222 of [] -> begin (V226 = begin (V223 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V215))(V4))), case V223 of {'Idris.Prelude.Types.Left', E131} -> (fun (V224) -> {'Idris.Prelude.Types.Left', V224} end(E131)); {'Idris.Prelude.Types.Right', E132} -> (fun (V225) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V225, V4)) end(E132)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V226 of {'Idris.Prelude.Types.Left', E133} -> (fun (V227) -> {'Idris.Prelude.Types.Left', V227} end(E133)); {'Idris.Prelude.Types.Right', E134} -> (fun (V228) -> begin (V236 = begin (V229 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V217))(V4))), case V229 of {'Idris.Prelude.Types.Left', E135} -> (fun (V230) -> {'Idris.Prelude.Types.Left', V230} end(E135)); {'Idris.Prelude.Types.Right', E136} -> (fun (V231) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(Maybe $a)'(fun (V232) -> fun (V233) -> fun (V234) -> fun (V235) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V232, V233, V234, V235)) end end end end, V0, V1, V2, V231, V4)) end(E136)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V236 of {'Idris.Prelude.Types.Left', E137} -> (fun (V237) -> {'Idris.Prelude.Types.Left', V237} end(E137)); {'Idris.Prelude.Types.Right', E138} -> (fun (V238) -> begin (V242 = begin (V239 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V219))(V4))), case V239 of {'Idris.Prelude.Types.Left', E139} -> (fun (V240) -> {'Idris.Prelude.Types.Left', V240} end(E139)); {'Idris.Prelude.Types.Right', E140} -> (fun (V241) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Visibility'(V0, V1, V2, V241, V4)) end(E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V242 of {'Idris.Prelude.Types.Left', E141} -> (fun (V243) -> {'Idris.Prelude.Types.Left', V243} end(E141)); {'Idris.Prelude.Types.Right', E142} -> (fun (V244) -> begin (V248 = begin (V245 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V221))(V4))), case V245 of {'Idris.Prelude.Types.Left', E143} -> (fun (V246) -> {'Idris.Prelude.Types.Left', V246} end(E143)); {'Idris.Prelude.Types.Right', E144} -> (fun (V247) -> ('dn--un--reify_Reify_ImpRecord'(V0, V1, V2, V247, V4)) end(E144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V248 of {'Idris.Prelude.Types.Left', E145} -> (fun (V249) -> {'Idris.Prelude.Types.Left', V249} end(E145)); {'Idris.Prelude.Types.Right', E146} -> (fun (V250) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRecord', V228, V238, V244, V250}} end(E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E129, E130)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E127, E128)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E125, E126)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E123, E124)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end; <<"INamespace"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V251) -> ('Idris.Idris2.Builtin':'un--snd'(V251)) end, V9)) of [E147 | E148] -> (fun (V252, V253) -> case V253 of [E149 | E150] -> (fun (V254, V255) -> case V255 of [E151 | E152] -> (fun (V256, V257) -> case V257 of [] -> begin (V261 = begin (V258 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V252))(V4))), case V258 of {'Idris.Prelude.Types.Left', E153} -> (fun (V259) -> {'Idris.Prelude.Types.Left', V259} end(E153)); {'Idris.Prelude.Types.Right', E154} -> (fun (V260) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V260, V4)) end(E154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V261 of {'Idris.Prelude.Types.Left', E155} -> (fun (V262) -> {'Idris.Prelude.Types.Left', V262} end(E155)); {'Idris.Prelude.Types.Right', E156} -> (fun (V263) -> begin (V267 = begin (V264 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V254))(V4))), case V264 of {'Idris.Prelude.Types.Left', E157} -> (fun (V265) -> {'Idris.Prelude.Types.Left', V265} end(E157)); {'Idris.Prelude.Types.Right', E158} -> (fun (V266) -> (('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Namespace'(V0, V1, V2, V266))(V4)) end(E158)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V267 of {'Idris.Prelude.Types.Left', E159} -> (fun (V268) -> {'Idris.Prelude.Types.Left', V268} end(E159)); {'Idris.Prelude.Types.Right', E160} -> (fun (V269) -> begin (V278 = begin (V270 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V256))(V4))), case V270 of {'Idris.Prelude.Types.Left', E161} -> (fun (V271) -> {'Idris.Prelude.Types.Left', V271} end(E161)); {'Idris.Prelude.Types.Right', E162} -> (fun (V272) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V273) -> fun (V274) -> fun (V275) -> fun (V276) -> fun (V277) -> ('dn--un--reify_Reify_ImpDecl'(V273, V274, V275, V276, V277)) end end end end end, V0, V1, V2, V272, V4)) end(E162)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V278 of {'Idris.Prelude.Types.Left', E163} -> (fun (V279) -> {'Idris.Prelude.Types.Left', V279} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V280) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamespace', V263, V269, V280}} end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E160)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E151, E152)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E149, E150)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E147, E148)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end; <<"ITransform"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V281) -> ('Idris.Idris2.Builtin':'un--snd'(V281)) end, V9)) of [E165 | E166] -> (fun (V282, V283) -> case V283 of [E167 | E168] -> (fun (V284, V285) -> case V285 of [E169 | E170] -> (fun (V286, V287) -> case V287 of [E171 | E172] -> (fun (V288, V289) -> case V289 of [] -> begin (V293 = begin (V290 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V282))(V4))), case V290 of {'Idris.Prelude.Types.Left', E173} -> (fun (V291) -> {'Idris.Prelude.Types.Left', V291} end(E173)); {'Idris.Prelude.Types.Right', E174} -> (fun (V292) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V292, V4)) end(E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V293 of {'Idris.Prelude.Types.Left', E175} -> (fun (V294) -> {'Idris.Prelude.Types.Left', V294} end(E175)); {'Idris.Prelude.Types.Right', E176} -> (fun (V295) -> begin (V299 = begin (V296 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V284))(V4))), case V296 of {'Idris.Prelude.Types.Left', E177} -> (fun (V297) -> {'Idris.Prelude.Types.Left', V297} end(E177)); {'Idris.Prelude.Types.Right', E178} -> (fun (V298) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V298, V4)) end(E178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V299 of {'Idris.Prelude.Types.Left', E179} -> (fun (V300) -> {'Idris.Prelude.Types.Left', V300} end(E179)); {'Idris.Prelude.Types.Right', E180} -> (fun (V301) -> begin (V305 = begin (V302 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V286))(V4))), case V302 of {'Idris.Prelude.Types.Left', E181} -> (fun (V303) -> {'Idris.Prelude.Types.Left', V303} end(E181)); {'Idris.Prelude.Types.Right', E182} -> (fun (V304) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V304, V4)) end(E182)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V305 of {'Idris.Prelude.Types.Left', E183} -> (fun (V306) -> {'Idris.Prelude.Types.Left', V306} end(E183)); {'Idris.Prelude.Types.Right', E184} -> (fun (V307) -> begin (V311 = begin (V308 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V288))(V4))), case V308 of {'Idris.Prelude.Types.Left', E185} -> (fun (V309) -> {'Idris.Prelude.Types.Left', V309} end(E185)); {'Idris.Prelude.Types.Right', E186} -> (fun (V310) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V310, V4)) end(E186)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V311 of {'Idris.Prelude.Types.Left', E187} -> (fun (V312) -> {'Idris.Prelude.Types.Left', V312} end(E187)); {'Idris.Prelude.Types.Right', E188} -> (fun (V313) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ITransform', V295, V301, V307, V313}} end(E188)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E184)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E171, E172)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E169, E170)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E167, E168)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E165, E166)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end; <<"ILog"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V314) -> ('Idris.Idris2.Builtin':'un--snd'(V314)) end, V9)) of [E189 | E190] -> (fun (V315, V316) -> case V316 of [] -> begin (V338 = begin (V317 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V315))(V4))), case V317 of {'Idris.Prelude.Types.Left', E191} -> (fun (V318) -> {'Idris.Prelude.Types.Left', V318} end(E191)); {'Idris.Prelude.Types.Right', E192} -> (fun (V319) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(Maybe $a)'(fun (V320) -> fun (V321) -> fun (V322) -> fun (V323) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V324) -> fun (V325) -> fun (V326) -> fun (V327) -> fun (V328) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V329) -> fun (V330) -> fun (V331) -> fun (V332) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V329, V330, V331, V332)) end end end end, V324, V325, V326, V327, V328)) end end end end end, fun (V333) -> fun (V334) -> fun (V335) -> fun (V336) -> fun (V337) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Nat'(V333, V334, V335, V336, V337)) end end end end end}, V320, V321, V322, V323)) end end end end, V0, V1, V2, V319, V4)) end(E192)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V338 of {'Idris.Prelude.Types.Left', E193} -> (fun (V339) -> {'Idris.Prelude.Types.Left', V339} end(E193)); {'Idris.Prelude.Types.Right', E194} -> (fun (V340) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILog', V340}} end(E194)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E189, E190)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E38)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Decl"/utf8>>, V4)) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"Decl"/utf8>>, V4)) end.
'dn--un--reify_Reify_ImpData'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V40 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V40 of {'Idris.Prelude.Types.Left', E35} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V42) -> begin (V43 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V42)) of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of {'Idris.Core.Name.Basic', E38} -> (fun (V45) -> case V45 of <<"MkData"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V46) -> ('Idris.Idris2.Builtin':'un--snd'(V46)) end, V9)) of [E39 | E40] -> (fun (V47, V48) -> case V48 of [E41 | E42] -> (fun (V49, V50) -> case V50 of [E43 | E44] -> (fun (V51, V52) -> case V52 of [E45 | E46] -> (fun (V53, V54) -> case V54 of [E47 | E48] -> (fun (V55, V56) -> case V56 of [] -> begin (V60 = begin (V57 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V47))(V4))), case V57 of {'Idris.Prelude.Types.Left', E49} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V59) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V59, V4)) end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V60 of {'Idris.Prelude.Types.Left', E51} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V62) -> begin (V66 = begin (V63 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V49))(V4))), case V63 of {'Idris.Prelude.Types.Left', E53} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V65) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V65, V4)) end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V66 of {'Idris.Prelude.Types.Left', E55} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V68) -> begin (V72 = begin (V69 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V51))(V4))), case V69 of {'Idris.Prelude.Types.Left', E57} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V71) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V71, V4)) end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V72 of {'Idris.Prelude.Types.Left', E59} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V74) -> begin (V83 = begin (V75 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V53))(V4))), case V75 of {'Idris.Prelude.Types.Left', E61} -> (fun (V76) -> {'Idris.Prelude.Types.Left', V76} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V77) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> ('dn--un--reify_Reify_DataOpt'(V78, V79, V80, V81, V82)) end end end end end, V0, V1, V2, V77, V4)) end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V83 of {'Idris.Prelude.Types.Left', E63} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V85) -> begin (V94 = begin (V86 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V55))(V4))), case V86 of {'Idris.Prelude.Types.Left', E65} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V88) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> ('dn--un--reify_Reify_ImpTy'(V89, V90, V91, V92, V93)) end end end end end, V0, V1, V2, V88, V4)) end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V94 of {'Idris.Prelude.Types.Left', E67} -> (fun (V95) -> {'Idris.Prelude.Types.Left', V95} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V96) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpData', V62, V68, V74, V85, V96}} end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Data"/utf8>>, V4)) end end(E47, E48)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Data"/utf8>>, V4)) end end(E45, E46)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Data"/utf8>>, V4)) end end(E43, E44)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Data"/utf8>>, V4)) end end(E41, E42)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Data"/utf8>>, V4)) end end(E39, E40)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Data"/utf8>>, V4)) end; <<"MkLater"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V97) -> ('Idris.Idris2.Builtin':'un--snd'(V97)) end, V9)) of [E69 | E70] -> (fun (V98, V99) -> case V99 of [E71 | E72] -> (fun (V100, V101) -> case V101 of [E73 | E74] -> (fun (V102, V103) -> case V103 of [] -> begin (V107 = begin (V104 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V98))(V4))), case V104 of {'Idris.Prelude.Types.Left', E75} -> (fun (V105) -> {'Idris.Prelude.Types.Left', V105} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V106) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V106, V4)) end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V107 of {'Idris.Prelude.Types.Left', E77} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V109) -> begin (V113 = begin (V110 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V100))(V4))), case V110 of {'Idris.Prelude.Types.Left', E79} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E79)); {'Idris.Prelude.Types.Right', E80} -> (fun (V112) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V112, V4)) end(E80)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V113 of {'Idris.Prelude.Types.Left', E81} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V115) -> begin (V119 = begin (V116 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V102))(V4))), case V116 of {'Idris.Prelude.Types.Left', E83} -> (fun (V117) -> {'Idris.Prelude.Types.Left', V117} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V118) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V118, V4)) end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V119 of {'Idris.Prelude.Types.Left', E85} -> (fun (V120) -> {'Idris.Prelude.Types.Left', V120} end(E85)); {'Idris.Prelude.Types.Right', E86} -> (fun (V121) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpLater', V109, V115, V121}} end(E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Data"/utf8>>, V4)) end end(E73, E74)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Data"/utf8>>, V4)) end end(E71, E72)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Data"/utf8>>, V4)) end end(E69, E70)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Data"/utf8>>, V4)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Data"/utf8>>, V4)) end end(E38)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Data"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Data"/utf8>>, V4)) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"Data"/utf8>>, V4)) end.
'dn--un--reify_Reify_ImpClause'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V40 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V40 of {'Idris.Prelude.Types.Left', E35} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V42) -> begin (V43 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V42)) of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of {'Idris.Core.Name.Basic', E38} -> (fun (V45) -> case V45 of <<"PatClause"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V46) -> ('Idris.Idris2.Builtin':'un--snd'(V46)) end, V9)) of [E39 | E40] -> (fun (V47, V48) -> case V48 of [E41 | E42] -> (fun (V49, V50) -> case V50 of [E43 | E44] -> (fun (V51, V52) -> case V52 of [] -> begin (V56 = begin (V53 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V47))(V4))), case V53 of {'Idris.Prelude.Types.Left', E45} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V55) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V55, V4)) end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V56 of {'Idris.Prelude.Types.Left', E47} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V58) -> begin (V62 = begin (V59 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V49))(V4))), case V59 of {'Idris.Prelude.Types.Left', E49} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V61) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V61, V4)) end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V62 of {'Idris.Prelude.Types.Left', E51} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V64) -> begin (V68 = begin (V65 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V51))(V4))), case V65 of {'Idris.Prelude.Types.Left', E53} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V67) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V67, V4)) end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V68 of {'Idris.Prelude.Types.Left', E55} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V70) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PatClause', V58, V64, V70}} end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Clause"/utf8>>, V4)) end end(E43, E44)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Clause"/utf8>>, V4)) end end(E41, E42)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Clause"/utf8>>, V4)) end end(E39, E40)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Clause"/utf8>>, V4)) end; <<"WithClause"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V71) -> ('Idris.Idris2.Builtin':'un--snd'(V71)) end, V9)) of [E57 | E58] -> (fun (V72, V73) -> case V73 of [E59 | E60] -> (fun (V74, V75) -> case V75 of [E61 | E62] -> (fun (V76, V77) -> case V77 of [E63 | E64] -> (fun (V78, V79) -> case V79 of [E65 | E66] -> (fun (V80, V81) -> case V81 of [E67 | E68] -> (fun (V82, V83) -> case V83 of [] -> begin (V87 = begin (V84 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V72))(V4))), case V84 of {'Idris.Prelude.Types.Left', E69} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V86) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V86, V4)) end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V87 of {'Idris.Prelude.Types.Left', E71} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V89) -> begin (V93 = begin (V90 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V74))(V4))), case V90 of {'Idris.Prelude.Types.Left', E73} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V92) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V92, V4)) end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V93 of {'Idris.Prelude.Types.Left', E75} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V95) -> begin (V99 = begin (V96 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V76))(V4))), case V96 of {'Idris.Prelude.Types.Left', E77} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V98) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V98, V4)) end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V99 of {'Idris.Prelude.Types.Left', E79} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E79)); {'Idris.Prelude.Types.Right', E80} -> (fun (V101) -> begin (V110 = begin (V102 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V78))(V4))), case V102 of {'Idris.Prelude.Types.Left', E81} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V104) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(Maybe $a)'(fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> fun (V109) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V105, V106, V107, V108, V109)) end end end end end, V0, V1, V2, V104, V4)) end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V110 of {'Idris.Prelude.Types.Left', E83} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V112) -> begin (V121 = begin (V113 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V80))(V4))), case V113 of {'Idris.Prelude.Types.Left', E85} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E85)); {'Idris.Prelude.Types.Right', E86} -> (fun (V115) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> fun (V120) -> ('dn--un--reify_Reify_WithFlag'(V116, V117, V118, V119, V120)) end end end end end, V0, V1, V2, V115, V4)) end(E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V121 of {'Idris.Prelude.Types.Left', E87} -> (fun (V122) -> {'Idris.Prelude.Types.Left', V122} end(E87)); {'Idris.Prelude.Types.Right', E88} -> (fun (V123) -> begin (V132 = begin (V124 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V82))(V4))), case V124 of {'Idris.Prelude.Types.Left', E89} -> (fun (V125) -> {'Idris.Prelude.Types.Left', V125} end(E89)); {'Idris.Prelude.Types.Right', E90} -> (fun (V126) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V127) -> fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> ('dn--un--reify_Reify_ImpClause'(V127, V128, V129, V130, V131)) end end end end end, V0, V1, V2, V126, V4)) end(E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V132 of {'Idris.Prelude.Types.Left', E91} -> (fun (V133) -> {'Idris.Prelude.Types.Left', V133} end(E91)); {'Idris.Prelude.Types.Right', E92} -> (fun (V134) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.WithClause', V89, V95, V101, V112, V123, V134}} end(E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E80)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Clause"/utf8>>, V4)) end end(E67, E68)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Clause"/utf8>>, V4)) end end(E65, E66)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Clause"/utf8>>, V4)) end end(E63, E64)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Clause"/utf8>>, V4)) end end(E61, E62)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Clause"/utf8>>, V4)) end end(E59, E60)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Clause"/utf8>>, V4)) end end(E57, E58)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Clause"/utf8>>, V4)) end; <<"ImpossibleClause"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V135) -> ('Idris.Idris2.Builtin':'un--snd'(V135)) end, V9)) of [E93 | E94] -> (fun (V136, V137) -> case V137 of [E95 | E96] -> (fun (V138, V139) -> case V139 of [] -> begin (V143 = begin (V140 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V136))(V4))), case V140 of {'Idris.Prelude.Types.Left', E97} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V142) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V142, V4)) end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V143 of {'Idris.Prelude.Types.Left', E99} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V145) -> begin (V149 = begin (V146 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V138))(V4))), case V146 of {'Idris.Prelude.Types.Left', E101} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V148) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V148, V4)) end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V149 of {'Idris.Prelude.Types.Left', E103} -> (fun (V150) -> {'Idris.Prelude.Types.Left', V150} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V151) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ImpossibleClause', V145, V151}} end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Clause"/utf8>>, V4)) end end(E95, E96)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Clause"/utf8>>, V4)) end end(E93, E94)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Clause"/utf8>>, V4)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Clause"/utf8>>, V4)) end end(E38)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Clause"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"Clause"/utf8>>, V4)) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"Clause"/utf8>>, V4)) end.
'dn--un--reify_Reify_IFieldUpdate'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V40 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V40 of {'Idris.Prelude.Types.Left', E35} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V42) -> begin (V43 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V42)) of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of {'Idris.Core.Name.Basic', E38} -> (fun (V45) -> case V45 of <<"ISetField"/utf8>> -> case V9 of [E39 | E40] -> (fun (V46, V47) -> case V46 of {'Idris.Builtin.MkPair', E41, E42} -> (fun (V48, V49) -> case V47 of [E43 | E44] -> (fun (V50, V51) -> case V50 of {'Idris.Builtin.MkPair', E45, E46} -> (fun (V52, V53) -> case V51 of [] -> begin (V61 = begin (V54 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V49))(V4))), case V54 of {'Idris.Prelude.Types.Left', E47} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V56) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V57, V58, V59, V60)) end end end end, V0, V1, V2, V56, V4)) end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V61 of {'Idris.Prelude.Types.Left', E49} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V63) -> begin (V67 = begin (V64 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V53))(V4))), case V64 of {'Idris.Prelude.Types.Left', E51} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V66) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V66, V4)) end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V67 of {'Idris.Prelude.Types.Left', E53} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V69) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetField', V63, V69}} end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IFieldUpdate"/utf8>>, V4)) end end(E45, E46)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IFieldUpdate"/utf8>>, V4)) end end(E43, E44)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IFieldUpdate"/utf8>>, V4)) end end(E41, E42)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IFieldUpdate"/utf8>>, V4)) end end(E39, E40)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IFieldUpdate"/utf8>>, V4)) end; <<"ISetFieldApp"/utf8>> -> case V9 of [E55 | E56] -> (fun (V70, V71) -> case V70 of {'Idris.Builtin.MkPair', E57, E58} -> (fun (V72, V73) -> case V71 of [E59 | E60] -> (fun (V74, V75) -> case V74 of {'Idris.Builtin.MkPair', E61, E62} -> (fun (V76, V77) -> case V75 of [] -> begin (V85 = begin (V78 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V73))(V4))), case V78 of {'Idris.Prelude.Types.Left', E63} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V80) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_String'(V81, V82, V83, V84)) end end end end, V0, V1, V2, V80, V4)) end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V85 of {'Idris.Prelude.Types.Left', E65} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V87) -> begin (V91 = begin (V88 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V77))(V4))), case V88 of {'Idris.Prelude.Types.Left', E67} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V90) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V90, V4)) end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V91 of {'Idris.Prelude.Types.Left', E69} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V93) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetFieldApp', V87, V93}} end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IFieldUpdate"/utf8>>, V4)) end end(E61, E62)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IFieldUpdate"/utf8>>, V4)) end end(E59, E60)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IFieldUpdate"/utf8>>, V4)) end end(E57, E58)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IFieldUpdate"/utf8>>, V4)) end end(E55, E56)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IFieldUpdate"/utf8>>, V4)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IFieldUpdate"/utf8>>, V4)) end end(E38)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IFieldUpdate"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IFieldUpdate"/utf8>>, V4)) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"IFieldUpdate"/utf8>>, V4)) end.
'dn--un--reify_Reify_IField'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V40 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V40 of {'Idris.Prelude.Types.Left', E35} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V42) -> begin (V43 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V42)) of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of {'Idris.Core.Name.Basic', E38} -> (fun (V45) -> case V45 of <<"MkIField"/utf8>> -> case ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V46) -> ('Idris.Idris2.Builtin':'un--snd'(V46)) end, V9)) of [E39 | E40] -> (fun (V47, V48) -> case V48 of [E41 | E42] -> (fun (V49, V50) -> case V50 of [E43 | E44] -> (fun (V51, V52) -> case V52 of [E45 | E46] -> (fun (V53, V54) -> case V54 of [E47 | E48] -> (fun (V55, V56) -> case V56 of [] -> begin (V60 = begin (V57 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V47))(V4))), case V57 of {'Idris.Prelude.Types.Left', E49} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V59) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_FC'(V0, V1, V2, V59, V4)) end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V60 of {'Idris.Prelude.Types.Left', E51} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V62) -> begin (V66 = begin (V63 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V49))(V4))), case V63 of {'Idris.Prelude.Types.Left', E53} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V65) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V0, V1, V2, V65, V4)) end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V66 of {'Idris.Prelude.Types.Left', E55} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V68) -> begin (V77 = begin (V69 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V51))(V4))), case V69 of {'Idris.Prelude.Types.Left', E57} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V71) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(PiInfo $t)'(fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> ('dn--un--reify_Reify_RawImp'(V72, V73, V74, V75, V76)) end end end end end, V0, V1, V2, V71, V4)) end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V77 of {'Idris.Prelude.Types.Left', E59} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V79) -> begin (V83 = begin (V80 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V53))(V4))), case V80 of {'Idris.Prelude.Types.Left', E61} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V82) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V0, V1, V2, V82, V4)) end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V83 of {'Idris.Prelude.Types.Left', E63} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V85) -> begin (V89 = begin (V86 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V55))(V4))), case V86 of {'Idris.Prelude.Types.Left', E65} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V88) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V88, V4)) end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V89 of {'Idris.Prelude.Types.Left', E67} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V91) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkIField', V62, V68, V79, V85, V91}} end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IField"/utf8>>, V4)) end end(E47, E48)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IField"/utf8>>, V4)) end end(E45, E46)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IField"/utf8>>, V4)) end end(E43, E44)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IField"/utf8>>, V4)) end end(E41, E42)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IField"/utf8>>, V4)) end end(E39, E40)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IField"/utf8>>, V4)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IField"/utf8>>, V4)) end end(E38)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IField"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"IField"/utf8>>, V4)) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"IField"/utf8>>, V4)) end.
'dn--un--reify_Reify_FnOpt'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V40 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V40 of {'Idris.Prelude.Types.Left', E35} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V42) -> begin (V43 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V42)) of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of {'Idris.Core.Name.Basic', E38} -> (fun (V45) -> case V45 of <<"Inline"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Inline'}}; <<"TCInline"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.TCInline'}}; <<"Hint"/utf8>> -> case V9 of [E39 | E40] -> (fun (V46, V47) -> case V46 of {'Idris.Builtin.MkPair', E41, E42} -> (fun (V48, V49) -> case V47 of [] -> begin (V53 = begin (V50 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V49))(V4))), case V50 of {'Idris.Prelude.Types.Left', E43} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V52) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Bool'(V0, V1, V2, V52, V4)) end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V53 of {'Idris.Prelude.Types.Left', E45} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V55) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Hint', V55}} end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"FnOpt"/utf8>>, V4)) end end(E41, E42)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"FnOpt"/utf8>>, V4)) end end(E39, E40)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"FnOpt"/utf8>>, V4)) end; <<"GlobalHint"/utf8>> -> case V9 of [E47 | E48] -> (fun (V56, V57) -> case V56 of {'Idris.Builtin.MkPair', E49, E50} -> (fun (V58, V59) -> case V57 of [] -> begin (V63 = begin (V60 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V59))(V4))), case V60 of {'Idris.Prelude.Types.Left', E51} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V62) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Bool'(V0, V1, V2, V62, V4)) end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V63 of {'Idris.Prelude.Types.Left', E53} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V65) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.GlobalHint', V65}} end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"FnOpt"/utf8>>, V4)) end end(E49, E50)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"FnOpt"/utf8>>, V4)) end end(E47, E48)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"FnOpt"/utf8>>, V4)) end; <<"ExternFn"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ExternFn'}}; <<"ForeignFn"/utf8>> -> case V9 of [E55 | E56] -> (fun (V66, V67) -> case V66 of {'Idris.Builtin.MkPair', E57, E58} -> (fun (V68, V69) -> case V67 of [] -> begin (V78 = begin (V70 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V69))(V4))), case V70 of {'Idris.Prelude.Types.Left', E59} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V72) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> ('dn--un--reify_Reify_RawImp'(V73, V74, V75, V76, V77)) end end end end end, V0, V1, V2, V72, V4)) end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V78 of {'Idris.Prelude.Types.Left', E61} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V80) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ForeignFn', V80}} end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"FnOpt"/utf8>>, V4)) end end(E57, E58)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"FnOpt"/utf8>>, V4)) end end(E55, E56)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"FnOpt"/utf8>>, V4)) end; <<"Invertible"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Invertible'}}; <<"Totality"/utf8>> -> case V9 of [E63 | E64] -> (fun (V81, V82) -> case V81 of {'Idris.Builtin.MkPair', E65, E66} -> (fun (V83, V84) -> case V82 of [] -> begin (V88 = begin (V85 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V84))(V4))), case V85 of {'Idris.Prelude.Types.Left', E67} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V87) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_TotalReq'(V0, V1, V2, V87, V4)) end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V88 of {'Idris.Prelude.Types.Left', E69} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V90) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Totality', V90}} end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"FnOpt"/utf8>>, V4)) end end(E65, E66)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"FnOpt"/utf8>>, V4)) end end(E63, E64)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"FnOpt"/utf8>>, V4)) end; <<"Macro"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Macro'}}; <<"SpecArgs"/utf8>> -> case V9 of [E71 | E72] -> (fun (V91, V92) -> case V91 of {'Idris.Builtin.MkPair', E73, E74} -> (fun (V93, V94) -> case V92 of [] -> begin (V103 = begin (V95 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V94))(V4))), case V95 of {'Idris.Prelude.Types.Left', E75} -> (fun (V96) -> {'Idris.Prelude.Types.Left', V96} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V97) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> fun (V102) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V98, V99, V100, V101, V102)) end end end end end, V0, V1, V2, V97, V4)) end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V103 of {'Idris.Prelude.Types.Left', E77} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V105) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.SpecArgs', V105}} end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"FnOpt"/utf8>>, V4)) end end(E73, E74)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"FnOpt"/utf8>>, V4)) end end(E71, E72)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"FnOpt"/utf8>>, V4)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"FnOpt"/utf8>>, V4)) end end(E38)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"FnOpt"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"FnOpt"/utf8>>, V4)) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"FnOpt"/utf8>>, V4)) end.
'dn--un--reify_Reify_DotReason'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V40 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V40 of {'Idris.Prelude.Types.Left', E35} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V42) -> begin (V43 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V42)) of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of {'Idris.Core.Name.Basic', E38} -> (fun (V45) -> case V45 of <<"NonLinearVar"/utf8>> -> {'Idris.Prelude.Types.Right', 0}; <<"VarApplied"/utf8>> -> {'Idris.Prelude.Types.Right', 1}; <<"NotConstructor"/utf8>> -> {'Idris.Prelude.Types.Right', 2}; <<"ErasedArg"/utf8>> -> {'Idris.Prelude.Types.Right', 3}; <<"UserDotted"/utf8>> -> {'Idris.Prelude.Types.Right', 4}; <<"UnknownDot"/utf8>> -> {'Idris.Prelude.Types.Right', 5}; <<"UnderAppliedCon"/utf8>> -> {'Idris.Prelude.Types.Right', 6}; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"DotReason"/utf8>>, V4)) end end(E38)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"DotReason"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"DotReason"/utf8>>, V4)) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"DotReason"/utf8>>, V4)) end.
'dn--un--reify_Reify_DataOpt'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V40 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V40 of {'Idris.Prelude.Types.Left', E35} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V42) -> begin (V43 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V42)) of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of {'Idris.Core.Name.Basic', E38} -> (fun (V45) -> case V45 of <<"SearchBy"/utf8>> -> case V9 of [E39 | E40] -> (fun (V46, V47) -> case V46 of {'Idris.Builtin.MkPair', E41, E42} -> (fun (V48, V49) -> case V47 of [] -> begin (V58 = begin (V50 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V49))(V4))), case V50 of {'Idris.Prelude.Types.Left', E43} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V52) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_(List $a)'(fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_Name'(V53, V54, V55, V56, V57)) end end end end end, V0, V1, V2, V52, V4)) end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V58 of {'Idris.Prelude.Types.Left', E45} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V60) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.SearchBy', V60}} end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"DataOpt"/utf8>>, V4)) end end(E41, E42)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"DataOpt"/utf8>>, V4)) end end(E39, E40)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"DataOpt"/utf8>>, V4)) end; <<"NoHints"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.NoHints'}}; <<"UniqueSearch"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.UniqueSearch'}}; <<"External"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.External'}}; <<"NoNewtype"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.NoNewtype'}}; <<"NoEnum"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.NoEnum'}}; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"DataOpt"/utf8>>, V4)) end end(E38)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"DataOpt"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"DataOpt"/utf8>>, V4)) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"DataOpt"/utf8>>, V4)) end.
'dn--un--reify_Reify_BindMode'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V40 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V40 of {'Idris.Prelude.Types.Left', E35} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V42) -> begin (V43 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V42)) of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of {'Idris.Core.Name.Basic', E38} -> (fun (V45) -> case V45 of <<"PI"/utf8>> -> case V9 of [E39 | E40] -> (fun (V46, V47) -> case V46 of {'Idris.Builtin.MkPair', E41, E42} -> (fun (V48, V49) -> case V47 of [] -> begin (V53 = begin (V50 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V49))(V4))), case V50 of {'Idris.Prelude.Types.Left', E43} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V52) -> ('Idris.Idris2.Core.Reflect':'dn--un--reify_Reify_RigCount'(V0, V1, V2, V52, V4)) end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V53 of {'Idris.Prelude.Types.Left', E45} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V55) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PI', V55}} end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"BindMode"/utf8>>, V4)) end end(E41, E42)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"BindMode"/utf8>>, V4)) end end(E39, E40)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"BindMode"/utf8>>, V4)) end; <<"PATTERN"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PATTERN'}}; <<"NONE"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.NONE'}}; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"BindMode"/utf8>>, V4)) end end(E38)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"BindMode"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"BindMode"/utf8>>, V4)) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"BindMode"/utf8>>, V4)) end.
'dn--un--reify_Reify_AltType'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NDCon', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> begin (V40 = ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(case V2 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V10 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V4))), case V40 of {'Idris.Prelude.Types.Left', E35} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V42) -> begin (V43 = {'Idris.Core.Value.NDCon', V5, V6, V7, V8, V9}), case ('Idris.Idris2.Core.Name':'un--dropAllNS'(V42)) of {'Idris.Core.Name.UN', E37} -> (fun (V44) -> case V44 of {'Idris.Core.Name.Basic', E38} -> (fun (V45) -> case V45 of <<"FirstSuccess"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.FirstSuccess'}}; <<"Unique"/utf8>> -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Unique'}}; <<"UniqueDefault"/utf8>> -> case V9 of [E39 | E40] -> (fun (V46, V47) -> case V46 of {'Idris.Builtin.MkPair', E41, E42} -> (fun (V48, V49) -> case V47 of [] -> begin (V53 = begin (V50 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, V1, V2, V49))(V4))), case V50 of {'Idris.Prelude.Types.Left', E43} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V52) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V52, V4)) end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V53 of {'Idris.Prelude.Types.Left', E45} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V55) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.UniqueDefault', V55}} end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"AltType"/utf8>>, V4)) end end(E41, E42)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"AltType"/utf8>>, V4)) end end(E39, E40)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"AltType"/utf8>>, V4)) end; _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"AltType"/utf8>>, V4)) end end(E38)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"AltType"/utf8>>, V4)) end end(E37)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V43, <<"AltType"/utf8>>, V4)) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('Idris.Idris2.Core.Reflect':'un--cantReify'(V3, <<"AltType"/utf8>>, V4)) end.
'dn--un--reflect_Reflect_WithFlag'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of 0 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Syntactic"/utf8>>)), V6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_UseSide'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of 0 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UseLeft"/utf8>>)), V6)); 1 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UseRight"/utf8>>)), V6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.TTImp.TTImp.IVar', E32, E33} -> (fun (V6, V7) -> fun (V8) -> begin (V9 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V6))(V8))), case V9 of {'Idris.Prelude.Types.Left', E34} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V11) -> begin (V12 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V7, V8))), case V12 of {'Idris.Prelude.Types.Left', E36} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V14) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IVar"/utf8>>)), [V11 | [V14 | []]], V8)) end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E32, E33)); {'Idris.TTImp.TTImp.IPi', E38, E39, E40, E41, E42, E43} -> (fun (V15, V16, V17, V18, V19, V20) -> fun (V21) -> begin (V22 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V15))(V21))), case V22 of {'Idris.Prelude.Types.Left', E44} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V24) -> begin (V25 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V0, V1, V2, V3, V4, V16))(V21))), case V25 of {'Idris.Prelude.Types.Left', E46} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V27) -> begin (V34 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(PiInfo $t)'(fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> ('dn--un--reflect_Reflect_RawImp'(V28, V29, V30, V31, V32, V33)) end end end end end end, V0, V1, V2, V3, V4, V17, V21))), case V34 of {'Idris.Prelude.Types.Left', E48} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V36) -> begin (V44 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(Maybe $a)'(fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V37, V38, V39, V40, V41, V42, V43)) end end end end end end end, V0, V1, V2, V3, V4, V18, V21))), case V44 of {'Idris.Prelude.Types.Left', E50} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V46) -> begin (V47 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V19))(V21))), case V47 of {'Idris.Prelude.Types.Left', E52} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V49) -> begin (V50 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V20))(V21))), case V50 of {'Idris.Prelude.Types.Left', E54} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V52) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IPi"/utf8>>)), [V24 | [V27 | [V36 | [V46 | [V49 | [V52 | []]]]]]], V21)) end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E38, E39, E40, E41, E42, E43)); {'Idris.TTImp.TTImp.ILam', E56, E57, E58, E59, E60, E61} -> (fun (V53, V54, V55, V56, V57, V58) -> fun (V59) -> begin (V60 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V53))(V59))), case V60 of {'Idris.Prelude.Types.Left', E62} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V62) -> begin (V63 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V0, V1, V2, V3, V4, V54))(V59))), case V63 of {'Idris.Prelude.Types.Left', E64} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V65) -> begin (V72 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(PiInfo $t)'(fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> fun (V71) -> ('dn--un--reflect_Reflect_RawImp'(V66, V67, V68, V69, V70, V71)) end end end end end end, V0, V1, V2, V3, V4, V55, V59))), case V72 of {'Idris.Prelude.Types.Left', E66} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V74) -> begin (V82 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(Maybe $a)'(fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V75, V76, V77, V78, V79, V80, V81)) end end end end end end end, V0, V1, V2, V3, V4, V56, V59))), case V82 of {'Idris.Prelude.Types.Left', E68} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V84) -> begin (V85 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V57))(V59))), case V85 of {'Idris.Prelude.Types.Left', E70} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V87) -> begin (V88 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V58))(V59))), case V88 of {'Idris.Prelude.Types.Left', E72} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V90) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ILam"/utf8>>)), [V62 | [V65 | [V74 | [V84 | [V87 | [V90 | []]]]]]], V59)) end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E56, E57, E58, E59, E60, E61)); {'Idris.TTImp.TTImp.ILet', E74, E75, E76, E77, E78, E79, E80} -> (fun (V91, V92, V93, V94, V95, V96, V97) -> fun (V98) -> begin (V99 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V91))(V98))), case V99 of {'Idris.Prelude.Types.Left', E81} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V101) -> begin (V102 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V92))(V98))), case V102 of {'Idris.Prelude.Types.Left', E83} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V104) -> begin (V105 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V0, V1, V2, V3, V4, V93))(V98))), case V105 of {'Idris.Prelude.Types.Left', E85} -> (fun (V106) -> {'Idris.Prelude.Types.Left', V106} end(E85)); {'Idris.Prelude.Types.Right', E86} -> (fun (V107) -> begin (V108 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V94, V98))), case V108 of {'Idris.Prelude.Types.Left', E87} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E87)); {'Idris.Prelude.Types.Right', E88} -> (fun (V110) -> begin (V111 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V95))(V98))), case V111 of {'Idris.Prelude.Types.Left', E89} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E89)); {'Idris.Prelude.Types.Right', E90} -> (fun (V113) -> begin (V114 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V96))(V98))), case V114 of {'Idris.Prelude.Types.Left', E91} -> (fun (V115) -> {'Idris.Prelude.Types.Left', V115} end(E91)); {'Idris.Prelude.Types.Right', E92} -> (fun (V116) -> begin (V117 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V97))(V98))), case V117 of {'Idris.Prelude.Types.Left', E93} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E93)); {'Idris.Prelude.Types.Right', E94} -> (fun (V119) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ILet"/utf8>>)), [V101 | [V104 | [V107 | [V110 | [V113 | [V116 | [V119 | []]]]]]]], V98)) end(E94)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E74, E75, E76, E77, E78, E79, E80)); {'Idris.TTImp.TTImp.ICase', E95, E96, E97, E98} -> (fun (V120, V121, V122, V123) -> fun (V124) -> begin (V125 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V120))(V124))), case V125 of {'Idris.Prelude.Types.Left', E99} -> (fun (V126) -> {'Idris.Prelude.Types.Left', V126} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V127) -> begin (V128 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V121))(V124))), case V128 of {'Idris.Prelude.Types.Left', E101} -> (fun (V129) -> {'Idris.Prelude.Types.Left', V129} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V130) -> begin (V131 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V122))(V124))), case V131 of {'Idris.Prelude.Types.Left', E103} -> (fun (V132) -> {'Idris.Prelude.Types.Left', V132} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V133) -> begin (V141 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V134) -> fun (V135) -> fun (V136) -> fun (V137) -> fun (V138) -> fun (V139) -> fun (V140) -> ('dn--un--reflect_Reflect_ImpClause'(V134, V135, V136, V137, V138, V139, V140)) end end end end end end end, V0, V1, V2, V3, V4, V123, V124))), case V141 of {'Idris.Prelude.Types.Left', E105} -> (fun (V142) -> {'Idris.Prelude.Types.Left', V142} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V143) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ICase"/utf8>>)), [V127 | [V130 | [V133 | [V143 | []]]]], V124)) end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E95, E96, E97, E98)); {'Idris.TTImp.TTImp.ILocal', E107, E108, E109} -> (fun (V144, V145, V146) -> fun (V147) -> begin (V148 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V144))(V147))), case V148 of {'Idris.Prelude.Types.Left', E110} -> (fun (V149) -> {'Idris.Prelude.Types.Left', V149} end(E110)); {'Idris.Prelude.Types.Right', E111} -> (fun (V150) -> begin (V158 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V151) -> fun (V152) -> fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> ('dn--un--reflect_Reflect_ImpDecl'(V151, V152, V153, V154, V155, V156, V157)) end end end end end end end, V0, V1, V2, V3, V4, V145, V147))), case V158 of {'Idris.Prelude.Types.Left', E112} -> (fun (V159) -> {'Idris.Prelude.Types.Left', V159} end(E112)); {'Idris.Prelude.Types.Right', E113} -> (fun (V160) -> begin (V161 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V146))(V147))), case V161 of {'Idris.Prelude.Types.Left', E114} -> (fun (V162) -> {'Idris.Prelude.Types.Left', V162} end(E114)); {'Idris.Prelude.Types.Right', E115} -> (fun (V163) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ILocal"/utf8>>)), [V150 | [V160 | [V163 | []]]], V147)) end(E115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E107, E108, E109)); {'Idris.TTImp.TTImp.ICaseLocal', E116, E117, E118, E119, E120} -> (fun (V164, V165, V166, V167, V168) -> ('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V168)) end(E116, E117, E118, E119, E120)); {'Idris.TTImp.TTImp.IUpdate', E121, E122, E123} -> (fun (V169, V170, V171) -> fun (V172) -> begin (V173 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V169))(V172))), case V173 of {'Idris.Prelude.Types.Left', E124} -> (fun (V174) -> {'Idris.Prelude.Types.Left', V174} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V175) -> begin (V183 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V176) -> fun (V177) -> fun (V178) -> fun (V179) -> fun (V180) -> fun (V181) -> fun (V182) -> ('dn--un--reflect_Reflect_IFieldUpdate'(V176, V177, V178, V179, V180, V181, V182)) end end end end end end end, V0, V1, V2, V3, V4, V170, V172))), case V183 of {'Idris.Prelude.Types.Left', E126} -> (fun (V184) -> {'Idris.Prelude.Types.Left', V184} end(E126)); {'Idris.Prelude.Types.Right', E127} -> (fun (V185) -> begin (V186 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V171))(V172))), case V186 of {'Idris.Prelude.Types.Left', E128} -> (fun (V187) -> {'Idris.Prelude.Types.Left', V187} end(E128)); {'Idris.Prelude.Types.Right', E129} -> (fun (V188) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IUpdate"/utf8>>)), [V175 | [V185 | [V188 | []]]], V172)) end(E129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E121, E122, E123)); {'Idris.TTImp.TTImp.IApp', E130, E131, E132} -> (fun (V189, V190, V191) -> fun (V192) -> begin (V193 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V189))(V192))), case V193 of {'Idris.Prelude.Types.Left', E133} -> (fun (V194) -> {'Idris.Prelude.Types.Left', V194} end(E133)); {'Idris.Prelude.Types.Right', E134} -> (fun (V195) -> begin (V196 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V190))(V192))), case V196 of {'Idris.Prelude.Types.Left', E135} -> (fun (V197) -> {'Idris.Prelude.Types.Left', V197} end(E135)); {'Idris.Prelude.Types.Right', E136} -> (fun (V198) -> begin (V199 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V191))(V192))), case V199 of {'Idris.Prelude.Types.Left', E137} -> (fun (V200) -> {'Idris.Prelude.Types.Left', V200} end(E137)); {'Idris.Prelude.Types.Right', E138} -> (fun (V201) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IApp"/utf8>>)), [V195 | [V198 | [V201 | []]]], V192)) end(E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E136)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E130, E131, E132)); {'Idris.TTImp.TTImp.IAutoApp', E139, E140, E141} -> (fun (V202, V203, V204) -> fun (V205) -> begin (V206 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V202))(V205))), case V206 of {'Idris.Prelude.Types.Left', E142} -> (fun (V207) -> {'Idris.Prelude.Types.Left', V207} end(E142)); {'Idris.Prelude.Types.Right', E143} -> (fun (V208) -> begin (V209 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V203))(V205))), case V209 of {'Idris.Prelude.Types.Left', E144} -> (fun (V210) -> {'Idris.Prelude.Types.Left', V210} end(E144)); {'Idris.Prelude.Types.Right', E145} -> (fun (V211) -> begin (V212 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V204))(V205))), case V212 of {'Idris.Prelude.Types.Left', E146} -> (fun (V213) -> {'Idris.Prelude.Types.Left', V213} end(E146)); {'Idris.Prelude.Types.Right', E147} -> (fun (V214) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IAutoApp"/utf8>>)), [V208 | [V211 | [V214 | []]]], V205)) end(E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E139, E140, E141)); {'Idris.TTImp.TTImp.INamedApp', E148, E149, E150, E151} -> (fun (V215, V216, V217, V218) -> fun (V219) -> begin (V220 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V215))(V219))), case V220 of {'Idris.Prelude.Types.Left', E152} -> (fun (V221) -> {'Idris.Prelude.Types.Left', V221} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V222) -> begin (V223 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V216))(V219))), case V223 of {'Idris.Prelude.Types.Left', E154} -> (fun (V224) -> {'Idris.Prelude.Types.Left', V224} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V225) -> begin (V226 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V217, V219))), case V226 of {'Idris.Prelude.Types.Left', E156} -> (fun (V227) -> {'Idris.Prelude.Types.Left', V227} end(E156)); {'Idris.Prelude.Types.Right', E157} -> (fun (V228) -> begin (V229 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V218))(V219))), case V229 of {'Idris.Prelude.Types.Left', E158} -> (fun (V230) -> {'Idris.Prelude.Types.Left', V230} end(E158)); {'Idris.Prelude.Types.Right', E159} -> (fun (V231) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"INamedApp"/utf8>>)), [V222 | [V225 | [V228 | [V231 | []]]]], V219)) end(E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E148, E149, E150, E151)); {'Idris.TTImp.TTImp.IWithApp', E160, E161, E162} -> (fun (V232, V233, V234) -> fun (V235) -> begin (V236 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V232))(V235))), case V236 of {'Idris.Prelude.Types.Left', E163} -> (fun (V237) -> {'Idris.Prelude.Types.Left', V237} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V238) -> begin (V239 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V233))(V235))), case V239 of {'Idris.Prelude.Types.Left', E165} -> (fun (V240) -> {'Idris.Prelude.Types.Left', V240} end(E165)); {'Idris.Prelude.Types.Right', E166} -> (fun (V241) -> begin (V242 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V234))(V235))), case V242 of {'Idris.Prelude.Types.Left', E167} -> (fun (V243) -> {'Idris.Prelude.Types.Left', V243} end(E167)); {'Idris.Prelude.Types.Right', E168} -> (fun (V244) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IWithApp"/utf8>>)), [V238 | [V241 | [V244 | []]]], V235)) end(E168)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E160, E161, E162)); {'Idris.TTImp.TTImp.ISearch', E169, E170} -> (fun (V245, V246) -> fun (V247) -> begin (V248 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V245))(V247))), case V248 of {'Idris.Prelude.Types.Left', E171} -> (fun (V249) -> {'Idris.Prelude.Types.Left', V249} end(E171)); {'Idris.Prelude.Types.Right', E172} -> (fun (V250) -> begin (V251 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Nat'(V0, V1, V2, V3, V4, V246))(V247))), case V251 of {'Idris.Prelude.Types.Left', E173} -> (fun (V252) -> {'Idris.Prelude.Types.Left', V252} end(E173)); {'Idris.Prelude.Types.Right', E174} -> (fun (V253) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ISearch"/utf8>>)), [V250 | [V253 | []]], V247)) end(E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E172)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E169, E170)); {'Idris.TTImp.TTImp.IAlternative', E175, E176, E177} -> (fun (V254, V255, V256) -> fun (V257) -> begin (V258 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V254))(V257))), case V258 of {'Idris.Prelude.Types.Left', E178} -> (fun (V259) -> {'Idris.Prelude.Types.Left', V259} end(E178)); {'Idris.Prelude.Types.Right', E179} -> (fun (V260) -> begin (V261 = ('dn--un--reflect_Reflect_AltType'(V0, V1, V2, V3, V4, V255, V257))), case V261 of {'Idris.Prelude.Types.Left', E180} -> (fun (V262) -> {'Idris.Prelude.Types.Left', V262} end(E180)); {'Idris.Prelude.Types.Right', E181} -> (fun (V263) -> begin (V270 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V264) -> fun (V265) -> fun (V266) -> fun (V267) -> fun (V268) -> fun (V269) -> ('dn--un--reflect_Reflect_RawImp'(V264, V265, V266, V267, V268, V269)) end end end end end end, V0, V1, V2, V3, V4, V256, V257))), case V270 of {'Idris.Prelude.Types.Left', E182} -> (fun (V271) -> {'Idris.Prelude.Types.Left', V271} end(E182)); {'Idris.Prelude.Types.Right', E183} -> (fun (V272) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IAlternative"/utf8>>)), [V260 | [V263 | [V272 | []]]], V257)) end(E183)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E181)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E179)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E175, E176, E177)); {'Idris.TTImp.TTImp.IRewrite', E184, E185, E186} -> (fun (V273, V274, V275) -> fun (V276) -> begin (V277 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V273))(V276))), case V277 of {'Idris.Prelude.Types.Left', E187} -> (fun (V278) -> {'Idris.Prelude.Types.Left', V278} end(E187)); {'Idris.Prelude.Types.Right', E188} -> (fun (V279) -> begin (V280 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V274))(V276))), case V280 of {'Idris.Prelude.Types.Left', E189} -> (fun (V281) -> {'Idris.Prelude.Types.Left', V281} end(E189)); {'Idris.Prelude.Types.Right', E190} -> (fun (V282) -> begin (V283 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V275))(V276))), case V283 of {'Idris.Prelude.Types.Left', E191} -> (fun (V284) -> {'Idris.Prelude.Types.Left', V284} end(E191)); {'Idris.Prelude.Types.Right', E192} -> (fun (V285) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IRewrite"/utf8>>)), [V279 | [V282 | [V285 | []]]], V276)) end(E192)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E188)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E184, E185, E186)); {'Idris.TTImp.TTImp.ICoerced', E193, E194} -> (fun (V286, V287) -> ('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V287)) end(E193, E194)); {'Idris.TTImp.TTImp.IBindHere', E195, E196, E197} -> (fun (V288, V289, V290) -> fun (V291) -> begin (V292 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V288))(V291))), case V292 of {'Idris.Prelude.Types.Left', E198} -> (fun (V293) -> {'Idris.Prelude.Types.Left', V293} end(E198)); {'Idris.Prelude.Types.Right', E199} -> (fun (V294) -> begin (V295 = ('dn--un--reflect_Reflect_BindMode'(V0, V1, V2, V3, V4, V289, V291))), case V295 of {'Idris.Prelude.Types.Left', E200} -> (fun (V296) -> {'Idris.Prelude.Types.Left', V296} end(E200)); {'Idris.Prelude.Types.Right', E201} -> (fun (V297) -> begin (V298 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V290))(V291))), case V298 of {'Idris.Prelude.Types.Left', E202} -> (fun (V299) -> {'Idris.Prelude.Types.Left', V299} end(E202)); {'Idris.Prelude.Types.Right', E203} -> (fun (V300) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IBindHere"/utf8>>)), [V294 | [V297 | [V300 | []]]], V291)) end(E203)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E201)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E199)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E195, E196, E197)); {'Idris.TTImp.TTImp.IBindVar', E204, E205} -> (fun (V301, V302) -> fun (V303) -> begin (V304 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V301))(V303))), case V304 of {'Idris.Prelude.Types.Left', E206} -> (fun (V305) -> {'Idris.Prelude.Types.Left', V305} end(E206)); {'Idris.Prelude.Types.Right', E207} -> (fun (V306) -> begin (V307 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V0, V1, V2, V3, V4, V302, V303))), case V307 of {'Idris.Prelude.Types.Left', E208} -> (fun (V308) -> {'Idris.Prelude.Types.Left', V308} end(E208)); {'Idris.Prelude.Types.Right', E209} -> (fun (V309) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IBindVar"/utf8>>)), [V306 | [V309 | []]], V303)) end(E209)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E207)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E204, E205)); {'Idris.TTImp.TTImp.IAs', E210, E211, E212, E213, E214} -> (fun (V310, V311, V312, V313, V314) -> fun (V315) -> begin (V316 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V310))(V315))), case V316 of {'Idris.Prelude.Types.Left', E215} -> (fun (V317) -> {'Idris.Prelude.Types.Left', V317} end(E215)); {'Idris.Prelude.Types.Right', E216} -> (fun (V318) -> begin (V319 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V311))(V315))), case V319 of {'Idris.Prelude.Types.Left', E217} -> (fun (V320) -> {'Idris.Prelude.Types.Left', V320} end(E217)); {'Idris.Prelude.Types.Right', E218} -> (fun (V321) -> begin (V322 = ('dn--un--reflect_Reflect_UseSide'(V0, V1, V2, V3, V4, V312, V315))), case V322 of {'Idris.Prelude.Types.Left', E219} -> (fun (V323) -> {'Idris.Prelude.Types.Left', V323} end(E219)); {'Idris.Prelude.Types.Right', E220} -> (fun (V324) -> begin (V325 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V313, V315))), case V325 of {'Idris.Prelude.Types.Left', E221} -> (fun (V326) -> {'Idris.Prelude.Types.Left', V326} end(E221)); {'Idris.Prelude.Types.Right', E222} -> (fun (V327) -> begin (V328 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V314))(V315))), case V328 of {'Idris.Prelude.Types.Left', E223} -> (fun (V329) -> {'Idris.Prelude.Types.Left', V329} end(E223)); {'Idris.Prelude.Types.Right', E224} -> (fun (V330) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IAs"/utf8>>)), [V318 | [V321 | [V324 | [V327 | [V330 | []]]]]], V315)) end(E224)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E222)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E220)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E210, E211, E212, E213, E214)); {'Idris.TTImp.TTImp.IMustUnify', E225, E226, E227} -> (fun (V331, V332, V333) -> fun (V334) -> begin (V335 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V331))(V334))), case V335 of {'Idris.Prelude.Types.Left', E228} -> (fun (V336) -> {'Idris.Prelude.Types.Left', V336} end(E228)); {'Idris.Prelude.Types.Right', E229} -> (fun (V337) -> begin (V338 = ('dn--un--reflect_Reflect_DotReason'(V0, V1, V2, V3, V4, V332, V334))), case V338 of {'Idris.Prelude.Types.Left', E230} -> (fun (V339) -> {'Idris.Prelude.Types.Left', V339} end(E230)); {'Idris.Prelude.Types.Right', E231} -> (fun (V340) -> begin (V341 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V333))(V334))), case V341 of {'Idris.Prelude.Types.Left', E232} -> (fun (V342) -> {'Idris.Prelude.Types.Left', V342} end(E232)); {'Idris.Prelude.Types.Right', E233} -> (fun (V343) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IMustUnify"/utf8>>)), [V337 | [V340 | [V343 | []]]], V334)) end(E233)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E231)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E229)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E225, E226, E227)); {'Idris.TTImp.TTImp.IDelayed', E234, E235, E236} -> (fun (V344, V345, V346) -> fun (V347) -> begin (V348 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V344))(V347))), case V348 of {'Idris.Prelude.Types.Left', E237} -> (fun (V349) -> {'Idris.Prelude.Types.Left', V349} end(E237)); {'Idris.Prelude.Types.Right', E238} -> (fun (V350) -> begin (V351 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_LazyReason'(V0, V1, V2, V3, V4, V345, V347))), case V351 of {'Idris.Prelude.Types.Left', E239} -> (fun (V352) -> {'Idris.Prelude.Types.Left', V352} end(E239)); {'Idris.Prelude.Types.Right', E240} -> (fun (V353) -> begin (V354 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V346))(V347))), case V354 of {'Idris.Prelude.Types.Left', E241} -> (fun (V355) -> {'Idris.Prelude.Types.Left', V355} end(E241)); {'Idris.Prelude.Types.Right', E242} -> (fun (V356) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IDelayed"/utf8>>)), [V350 | [V353 | [V356 | []]]], V347)) end(E242)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E240)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E238)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E234, E235, E236)); {'Idris.TTImp.TTImp.IDelay', E243, E244} -> (fun (V357, V358) -> fun (V359) -> begin (V360 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V357))(V359))), case V360 of {'Idris.Prelude.Types.Left', E245} -> (fun (V361) -> {'Idris.Prelude.Types.Left', V361} end(E245)); {'Idris.Prelude.Types.Right', E246} -> (fun (V362) -> begin (V363 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V358))(V359))), case V363 of {'Idris.Prelude.Types.Left', E247} -> (fun (V364) -> {'Idris.Prelude.Types.Left', V364} end(E247)); {'Idris.Prelude.Types.Right', E248} -> (fun (V365) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IDelay"/utf8>>)), [V362 | [V365 | []]], V359)) end(E248)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E246)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E243, E244)); {'Idris.TTImp.TTImp.IForce', E249, E250} -> (fun (V366, V367) -> fun (V368) -> begin (V369 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V366))(V368))), case V369 of {'Idris.Prelude.Types.Left', E251} -> (fun (V370) -> {'Idris.Prelude.Types.Left', V370} end(E251)); {'Idris.Prelude.Types.Right', E252} -> (fun (V371) -> begin (V372 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V367))(V368))), case V372 of {'Idris.Prelude.Types.Left', E253} -> (fun (V373) -> {'Idris.Prelude.Types.Left', V373} end(E253)); {'Idris.Prelude.Types.Right', E254} -> (fun (V374) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IForce"/utf8>>)), [V371 | [V374 | []]], V368)) end(E254)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E252)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E249, E250)); {'Idris.TTImp.TTImp.IQuote', E255, E256} -> (fun (V375, V376) -> fun (V377) -> begin (V378 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V375))(V377))), case V378 of {'Idris.Prelude.Types.Left', E257} -> (fun (V379) -> {'Idris.Prelude.Types.Left', V379} end(E257)); {'Idris.Prelude.Types.Right', E258} -> (fun (V380) -> begin (V381 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V376))(V377))), case V381 of {'Idris.Prelude.Types.Left', E259} -> (fun (V382) -> {'Idris.Prelude.Types.Left', V382} end(E259)); {'Idris.Prelude.Types.Right', E260} -> (fun (V383) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IQuote"/utf8>>)), [V380 | [V383 | []]], V377)) end(E260)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E258)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E255, E256)); {'Idris.TTImp.TTImp.IQuoteName', E261, E262} -> (fun (V384, V385) -> fun (V386) -> begin (V387 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V384))(V386))), case V387 of {'Idris.Prelude.Types.Left', E263} -> (fun (V388) -> {'Idris.Prelude.Types.Left', V388} end(E263)); {'Idris.Prelude.Types.Right', E264} -> (fun (V389) -> begin (V390 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V385, V386))), case V390 of {'Idris.Prelude.Types.Left', E265} -> (fun (V391) -> {'Idris.Prelude.Types.Left', V391} end(E265)); {'Idris.Prelude.Types.Right', E266} -> (fun (V392) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IQuoteName"/utf8>>)), [V389 | [V392 | []]], V386)) end(E266)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E264)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E261, E262)); {'Idris.TTImp.TTImp.IQuoteDecl', E267, E268} -> (fun (V393, V394) -> fun (V395) -> begin (V396 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V393))(V395))), case V396 of {'Idris.Prelude.Types.Left', E269} -> (fun (V397) -> {'Idris.Prelude.Types.Left', V397} end(E269)); {'Idris.Prelude.Types.Right', E270} -> (fun (V398) -> begin (V406 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V399) -> fun (V400) -> fun (V401) -> fun (V402) -> fun (V403) -> fun (V404) -> fun (V405) -> ('dn--un--reflect_Reflect_ImpDecl'(V399, V400, V401, V402, V403, V404, V405)) end end end end end end end, V0, V1, V2, V3, V4, V394, V395))), case V406 of {'Idris.Prelude.Types.Left', E271} -> (fun (V407) -> {'Idris.Prelude.Types.Left', V407} end(E271)); {'Idris.Prelude.Types.Right', E272} -> (fun (V408) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IQuoteDecl"/utf8>>)), [V398 | [V408 | []]], V395)) end(E272)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E270)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E267, E268)); {'Idris.TTImp.TTImp.IUnquote', E273, E274} -> (fun (V409, V410) -> fun (V411) -> case V410 of {'Idris.TTImp.TTImp.IVar', E275, E276} -> (fun (V412, V413) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Ref', V409, {'Idris.Core.TT.Bound'}, V413}} end(E275, E276)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', <<"Can\x{27}t reflect an unquote: escapes should be lifted out"/utf8>>}, V411)) end end end(E273, E274)); {'Idris.TTImp.TTImp.IRunElab', E277, E278} -> (fun (V414, V415) -> fun (V416) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', <<"Can\x{27}t reflect a %runelab"/utf8>>}, V416)) end end(E277, E278)); {'Idris.TTImp.TTImp.IPrimVal', E279, E280} -> (fun (V417, V418) -> fun (V419) -> begin (V420 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V417))(V419))), case V420 of {'Idris.Prelude.Types.Left', E281} -> (fun (V421) -> {'Idris.Prelude.Types.Left', V421} end(E281)); {'Idris.Prelude.Types.Right', E282} -> (fun (V422) -> begin (V423 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Constant'(V0, V1, V2, V3, V4, V418, V419))), case V423 of {'Idris.Prelude.Types.Left', E283} -> (fun (V424) -> {'Idris.Prelude.Types.Left', V424} end(E283)); {'Idris.Prelude.Types.Right', E284} -> (fun (V425) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IPrimVal"/utf8>>)), [V422 | [V425 | []]], V419)) end(E284)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E282)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E279, E280)); {'Idris.TTImp.TTImp.IType', E285} -> (fun (V426) -> fun (V427) -> begin (V428 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V426))(V427))), case V428 of {'Idris.Prelude.Types.Left', E286} -> (fun (V429) -> {'Idris.Prelude.Types.Left', V429} end(E286)); {'Idris.Prelude.Types.Right', E287} -> (fun (V430) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IType"/utf8>>)), [V430 | []], V427)) end(E287)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E285)); {'Idris.TTImp.TTImp.IHole', E288, E289} -> (fun (V431, V432) -> fun (V433) -> begin (V434 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V431))(V433))), case V434 of {'Idris.Prelude.Types.Left', E290} -> (fun (V435) -> {'Idris.Prelude.Types.Left', V435} end(E290)); {'Idris.Prelude.Types.Right', E291} -> (fun (V436) -> begin (V437 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V0, V1, V2, V3, V4, V432, V433))), case V437 of {'Idris.Prelude.Types.Left', E292} -> (fun (V438) -> {'Idris.Prelude.Types.Left', V438} end(E292)); {'Idris.Prelude.Types.Right', E293} -> (fun (V439) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IHole"/utf8>>)), [V436 | [V439 | []]], V433)) end(E293)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E291)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E288, E289)); {'Idris.TTImp.TTImp.IUnifyLog', E294, E295, E296} -> (fun (V440, V441, V442) -> ('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V442)) end(E294, E295, E296)); _ -> case V3 of 1 -> fun (V443) -> case V5 of {'Idris.TTImp.TTImp.Implicit', E30, E31} -> (fun (V444, V445) -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Erased', V1, 0}} end(E30, E31)); _ -> case V5 of {'Idris.TTImp.TTImp.Implicit', E15, E16} -> (fun (V446, V447) -> begin (V448 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V446))(V443))), case V448 of {'Idris.Prelude.Types.Left', E17} -> (fun (V449) -> {'Idris.Prelude.Types.Left', V449} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V450) -> begin (V451 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Bool'(V0, V1, V2, V3, V4, V447, V443))), case V451 of {'Idris.Prelude.Types.Left', E19} -> (fun (V452) -> {'Idris.Prelude.Types.Left', V452} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V453) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Implicit"/utf8>>)), [V450 | [V453 | []]], V443)) end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15, E16)); {'Idris.TTImp.TTImp.IWithUnambigNames', E21, E22, E23} -> (fun (V454, V455, V456) -> begin (V457 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V454))(V443))), case V457 of {'Idris.Prelude.Types.Left', E24} -> (fun (V458) -> {'Idris.Prelude.Types.Left', V458} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V459) -> begin (V467 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V460) -> fun (V461) -> fun (V462) -> fun (V463) -> fun (V464) -> fun (V465) -> fun (V466) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V460, V461, V462, V463, V464, V465, V466)) end end end end end end end, V0, V1, V2, V3, V4, V455, V443))), case V467 of {'Idris.Prelude.Types.Left', E26} -> (fun (V468) -> {'Idris.Prelude.Types.Left', V468} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V469) -> begin (V470 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V456))(V443))), case V470 of {'Idris.Prelude.Types.Left', E28} -> (fun (V471) -> {'Idris.Prelude.Types.Left', V471} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V472) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"WithUnambigNames"/utf8>>)), [V459 | [V469 | [V472 | []]]], V443)) end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> fun (V473) -> case V5 of {'Idris.TTImp.TTImp.Implicit', E0, E1} -> (fun (V474, V475) -> begin (V476 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V474))(V473))), case V476 of {'Idris.Prelude.Types.Left', E2} -> (fun (V477) -> {'Idris.Prelude.Types.Left', V477} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V478) -> begin (V479 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Bool'(V0, V1, V2, V3, V4, V475, V473))), case V479 of {'Idris.Prelude.Types.Left', E4} -> (fun (V480) -> {'Idris.Prelude.Types.Left', V480} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V481) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Implicit"/utf8>>)), [V478 | [V481 | []]], V473)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); {'Idris.TTImp.TTImp.IWithUnambigNames', E6, E7, E8} -> (fun (V482, V483, V484) -> begin (V485 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V482))(V473))), case V485 of {'Idris.Prelude.Types.Left', E9} -> (fun (V486) -> {'Idris.Prelude.Types.Left', V486} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V487) -> begin (V495 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V488) -> fun (V489) -> fun (V490) -> fun (V491) -> fun (V492) -> fun (V493) -> fun (V494) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V488, V489, V490, V491, V492, V493, V494)) end end end end end end end, V0, V1, V2, V3, V4, V483, V473))), case V495 of {'Idris.Prelude.Types.Left', E11} -> (fun (V496) -> {'Idris.Prelude.Types.Left', V496} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V497) -> begin (V498 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V484))(V473))), case V498 of {'Idris.Prelude.Types.Left', E13} -> (fun (V499) -> {'Idris.Prelude.Types.Left', V499} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V500) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"WithUnambigNames"/utf8>>)), [V487 | [V497 | [V500 | []]]], V473)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'dn--un--reflect_Reflect_ImpTy'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.MkImpTy', E0, E1, E2, E3} -> (fun (V7, V8, V9, V10) -> begin (V11 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V7))(V6))), case V11 of {'Idris.Prelude.Types.Left', E4} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V13) -> begin (V14 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V8))(V6))), case V14 of {'Idris.Prelude.Types.Left', E6} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V16) -> begin (V17 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V9, V6))), case V17 of {'Idris.Prelude.Types.Left', E8} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V19) -> begin (V20 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V10))(V6))), case V20 of {'Idris.Prelude.Types.Left', E10} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V22) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkTy"/utf8>>)), [V13 | [V16 | [V19 | [V22 | []]]]], V6)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_ImpRecord'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.MkImpRecord', E0, E1, E2, E3, E4} -> (fun (V7, V8, V9, V10, V11) -> begin (V12 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V7))(V6))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V8, V6))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V71 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V25, V26, V27, V28, V29, V30, V31)) end end end end end end end, fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V39, V40, V41, V42, V43, V44)) end end end end end end, fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(PiInfo $t)'(fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> ('dn--un--reflect_Reflect_RawImp'(V59, V60, V61, V62, V63, V64)) end end end end end end, V52, V53, V54, V55, V56, V57, V58)) end end end end end end end, fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> ('dn--un--reflect_Reflect_RawImp'(V65, V66, V67, V68, V69, V70)) end end end end end end}, V45, V46, V47, V48, V49, V50, V51)) end end end end end end end}, V32, V33, V34, V35, V36, V37, V38)) end end end end end end end}, V18, V19, V20, V21, V22, V23, V24)) end end end end end end end, V0, V1, V2, V3, V4, V9, V6))), case V71 of {'Idris.Prelude.Types.Left', E9} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V73) -> begin (V74 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V10, V6))), case V74 of {'Idris.Prelude.Types.Left', E11} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V76) -> begin (V84 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> ('dn--un--reflect_Reflect_IField'(V77, V78, V79, V80, V81, V82, V83)) end end end end end end end, V0, V1, V2, V3, V4, V11, V6))), case V84 of {'Idris.Prelude.Types.Left', E13} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V86) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkRecord"/utf8>>)), [V14 | [V17 | [V73 | [V76 | [V86 | []]]]]], V6)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_ImpDecl'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.IClaim', E0, E1, E2, E3, E4} -> (fun (V7, V8, V9, V10, V11) -> begin (V12 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V7))(V6))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V15 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V0, V1, V2, V3, V4, V8))(V6))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V18 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Visibility'(V0, V1, V2, V3, V4, V9, V6))), case V18 of {'Idris.Prelude.Types.Left', E9} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V20) -> begin (V28 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> ('dn--un--reflect_Reflect_FnOpt'(V21, V22, V23, V24, V25, V26, V27)) end end end end end end end, V0, V1, V2, V3, V4, V10, V6))), case V28 of {'Idris.Prelude.Types.Left', E11} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V30) -> begin (V31 = ('dn--un--reflect_Reflect_ImpTy'(V0, V1, V2, V3, V4, V11, V6))), case V31 of {'Idris.Prelude.Types.Left', E13} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V33) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IClaim"/utf8>>)), [V14 | [V17 | [V20 | [V30 | [V33 | []]]]]], V6)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); {'Idris.TTImp.TTImp.IData', E15, E16, E17} -> (fun (V34, V35, V36) -> begin (V37 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V34))(V6))), case V37 of {'Idris.Prelude.Types.Left', E18} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V39) -> begin (V40 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Visibility'(V0, V1, V2, V3, V4, V35, V6))), case V40 of {'Idris.Prelude.Types.Left', E20} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V42) -> begin (V43 = ('dn--un--reflect_Reflect_ImpData'(V0, V1, V2, V3, V4, V36, V6))), case V43 of {'Idris.Prelude.Types.Left', E22} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V45) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IData"/utf8>>)), [V39 | [V42 | [V45 | []]]], V6)) end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15, E16, E17)); {'Idris.TTImp.TTImp.IDef', E24, E25, E26} -> (fun (V46, V47, V48) -> begin (V49 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V46))(V6))), case V49 of {'Idris.Prelude.Types.Left', E27} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V51) -> begin (V52 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V47, V6))), case V52 of {'Idris.Prelude.Types.Left', E29} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V54) -> begin (V62 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> ('dn--un--reflect_Reflect_ImpClause'(V55, V56, V57, V58, V59, V60, V61)) end end end end end end end, V0, V1, V2, V3, V4, V48, V6))), case V62 of {'Idris.Prelude.Types.Left', E31} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V64) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IDef"/utf8>>)), [V51 | [V54 | [V64 | []]]], V6)) end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E24, E25, E26)); {'Idris.TTImp.TTImp.IParameters', E33, E34, E35} -> (fun (V65, V66, V67) -> begin (V68 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V65))(V6))), case V68 of {'Idris.Prelude.Types.Left', E36} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V70) -> begin (V124 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V78, V79, V80, V81, V82, V83, V84)) end end end end end end end, fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V92, V93, V94, V95, V96, V97)) end end end end end end, fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> fun (V102) -> fun (V103) -> fun (V104) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> fun (V109) -> fun (V110) -> fun (V111) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(PiInfo $t)'(fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> fun (V116) -> fun (V117) -> ('dn--un--reflect_Reflect_RawImp'(V112, V113, V114, V115, V116, V117)) end end end end end end, V105, V106, V107, V108, V109, V110, V111)) end end end end end end end, fun (V118) -> fun (V119) -> fun (V120) -> fun (V121) -> fun (V122) -> fun (V123) -> ('dn--un--reflect_Reflect_RawImp'(V118, V119, V120, V121, V122, V123)) end end end end end end}, V98, V99, V100, V101, V102, V103, V104)) end end end end end end end}, V85, V86, V87, V88, V89, V90, V91)) end end end end end end end}, V71, V72, V73, V74, V75, V76, V77)) end end end end end end end, V0, V1, V2, V3, V4, V66, V6))), case V124 of {'Idris.Prelude.Types.Left', E38} -> (fun (V125) -> {'Idris.Prelude.Types.Left', V125} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V126) -> begin (V134 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V127) -> fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> fun (V132) -> fun (V133) -> ('dn--un--reflect_Reflect_ImpDecl'(V127, V128, V129, V130, V131, V132, V133)) end end end end end end end, V0, V1, V2, V3, V4, V67, V6))), case V134 of {'Idris.Prelude.Types.Left', E40} -> (fun (V135) -> {'Idris.Prelude.Types.Left', V135} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V136) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IParameters"/utf8>>)), [V70 | [V126 | [V136 | []]]], V6)) end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E33, E34, E35)); {'Idris.TTImp.TTImp.IRecord', E42, E43, E44, E45} -> (fun (V137, V138, V139, V140) -> begin (V141 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V137))(V6))), case V141 of {'Idris.Prelude.Types.Left', E46} -> (fun (V142) -> {'Idris.Prelude.Types.Left', V142} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V143) -> begin (V151 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(Maybe $a)'(fun (V144) -> fun (V145) -> fun (V146) -> fun (V147) -> fun (V148) -> fun (V149) -> fun (V150) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V144, V145, V146, V147, V148, V149, V150)) end end end end end end end, V0, V1, V2, V3, V4, V138, V6))), case V151 of {'Idris.Prelude.Types.Left', E48} -> (fun (V152) -> {'Idris.Prelude.Types.Left', V152} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V153) -> begin (V154 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Visibility'(V0, V1, V2, V3, V4, V139, V6))), case V154 of {'Idris.Prelude.Types.Left', E50} -> (fun (V155) -> {'Idris.Prelude.Types.Left', V155} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V156) -> begin (V157 = ('dn--un--reflect_Reflect_ImpRecord'(V0, V1, V2, V3, V4, V140, V6))), case V157 of {'Idris.Prelude.Types.Left', E52} -> (fun (V158) -> {'Idris.Prelude.Types.Left', V158} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V159) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"IRecord"/utf8>>)), [V143 | [V153 | [V156 | [V159 | []]]]], V6)) end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E42, E43, E44, E45)); {'Idris.TTImp.TTImp.INamespace', E54, E55, E56} -> (fun (V160, V161, V162) -> begin (V163 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V160))(V6))), case V163 of {'Idris.Prelude.Types.Left', E57} -> (fun (V164) -> {'Idris.Prelude.Types.Left', V164} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V165) -> begin (V166 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Namespace'(V0, V1, V2, V3, V4, V161, V6))), case V166 of {'Idris.Prelude.Types.Left', E59} -> (fun (V167) -> {'Idris.Prelude.Types.Left', V167} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V168) -> begin (V176 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V169) -> fun (V170) -> fun (V171) -> fun (V172) -> fun (V173) -> fun (V174) -> fun (V175) -> ('dn--un--reflect_Reflect_ImpDecl'(V169, V170, V171, V172, V173, V174, V175)) end end end end end end end, V0, V1, V2, V3, V4, V162, V6))), case V176 of {'Idris.Prelude.Types.Left', E61} -> (fun (V177) -> {'Idris.Prelude.Types.Left', V177} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V178) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"INamespace"/utf8>>)), [V165 | [V168 | [V178 | []]]], V6)) end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E54, E55, E56)); {'Idris.TTImp.TTImp.ITransform', E63, E64, E65, E66} -> (fun (V179, V180, V181, V182) -> begin (V183 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V179))(V6))), case V183 of {'Idris.Prelude.Types.Left', E67} -> (fun (V184) -> {'Idris.Prelude.Types.Left', V184} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V185) -> begin (V186 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V180, V6))), case V186 of {'Idris.Prelude.Types.Left', E69} -> (fun (V187) -> {'Idris.Prelude.Types.Left', V187} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V188) -> begin (V189 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V181))(V6))), case V189 of {'Idris.Prelude.Types.Left', E71} -> (fun (V190) -> {'Idris.Prelude.Types.Left', V190} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V191) -> begin (V192 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V182))(V6))), case V192 of {'Idris.Prelude.Types.Left', E73} -> (fun (V193) -> {'Idris.Prelude.Types.Left', V193} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V194) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ITransform"/utf8>>)), [V185 | [V188 | [V191 | [V194 | []]]]], V6)) end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63, E64, E65, E66)); {'Idris.TTImp.TTImp.IRunElabDecl', E75, E76} -> (fun (V195, V196) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V1, <<"Can\x{27}t reflect a %runElab"/utf8>>}, V6)) end(E75, E76)); {'Idris.TTImp.TTImp.IPragma', E77, E78} -> (fun (V197, V198) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V1, <<"Can\x{27}t reflect a pragma"/utf8>>}, V6)) end(E77, E78)); {'Idris.TTImp.TTImp.ILog', E79} -> (fun (V199) -> begin (V227 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(Maybe $a)'(fun (V200) -> fun (V201) -> fun (V202) -> fun (V203) -> fun (V204) -> fun (V205) -> fun (V206) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', fun (V207) -> fun (V208) -> fun (V209) -> fun (V210) -> fun (V211) -> fun (V212) -> fun (V213) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V214) -> fun (V215) -> fun (V216) -> fun (V217) -> fun (V218) -> fun (V219) -> fun (V220) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V214, V215, V216, V217, V218, V219, V220)) end end end end end end end, V207, V208, V209, V210, V211, V212, V213)) end end end end end end end, fun (V221) -> fun (V222) -> fun (V223) -> fun (V224) -> fun (V225) -> fun (V226) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Nat'(V221, V222, V223, V224, V225, V226)) end end end end end end}, V200, V201, V202, V203, V204, V205, V206)) end end end end end end end, V0, V1, V2, V3, V4, V199, V6))), case V227 of {'Idris.Prelude.Types.Left', E80} -> (fun (V228) -> {'Idris.Prelude.Types.Left', V228} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V229) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ILog"/utf8>>)), [V229 | []], V6)) end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E79)); {'Idris.TTImp.TTImp.IBuiltin', E82, E83, E84} -> (fun (V230, V231, V232) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V1, <<"Can\x{27}t reflect a %builtin"/utf8>>}, V6)) end(E82, E83, E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_ImpData'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.MkImpData', E0, E1, E2, E3, E4} -> (fun (V7, V8, V9, V10, V11) -> begin (V12 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V7))(V6))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V8, V6))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V18 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V9))(V6))), case V18 of {'Idris.Prelude.Types.Left', E9} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V20) -> begin (V28 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> ('dn--un--reflect_Reflect_DataOpt'(V21, V22, V23, V24, V25, V26, V27)) end end end end end end end, V0, V1, V2, V3, V4, V10, V6))), case V28 of {'Idris.Prelude.Types.Left', E11} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V30) -> begin (V38 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('dn--un--reflect_Reflect_ImpTy'(V31, V32, V33, V34, V35, V36, V37)) end end end end end end end, V0, V1, V2, V3, V4, V11, V6))), case V38 of {'Idris.Prelude.Types.Left', E13} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V40) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkData"/utf8>>)), [V14 | [V17 | [V20 | [V30 | [V40 | []]]]]], V6)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); {'Idris.TTImp.TTImp.MkImpLater', E15, E16, E17} -> (fun (V41, V42, V43) -> begin (V44 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V41))(V6))), case V44 of {'Idris.Prelude.Types.Left', E18} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V46) -> begin (V47 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V42, V6))), case V47 of {'Idris.Prelude.Types.Left', E20} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V49) -> begin (V50 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V43))(V6))), case V50 of {'Idris.Prelude.Types.Left', E22} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V52) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkLater"/utf8>>)), [V46 | [V49 | [V52 | []]]], V6)) end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_ImpClause'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V7, V8, V9) -> begin (V10 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V7))(V6))), case V10 of {'Idris.Prelude.Types.Left', E3} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V12) -> begin (V13 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V8))(V6))), case V13 of {'Idris.Prelude.Types.Left', E5} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V15) -> begin (V16 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V9))(V6))), case V16 of {'Idris.Prelude.Types.Left', E7} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V18) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"PatClause"/utf8>>)), [V12 | [V15 | [V18 | []]]], V6)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2)); {'Idris.TTImp.TTImp.WithClause', E9, E10, E11, E12, E13, E14} -> (fun (V19, V20, V21, V22, V23, V24) -> begin (V25 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V19))(V6))), case V25 of {'Idris.Prelude.Types.Left', E15} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V27) -> begin (V28 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V20))(V6))), case V28 of {'Idris.Prelude.Types.Left', E17} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V30) -> begin (V31 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V21))(V6))), case V31 of {'Idris.Prelude.Types.Left', E19} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V33) -> begin (V41 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(Maybe $a)'(fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V34, V35, V36, V37, V38, V39, V40)) end end end end end end end, V0, V1, V2, V3, V4, V22, V6))), case V41 of {'Idris.Prelude.Types.Left', E21} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V43) -> begin (V51 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> ('dn--un--reflect_Reflect_WithFlag'(V44, V45, V46, V47, V48, V49, V50)) end end end end end end end, V0, V1, V2, V3, V4, V23, V6))), case V51 of {'Idris.Prelude.Types.Left', E23} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V53) -> begin (V61 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> ('dn--un--reflect_Reflect_ImpClause'(V54, V55, V56, V57, V58, V59, V60)) end end end end end end end, V0, V1, V2, V3, V4, V24, V6))), case V61 of {'Idris.Prelude.Types.Left', E25} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V63) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"WithClause"/utf8>>)), [V27 | [V30 | [V33 | [V43 | [V53 | [V63 | []]]]]]], V6)) end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9, E10, E11, E12, E13, E14)); {'Idris.TTImp.TTImp.ImpossibleClause', E27, E28} -> (fun (V64, V65) -> begin (V66 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V64))(V6))), case V66 of {'Idris.Prelude.Types.Left', E29} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V68) -> begin (V69 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V65))(V6))), case V69 of {'Idris.Prelude.Types.Left', E31} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V71) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ImpossibleClause"/utf8>>)), [V68 | [V71 | []]], V6)) end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_IFieldUpdate'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.ISetField', E0, E1} -> (fun (V7, V8) -> begin (V16 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V9, V10, V11, V12, V13, V14, V15)) end end end end end end end, V0, V1, V2, V3, V4, V7, V6))), case V16 of {'Idris.Prelude.Types.Left', E2} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V18) -> begin (V19 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V8))(V6))), case V19 of {'Idris.Prelude.Types.Left', E4} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V21) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ISetField"/utf8>>)), [V18 | [V21 | []]], V6)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); {'Idris.TTImp.TTImp.ISetFieldApp', E6, E7} -> (fun (V22, V23) -> begin (V31 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_String'(V24, V25, V26, V27, V28, V29, V30)) end end end end end end end, V0, V1, V2, V3, V4, V22, V6))), case V31 of {'Idris.Prelude.Types.Left', E8} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V33) -> begin (V34 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V23))(V6))), case V34 of {'Idris.Prelude.Types.Left', E10} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V36) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ISetFieldApp"/utf8>>)), [V33 | [V36 | []]], V6)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_IField'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.MkIField', E0, E1, E2, E3, E4} -> (fun (V7, V8, V9, V10, V11) -> begin (V12 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_FC'(V0, V1, V2, V3, V4, V7))(V6))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V15 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V0, V1, V2, V3, V4, V8))(V6))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V24 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(PiInfo $t)'(fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> ('dn--un--reflect_Reflect_RawImp'(V18, V19, V20, V21, V22, V23)) end end end end end end, V0, V1, V2, V3, V4, V9, V6))), case V24 of {'Idris.Prelude.Types.Left', E9} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V26) -> begin (V27 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V0, V1, V2, V3, V4, V10, V6))), case V27 of {'Idris.Prelude.Types.Left', E11} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V29) -> begin (V30 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V11))(V6))), case V30 of {'Idris.Prelude.Types.Left', E13} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V32) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"MkIField"/utf8>>)), [V14 | [V17 | [V26 | [V29 | [V32 | []]]]]], V6)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_FnOpt'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.Inline'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Inline"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.TCInline'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"TCInline"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.Hint', E0} -> (fun (V7) -> begin (V8 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Bool'(V0, V1, V2, V3, V4, V7, V6))), case V8 of {'Idris.Prelude.Types.Left', E1} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V10) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Hint"/utf8>>)), [V10 | []], V6)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0)); {'Idris.TTImp.TTImp.GlobalHint', E3} -> (fun (V11) -> begin (V12 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Bool'(V0, V1, V2, V3, V4, V11, V6))), case V12 of {'Idris.Prelude.Types.Left', E4} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V14) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"GlobalHint"/utf8>>)), [V14 | []], V6)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); {'Idris.TTImp.TTImp.ExternFn'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ExternFn"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.ForeignFn', E6} -> (fun (V15) -> begin (V22 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('dn--un--reflect_Reflect_RawImp'(V16, V17, V18, V19, V20, V21)) end end end end end end, V0, V1, V2, V3, V4, V15, V6))), case V22 of {'Idris.Prelude.Types.Left', E7} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V24) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ForeignFn"/utf8>>)), [V24 | []], V6)) end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); {'Idris.TTImp.TTImp.Invertible'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Invertible"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.Totality', E9} -> (fun (V25) -> begin (V26 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_TotalReq'(V0, V1, V2, V3, V4, V25, V6))), case V26 of {'Idris.Prelude.Types.Left', E10} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V28) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Totality"/utf8>>)), [V28 | []], V6)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); {'Idris.TTImp.TTImp.Macro'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Macro"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.SpecArgs', E12} -> (fun (V29) -> begin (V37 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V30, V31, V32, V33, V34, V35, V36)) end end end end end end end, V0, V1, V2, V3, V4, V29, V6))), case V37 of {'Idris.Prelude.Types.Left', E13} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V39) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"SpecArgs"/utf8>>)), [V39 | []], V6)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_DotReason'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of 0 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NonLinearVar"/utf8>>)), V6)); 1 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"VarApplied"/utf8>>)), V6)); 2 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NotConstructor"/utf8>>)), V6)); 3 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"ErasedArg"/utf8>>)), V6)); 4 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UserDotted"/utf8>>)), V6)); 5 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UnknownDot"/utf8>>)), V6)); 6 -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UnderAppliedCon"/utf8>>)), V6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_DataOpt'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.SearchBy', E0} -> (fun (V7) -> begin (V15 = ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_(List $a)'(fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_Name'(V8, V9, V10, V11, V12, V13, V14)) end end end end end end end, V0, V1, V2, V3, V4, V7, V6))), case V15 of {'Idris.Prelude.Types.Left', E1} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V17) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"SearchBy"/utf8>>)), [V17 | []], V6)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0)); {'Idris.TTImp.TTImp.NoHints'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NoHints"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.UniqueSearch'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UniqueSearch"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.External'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"External"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.NoNewtype'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NoNewtype"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.NoEnum'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NoEnum"/utf8>>)), V6)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_BindMode'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.PI', E0} -> (fun (V7) -> begin (V8 = (('Idris.Idris2.Core.Reflect':'dn--un--reflect_Reflect_RigCount'(V0, V1, V2, V3, V4, V7))(V6))), case V8 of {'Idris.Prelude.Types.Left', E1} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V10) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"PI"/utf8>>)), [V10 | []], V6)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0)); {'Idris.TTImp.TTImp.PATTERN'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"PATTERN"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.NONE'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"NONE"/utf8>>)), V6)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--reflect_Reflect_AltType'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.TTImp.TTImp.FirstSuccess'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"FirstSuccess"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.Unique'} -> (fun () -> ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"Unique"/utf8>>)), V6)) end()); {'Idris.TTImp.TTImp.UniqueDefault', E0} -> (fun (V7) -> begin (V8 = (('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V7))(V6))), case V8 of {'Idris.Prelude.Types.Left', E1} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V10) -> ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V1, V2, ('Idris.Idris2.Core.Reflect':'un--reflectionttimp'(<<"UniqueDefault"/utf8>>)), [V10 | []], V6)) end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--__Impl_Reify_WithFlag'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_WithFlag'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_UseSide'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_UseSide'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_RawImp'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_RawImp'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_ImpTy'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_ImpTy'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_ImpRecord'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_ImpRecord'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_ImpDecl'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_ImpDecl'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_ImpData'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_ImpData'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_ImpClause'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_ImpClause'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_IFieldUpdate'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_IFieldUpdate'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_IField'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_IField'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_FnOpt'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_FnOpt'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_DotReason'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_DotReason'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_DataOpt'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_DataOpt'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_BindMode'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_BindMode'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reify_AltType'(V0, V1, V2, V3, V4) -> ('dn--un--reify_Reify_AltType'(V0, V1, V2, V3, V4)).
'dn--un--__Impl_Reflect_WithFlag'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_WithFlag'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_UseSide'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_UseSide'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_RawImp'(V0, V1, V2, V3, V4, V5) -> ('dn--un--reflect_Reflect_RawImp'(V0, V1, V2, V3, V4, V5)).
'dn--un--__Impl_Reflect_ImpTy'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_ImpTy'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_ImpRecord'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_ImpRecord'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_ImpDecl'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_ImpDecl'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_ImpData'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_ImpData'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_ImpClause'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_ImpClause'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_IFieldUpdate'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_IFieldUpdate'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_IField'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_IField'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_FnOpt'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_FnOpt'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_DotReason'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_DotReason'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_DataOpt'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_DataOpt'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_BindMode'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_BindMode'(V0, V1, V2, V3, V4, V5, V6)).
'dn--un--__Impl_Reflect_AltType'(V0, V1, V2, V3, V4, V5, V6) -> ('dn--un--reflect_Reflect_AltType'(V0, V1, V2, V3, V4, V5, V6)).
