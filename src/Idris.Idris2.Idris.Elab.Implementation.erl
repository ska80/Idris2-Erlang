-module('Idris.Idris2.Idris.Elab.Implementation').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--case block in case block in case block in case block in elabImplementation-12099'/45,
  'case--elabImplementation-11532'/25,
  'case--elabImplementation,topMethType-10102'/32,
  'nested--11092-9545--in--un--vfc'/19,
  'nested--11092-9562--in--un--updateClause'/22,
  'nested--11092-9563--in--un--updateBody'/22,
  'nested--11092-9561--in--un--updateApp'/22,
  'nested--11092-9557--in--un--topMethTypes'/28,
  'nested--11092-9556--in--un--topMethType'/28,
  'nested--10764-9215--in--un--toForward'/1,
  'nested--10865-9319--in--un--specialiseMeth'/7,
  'nested--11092-9558--in--un--mkTopMethDecl'/20,
  'nested--11092-9552--in--un--mkMethField'/22,
  'nested--11092-9550--in--un--mkLam'/21,
  'nested--11092-9559--in--un--methNameUpdate'/20,
  'nested--11092-9553--in--un--methName'/20,
  'nested--11092-9548--in--un--impsApply'/21,
  'nested--11092-9547--in--un--getFieldArgs'/20,
  'nested--11127-9618--in--un--getArgs'/27,
  'nested--11092-9560--in--un--findMethName'/23,
  'nested--10865-9320--in--un--extendBody'/9,
  'nested--10865-9321--in--un--dropGot'/8,
  'nested--11092-9555--in--un--bindImps'/21,
  'nested--11092-9549--in--un--autoImpsApply'/21,
  'nested--11132-9814--in--un--applyUpdate'/28,
  'nested--11092-9551--in--un--applyTo'/21,
  'nested--11092-9546--in--un--applyEnv'/21,
  'nested--11092-9554--in--un--applyCon'/22,
  'nested--11092-9564--in--un--addTransform'/23,
  'un--replaceSep'/1,
  'un--mkImplName'/3,
  'un--getMethImps'/4,
  'un--elabImplementation'/19,
  'un--bindImpls'/3,
  'un--bindConstraints'/4,
  'un--addDefaults'/6
]).
'case--case block in case block in case block in case block in elabImplementation-12099'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44) -> case V43 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V45, V46) -> begin (V56 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Added defaults: body is "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V47) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(ImpDecl\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V48) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V48)) end, fun (V49) -> fun (V50) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V49, V50)) end end}, V47)) end, fun (V51) -> fun (V52) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(ImpDecl\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V53) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V53)) end, fun (V54) -> fun (V55) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V54, V55)) end end}, V51, V52)) end end}, V45)))) end, V44))), case V56 of {'Idris.Prelude.Types.Left', E2} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V58) -> begin (V62 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Missing methods: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V59) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V59)) end, fun (V60) -> fun (V61) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V60, V61)) end end}, V46)))) end, V44))), case V62 of {'Idris.Prelude.Types.Left', E4} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V64) -> begin (V66 = case ('Idris.Idris2.Data.List':'un--isNil'(V46)) of 1 -> {'Idris.Prelude.Types.Right', 0}; 0 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V14, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Missing methods in "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V5)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<": "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V65) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V65)) end, V46))))))))))}, V44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V66 of {'Idris.Prelude.Types.Left', E6} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V68) -> begin (V70 = begin (V69 = ('erlang':'get'(V18))), {'Idris.Prelude.Types.Right', V69} end), case V70 of {'Idris.Prelude.Types.Left', E8} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V72) -> begin (V103 = case V72 of {'Idris.Core.Context.MkDefs', E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39} -> (fun (V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102) -> V82 end(E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V107 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Open hints: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V104) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V104)) end, fun (V105) -> fun (V106) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V105, V106)) end end}, [V20 | V1])))) end, V44))), case V107 of {'Idris.Prelude.Types.Left', E40} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V109) -> begin (V115 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V110) -> fun (V111) -> begin (V112 = ('Idris.Idris2.Core.Context':'un--checkUnambig'(V18, ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V110, V111))), case V112 of {'Idris.Prelude.Types.Left', E42} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V114) -> ('Idris.Idris2.Core.Context':'un--addOpenHint'(V18, V114, V111)) end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V1, V44))), case V115 of {'Idris.Prelude.Types.Left', E44} -> (fun (V116) -> {'Idris.Prelude.Types.Left', V116} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V117) -> begin (V119 = begin (V118 = ('erlang':'get'(V18))), {'Idris.Prelude.Types.Right', V118} end), case V119 of {'Idris.Prelude.Types.Left', E46} -> (fun (V120) -> {'Idris.Prelude.Types.Left', V120} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V121) -> begin (V151 = ('nested--11092-9557--in--un--topMethTypes'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, [], V20, V42, V31, case V26 of {'Idris.Idris.Syntax.MkIFaceInfo', E48, E49, E50, E51, E52, E53} -> (fun (V122, V123, V124, V125, V126, V127) -> V123 end(E48, E49, E50, E51, E52, E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case V26 of {'Idris.Idris.Syntax.MkIFaceInfo', E54, E55, E56, E57, E58, E59} -> (fun (V128, V129, V130, V131, V132, V133) -> V130 end(E54, E55, E56, E57, E58, E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V134) -> case V134 of {'Idris.Idris.Syntax.MkMethod', E60, E61, E62, E63} -> (fun (V135, V136, V137, V138) -> V135 end(E60, E61, E62, E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, case V26 of {'Idris.Idris.Syntax.MkIFaceInfo', E64, E65, E66, E67, E68, E69} -> (fun (V139, V140, V141, V142, V143, V144) -> V143 end(E64, E65, E66, E67, E68, E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), case V26 of {'Idris.Idris.Syntax.MkIFaceInfo', E70, E71, E72, E73, E74, E75} -> (fun (V145, V146, V147, V148, V149, V150) -> V149 end(E70, E71, E72, E73, E74, E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V44))), case V151 of {'Idris.Prelude.Types.Left', E76} -> (fun (V152) -> {'Idris.Prelude.Types.Left', V152} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V153) -> begin (V156 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V154) -> ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V8, V18, V15, V17, [], V9, V10, V154)) end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V155) -> ('nested--11092-9558--in--un--mkTopMethDecl'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V155)) end, V153)), V44))), case V156 of {'Idris.Prelude.Types.Left', E78} -> (fun (V157) -> {'Idris.Prelude.Types.Left', V157} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V158) -> begin (V160 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V159) -> ('Idris.Idris2.Builtin':'un--fst'(('Idris.Idris2.Builtin':'un--snd'(V159)))) end, V153))), begin (V167 = case V26 of {'Idris.Idris.Syntax.MkIFaceInfo', E80, E81, E82, E83, E84, E85} -> (fun (V161, V162, V163, V164, V165, V166) -> V161 end(E80, E81, E82, E83, E84, E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V170 = ('nested--11092-9548--in--un--impsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, V20}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V168) -> {'Idris.Builtin.MkPair', V168, {'Idris.TTImp.TTImp.IBindVar', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V168))}} end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V169) -> ('Idris.Idris2.Builtin':'un--fst'(V169)) end, V42))))))), begin (V172 = begin (V171 = ('erlang':'get'(V18))), {'Idris.Prelude.Types.Right', V171} end), case V172 of {'Idris.Prelude.Types.Left', E86} -> (fun (V173) -> {'Idris.Prelude.Types.Left', V173} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V174) -> begin (V175 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V18, [], V174, {'Idris.Core.Env.Nil'}, V29, V44))), case V175 of {'Idris.Prelude.Types.Left', E88} -> (fun (V176) -> {'Idris.Prelude.Types.Left', V176} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V177) -> begin (V178 = ('nested--11092-9547--in--un--getFieldArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V177))), begin (V638 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Field types "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V179) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V180) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V180)) end, fun (V181) -> fun (V182) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V181, V182)) end end}, {'Idris.Prelude.Show.MkShow', fun (V183) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V184) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V185) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V185)) end, fun (V186) -> fun (V187) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V186, V187)) end end}, {'Idris.Prelude.Show.MkShow', fun (V188) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V189) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V189)) end, fun (V190) -> fun (V191) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V190, V191)) end end}, {'Idris.Prelude.Show.MkShow', fun (V192) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V193) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V194) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V194)) end, fun (V195) -> fun (V196) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V195, V196)) end end}, V193)) end, fun (V197) -> fun (V198) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V199) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V199)) end, fun (V200) -> fun (V201) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V200, V201)) end end}, V197, V198)) end end}, V192)) end, fun (V202) -> fun (V203) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V204) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V205) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V205)) end, fun (V206) -> fun (V207) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V206, V207)) end end}, V204)) end, fun (V208) -> fun (V209) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V210) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V210)) end, fun (V211) -> fun (V212) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V211, V212)) end end}, V208, V209)) end end}, V202, V203)) end end}}, V188)) end, fun (V213) -> fun (V214) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V215) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V215)) end, fun (V216) -> fun (V217) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V216, V217)) end end}, {'Idris.Prelude.Show.MkShow', fun (V218) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V219) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V220) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V220)) end, fun (V221) -> fun (V222) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V221, V222)) end end}, V219)) end, fun (V223) -> fun (V224) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V225) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V225)) end, fun (V226) -> fun (V227) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V226, V227)) end end}, V223, V224)) end end}, V218)) end, fun (V228) -> fun (V229) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V230) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V231) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V231)) end, fun (V232) -> fun (V233) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V232, V233)) end end}, V230)) end, fun (V234) -> fun (V235) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V236) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V236)) end, fun (V237) -> fun (V238) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V237, V238)) end end}, V234, V235)) end end}, V228, V229)) end end}}, V213, V214)) end end}}, V184)) end, fun (V239) -> fun (V240) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V241) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V241)) end, fun (V242) -> fun (V243) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V242, V243)) end end}, {'Idris.Prelude.Show.MkShow', fun (V244) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V245) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V245)) end, fun (V246) -> fun (V247) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V246, V247)) end end}, {'Idris.Prelude.Show.MkShow', fun (V248) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V249) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V250) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V250)) end, fun (V251) -> fun (V252) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V251, V252)) end end}, V249)) end, fun (V253) -> fun (V254) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V255) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V255)) end, fun (V256) -> fun (V257) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V256, V257)) end end}, V253, V254)) end end}, V248)) end, fun (V258) -> fun (V259) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V260) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V261) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V261)) end, fun (V262) -> fun (V263) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V262, V263)) end end}, V260)) end, fun (V264) -> fun (V265) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V266) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V266)) end, fun (V267) -> fun (V268) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V267, V268)) end end}, V264, V265)) end end}, V258, V259)) end end}}, V244)) end, fun (V269) -> fun (V270) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V271) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V271)) end, fun (V272) -> fun (V273) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V272, V273)) end end}, {'Idris.Prelude.Show.MkShow', fun (V274) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V275) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V276) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V276)) end, fun (V277) -> fun (V278) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V277, V278)) end end}, V275)) end, fun (V279) -> fun (V280) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V281) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V281)) end, fun (V282) -> fun (V283) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V282, V283)) end end}, V279, V280)) end end}, V274)) end, fun (V284) -> fun (V285) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V286) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V287) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V287)) end, fun (V288) -> fun (V289) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V288, V289)) end end}, V286)) end, fun (V290) -> fun (V291) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V292) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V292)) end, fun (V293) -> fun (V294) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V293, V294)) end end}, V290, V291)) end end}, V284, V285)) end end}}, V269, V270)) end end}}, V239, V240)) end end}, V183)) end, fun (V295) -> fun (V296) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V297) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V298) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V298)) end, fun (V299) -> fun (V300) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V299, V300)) end end}, {'Idris.Prelude.Show.MkShow', fun (V301) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V302) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V302)) end, fun (V303) -> fun (V304) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V303, V304)) end end}, {'Idris.Prelude.Show.MkShow', fun (V305) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V306) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V307) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V307)) end, fun (V308) -> fun (V309) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V308, V309)) end end}, V306)) end, fun (V310) -> fun (V311) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V312) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V312)) end, fun (V313) -> fun (V314) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V313, V314)) end end}, V310, V311)) end end}, V305)) end, fun (V315) -> fun (V316) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V317) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V318) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V318)) end, fun (V319) -> fun (V320) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V319, V320)) end end}, V317)) end, fun (V321) -> fun (V322) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V323) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V323)) end, fun (V324) -> fun (V325) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V324, V325)) end end}, V321, V322)) end end}, V315, V316)) end end}}, V301)) end, fun (V326) -> fun (V327) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V328) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V328)) end, fun (V329) -> fun (V330) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V329, V330)) end end}, {'Idris.Prelude.Show.MkShow', fun (V331) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V332) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V333) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V333)) end, fun (V334) -> fun (V335) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V334, V335)) end end}, V332)) end, fun (V336) -> fun (V337) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V338) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V338)) end, fun (V339) -> fun (V340) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V339, V340)) end end}, V336, V337)) end end}, V331)) end, fun (V341) -> fun (V342) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V343) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V344) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V344)) end, fun (V345) -> fun (V346) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V345, V346)) end end}, V343)) end, fun (V347) -> fun (V348) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V349) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V349)) end, fun (V350) -> fun (V351) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V350, V351)) end end}, V347, V348)) end end}, V341, V342)) end end}}, V326, V327)) end end}}, V297)) end, fun (V352) -> fun (V353) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V354) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V354)) end, fun (V355) -> fun (V356) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V355, V356)) end end}, {'Idris.Prelude.Show.MkShow', fun (V357) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V358) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V358)) end, fun (V359) -> fun (V360) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V359, V360)) end end}, {'Idris.Prelude.Show.MkShow', fun (V361) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V362) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V363) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V363)) end, fun (V364) -> fun (V365) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V364, V365)) end end}, V362)) end, fun (V366) -> fun (V367) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V368) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V368)) end, fun (V369) -> fun (V370) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V369, V370)) end end}, V366, V367)) end end}, V361)) end, fun (V371) -> fun (V372) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V373) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V374) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V374)) end, fun (V375) -> fun (V376) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V375, V376)) end end}, V373)) end, fun (V377) -> fun (V378) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V379) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V379)) end, fun (V380) -> fun (V381) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V380, V381)) end end}, V377, V378)) end end}, V371, V372)) end end}}, V357)) end, fun (V382) -> fun (V383) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V384) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V384)) end, fun (V385) -> fun (V386) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V385, V386)) end end}, {'Idris.Prelude.Show.MkShow', fun (V387) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V388) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V389) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V389)) end, fun (V390) -> fun (V391) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V390, V391)) end end}, V388)) end, fun (V392) -> fun (V393) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V394) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V394)) end, fun (V395) -> fun (V396) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V395, V396)) end end}, V392, V393)) end end}, V387)) end, fun (V397) -> fun (V398) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V399) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V400) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V400)) end, fun (V401) -> fun (V402) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V401, V402)) end end}, V399)) end, fun (V403) -> fun (V404) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V405) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V405)) end, fun (V406) -> fun (V407) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V406, V407)) end end}, V403, V404)) end end}, V397, V398)) end end}}, V382, V383)) end end}}, V352, V353)) end end}, V295, V296)) end end}}, V179)) end, fun (V408) -> fun (V409) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V410) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V410)) end, fun (V411) -> fun (V412) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V411, V412)) end end}, {'Idris.Prelude.Show.MkShow', fun (V413) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V414) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V415) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V415)) end, fun (V416) -> fun (V417) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V416, V417)) end end}, {'Idris.Prelude.Show.MkShow', fun (V418) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V419) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V419)) end, fun (V420) -> fun (V421) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V420, V421)) end end}, {'Idris.Prelude.Show.MkShow', fun (V422) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V423) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V424) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V424)) end, fun (V425) -> fun (V426) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V425, V426)) end end}, V423)) end, fun (V427) -> fun (V428) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V429) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V429)) end, fun (V430) -> fun (V431) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V430, V431)) end end}, V427, V428)) end end}, V422)) end, fun (V432) -> fun (V433) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V434) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V435) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V435)) end, fun (V436) -> fun (V437) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V436, V437)) end end}, V434)) end, fun (V438) -> fun (V439) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V440) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V440)) end, fun (V441) -> fun (V442) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V441, V442)) end end}, V438, V439)) end end}, V432, V433)) end end}}, V418)) end, fun (V443) -> fun (V444) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V445) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V445)) end, fun (V446) -> fun (V447) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V446, V447)) end end}, {'Idris.Prelude.Show.MkShow', fun (V448) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V449) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V450) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V450)) end, fun (V451) -> fun (V452) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V451, V452)) end end}, V449)) end, fun (V453) -> fun (V454) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V455) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V455)) end, fun (V456) -> fun (V457) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V456, V457)) end end}, V453, V454)) end end}, V448)) end, fun (V458) -> fun (V459) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V460) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V461) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V461)) end, fun (V462) -> fun (V463) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V462, V463)) end end}, V460)) end, fun (V464) -> fun (V465) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V466) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V466)) end, fun (V467) -> fun (V468) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V467, V468)) end end}, V464, V465)) end end}, V458, V459)) end end}}, V443, V444)) end end}}, V414)) end, fun (V469) -> fun (V470) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V471) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V471)) end, fun (V472) -> fun (V473) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V472, V473)) end end}, {'Idris.Prelude.Show.MkShow', fun (V474) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V475) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V475)) end, fun (V476) -> fun (V477) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V476, V477)) end end}, {'Idris.Prelude.Show.MkShow', fun (V478) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V479) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V480) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V480)) end, fun (V481) -> fun (V482) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V481, V482)) end end}, V479)) end, fun (V483) -> fun (V484) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V485) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V485)) end, fun (V486) -> fun (V487) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V486, V487)) end end}, V483, V484)) end end}, V478)) end, fun (V488) -> fun (V489) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V490) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V491) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V491)) end, fun (V492) -> fun (V493) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V492, V493)) end end}, V490)) end, fun (V494) -> fun (V495) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V496) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V496)) end, fun (V497) -> fun (V498) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V497, V498)) end end}, V494, V495)) end end}, V488, V489)) end end}}, V474)) end, fun (V499) -> fun (V500) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V501) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V501)) end, fun (V502) -> fun (V503) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V502, V503)) end end}, {'Idris.Prelude.Show.MkShow', fun (V504) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V505) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V506) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V506)) end, fun (V507) -> fun (V508) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V507, V508)) end end}, V505)) end, fun (V509) -> fun (V510) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V511) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V511)) end, fun (V512) -> fun (V513) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V512, V513)) end end}, V509, V510)) end end}, V504)) end, fun (V514) -> fun (V515) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V516) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V517) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V517)) end, fun (V518) -> fun (V519) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V518, V519)) end end}, V516)) end, fun (V520) -> fun (V521) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V522) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V522)) end, fun (V523) -> fun (V524) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V523, V524)) end end}, V520, V521)) end end}, V514, V515)) end end}}, V499, V500)) end end}}, V469, V470)) end end}, V413)) end, fun (V525) -> fun (V526) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V527) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V528) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V528)) end, fun (V529) -> fun (V530) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V529, V530)) end end}, {'Idris.Prelude.Show.MkShow', fun (V531) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V532) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V532)) end, fun (V533) -> fun (V534) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V533, V534)) end end}, {'Idris.Prelude.Show.MkShow', fun (V535) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V536) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V537) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V537)) end, fun (V538) -> fun (V539) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V538, V539)) end end}, V536)) end, fun (V540) -> fun (V541) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V542) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V542)) end, fun (V543) -> fun (V544) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V543, V544)) end end}, V540, V541)) end end}, V535)) end, fun (V545) -> fun (V546) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V547) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V548) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V548)) end, fun (V549) -> fun (V550) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V549, V550)) end end}, V547)) end, fun (V551) -> fun (V552) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V553) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V553)) end, fun (V554) -> fun (V555) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V554, V555)) end end}, V551, V552)) end end}, V545, V546)) end end}}, V531)) end, fun (V556) -> fun (V557) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V558) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V558)) end, fun (V559) -> fun (V560) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V559, V560)) end end}, {'Idris.Prelude.Show.MkShow', fun (V561) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V562) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V563) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V563)) end, fun (V564) -> fun (V565) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V564, V565)) end end}, V562)) end, fun (V566) -> fun (V567) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V568) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V568)) end, fun (V569) -> fun (V570) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V569, V570)) end end}, V566, V567)) end end}, V561)) end, fun (V571) -> fun (V572) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V573) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V574) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V574)) end, fun (V575) -> fun (V576) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V575, V576)) end end}, V573)) end, fun (V577) -> fun (V578) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V579) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V579)) end, fun (V580) -> fun (V581) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V580, V581)) end end}, V577, V578)) end end}, V571, V572)) end end}}, V556, V557)) end end}}, V527)) end, fun (V582) -> fun (V583) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V584) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V584)) end, fun (V585) -> fun (V586) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V585, V586)) end end}, {'Idris.Prelude.Show.MkShow', fun (V587) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V588) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V588)) end, fun (V589) -> fun (V590) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V589, V590)) end end}, {'Idris.Prelude.Show.MkShow', fun (V591) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V592) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V593) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V593)) end, fun (V594) -> fun (V595) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V594, V595)) end end}, V592)) end, fun (V596) -> fun (V597) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V598) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V598)) end, fun (V599) -> fun (V600) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V599, V600)) end end}, V596, V597)) end end}, V591)) end, fun (V601) -> fun (V602) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V603) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V604) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V604)) end, fun (V605) -> fun (V606) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V605, V606)) end end}, V603)) end, fun (V607) -> fun (V608) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V609) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V609)) end, fun (V610) -> fun (V611) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V610, V611)) end end}, V607, V608)) end end}, V601, V602)) end end}}, V587)) end, fun (V612) -> fun (V613) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V614) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V614)) end, fun (V615) -> fun (V616) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V615, V616)) end end}, {'Idris.Prelude.Show.MkShow', fun (V617) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V618) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V619) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V619)) end, fun (V620) -> fun (V621) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V620, V621)) end end}, V618)) end, fun (V622) -> fun (V623) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V624) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V624)) end, fun (V625) -> fun (V626) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V625, V626)) end end}, V622, V623)) end end}, V617)) end, fun (V627) -> fun (V628) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V629) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V630) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V630)) end, fun (V631) -> fun (V632) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V631, V632)) end end}, V629)) end, fun (V633) -> fun (V634) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V635) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V635)) end, fun (V636) -> fun (V637) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V636, V637)) end end}, V633, V634)) end end}, V627, V628)) end end}}, V612, V613)) end end}}, V582, V583)) end end}, V525, V526)) end end}}, V408, V409)) end end}, V178)))) end, V44))), case V638 of {'Idris.Prelude.Types.Left', E90} -> (fun (V639) -> {'Idris.Prelude.Types.Left', V639} end(E90)); {'Idris.Prelude.Types.Right', E91} -> (fun (V640) -> begin (V649 = ('Idris.Idris2.TTImp.TTImp':'un--apply'(('nested--11092-9549--in--un--autoImpsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.TTImp.TTImp.IVar', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V167}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V641) -> {'Idris.TTImp.TTImp.ISearch', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num_Nat'(500))} end, case V26 of {'Idris.Idris.Syntax.MkIFaceInfo', E92, E93, E94, E95, E96, E97} -> (fun (V642, V643, V644, V645, V646, V647) -> V645 end(E92, E93, E94, E95, E96, E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V648) -> ('nested--11092-9552--in--un--mkMethField'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V42, V178, V648)) end, V153))))), begin (V650 = {'Idris.TTImp.TTImp.IDef', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V20, [{'Idris.TTImp.TTImp.PatClause', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V170, V649} | []]}), begin (V654 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Implementation record: "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(ImpDecl\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V651) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V651)) end, fun (V652) -> fun (V653) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V652, V653)) end end}, V650)))) end, V44))), case V654 of {'Idris.Prelude.Types.Left', E98} -> (fun (V655) -> {'Idris.Prelude.Types.Left', V655} end(E98)); {'Idris.Prelude.Types.Right', E99} -> (fun (V656) -> begin (V657 = case V3 of 1 -> ('Idris.Idris2.Core.Context':'un--addOpenHint'(V18, V20, V44)); 0 -> {'Idris.Prelude.Types.Right', 0}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V657 of {'Idris.Prelude.Types.Left', E100} -> (fun (V658) -> {'Idris.Prelude.Types.Left', V658} end(E100)); {'Idris.Prelude.Types.Right', E101} -> (fun (V659) -> begin (V660 = ('Idris.Idris2.Core.Context':'un--setFlag'(V18, ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V20, {'Idris.Core.Context.Context.BlockedHint'}, V44))), case V660 of {'Idris.Prelude.Types.Left', E102} -> (fun (V661) -> {'Idris.Prelude.Types.Left', V661} end(E102)); {'Idris.Prelude.Types.Right', E103} -> (fun (V662) -> begin (V665 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V663) -> fun (V664) -> ('nested--11092-9546--in--un--applyEnv'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V663, V664)) end end, [V20 | V160], [], V44))), case V665 of {'Idris.Prelude.Types.Left', E104} -> (fun (V666) -> {'Idris.Prelude.Types.Left', V666} end(E104)); {'Idris.Prelude.Types.Right', E105} -> (fun (V667) -> begin (V668 = ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V667, V9))), begin (V670 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V669) -> ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V8, V18, V15, V17, [], V668, V10, V669)) end, [V650 | []], V44))), case V670 of {'Idris.Prelude.Types.Left', E106} -> (fun (V671) -> {'Idris.Prelude.Types.Left', V671} end(E106)); {'Idris.Prelude.Types.Right', E107} -> (fun (V672) -> begin (V673 = ('Idris.Idris2.Core.Context':'un--unsetFlag'(V18, ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V20, {'Idris.Core.Context.Context.BlockedHint'}, V44))), case V673 of {'Idris.Prelude.Types.Left', E108} -> (fun (V674) -> {'Idris.Prelude.Types.Left', V674} end(E108)); {'Idris.Prelude.Types.Right', E109} -> (fun (V675) -> begin (V676 = ('Idris.Idris2.Core.Context':'un--setFlag'(V18, ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V20, {'Idris.Core.Context.Context.TCInline'}, V44))), case V676 of {'Idris.Prelude.Types.Left', E110} -> (fun (V677) -> {'Idris.Prelude.Types.Left', V677} end(E110)); {'Idris.Prelude.Types.Right', E111} -> (fun (V678) -> begin (V679 = ('Idris.Idris2.Core.Context':'un--setFlag'(V18, ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V20, {'Idris.Core.Context.Context.SetTotal', 2}, V44))), case V679 of {'Idris.Prelude.Types.Left', E112} -> (fun (V680) -> {'Idris.Prelude.Types.Left', V680} end(E112)); {'Idris.Prelude.Types.Right', E113} -> (fun (V681) -> begin (V683 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V682) -> ('nested--11092-9559--in--un--methNameUpdate'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V682)) end, V153))), begin (V686 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V684) -> fun (V685) -> ('nested--11092-9563--in--un--updateBody'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V683, V684, V685)) end end, V45, [], V44))), case V686 of {'Idris.Prelude.Types.Left', E114} -> (fun (V687) -> {'Idris.Prelude.Types.Left', V687} end(E114)); {'Idris.Prelude.Types.Right', E115} -> (fun (V688) -> begin (V698 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Implementation body: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V689) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(ImpDecl\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V690) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V690)) end, fun (V691) -> fun (V692) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V691, V692)) end end}, V689)) end, fun (V693) -> fun (V694) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(ImpDecl\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V695) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V695)) end, fun (V696) -> fun (V697) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V696, V697)) end end}, V693, V694)) end end}, V688)))) end, V44))), case V698 of {'Idris.Prelude.Types.Left', E116} -> (fun (V699) -> {'Idris.Prelude.Types.Left', V699} end(E116)); {'Idris.Prelude.Types.Right', E117} -> (fun (V700) -> begin (V702 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V701) -> ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V8, V18, V15, V17, [], V668, V10, V701)) end, V688, V44))), case V702 of {'Idris.Prelude.Types.Left', E118} -> (fun (V703) -> {'Idris.Prelude.Types.Left', V703} end(E118)); {'Idris.Prelude.Types.Right', E119} -> (fun (V704) -> begin (V713 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V705) -> fun (V706) -> ('nested--11092-9564--in--un--addTransform'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V20, V683, V705, V706)) end end, case V26 of {'Idris.Idris.Syntax.MkIFaceInfo', E120, E121, E122, E123, E124, E125} -> (fun (V707, V708, V709, V710, V711, V712) -> V711 end(E120, E121, E122, E123, E124, E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V44))), case V713 of {'Idris.Prelude.Types.Left', E126} -> (fun (V714) -> {'Idris.Prelude.Types.Left', V714} end(E126)); {'Idris.Prelude.Types.Right', E127} -> (fun (V715) -> begin (V716 = ('Idris.Idris2.Core.Context':'un--unsetFlag'(V18, ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V20, {'Idris.Core.Context.Context.TCInline'}, V44))), case V716 of {'Idris.Prelude.Types.Left', E128} -> (fun (V717) -> {'Idris.Prelude.Types.Left', V717} end(E128)); {'Idris.Prelude.Types.Right', E129} -> (fun (V718) -> ('Idris.Idris2.Core.Context':'un--setOpenHints'(V18, V103, V44)) end(E129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E117)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E109)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--elabImplementation-11532'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> case V24 of [E0 | E1] -> (fun (V25, V26) -> case V26 of [] -> begin (V27 = ('Idris.Idris2.Builtin':'un--fst'(V25))), begin (V28 = ('Idris.Idris2.Builtin':'un--snd'(V25))), fun (V29) -> begin (V60 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(V27, case V22 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59) -> V30 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V29))), case V60 of {'Idris.Prelude.Types.Left', E32} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V62) -> case V62 of {'Idris.Prelude.Types.Just', E34} -> (fun (V63) -> begin (V100 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(case V28 of {'Idris.Idris.Syntax.MkIFaceInfo', E35, E36, E37, E38, E39, E40} -> (fun (V64, V65, V66, V67, V68, V69) -> V64 end(E35, E36, E37, E38, E39, E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case V22 of {'Idris.Core.Context.MkDefs', E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70} -> (fun (V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99) -> V70 end(E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V29))), case V100 of {'Idris.Prelude.Types.Left', E71} -> (fun (V101) -> {'Idris.Prelude.Types.Left', V101} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V102) -> begin (V103 = {'Idris.Prelude.Types.Just', V63}), case V102 of {'Idris.Prelude.Types.Just', E73} -> (fun (V104) -> begin (V168 = ('Idris.Idris2.Data.List':'un--nub'({'Idris.Prelude.EqOrd.MkEq', fun (V105) -> fun (V106) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V105, V106)) end end, fun (V107) -> fun (V108) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V107, V108)) end end}, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V109) -> fun (V110) -> fun (V111) -> fun (V112) -> fun (V113) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V111, V112, V113)) end end end end end, fun (V114) -> fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V116, V117, V118)) end end end end end, fun (V119) -> fun (V120) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V120)) end end, fun (V121) -> fun (V122) -> fun (V123) -> fun (V124) -> fun (V125) -> fun (V126) -> fun (V127) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V124, V125, V126, V127)) end end end end end end end, fun (V128) -> fun (V129) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V129)) end end, fun (V130) -> fun (V131) -> fun (V132) -> fun (V133) -> fun (V134) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V132, V133, V134)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V135) -> fun (V136) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V135, V136)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, fun (V137) -> ('Idris.Idris2.TTImp.TTImp':'un--findIBinds'(V137)) end, V4)), ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V138) -> fun (V139) -> fun (V140) -> fun (V141) -> fun (V142) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V140, V141, V142)) end end end end end, fun (V143) -> fun (V144) -> fun (V145) -> fun (V146) -> fun (V147) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V145, V146, V147)) end end end end end, fun (V148) -> fun (V149) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V149)) end end, fun (V150) -> fun (V151) -> fun (V152) -> fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V153, V154, V155, V156)) end end end end end end end, fun (V157) -> fun (V158) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V158)) end end, fun (V159) -> fun (V160) -> fun (V161) -> fun (V162) -> fun (V163) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V161, V162, V163)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V164) -> fun (V165) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V164, V165)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, fun (V166) -> ('Idris.Idris2.TTImp.TTImp':'un--findIBinds'(V166)) end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V167) -> ('Idris.Idris2.Builtin':'un--snd'(V167)) end, V6))))))))), begin (V169 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + 0))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Found interface "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V27)))) end, V63, V29))), case V169 of {'Idris.Prelude.Types.Left', E74} -> (fun (V170) -> {'Idris.Prelude.Types.Left', V170} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V171) -> begin (V223 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + 0))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}  with params: "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V172) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V172)) end, fun (V173) -> fun (V174) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V173, V174)) end end}, case V28 of {'Idris.Idris.Syntax.MkIFaceInfo', E76, E77, E78, E79, E80, E81} -> (fun (V175, V176, V177, V178, V179, V180) -> V177 end(E76, E77, E78, E79, E80, E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}  specialised to: "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V181) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V182) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V182)) end, fun (V183) -> fun (V184) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V183, V184)) end end}, V181)) end, fun (V185) -> fun (V186) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V187) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V187)) end, fun (V188) -> fun (V189) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V188, V189)) end end}, V185, V186)) end end}, V4)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}  and parents: "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V190) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V191) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V191)) end, fun (V192) -> fun (V193) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V192, V193)) end end}, V190)) end, fun (V194) -> fun (V195) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V196) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V196)) end, fun (V197) -> fun (V198) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V197, V198)) end end}, V194, V195)) end end}, case V28 of {'Idris.Idris.Syntax.MkIFaceInfo', E82, E83, E84, E85, E86, E87} -> (fun (V199, V200, V201, V202, V203, V204) -> V202 end(E82, E83, E84, E85, E86, E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}  using implicits: "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V205) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V205)) end, fun (V206) -> fun (V207) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V206, V207)) end end}, V168)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}  and methods: "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V208) -> ('Idris.Idris2.Idris.Syntax':'dn--un--show_Show_Method'(V208)) end, fun (V209) -> fun (V210) -> ('Idris.Idris2.Idris.Syntax':'dn--un--showPrec_Show_Method'(V209, V210)) end end}, case V28 of {'Idris.Idris.Syntax.MkIFaceInfo', E88, E89, E90, E91, E92, E93} -> (fun (V211, V212, V213, V214, V215, V216) -> V215 end(E88, E89, E90, E91, E92, E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}Constructor: "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(case V28 of {'Idris.Idris.Syntax.MkIFaceInfo', E94, E95, E96, E97, E98, E99} -> (fun (V217, V218, V219, V220, V221, V222) -> V217 end(E94, E95, E96, E97, E98, E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), <<"\x{a}"/utf8>>)))))))))))))))))))))))))) end, V29))), case V223 of {'Idris.Prelude.Types.Left', E100} -> (fun (V224) -> {'Idris.Prelude.Types.Left', V224} end(E100)); {'Idris.Prelude.Types.Right', E101} -> (fun (V225) -> begin (V226 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + 0))), fun () -> <<"Constructor type: "/utf8>> end, V104, V29))), case V226 of {'Idris.Prelude.Types.Left', E102} -> (fun (V227) -> {'Idris.Prelude.Types.Left', V227} end(E102)); {'Idris.Prelude.Types.Right', E103} -> (fun (V228) -> begin (V229 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Making implementation "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V20)))) end, V29))), case V229 of {'Idris.Prelude.Types.Left', E104} -> (fun (V230) -> {'Idris.Prelude.Types.Left', V230} end(E104)); {'Idris.Prelude.Types.Right', E105} -> (fun (V231) -> begin (V232 = case V3 of 1 -> [{'Idris.TTImp.TTImp.Inline'} | []]; 0 -> [{'Idris.TTImp.TTImp.Inline'} | [{'Idris.TTImp.TTImp.Hint', 1} | []]]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V233 = ('un--bindImpls'(('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V7, ('un--bindConstraints'(('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), {'Idris.Core.TT.AutoImplicit'}, V6, ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V5}, V4))))))), begin (V234 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V18, V29))), case V234 of {'Idris.Prelude.Types.Left', E106} -> (fun (V235) -> {'Idris.Prelude.Types.Left', V235} end(E106)); {'Idris.Prelude.Types.Right', E107} -> (fun (V236) -> begin (V237 = case V236 of 1 -> ('Idris.Idris2.TTImp.Utils':'un--findBindableNames'(1, V8, [], V233)); 0 -> []; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V238 = ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V237, V233))), begin (V239 = {'Idris.TTImp.TTImp.IClaim', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), V13, V232, {'Idris.TTImp.TTImp.MkImpTy', {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.FC.EmptyFC'}, V20, V238}}), begin (V243 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Implementation type: "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V240) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V240)) end, fun (V241) -> fun (V242) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V241, V242)) end end}, V238)))) end, V29))), case V243 of {'Idris.Prelude.Types.Left', E108} -> (fun (V244) -> {'Idris.Prelude.Types.Left', V244} end(E108)); {'Idris.Prelude.Types.Right', E109} -> (fun (V245) -> begin (V246 = case ('Idris.Idris2.Idris.Syntax':'un--typePass'(V11)) of 1 -> (('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V8, V18, V15, V17, [], V9, V10, V239))(V29)); 0 -> {'Idris.Prelude.Types.Right', 0}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V246 of {'Idris.Prelude.Types.Left', E110} -> (fun (V247) -> {'Idris.Prelude.Types.Left', V247} end(E110)); {'Idris.Prelude.Types.Right', E111} -> (fun (V248) -> case ('Idris.Idris2.Idris.Syntax':'un--defPass'(V11)) of 1 -> case V0 of {'Idris.Prelude.Types.Just', E112} -> (fun (V249) -> begin (V251 = begin (V250 = ('erlang':'get'(V18))), {'Idris.Prelude.Types.Right', V250} end), case V251 of {'Idris.Prelude.Types.Left', E113} -> (fun (V252) -> {'Idris.Prelude.Types.Left', V252} end(E113)); {'Idris.Prelude.Types.Right', E114} -> (fun (V253) -> begin (V284 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(V20, case V253 of {'Idris.Core.Context.MkDefs', E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144} -> (fun (V254, V255, V256, V257, V258, V259, V260, V261, V262, V263, V264, V265, V266, V267, V268, V269, V270, V271, V272, V273, V274, V275, V276, V277, V278, V279, V280, V281, V282, V283) -> V254 end(E115, E116, E117, E118, E119, E120, E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V29))), case V284 of {'Idris.Prelude.Types.Left', E145} -> (fun (V285) -> {'Idris.Prelude.Types.Left', V285} end(E145)); {'Idris.Prelude.Types.Right', E146} -> (fun (V286) -> begin (V287 = {'Idris.Prelude.Types.Just', V104}), case V286 of {'Idris.Prelude.Types.Just', E147} -> (fun (V288) -> begin (V289 = (('un--getMethImps'([], V18, {'Idris.Core.Env.Nil'}, V288))(V29))), case V289 of {'Idris.Prelude.Types.Left', E148} -> (fun (V290) -> {'Idris.Prelude.Types.Left', V290} end(E148)); {'Idris.Prelude.Types.Right', E149} -> (fun (V291) -> begin (V355 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + 0))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Bind implicits to each method: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V292) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V293) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V293)) end, fun (V294) -> fun (V295) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V294, V295)) end end}, {'Idris.Prelude.Show.MkShow', fun (V296) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V297) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V297)) end, fun (V298) -> fun (V299) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V298, V299)) end end}, {'Idris.Prelude.Show.MkShow', fun (V300) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V301) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V301)) end, fun (V302) -> fun (V303) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V302, V303)) end end}, V300)) end, fun (V304) -> fun (V305) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V306) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V306)) end, fun (V307) -> fun (V308) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V307, V308)) end end}, V304, V305)) end end}}, V296)) end, fun (V309) -> fun (V310) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V311) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V311)) end, fun (V312) -> fun (V313) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V312, V313)) end end}, {'Idris.Prelude.Show.MkShow', fun (V314) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V315) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V315)) end, fun (V316) -> fun (V317) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V316, V317)) end end}, V314)) end, fun (V318) -> fun (V319) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V320) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V320)) end, fun (V321) -> fun (V322) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V321, V322)) end end}, V318, V319)) end end}}, V309, V310)) end end}}, V292)) end, fun (V323) -> fun (V324) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V325) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V325)) end, fun (V326) -> fun (V327) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V326, V327)) end end}, {'Idris.Prelude.Show.MkShow', fun (V328) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V329) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V329)) end, fun (V330) -> fun (V331) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V330, V331)) end end}, {'Idris.Prelude.Show.MkShow', fun (V332) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V333) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V333)) end, fun (V334) -> fun (V335) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V334, V335)) end end}, V332)) end, fun (V336) -> fun (V337) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V338) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V338)) end, fun (V339) -> fun (V340) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V339, V340)) end end}, V336, V337)) end end}}, V328)) end, fun (V341) -> fun (V342) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V343) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V343)) end, fun (V344) -> fun (V345) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--showPrec_Show_ZeroOneOmega'(V344, V345)) end end}, {'Idris.Prelude.Show.MkShow', fun (V346) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V347) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V347)) end, fun (V348) -> fun (V349) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V348, V349)) end end}, V346)) end, fun (V350) -> fun (V351) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V352) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V352)) end, fun (V353) -> fun (V354) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V353, V354)) end end}, V350, V351)) end end}}, V341, V342)) end end}}, V323, V324)) end end}, V291)))) end, V29))), case V355 of {'Idris.Prelude.Types.Left', E150} -> (fun (V356) -> {'Idris.Prelude.Types.Left', V356} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V357) -> begin (V358 = {'Idris.Prelude.Types.Just', V288}), ('case--case block in case block in case block in case block in elabImplementation-12099'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V25, V27, V28, V63, V103, V104, V287, V168, V232, V233, V236, V237, V238, V239, V249, V253, V288, V358, V291, ('un--addDefaults'(('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V20, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(case V28 of {'Idris.Idris.Syntax.MkIFaceInfo', E152, E153, E154, E155, E156, E157} -> (fun (V359, V360, V361, V362, V363, V364) -> V361 end(E152, E153, E154, E155, E156, E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V365) -> ('Idris.Idris2.Core.Name':'un--dropNS'(case V365 of {'Idris.Idris.Syntax.MkMethod', E158, E159, E160, E161} -> (fun (V366, V367, V368, V369) -> V366 end(E158, E159, E160, E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end, case V28 of {'Idris.Idris.Syntax.MkIFaceInfo', E162, E163, E164, E165, E166, E167} -> (fun (V370, V371, V372, V373, V374, V375) -> V374 end(E162, E163, E164, E165, E166, E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), case V28 of {'Idris.Idris.Syntax.MkIFaceInfo', E168, E169, E170, E171, E172, E173} -> (fun (V376, V377, V378, V379, V380, V381) -> V381 end(E168, E169, E170, E171, E172, E173)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V249)), V29)) end end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E147)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t happen, can\x{27}t find type of "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V20))))}, V29)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E112)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> {'Idris.Prelude.Types.Right', 0}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E109)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E73)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V18, ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), case V28 of {'Idris.Idris.Syntax.MkIFaceInfo', E174, E175, E176, E177, E178, E179} -> (fun (V382, V383, V384, V385, V386, V387) -> V382 end(E174, E175, E176, E177, E178, E179)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V29)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E34)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V18, ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V27, V29)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V388) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AmbiguousName', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V389) -> ('Idris.Idris2.Builtin':'un--fst'(V389)) end, V24))}, V388)) end end end(E0, E1)); [] -> fun (V390) -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V18, ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V5, V390)) end; _ -> fun (V391) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AmbiguousName', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V392) -> ('Idris.Idris2.Builtin':'un--fst'(V392)) end, V24))}, V391)) end end.
'case--elabImplementation,topMethType-10102'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31) -> case V31 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V32, V33) -> begin (V34 = ('Idris.Idris2.TTImp.Utils':'un--substNames'(V8, V26, V33))), begin (V36 = ('Idris.Idris2.TTImp.Utils':'un--substBindVars'(V8, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V35) -> {'Idris.Builtin.MkPair', V35, {'Idris.TTImp.TTImp.Implicit', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), 0}} end, V22)), V34))), begin (V37 = ('Idris.Idris2.TTImp.Utils':'un--substNames'(V8, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V21, V4)), V36))), fun (V38) -> begin (V75 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Substitute implicits "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V39) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V39)) end, fun (V40) -> fun (V41) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V40, V41)) end end}, V22)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" parameters "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V42) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V43) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V43)) end, fun (V44) -> fun (V45) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V44, V45)) end end}, {'Idris.Prelude.Show.MkShow', fun (V46) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V47) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V47)) end, fun (V48) -> fun (V49) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V48, V49)) end end}, V46)) end, fun (V50) -> fun (V51) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V52) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V52)) end, fun (V53) -> fun (V54) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V53, V54)) end end}, V50, V51)) end end}}, V42)) end, fun (V55) -> fun (V56) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V57) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V57)) end, fun (V58) -> fun (V59) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V58, V59)) end end}, {'Idris.Prelude.Show.MkShow', fun (V60) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V61) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V61)) end, fun (V62) -> fun (V63) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V62, V63)) end end}, V60)) end, fun (V64) -> fun (V65) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V66) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V66)) end, fun (V67) -> fun (V68) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V67, V68)) end end}, V64, V65)) end end}}, V55, V56)) end end}, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V21, V4)))), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V69) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V69)) end, fun (V70) -> fun (V71) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V70, V71)) end end}, V34)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" is "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V72) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V72)) end, fun (V73) -> fun (V74) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V73, V74)) end end}, V37)))))))))))))))) end, V38))), case V75 of {'Idris.Prelude.Types.Left', E2} -> (fun (V76) -> {'Idris.Prelude.Types.Left', V76} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V77) -> begin (V78 = ('nested--11092-9555--in--un--bindImps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V24, ('un--bindConstraints'(('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), {'Idris.Core.TT.AutoImplicit'}, V6, V37))))), begin (V79 = ('Idris.Idris2.TTImp.TTImp':'un--findImplicits'(V78))), begin (V80 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNamesUsed'(V18, V14, V79, V8, V78, V38))), case V80 of {'Idris.Prelude.Types.Left', E4} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V82) -> begin (V90 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + 0))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Method "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(case V19 of {'Idris.Idris.Syntax.MkMethod', E6, E7, E8, E9} -> (fun (V83, V84, V85, V86) -> V83 end(E6, E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" ==> "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V27)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" : "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V87) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V87)) end, fun (V88) -> fun (V89) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V88, V89)) end end}, V82)))))))))))) end, V38))), case V90 of {'Idris.Prelude.Types.Left', E10} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V92) -> begin (V96 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + 0))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"    (initially "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V93) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V93)) end, fun (V94) -> fun (V95) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V94, V95)) end end}, V34)), <<")"/utf8>>)))) end, V38))), case V96 of {'Idris.Prelude.Types.Left', E12} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V98) -> begin (V126 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Updates "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V99) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V100) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V100)) end, fun (V101) -> fun (V102) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V101, V102)) end end}, {'Idris.Prelude.Show.MkShow', fun (V103) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V104) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V104)) end, fun (V105) -> fun (V106) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V105, V106)) end end}, V103)) end, fun (V107) -> fun (V108) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V109) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V109)) end, fun (V110) -> fun (V111) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V110, V111)) end end}, V107, V108)) end end}}, V99)) end, fun (V112) -> fun (V113) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V114) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V114)) end, fun (V115) -> fun (V116) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V115, V116)) end end}, {'Idris.Prelude.Show.MkShow', fun (V117) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V118) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V118)) end, fun (V119) -> fun (V120) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V119, V120)) end end}, V117)) end, fun (V121) -> fun (V122) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V123) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V123)) end, fun (V124) -> fun (V125) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V124, V125)) end end}, V121, V122)) end end}}, V112, V113)) end end}, V26)))) end, V38))), case V126 of {'Idris.Prelude.Types.Left', E14} -> (fun (V127) -> {'Idris.Prelude.Types.Left', V127} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V128) -> begin (V132 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"From "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V129) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V129)) end, fun (V130) -> fun (V131) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V130, V131)) end end}, V78)))) end, V38))), case V132 of {'Idris.Prelude.Types.Left', E16} -> (fun (V133) -> {'Idris.Prelude.Types.Left', V133} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V134) -> begin (V150 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + 0))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Name updates "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V135) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V136) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V136)) end, fun (V137) -> fun (V138) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V137, V138)) end end}, {'Idris.Prelude.Show.MkShow', fun (V139) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V139)) end, fun (V140) -> fun (V141) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V140, V141)) end end}}, V135)) end, fun (V142) -> fun (V143) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V144) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V144)) end, fun (V145) -> fun (V146) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V145, V146)) end end}, {'Idris.Prelude.Show.MkShow', fun (V147) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V147)) end, fun (V148) -> fun (V149) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V148, V149)) end end}}, V142, V143)) end end}, V32)))) end, V38))), case V150 of {'Idris.Prelude.Types.Left', E18} -> (fun (V151) -> {'Idris.Prelude.Types.Left', V151} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V152) -> begin (V156 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + 0))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Param names: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V153) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V153)) end, fun (V154) -> fun (V155) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V154, V155)) end end}, V21)))) end, V38))), case V156 of {'Idris.Prelude.Types.Left', E20} -> (fun (V157) -> {'Idris.Prelude.Types.Left', V157} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V158) -> begin (V162 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Used names "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V159) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V159)) end, fun (V160) -> fun (V161) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V160, V161)) end end}, V79)))) end, V38))), case V162 of {'Idris.Prelude.Types.Left', E22} -> (fun (V163) -> {'Idris.Prelude.Types.Left', V163} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V164) -> begin (V166 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V165) -> ('Idris.Idris2.Builtin':'un--fst'(V165)) end, V24))), begin (V168 = case ('Idris.Idris2.Data.List':'un--isNil'(V166)) of 1 -> []; 0 -> [{'Idris.Builtin.MkPair', V27, ('nested--11092-9548--in--un--impsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.TTImp.TTImp.IVar', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V27}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V167) -> {'Idris.Builtin.MkPair', V167, {'Idris.TTImp.TTImp.IBindVar', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V167))}} end, V166))))} | []]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Builtin.MkPair', case V19 of {'Idris.Idris.Syntax.MkMethod', E24, E25, E26, E27} -> (fun (V169, V170, V171, V172) -> V169 end(E24, E25, E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Builtin.MkPair', V27, {'Idris.Builtin.MkPair', V32, {'Idris.Builtin.MkPair', case V19 of {'Idris.Idris.Syntax.MkMethod', E28, E29, E30, E31} -> (fun (V173, V174, V175, V176) -> V174 end(E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Builtin.MkPair', case V19 of {'Idris.Idris.Syntax.MkMethod', E32, E33, E34, E35} -> (fun (V177, V178, V179, V180) -> V179 end(E32, E33, E34, E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V82}}}}}, V168}} end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V14)).
'nested--11092-9562--in--un--updateClause'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V20 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V22, V23, V24) -> begin (V25 = ('nested--11092-9561--in--un--updateApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V23, V21))), case V25 of {'Idris.Prelude.Types.Left', E3} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PatClause', V22, V27, V24}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2)); {'Idris.TTImp.TTImp.WithClause', E5, E6, E7, E8, E9, E10} -> (fun (V28, V29, V30, V31, V32, V33) -> begin (V34 = ('nested--11092-9561--in--un--updateApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V29, V21))), case V34 of {'Idris.Prelude.Types.Left', E11} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V36) -> begin (V39 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V37) -> fun (V38) -> ('nested--11092-9562--in--un--updateClause'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V37, V38)) end end, V33, [], V21))), case V39 of {'Idris.Prelude.Types.Left', E13} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V41) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.WithClause', V28, V36, V30, V31, V32, V41}} end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5, E6, E7, E8, E9, E10)); {'Idris.TTImp.TTImp.ImpossibleClause', E15, E16} -> (fun (V42, V43) -> begin (V44 = ('nested--11092-9561--in--un--updateApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V43, V21))), case V44 of {'Idris.Prelude.Types.Left', E17} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V46) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ImpossibleClause', V42, V46}} end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11092-9563--in--un--updateBody'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V20 of {'Idris.TTImp.TTImp.IDef', E0, E1, E2} -> (fun (V22, V23, V24) -> begin (V27 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V25) -> fun (V26) -> ('nested--11092-9562--in--un--updateClause'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V25, V26)) end end, V24, [], V21))), case V27 of {'Idris.Prelude.Types.Left', E3} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V29) -> begin (V30 = ('nested--11092-9560--in--un--findMethName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V22, V23, V21))), case V30 of {'Idris.Prelude.Types.Left', E5} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V32) -> begin (V51 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"ide-mode.highlight"/utf8>>, (1 + 0), fun () -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V33) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V33)) end, fun (V34) -> fun (V35) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V34, V35)) end end}, {'Idris.Prelude.Show.MkShow', fun (V36) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V37) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V37)) end, fun (V38) -> fun (V39) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V38, V39)) end end}, {'Idris.Prelude.Show.MkShow', fun (V40) -> ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V40)) end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Core.FC':'dn--un--showPrec_Show_FC'(V41, V42)) end end}}, V36)) end, fun (V43) -> fun (V44) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V45) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V45)) end, fun (V46) -> fun (V47) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V46, V47)) end end}, {'Idris.Prelude.Show.MkShow', fun (V48) -> ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V48)) end, fun (V49) -> fun (V50) -> ('Idris.Idris2.Core.FC':'dn--un--showPrec_Show_FC'(V49, V50)) end end}}, V43, V44)) end end}}, {'Idris.Builtin.MkPair', V23, {'Idris.Builtin.MkPair', V32, V22}})) end, V21))), case V51 of {'Idris.Prelude.Types.Left', E7} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V53) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDef', V22, V32, V29}} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.TTImp.TTImp.ImpDecl':'un--getFC'(V20)), <<"Implementation body can only contain definitions"/utf8>>}, V21)) end.
'nested--11092-9561--in--un--updateApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V20 of {'Idris.TTImp.TTImp.IVar', E0, E1} -> (fun (V22, V23) -> begin (V24 = ('nested--11092-9560--in--un--findMethName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V22, V23, V21))), case V24 of {'Idris.Prelude.Types.Left', E2} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V26) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', V22, V26}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); {'Idris.TTImp.TTImp.IApp', E4, E5, E6} -> (fun (V27, V28, V29) -> begin (V30 = ('nested--11092-9561--in--un--updateApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V28, V21))), case V30 of {'Idris.Prelude.Types.Left', E7} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V27, V32, V29}} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5, E6)); {'Idris.TTImp.TTImp.IAutoApp', E9, E10, E11} -> (fun (V33, V34, V35) -> begin (V36 = ('nested--11092-9561--in--un--updateApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V34, V21))), case V36 of {'Idris.Prelude.Types.Left', E12} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V38) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAutoApp', V33, V38, V35}} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9, E10, E11)); {'Idris.TTImp.TTImp.INamedApp', E14, E15, E16, E17} -> (fun (V39, V40, V41, V42) -> begin (V43 = ('nested--11092-9561--in--un--updateApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V40, V21))), case V43 of {'Idris.Prelude.Types.Left', E18} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V45) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamedApp', V39, V45, V41, V42}} end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14, E15, E16, E17)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V20)), <<"Invalid method definition"/utf8>>}, V21)) end.
'nested--11092-9557--in--un--topMethTypes'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27) -> case V26 of [] -> {'Idris.Prelude.Types.Right', []}; [E0 | E1] -> (fun (V28, V29) -> begin (V30 = ('nested--11092-9556--in--un--topMethType'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V28, V27))), case V30 of {'Idris.Prelude.Types.Left', E2} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V32) -> case V32 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V33, V34) -> begin (V35 = ('nested--11092-9557--in--un--topMethTypes'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V34, V19)), V20, V21, V22, V23, V24, V25, V29, V27))), case V35 of {'Idris.Prelude.Types.Left', E6} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V37) -> {'Idris.Prelude.Types.Right', [V33 | V37]} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11092-9556--in--un--topMethType'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27) -> begin (V32 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V18, ('nested--11092-9553--in--un--methName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, case V26 of {'Idris.Idris.Syntax.MkMethod', E0, E1, E2, E3} -> (fun (V28, V29, V30, V31) -> V28 end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V27))), case V32 of {'Idris.Prelude.Types.Left', E4} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V34) -> begin (V37 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V35) -> fun (V36) -> ('nested--11092-9554--in--un--applyCon'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V20, V35, V36)) end end, V25, [], V27))), case V37 of {'Idris.Prelude.Types.Left', E6} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V39) -> begin (V40 = V39), begin (V45 = ('Idris.Idris2.TTImp.Utils':'un--substNames'(V8, V40, case V26 of {'Idris.Idris.Syntax.MkMethod', E8, E9, E10, E11} -> (fun (V41, V42, V43, V44) -> V44 end(E8, E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), (('case--elabImplementation,topMethType-10102'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V26, V25, V24, V23, V22, V21, V20, V19, V34, V39, V40, V45, (('Idris.Idris2.TTImp.BindImplicits':'un--renameIBinds'(V22, ('Idris.Idris2.TTImp.TTImp':'un--findImplicits'(V45)), V45))([]))))(V27)) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--10764-9215--in--un--toForward'(V0) -> case V0 of $\x{5c} -> $/; _ -> V0 end.
'nested--10865-9319--in--un--specialiseMeth'(V0, V1, V2, V3, V4, V5, V6) -> {'Idris.Builtin.MkPair', V6, {'Idris.TTImp.TTImp.INamedApp', V5, {'Idris.TTImp.TTImp.IVar', V5, V6}, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__con"/utf8>>}}, {'Idris.TTImp.TTImp.IVar', V5, V4}}}.
'nested--11092-9558--in--un--mkTopMethDecl'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> case V19 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V20, V21) -> case V21 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V22, V23) -> case V23 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V24, V25) -> case V25 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V26, V27) -> case V27 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V28, V29) -> begin (V31 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> V12 end, fun () -> fun (V30) -> [{'Idris.TTImp.TTImp.Totality', V30} | V12] end end, V28))), {'Idris.TTImp.TTImp.IClaim', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V26, V13, V31, {'Idris.TTImp.TTImp.MkImpTy', {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.FC.EmptyFC'}, V22, V29}} end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11092-9552--in--un--mkMethField'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V21 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V22, V23) -> case V23 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V24, V25) -> case V25 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V26, V27) -> case V27 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V28, V29) -> case V29 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V30, V31) -> begin (V38 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V32) -> ('nested--11132-9814--in--un--applyUpdate'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V22, V24, V26, V28, V30, V31, V20, V19, V32)) end, ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> [] end, fun () -> fun (V33) -> V33 end end, ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V34) -> fun (V35) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V34, V35)) end end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V36, V37)) end end}, ('Idris.Idris2.Core.Name':'un--dropNS'(V22)), V20))))))), begin (V40 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V39) -> ('Idris.Idris2.Builtin':'un--fst'(V39)) end, V19))), ('nested--11092-9550--in--un--mkLam'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V38, ('nested--11092-9548--in--un--impsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, ('nested--11092-9551--in--un--applyTo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, V24}, V38)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V41) -> {'Idris.Builtin.MkPair', V41, {'Idris.TTImp.TTImp.IVar', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V41))}}}} end, V40)))))) end end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11092-9550--in--un--mkLam'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V19 of [] -> V20; [E0 | E1] -> (fun (V21, V22) -> case V21 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V23, V24) -> case V24 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V25, V26) -> {'Idris.TTImp.TTImp.ILam', {'Idris.Core.FC.EmptyFC'}, V25, V26, {'Idris.Prelude.Types.Just', V23}, {'Idris.TTImp.TTImp.Implicit', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), 0}, ('nested--11092-9550--in--un--mkLam'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V22, V20))} end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11092-9559--in--un--methNameUpdate'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> case V19 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V20, V21) -> case V20 of {'Idris.Core.Name.UN', E4} -> (fun (V22) -> case V21 of {'Idris.Builtin.MkPair', E7, E8} -> (fun (V23, V24) -> {'Idris.Builtin.MkPair', {'Idris.Core.Name.UN', V22}, V23} end(E7, E8)); _ -> case V21 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V25, V26) -> {'Idris.Builtin.MkPair', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', ('Idris.Idris2.Core.Name':'un--nameRoot'(V20))}}, V25} end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4)); {'Idris.Core.Name.NS', E9, E10} -> (fun (V27, V28) -> case V21 of {'Idris.Builtin.MkPair', E13, E14} -> (fun (V29, V30) -> ('nested--11092-9559--in--un--methNameUpdate'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.Builtin.MkPair', V28, {'Idris.Builtin.MkPair', V29, V30}})) end(E13, E14)); _ -> case V21 of {'Idris.Builtin.MkPair', E11, E12} -> (fun (V31, V32) -> {'Idris.Builtin.MkPair', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', ('Idris.Idris2.Core.Name':'un--nameRoot'(V20))}}, V31} end(E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9, E10)); _ -> case V21 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V33, V34) -> {'Idris.Builtin.MkPair', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', ('Idris.Idris2.Core.Name':'un--nameRoot'(V20))}}, V33} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11092-9553--in--un--methName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> case V19 of {'Idris.Core.Name.NS', E0, E1} -> (fun (V20, V21) -> ('nested--11092-9553--in--un--methName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V21)) end(E0, E1)); _ -> {'Idris.Core.Name.DN', ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V19)), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V19)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"_"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V5)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"_"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(case V3 of 1 -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2)); 0 -> <<""/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"_"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V22) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V23) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V23)) end, fun (V24) -> fun (V25) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V24, V25)) end end}, V22)) end, V4))))))))))))))}}} end.
'nested--11092-9548--in--un--impsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V20 of [] -> V19; [E0 | E1] -> (fun (V21, V22) -> case V21 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V23, V24) -> ('nested--11092-9548--in--un--impsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.TTImp.TTImp.INamedApp', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V19, V23, V24}, V22)) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11092-9547--in--un--getFieldArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> case V19 of {'Idris.Core.TT.Bind', E0, E1, E2, E3} -> (fun (V20, V21, V22, V23) -> case V22 of {'Idris.Core.TT.Pi', E4, E5, E6, E7} -> (fun (V24, V25, V26, V27) -> [{'Idris.Builtin.MkPair', V21, ('nested--11127-9618--in--un--getArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V20, V24, V25, V26, V27, V21, V23, V27))} | ('nested--11092-9547--in--un--getFieldArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V23))] end(E4, E5, E6, E7)); _ -> [] end end(E0, E1, E2, E3)); _ -> [] end.
'nested--11127-9618--in--un--getArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26) -> case V26 of {'Idris.Core.TT.Bind', E0, E1, E2, E3} -> (fun (V27, V28, V29, V30) -> case V29 of {'Idris.Core.TT.Pi', E4, E5, E6, E7} -> (fun (V31, V32, V33, V34) -> [{'Idris.Builtin.MkPair', V28, {'Idris.Builtin.MkPair', V32, ('Idris.Idris2.Core.TT':'un--forgetDef'(V33))}} | ('nested--11127-9618--in--un--getArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V30))] end(E4, E5, E6, E7)); _ -> [] end end(E0, E1, E2, E3)); _ -> [] end.
'nested--11092-9560--in--un--findMethName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> case ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V23) -> fun (V24) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V23, V24)) end end, fun (V25) -> fun (V26) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V25, V26)) end end}, V21, V19)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V20, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V21)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" is not a method of "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V5))))))}, V22)) end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V27) -> {'Idris.Prelude.Types.Right', V27} end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--10865-9320--in--un--extendBody'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V7 of [] -> {'Idris.Builtin.MkPair', V8, V6}; [E0 | E1] -> (fun (V9, V10) -> case ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V11, V12)) end end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V13, V14)) end end}, V9, V1)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('nested--10865-9320--in--un--extendBody'(V0, V1, V2, V3, V4, V5, [V9 | V6], V10, V8)) end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V15) -> begin (V17 = ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V3, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V16) -> ('nested--10865-9319--in--un--specialiseMeth'(V0, V1, V2, V3, V4, V5, V16)) end, V2))))), begin (V19 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V18) -> ('Idris.Idris2.TTImp.Utils':'un--substNamesClause'([], V17, V18)) end, V15))), ('nested--10865-9320--in--un--extendBody'(V0, V1, V2, V3, V4, V5, V6, V10, [{'Idris.TTImp.TTImp.IDef', V5, V9, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V20) -> ('Idris.Idris2.TTImp.Utils':'un--substLocClause'(V5, V20)) end, V19))} | V8])) end end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--10865-9321--in--un--dropGot'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of [] -> V6; [E0 | E1] -> (fun (V8, V9) -> case V8 of {'Idris.TTImp.TTImp.IDef', E2, E3, E4} -> (fun (V10, V11, V12) -> ('nested--10865-9321--in--un--dropGot'(V0, V1, V2, V3, V4, V5, ('Idris.Idris2.Data.List':'un--filter'(fun (V13) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V13, V11)) end, V6)), V9)) end(E2, E3, E4)); _ -> ('nested--10865-9321--in--un--dropGot'(V0, V1, V2, V3, V4, V5, V6, V9)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11092-9555--in--un--bindImps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V19 of [] -> V20; [E0 | E1] -> (fun (V21, V22) -> case V21 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V23, V24) -> case V24 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V25, V26) -> {'Idris.TTImp.TTImp.IPi', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V25, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V23}, V26, ('nested--11092-9555--in--un--bindImps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V22, V20))} end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11092-9549--in--un--autoImpsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V20 of [] -> V19; [E0 | E1] -> (fun (V21, V22) -> ('nested--11092-9549--in--un--autoImpsApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.TTImp.TTImp.IAutoApp', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V19)), V19, V21}, V22)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11132-9814--in--un--applyUpdate'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27) -> case V27 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V28, V29) -> case V28 of {'Idris.Core.Name.UN', E2} -> (fun (V30) -> case V30 of {'Idris.Core.Name.Basic', E3} -> (fun (V31) -> case V29 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V32, V33) -> ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> {'Idris.Builtin.MkPair', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', V31}}, {'Idris.Builtin.MkPair', V32, V33}} end, fun () -> fun (V34) -> {'Idris.Builtin.MkPair', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', V34}}, {'Idris.Builtin.MkPair', V32, V33}} end end, ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V35, V36)) end end, fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V37, V38)) end end}, V31, V21)))) end(E4, E5)); _ -> V27 end end(E3)); _ -> V27 end end(E2)); _ -> V27 end end(E0, E1)); _ -> V27 end.
'nested--11092-9551--in--un--applyTo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> case V20 of [] -> V19; [E0 | E1] -> (fun (V21, V22) -> case V21 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V23, V24) -> case V24 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V25, V26) -> case V26 of {'Idris.Core.TT.Explicit'} -> (fun () -> ('nested--11092-9551--in--un--applyTo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.TTImp.TTImp.IApp', {'Idris.Core.FC.EmptyFC'}, V19, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, V23}}, V22)) end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> ('nested--11092-9551--in--un--applyTo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.TTImp.TTImp.INamedApp', {'Idris.Core.FC.EmptyFC'}, V19, V23, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, V23}}, V22)) end()); {'Idris.Core.TT.Implicit'} -> (fun () -> ('nested--11092-9551--in--un--applyTo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.TTImp.TTImp.INamedApp', {'Idris.Core.FC.EmptyFC'}, V19, V23, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, V23}}, V22)) end()); {'Idris.Core.TT.DefImplicit', E6} -> (fun (V27) -> ('nested--11092-9551--in--un--applyTo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, {'Idris.TTImp.TTImp.INamedApp', {'Idris.Core.FC.EmptyFC'}, V19, V23, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, V23}}, V22)) end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--11092-9546--in--un--applyEnv'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> begin (V21 = ('Idris.Idris2.Core.Context':'un--resolveName'(V18, V19, V20))), case V21 of {'Idris.Prelude.Types.Left', E0} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', {'Idris.Core.Name.Resolved', V23}, {'Idris.Builtin.MkPair', {'Idris.Prelude.Types.Nothing'}, {'Idris.Builtin.MkPair', ('Idris.Idris2.Prelude.Types.List':'un--reverse'(('Idris.Idris2.Core.Env':'un--allVars'(V8, V10)))), fun (V24) -> fun (V25) -> ('Idris.Idris2.Core.UnifyState':'un--applyToFull'(V8, ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), {'Idris.Core.TT.Ref', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V25, {'Idris.Core.Name.Resolved', V23}}, V10)) end end}}}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--11092-9554--in--un--applyCon'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> begin (V22 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V18, ('nested--11092-9553--in--un--methName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V20)), V21))), case V22 of {'Idris.Prelude.Types.Left', E0} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Core.Name':'un--dropNS'(V20)), {'Idris.TTImp.TTImp.IVar', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V24}}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--11092-9564--in--un--addTransform'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> begin (V49 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + 0))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Adding transform for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(case V21 of {'Idris.Idris.Syntax.MkMethod', E0, E1, E2, E3} -> (fun (V23, V24, V25, V26) -> V23 end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" : "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V27) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V27)) end, fun (V28) -> fun (V29) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V28, V29)) end end}, case V21 of {'Idris.Idris.Syntax.MkMethod', E4, E5, E6, E7} -> (fun (V30, V31, V32, V33) -> V33 end(E4, E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}\x{9}for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V19)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" in "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V34) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V35) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V35)) end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V36, V37)) end end}, {'Idris.Prelude.Show.MkShow', fun (V38) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V38)) end, fun (V39) -> fun (V40) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V39, V40)) end end}}, V34)) end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V43) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V43)) end, fun (V44) -> fun (V45) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V44, V45)) end end}, {'Idris.Prelude.Show.MkShow', fun (V46) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V46)) end, fun (V47) -> fun (V48) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V47, V48)) end end}}, V41, V42)) end end}, V20)))))))))))))))) end, V22))), case V49 of {'Idris.Prelude.Types.Left', E8} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V51) -> begin (V56 = {'Idris.TTImp.TTImp.INamedApp', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), {'Idris.TTImp.TTImp.IVar', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), case V21 of {'Idris.Idris.Syntax.MkMethod', E10, E11, E12, E13} -> (fun (V52, V53, V54, V55) -> V52 end(E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end}, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__con"/utf8>>}}, {'Idris.TTImp.TTImp.IVar', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V19}}), case ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V57) -> fun (V58) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V57, V58)) end end, fun (V59) -> fun (V60) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V59, V60)) end end}, ('Idris.Idris2.Core.Name':'un--dropNS'(case V21 of {'Idris.Idris.Syntax.MkMethod', E21, E22, E23, E24} -> (fun (V61, V62, V63, V64) -> V61 end(E21, E22, E23, E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V20)) of {'Idris.Prelude.Types.Just', E14} -> (fun (V65) -> begin (V66 = {'Idris.TTImp.TTImp.IVar', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), V65}), begin (V73 = ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V67) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V67)) end, fun (V68) -> fun (V69) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V68, V69)) end end}, V56)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" ==> "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V70) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V70)) end, fun (V71) -> fun (V72) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V71, V72)) end end}, V66)))))) end, V22))), case V73 of {'Idris.Prelude.Types.Left', E15} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V75) -> ('Idris.Idris2.Core.UnifyState':'un--handleUnify'(V18, V17, ('Idris.Idris2.TTImp.Elab.Check':'un--processDecl'(V8, V18, V15, V17, [], V9, V10, {'Idris.TTImp.TTImp.ITransform', ('nested--11092-9545--in--un--vfc'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18)), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(case V21 of {'Idris.Idris.Syntax.MkMethod', E17, E18, E19, E20} -> (fun (V76, V77, V78, V79) -> V76 end(E17, E18, E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V19))))))}}, V56, V66})), fun (V80) -> fun (V81) -> ('Idris.Idris2.Core.Context.Log':'un--log'(V18, <<"elab.implementation"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t add transform "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V82) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V82)) end, fun (V83) -> fun (V84) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V83, V84)) end end}, V56)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" ==> "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V85) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V85)) end, fun (V86) -> fun (V87) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V86, V87)) end end}, V66)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}\x{9}"/utf8>>, ('Idris.Idris2.Core.Core':'dn--un--show_Show_Error'(V80)))))))))))) end, V81)) end end, V22)) end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E14)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--replaceSep'(V0) -> ('Idris.Idris2.Prelude.Types':'un--fastPack'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1) -> ('nested--10764-9215--in--un--toForward'(V1)) end, ('Idris.Idris2.Prelude.Types':'un--fastUnpack'(V0)))))).
'un--mkImplName'(V0, V1, V2) -> {'Idris.Core.Name.DN', ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V1)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" implementation at "/utf8>>, ('un--replaceSep'(('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V0)))))))), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"__Impl_"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V1)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"_"/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"_"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V4) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V4)) end, fun (V5) -> fun (V6) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V5, V6)) end end}, V3)) end, V2))))))))))}}}.
'un--getMethImps'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.TT.Bind', E0, E1, E2, E3} -> (fun (V4, V5, V6, V7) -> fun (V8) -> case V6 of {'Idris.Core.TT.Pi', E4, E5, E6, E7} -> (fun (V9, V10, V11, V12) -> case V11 of {'Idris.Core.TT.Implicit'} -> (fun () -> begin (V21 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V13) -> case V13 of {'Idris.Prelude.Types.Left', E8} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V15) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.TTImp.TTImp.Functor':'dn--un--map_Functor_RawImp\x{27}'(fun (V16) -> case V16 of {'Idris.Core.TT.MkKindedName', E10, E11, E12} -> (fun (V17, V18, V19) -> V19 end(E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V15))} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V20) -> ('Idris.Idris2.TTImp.Unelab':'un--unelabNoSugar'(V0, V1, V2, V12, V20)) end, V8))), case V21 of {'Idris.Prelude.Types.Left', E13} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V23) -> begin (V24 = (('un--getMethImps'([V5 | V0], V1, {'Idris.Core.Env.::', {'Idris.Core.TT.Pi', V9, V10, {'Idris.Core.TT.Implicit'}, V12}, V2}, V7))(V8))), case V24 of {'Idris.Prelude.Types.Left', E15} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V26) -> {'Idris.Prelude.Types.Right', [{'Idris.Builtin.MkPair', V5, {'Idris.Builtin.MkPair', V10, V23}} | V26]} end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> {'Idris.Prelude.Types.Right', []} end end(E4, E5, E6, E7)); _ -> {'Idris.Prelude.Types.Right', []} end end end(E0, E1, E2, E3)); _ -> fun (V27) -> {'Idris.Prelude.Types.Right', []} end end.
'un--elabImplementation'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18) -> begin (V27 = case ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V19) -> fun (V20) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V19, V20)) end end, fun (V21) -> fun (V22) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V21, V22)) end end}, V16, V10)) of {'Idris.Prelude.Types.Just', E0} -> (fun (V23) -> case V23 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V24, V25) -> case V24 of {'Idris.Prelude.Types.Just', E3} -> (fun (V26) -> V26 end(E3)); _ -> V16 end end(E1, E2)); _ -> V16 end end(E0)); _ -> V16 end), fun (V28) -> begin (V29 = ('Idris.Idris2.Core.Context':'un--inCurrentNS'(V1, V27, V28))), case V29 of {'Idris.Prelude.Types.Left', E4} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V31) -> begin (V33 = begin (V32 = ('erlang':'get'(V3))), {'Idris.Prelude.Types.Right', V32} end), case V33 of {'Idris.Prelude.Types.Left', E6} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V35) -> begin (V37 = begin (V36 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V36} end), case V37 of {'Idris.Prelude.Types.Left', E8} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V39) -> begin (V70 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V13, case V39 of {'Idris.Core.Context.MkDefs', E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39} -> (fun (V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69) -> V40 end(E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V28))), case V70 of {'Idris.Prelude.Types.Left', E40} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V72) -> (('case--elabImplementation-11532'(V18, V17, V16, V15, V14, V13, V12, V11, V0, V10, V9, V8, V7, V6, V5, V4, V3, V2, V1, V27, V31, V35, V39, V72, ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V75, V76, V77)) end end end end end, fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V80, V81, V82)) end end end end end, fun (V83) -> fun (V84) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V84)) end end, fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V88, V89, V90, V91)) end end end end end end end, fun (V92) -> fun (V93) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V93)) end end, fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V96, V97, V98)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V99) -> fun (V100) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V99, V100)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, fun (V101) -> ('Idris.Idris2.Libraries.Data.ANameMap':'un--lookupName'(V101, case V35 of {'Idris.Idris.Syntax.MkSyntax', E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52} -> (fun (V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112) -> V107 end(E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V113) -> ('Idris.Idris2.Builtin':'un--fst'(V113)) end, V72))))))(V28)) end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--bindImpls'(V0, V1, V2) -> case V1 of [] -> V2; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V7, V8) -> {'Idris.TTImp.TTImp.IPi', V0, V7, {'Idris.Core.TT.Implicit'}, {'Idris.Prelude.Types.Just', V5}, V8, ('un--bindImpls'(V0, V4, V2))} end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--bindConstraints'(V0, V1, V2, V3) -> case V2 of [] -> V3; [E0 | E1] -> (fun (V4, V5) -> case V4 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V6, V7) -> {'Idris.TTImp.TTImp.IPi', V0, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), V1, V6, V7, ('un--bindConstraints'(V0, V1, V5, V3))} end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--addDefaults'(V0, V1, V2, V3, V4, V5) -> begin (V6 = ('nested--10865-9321--in--un--dropGot'(V5, V4, V3, V2, V1, V0, V3, V5))), ('nested--10865-9320--in--un--extendBody'(V5, V4, V3, V2, V1, V0, [], V6, V5)) end.
