-module('Idris.Idris2.Yaffle.REPL').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'nested--11165-649--in--un--printName'/7,
  'un--showInfo'/2,
  'un--repl'/4,
  'un--processCatch'/5,
  'un--process'/5
]).
'nested--11165-649--in--un--printName'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V9, V10) -> begin (V12 = begin (V11 = ('erlang':'get'(V4))), {'Idris.Prelude.Types.Right', V11} end), case V12 of {'Idris.Prelude.Types.Left', E4} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V4, [], V14, {'Idris.Core.Env.Nil'}, V10, V6))), case V15 of {'Idris.Prelude.Types.Left', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V17) -> begin (V18 = (('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V4, {'Idris.Core.Env.Nil'}, V17))(V6))), case V18 of {'Idris.Prelude.Types.Left', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V20) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V21) -> case V21 of {'Idris.Prelude.Types.Left', E10} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V23) -> {'Idris.Prelude.Types.Right', 0} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V24) -> begin (V55 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V27, V28, V29)) end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> V31 end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> begin (V38 = (V35(V37))), begin (V39 = (V36(V37))), (V38(V39)) end end end end end end end}, fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> begin (V45 = (V42(V44))), ((V43(V45))(V44)) end end end end end end, fun (V46) -> fun (V47) -> fun (V48) -> begin (V49 = (V47(V48))), (V49(V48)) end end end end}, fun (V50) -> fun (V51) -> V51 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" : "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V52) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_KindedName'(V52)) end, fun (V53) -> fun (V54) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_KindedName'(V53, V54)) end end}, V20))))))))(V24))), {'Idris.Prelude.Types.Right', V55} end end, V6)) end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--showInfo'(V0, V1) -> case V0 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V2, V3) -> case V3 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V4, V5) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V6) -> case V6 of {'Idris.Prelude.Types.Left', E4} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V8) -> {'Idris.Prelude.Types.Right', 0} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V9) -> begin (V80 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V12, V13, V14)) end end end end end, fun (V15) -> fun (V16) -> fun (V17) -> V16 end end end, fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> begin (V23 = (V20(V22))), begin (V24 = (V21(V22))), (V23(V24)) end end end end end end end}, fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> begin (V30 = (V27(V29))), ((V28(V30))(V29)) end end end end end end, fun (V31) -> fun (V32) -> fun (V33) -> begin (V34 = (V32(V33))), (V34(V33)) end end end end}, fun (V35) -> fun (V36) -> V36 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" ==>\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{9}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Context.Context':'dn--un--show_Show_Def'(case V5 of {'Idris.Core.Context.Context.MkGlobalDef', E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25} -> (fun (V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56) -> V54 end(E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{9}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V57) -> ('Idris.Idris2.Core.Context.Context':'dn--un--show_Show_SCCall'(V57)) end, fun (V58) -> fun (V59) -> ('Idris.Idris2.Core.Context.Context':'dn--un--showPrec_Show_SCCall'(V58, V59)) end end}, case V5 of {'Idris.Core.Context.Context.MkGlobalDef', E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45} -> (fun (V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79) -> V79 end(E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), <<"\x{a}"/utf8>>))))))))))))))))(V9))), {'Idris.Prelude.Types.Right', V80} end end, V1)) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--repl'(V0, V1, V2, V3) -> begin (V36 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V4) -> case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> {'Idris.Prelude.Types.Right', 0} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V7) -> begin (V35 = (('Idris.Idris2.Prelude.IO':'un--putStr'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V10, V11, V12)) end end end end end, fun (V13) -> fun (V14) -> fun (V15) -> V14 end end end, fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> begin (V21 = (V18(V20))), begin (V22 = (V19(V20))), (V21(V22)) end end end end end end end}, fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> begin (V28 = (V25(V27))), ((V26(V28))(V27)) end end end end end end, fun (V29) -> fun (V30) -> fun (V31) -> begin (V32 = (V30(V31))), (V32(V31)) end end end end}, fun (V33) -> fun (V34) -> V34 end end}, <<"Yaffle> "/utf8>>))(V7))), {'Idris.Prelude.Types.Right', V35} end end, V3))), case V36 of {'Idris.Prelude.Types.Left', E2} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V38) -> begin (V67 = begin (V66 = (('Idris.Idris2.Prelude.IO':'un--getLine'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V41, V42, V43)) end end end end end, fun (V44) -> fun (V45) -> fun (V46) -> V45 end end end, fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> begin (V52 = (V49(V51))), begin (V53 = (V50(V51))), (V52(V53)) end end end end end end end}, fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> begin (V59 = (V56(V58))), ((V57(V59))(V58)) end end end end end end, fun (V60) -> fun (V61) -> fun (V62) -> begin (V63 = (V61(V62))), (V63(V62)) end end end end}, fun (V64) -> fun (V65) -> V65 end end}))(V3))), {'Idris.Prelude.Types.Right', V66} end), case V67 of {'Idris.Prelude.Types.Left', E4} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V69) -> case ('Idris.Idris2.Parser.Source':'un--runParser'(1, {'Idris.Core.FC.Virtual', 0}, {'Idris.Prelude.Types.Nothing'}, V69, ('Idris.Idris2.TTImp.Parser':'un--command'()))) of {'Idris.Prelude.Types.Left', E6} -> (fun (V70) -> begin (V106 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V71) -> case V71 of {'Idris.Prelude.Types.Left', E7} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V73) -> {'Idris.Prelude.Types.Right', 0} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V74) -> begin (V105 = (('Idris.Idris2.Prelude.IO':'un--printLn'({'Idris.Builtin.MkPair', {'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V77, V78, V79)) end end end end end, fun (V80) -> fun (V81) -> fun (V82) -> V81 end end end, fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> begin (V88 = (V85(V87))), begin (V89 = (V86(V87))), (V88(V89)) end end end end end end end}, fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> begin (V95 = (V92(V94))), ((V93(V95))(V94)) end end end end end end, fun (V96) -> fun (V97) -> fun (V98) -> begin (V99 = (V97(V98))), (V99(V98)) end end end end}, fun (V100) -> fun (V101) -> V101 end end}, {'Idris.Prelude.Show.MkShow', fun (V102) -> ('Idris.Idris2.Core.Core':'dn--un--show_Show_Error'(V102)) end, fun (V103) -> fun (V104) -> ('Idris.Idris2.Core.Core':'dn--un--showPrec_Show_Error'(V103, V104)) end end}}, V70))(V74))), {'Idris.Prelude.Types.Right', V105} end end, V3))), case V106 of {'Idris.Prelude.Types.Left', E9} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V108) -> ('un--repl'(V0, V1, V2, V3)) end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); {'Idris.Prelude.Types.Right', E11} -> (fun (V109) -> case V109 of {'Idris.Builtin.MkPair', E12, E13} -> (fun (V110, V111) -> case V111 of {'Idris.Builtin.MkPair', E14, E15} -> (fun (V112, V113) -> begin (V114 = ('un--processCatch'(V0, V1, V2, V113, V3))), case V114 of {'Idris.Prelude.Types.Left', E16} -> (fun (V115) -> {'Idris.Prelude.Types.Left', V115} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V116) -> case V116 of 1 -> ('un--repl'(V0, V1, V2, V3)); 0 -> {'Idris.Prelude.Types.Right', 0}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--processCatch'(V0, V1, V2, V3, V4) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(fun (V5) -> ('un--process'(V0, V1, V2, V3, V5)) end, fun (V6) -> fun (V7) -> begin (V40 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V8) -> case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> {'Idris.Prelude.Types.Right', 0} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V11) -> begin (V39 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V14, V15, V16)) end end end end end, fun (V17) -> fun (V18) -> fun (V19) -> V18 end end end, fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> begin (V25 = (V22(V24))), begin (V26 = (V23(V24))), (V25(V26)) end end end end end end end}, fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> begin (V32 = (V29(V31))), ((V30(V32))(V31)) end end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> begin (V36 = (V34(V35))), (V36(V35)) end end end end}, fun (V37) -> fun (V38) -> V38 end end}, ('Idris.Idris2.Core.Core':'dn--un--show_Show_Error'(V6))))(V11))), {'Idris.Prelude.Types.Right', V39} end end, V7))), case V40 of {'Idris.Prelude.Types.Left', E2} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V42) -> {'Idris.Prelude.Types.Right', 1} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V4)).
'un--process'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.TTImp.TTImp.Eval', E0} -> (fun (V5) -> begin (V6 = (('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V1, V2, 0, {'Idris.TTImp.Elab.Check.InExpr'}, [], [], {'Idris.Core.Env.Nil'}, V5, {'Idris.Prelude.Types.Nothing'}))(V4))), case V6 of {'Idris.Prelude.Types.Left', E1} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E1)); {'Idris.Prelude.Types.Right', E2} -> (fun (V8) -> case V8 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V9, V10) -> begin (V12 = begin (V11 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V11} end), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Normalise':'un--normalise'(V0, [], V14, {'Idris.Core.Env.Nil'}, V9, V4))), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V62 = begin (V18 = (('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V0, {'Idris.Core.Env.Nil'}, V17))(V4))), case V18 of {'Idris.Prelude.Types.Left', E9} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V20) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V21) -> case V21 of {'Idris.Prelude.Types.Left', E11} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V23) -> {'Idris.Prelude.Types.Right', 0} end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V24) -> begin (V61 = (('Idris.Idris2.Prelude.IO':'un--printLn'({'Idris.Builtin.MkPair', {'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V27, V28, V29)) end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> V31 end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> begin (V38 = (V35(V37))), begin (V39 = (V36(V37))), (V38(V39)) end end end end end end end}, fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> begin (V45 = (V42(V44))), ((V43(V45))(V44)) end end end end end end, fun (V46) -> fun (V47) -> fun (V48) -> begin (V49 = (V47(V48))), (V49(V48)) end end end end}, fun (V50) -> fun (V51) -> V51 end end}, {'Idris.Prelude.Show.MkShow', fun (V52) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V53) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_KindedName'(V53)) end, fun (V54) -> fun (V55) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_KindedName'(V54, V55)) end end}, V52)) end, fun (V56) -> fun (V57) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V58) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_KindedName'(V58)) end, fun (V59) -> fun (V60) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_KindedName'(V59, V60)) end end}, V56, V57)) end end}}, V20))(V24))), {'Idris.Prelude.Types.Right', V61} end end, V4)) end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V62 of {'Idris.Prelude.Types.Left', E13} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V64) -> {'Idris.Prelude.Types.Right', 1} end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0)); {'Idris.TTImp.TTImp.Check', E15} -> (fun (V65) -> case V65 of {'Idris.TTImp.TTImp.IVar', E32, E33} -> (fun (V66, V67) -> begin (V69 = begin (V68 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V68} end), case V69 of {'Idris.Prelude.Types.Left', E34} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V71) -> begin (V102 = ('Idris.Idris2.Core.Context':'un--lookupTyName'(V67, case V71 of {'Idris.Core.Context.MkDefs', E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65} -> (fun (V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101) -> V72 end(E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4))), case V102 of {'Idris.Prelude.Types.Left', E66} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V104) -> begin (V107 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V105) -> fun (V106) -> ('nested--11165-649--in--un--printName'(V66, V67, V2, V1, V0, V105, V106)) end end, V104, V4))), case V107 of {'Idris.Prelude.Types.Left', E68} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V109) -> {'Idris.Prelude.Types.Right', 1} end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32, E33)); _ -> begin (V110 = (('Idris.Idris2.TTImp.Elab':'un--elabTerm'([], V0, V1, V2, 0, {'Idris.TTImp.Elab.Check.InExpr'}, [], [], {'Idris.Core.Env.Nil'}, V65, {'Idris.Prelude.Types.Nothing'}))(V4))), case V110 of {'Idris.Prelude.Types.Left', E16} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V112) -> case V112 of {'Idris.Builtin.MkPair', E18, E19} -> (fun (V113, V114) -> begin (V116 = begin (V115 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V115} end), case V116 of {'Idris.Prelude.Types.Left', E20} -> (fun (V117) -> {'Idris.Prelude.Types.Left', V117} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V118) -> begin (V119 = (('Idris.Idris2.Core.Normalise.Eval':'un--getTerm'(V114))(V4))), case V119 of {'Idris.Prelude.Types.Left', E22} -> (fun (V120) -> {'Idris.Prelude.Types.Left', V120} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V121) -> begin (V122 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V118, {'Idris.Core.Env.Nil'}, V121, V4))), case V122 of {'Idris.Prelude.Types.Left', E24} -> (fun (V123) -> {'Idris.Prelude.Types.Left', V123} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V124) -> begin (V169 = begin (V125 = (('Idris.Idris2.TTImp.Unelab':'un--unelab'([], V0, {'Idris.Core.Env.Nil'}, V124))(V4))), case V125 of {'Idris.Prelude.Types.Left', E26} -> (fun (V126) -> {'Idris.Prelude.Types.Left', V126} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V127) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V128) -> case V128 of {'Idris.Prelude.Types.Left', E28} -> (fun (V129) -> {'Idris.Prelude.Types.Left', V129} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V130) -> {'Idris.Prelude.Types.Right', 0} end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V131) -> begin (V168 = (('Idris.Idris2.Prelude.IO':'un--printLn'({'Idris.Builtin.MkPair', {'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V132) -> fun (V133) -> fun (V134) -> fun (V135) -> fun (V136) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V134, V135, V136)) end end end end end, fun (V137) -> fun (V138) -> fun (V139) -> V138 end end end, fun (V140) -> fun (V141) -> fun (V142) -> fun (V143) -> fun (V144) -> begin (V145 = (V142(V144))), begin (V146 = (V143(V144))), (V145(V146)) end end end end end end end}, fun (V147) -> fun (V148) -> fun (V149) -> fun (V150) -> fun (V151) -> begin (V152 = (V149(V151))), ((V150(V152))(V151)) end end end end end end, fun (V153) -> fun (V154) -> fun (V155) -> begin (V156 = (V154(V155))), (V156(V155)) end end end end}, fun (V157) -> fun (V158) -> V158 end end}, {'Idris.Prelude.Show.MkShow', fun (V159) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V160) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_KindedName'(V160)) end, fun (V161) -> fun (V162) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_KindedName'(V161, V162)) end end}, V159)) end, fun (V163) -> fun (V164) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V165) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_KindedName'(V165)) end, fun (V166) -> fun (V167) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_KindedName'(V166, V167)) end end}, V163, V164)) end end}}, V127))(V131))), {'Idris.Prelude.Types.Right', V168} end end, V4)) end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V169 of {'Idris.Prelude.Types.Left', E30} -> (fun (V170) -> {'Idris.Prelude.Types.Left', V170} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V171) -> {'Idris.Prelude.Types.Right', 1} end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E15)); {'Idris.TTImp.TTImp.ProofSearch', E70} -> (fun (V172) -> begin (V174 = begin (V173 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V173} end), case V174 of {'Idris.Prelude.Types.Left', E71} -> (fun (V175) -> {'Idris.Prelude.Types.Left', V175} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V176) -> begin (V207 = ('Idris.Idris2.Core.Context':'un--lookupTyName'(V172, case V176 of {'Idris.Core.Context.MkDefs', E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102} -> (fun (V177, V178, V179, V180, V181, V182, V183, V184, V185, V186, V187, V188, V189, V190, V191, V192, V193, V194, V195, V196, V197, V198, V199, V200, V201, V202, V203, V204, V205, V206) -> V177 end(E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4))), case V207 of {'Idris.Prelude.Types.Left', E103} -> (fun (V208) -> {'Idris.Prelude.Types.Left', V208} end(E103)); {'Idris.Prelude.Types.Right', E104} -> (fun (V209) -> case V209 of [E105 | E106] -> (fun (V210, V211) -> case V210 of {'Idris.Builtin.MkPair', E107, E108} -> (fun (V212, V213) -> case V213 of {'Idris.Builtin.MkPair', E109, E110} -> (fun (V214, V215) -> case V211 of [] -> begin (V216 = ('Idris.Idris2.Core.Unify':'un--search'([], V0, V2, ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), 0, ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num_Nat'(1000)), V212, V215, {'Idris.Core.Env.Nil'}, V4))), case V216 of {'Idris.Prelude.Types.Left', E111} -> (fun (V217) -> {'Idris.Prelude.Types.Left', V217} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V218) -> begin (V220 = begin (V219 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V219} end), case V220 of {'Idris.Prelude.Types.Left', E113} -> (fun (V221) -> {'Idris.Prelude.Types.Left', V221} end(E113)); {'Idris.Prelude.Types.Right', E114} -> (fun (V222) -> begin (V223 = ('Idris.Idris2.Core.Normalise':'un--normaliseHoles'(V0, [], V222, {'Idris.Core.Env.Nil'}, V218, V4))), case V223 of {'Idris.Prelude.Types.Left', E115} -> (fun (V224) -> {'Idris.Prelude.Types.Left', V224} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V225) -> begin (V270 = begin (V232 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V226) -> fun (V227) -> fun (V228) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V226, V227, V228)) end end end, fun (V229) -> fun (V230) -> fun (V231) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V229, V230, V231)) end end end}, V225, V4))), case V232 of {'Idris.Prelude.Types.Left', E117} -> (fun (V233) -> {'Idris.Prelude.Types.Left', V233} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V234) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V235) -> case V235 of {'Idris.Prelude.Types.Left', E119} -> (fun (V236) -> {'Idris.Prelude.Types.Left', V236} end(E119)); {'Idris.Prelude.Types.Right', E120} -> (fun (V237) -> {'Idris.Prelude.Types.Right', 0} end(E120)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V238) -> begin (V269 = (('Idris.Idris2.Prelude.IO':'un--printLn'({'Idris.Builtin.MkPair', {'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V239) -> fun (V240) -> fun (V241) -> fun (V242) -> fun (V243) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V241, V242, V243)) end end end end end, fun (V244) -> fun (V245) -> fun (V246) -> V245 end end end, fun (V247) -> fun (V248) -> fun (V249) -> fun (V250) -> fun (V251) -> begin (V252 = (V249(V251))), begin (V253 = (V250(V251))), (V252(V253)) end end end end end end end}, fun (V254) -> fun (V255) -> fun (V256) -> fun (V257) -> fun (V258) -> begin (V259 = (V256(V258))), ((V257(V259))(V258)) end end end end end end, fun (V260) -> fun (V261) -> fun (V262) -> begin (V263 = (V261(V262))), (V263(V262)) end end end end}, fun (V264) -> fun (V265) -> V265 end end}, {'Idris.Prelude.Show.MkShow', fun (V266) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V266)) end, fun (V267) -> fun (V268) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'([], V267, V268)) end end}}, V234))(V238))), {'Idris.Prelude.Types.Right', V269} end end, V4)) end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V270 of {'Idris.Prelude.Types.Left', E121} -> (fun (V271) -> {'Idris.Prelude.Types.Left', V271} end(E121)); {'Idris.Prelude.Types.Right', E122} -> (fun (V272) -> {'Idris.Prelude.Types.Right', 1} end(E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V273) -> ('Idris.Idris2.Builtin':'un--fst'(V273)) end, V209))}, V4)) end end(E109, E110)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V274) -> ('Idris.Idris2.Builtin':'un--fst'(V274)) end, V209))}, V4)) end end(E107, E108)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V275) -> ('Idris.Idris2.Builtin':'un--fst'(V275)) end, V209))}, V4)) end end(E105, E106)); [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), V172, V4)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V276) -> ('Idris.Idris2.Builtin':'un--fst'(V276)) end, V209))}, V4)) end end(E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E70)); {'Idris.TTImp.TTImp.ExprSearch', E123} -> (fun (V277) -> begin (V279 = begin (V278 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V278} end), case V279 of {'Idris.Prelude.Types.Left', E124} -> (fun (V280) -> {'Idris.Prelude.Types.Left', V280} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V281) -> begin (V312 = ('Idris.Idris2.Core.Context':'un--lookupTyName'(V277, case V281 of {'Idris.Core.Context.MkDefs', E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155} -> (fun (V282, V283, V284, V285, V286, V287, V288, V289, V290, V291, V292, V293, V294, V295, V296, V297, V298, V299, V300, V301, V302, V303, V304, V305, V306, V307, V308, V309, V310, V311) -> V282 end(E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4))), case V312 of {'Idris.Prelude.Types.Left', E156} -> (fun (V313) -> {'Idris.Prelude.Types.Left', V313} end(E156)); {'Idris.Prelude.Types.Right', E157} -> (fun (V314) -> case V314 of [E158 | E159] -> (fun (V315, V316) -> case V315 of {'Idris.Builtin.MkPair', E160, E161} -> (fun (V317, V318) -> case V318 of {'Idris.Builtin.MkPair', E162, E163} -> (fun (V319, V320) -> case V316 of [] -> begin (V321 = ('Idris.Idris2.TTImp.Interactive.ExprSearch':'un--exprSearchN'(V0, V1, V2, ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), (1 + 0), V317, [], V4))), case V321 of {'Idris.Prelude.Types.Left', E164} -> (fun (V322) -> {'Idris.Prelude.Types.Left', V322} end(E164)); {'Idris.Prelude.Types.Right', E165} -> (fun (V323) -> begin (V363 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V324) -> fun (V325) -> begin (V362 = (('Idris.Idris2.Prelude.IO':'un--printLn'({'Idris.Builtin.MkPair', {'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V326) -> fun (V327) -> fun (V328) -> fun (V329) -> fun (V330) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V328, V329, V330)) end end end end end, fun (V331) -> fun (V332) -> fun (V333) -> V332 end end end, fun (V334) -> fun (V335) -> fun (V336) -> fun (V337) -> fun (V338) -> begin (V339 = (V336(V338))), begin (V340 = (V337(V338))), (V339(V340)) end end end end end end end}, fun (V341) -> fun (V342) -> fun (V343) -> fun (V344) -> fun (V345) -> begin (V346 = (V343(V345))), ((V344(V346))(V345)) end end end end end end, fun (V347) -> fun (V348) -> fun (V349) -> begin (V350 = (V348(V349))), (V350(V349)) end end end end}, fun (V351) -> fun (V352) -> V352 end end}, {'Idris.Prelude.Show.MkShow', fun (V353) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V354) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V354)) end, fun (V355) -> fun (V356) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V355, V356)) end end}, V353)) end, fun (V357) -> fun (V358) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V359) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V359)) end, fun (V360) -> fun (V361) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V360, V361)) end end}, V357, V358)) end end}}, V324))(V325))), {'Idris.Prelude.Types.Right', V362} end end end, V323, V4))), case V363 of {'Idris.Prelude.Types.Left', E166} -> (fun (V364) -> {'Idris.Prelude.Types.Left', V364} end(E166)); {'Idris.Prelude.Types.Right', E167} -> (fun (V365) -> {'Idris.Prelude.Types.Right', 1} end(E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E165)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V366) -> ('Idris.Idris2.Builtin':'un--fst'(V366)) end, V314))}, V4)) end end(E162, E163)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V367) -> ('Idris.Idris2.Builtin':'un--fst'(V367)) end, V314))}, V4)) end end(E160, E161)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V368) -> ('Idris.Idris2.Builtin':'un--fst'(V368)) end, V314))}, V4)) end end(E158, E159)); [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), V277, V4)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.AmbiguousName', ('Idris.Idris2.Core.FC':'un--justFC'(('Idris.Idris2.Core.FC':'un--defaultFC'()))), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V369) -> ('Idris.Idris2.Builtin':'un--fst'(V369)) end, V314))}, V4)) end end(E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E123)); {'Idris.TTImp.TTImp.GenerateDef', E168, E169} -> (fun (V370, V371) -> begin (V373 = begin (V372 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V372} end), case V373 of {'Idris.Prelude.Types.Left', E170} -> (fun (V374) -> {'Idris.Prelude.Types.Left', V374} end(E170)); {'Idris.Prelude.Types.Right', E171} -> (fun (V375) -> begin (V378 = ('Idris.Idris2.Core.Metadata':'un--findTyDeclAt'(V1, fun (V376) -> fun (V377) -> ('Idris.Idris2.Core.FC':'un--onLine'(V370, V376)) end end, V4))), case V378 of {'Idris.Prelude.Types.Left', E172} -> (fun (V379) -> {'Idris.Prelude.Types.Left', V379} end(E172)); {'Idris.Prelude.Types.Right', E173} -> (fun (V380) -> case V380 of {'Idris.Prelude.Types.Just', E174} -> (fun (V381) -> case V381 of {'Idris.Builtin.MkPair', E175, E176} -> (fun (V382, V383) -> case V383 of {'Idris.Builtin.MkPair', E177, E178} -> (fun (V384, V385) -> case V385 of {'Idris.Builtin.MkPair', E179, E180} -> (fun (V386, V387) -> begin (V636 = begin (V418 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V384, case V375 of {'Idris.Core.Context.MkDefs', E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202, E203, E204, E205, E206, E207, E208, E209, E210} -> (fun (V388, V389, V390, V391, V392, V393, V394, V395, V396, V397, V398, V399, V400, V401, V402, V403, V404, V405, V406, V407, V408, V409, V410, V411, V412, V413, V414, V415, V416, V417) -> V388 end(E181, E182, E183, E184, E185, E186, E187, E188, E189, E190, E191, E192, E193, E194, E195, E196, E197, E198, E199, E200, E201, E202, E203, E204, E205, E206, E207, E208, E209, E210)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4))), case V418 of {'Idris.Prelude.Types.Left', E211} -> (fun (V419) -> {'Idris.Prelude.Types.Left', V419} end(E211)); {'Idris.Prelude.Types.Right', E212} -> (fun (V420) -> case V420 of {'Idris.Prelude.Types.Just', E213} -> (fun (V421) -> case V421 of {'Idris.Core.Context.Context.None'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(fun (V422) -> begin (V426 = ('Idris.Idris2.Core.Context.Log':'un--logTime'(V0, fun () -> <<"Generation"/utf8>> end, fun (V423) -> ('Idris.Idris2.TTImp.Interactive.GenerateDef':'un--makeDefN'(V0, V1, V2, fun (V424) -> fun (V425) -> ('Idris.Idris2.Core.FC':'un--onLine'(V370, V424)) end end, (1 + 0), V384, V423)) end, V422))), case V426 of {'Idris.Prelude.Types.Left', E216} -> (fun (V427) -> {'Idris.Prelude.Types.Left', V427} end(E216)); {'Idris.Prelude.Types.Right', E217} -> (fun (V428) -> case V428 of [E220 | E221] -> (fun (V429, V430) -> case V429 of {'Idris.Builtin.MkPair', E224, E225} -> (fun (V431, V432) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V433) -> case V433 of {'Idris.Prelude.Types.Left', E226} -> (fun (V434) -> {'Idris.Prelude.Types.Left', V434} end(E226)); {'Idris.Prelude.Types.Right', E227} -> (fun (V435) -> {'Idris.Prelude.Types.Right', 0} end(E227)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V436) -> begin (V473 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V437) -> fun (V438) -> fun (V439) -> fun (V440) -> fun (V441) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V439, V440, V441)) end end end end end, fun (V442) -> fun (V443) -> fun (V444) -> V443 end end end, fun (V445) -> fun (V446) -> fun (V447) -> fun (V448) -> fun (V449) -> begin (V450 = (V447(V449))), begin (V451 = (V448(V449))), (V450(V451)) end end end end end end end}, fun (V452) -> fun (V453) -> fun (V454) -> fun (V455) -> fun (V456) -> begin (V457 = (V454(V456))), ((V455(V457))(V456)) end end end end end end, fun (V458) -> fun (V459) -> fun (V460) -> begin (V461 = (V459(V460))), (V461(V460)) end end end end}, fun (V462) -> fun (V463) -> V463 end end}, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V464) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(ImpClause\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V465) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V465)) end, fun (V466) -> fun (V467) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V466, V467)) end end}, V464)) end, fun (V468) -> fun (V469) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(ImpClause\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V470) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V470)) end, fun (V471) -> fun (V472) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V471, V472)) end end}, V468, V469)) end end}, V432))))(V436))), {'Idris.Prelude.Types.Right', V473} end end, V422)) end(E224, E225)); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V474) -> case V474 of {'Idris.Prelude.Types.Left', E222} -> (fun (V475) -> {'Idris.Prelude.Types.Left', V475} end(E222)); {'Idris.Prelude.Types.Right', E223} -> (fun (V476) -> {'Idris.Prelude.Types.Right', 0} end(E223)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V477) -> begin (V505 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V478) -> fun (V479) -> fun (V480) -> fun (V481) -> fun (V482) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V480, V481, V482)) end end end end end, fun (V483) -> fun (V484) -> fun (V485) -> V484 end end end, fun (V486) -> fun (V487) -> fun (V488) -> fun (V489) -> fun (V490) -> begin (V491 = (V488(V490))), begin (V492 = (V489(V490))), (V491(V492)) end end end end end end end}, fun (V493) -> fun (V494) -> fun (V495) -> fun (V496) -> fun (V497) -> begin (V498 = (V495(V497))), ((V496(V498))(V497)) end end end end end end, fun (V499) -> fun (V500) -> fun (V501) -> begin (V502 = (V500(V501))), (V502(V501)) end end end end}, fun (V503) -> fun (V504) -> V504 end end}, <<"Failed"/utf8>>))(V477))), {'Idris.Prelude.Types.Right', V505} end end, V422)) end end(E220, E221)); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V506) -> case V506 of {'Idris.Prelude.Types.Left', E218} -> (fun (V507) -> {'Idris.Prelude.Types.Left', V507} end(E218)); {'Idris.Prelude.Types.Right', E219} -> (fun (V508) -> {'Idris.Prelude.Types.Right', 0} end(E219)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V509) -> begin (V537 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V510) -> fun (V511) -> fun (V512) -> fun (V513) -> fun (V514) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V512, V513, V514)) end end end end end, fun (V515) -> fun (V516) -> fun (V517) -> V516 end end end, fun (V518) -> fun (V519) -> fun (V520) -> fun (V521) -> fun (V522) -> begin (V523 = (V520(V522))), begin (V524 = (V521(V522))), (V523(V524)) end end end end end end end}, fun (V525) -> fun (V526) -> fun (V527) -> fun (V528) -> fun (V529) -> begin (V530 = (V527(V529))), ((V528(V530))(V529)) end end end end end end, fun (V531) -> fun (V532) -> fun (V533) -> begin (V534 = (V532(V533))), (V534(V533)) end end end end}, fun (V535) -> fun (V536) -> V536 end end}, <<"Failed"/utf8>>))(V509))), {'Idris.Prelude.Types.Right', V537} end end, V422)) end end(E217)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V538) -> fun (V539) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V540) -> case V540 of {'Idris.Prelude.Types.Left', E228} -> (fun (V541) -> {'Idris.Prelude.Types.Left', V541} end(E228)); {'Idris.Prelude.Types.Right', E229} -> (fun (V542) -> {'Idris.Prelude.Types.Right', 0} end(E229)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V543) -> begin (V571 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V544) -> fun (V545) -> fun (V546) -> fun (V547) -> fun (V548) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V546, V547, V548)) end end end end end, fun (V549) -> fun (V550) -> fun (V551) -> V550 end end end, fun (V552) -> fun (V553) -> fun (V554) -> fun (V555) -> fun (V556) -> begin (V557 = (V554(V556))), begin (V558 = (V555(V556))), (V557(V558)) end end end end end end end}, fun (V559) -> fun (V560) -> fun (V561) -> fun (V562) -> fun (V563) -> begin (V564 = (V561(V563))), ((V562(V564))(V563)) end end end end end end, fun (V565) -> fun (V566) -> fun (V567) -> begin (V568 = (V566(V567))), (V568(V567)) end end end end}, fun (V569) -> fun (V570) -> V570 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t find a definition for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V384))))))(V543))), {'Idris.Prelude.Types.Right', V571} end end, V539)) end end, V4)) end()); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V572) -> case V572 of {'Idris.Prelude.Types.Left', E214} -> (fun (V573) -> {'Idris.Prelude.Types.Left', V573} end(E214)); {'Idris.Prelude.Types.Right', E215} -> (fun (V574) -> {'Idris.Prelude.Types.Right', 0} end(E215)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V575) -> begin (V603 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V576) -> fun (V577) -> fun (V578) -> fun (V579) -> fun (V580) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V578, V579, V580)) end end end end end, fun (V581) -> fun (V582) -> fun (V583) -> V582 end end end, fun (V584) -> fun (V585) -> fun (V586) -> fun (V587) -> fun (V588) -> begin (V589 = (V586(V588))), begin (V590 = (V587(V588))), (V589(V590)) end end end end end end end}, fun (V591) -> fun (V592) -> fun (V593) -> fun (V594) -> fun (V595) -> begin (V596 = (V593(V595))), ((V594(V596))(V595)) end end end end end end, fun (V597) -> fun (V598) -> fun (V599) -> begin (V600 = (V598(V599))), (V600(V599)) end end end end}, fun (V601) -> fun (V602) -> V602 end end}, <<"Already defined"/utf8>>))(V575))), {'Idris.Prelude.Types.Right', V603} end end, V4)) end end(E213)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V604) -> case V604 of {'Idris.Prelude.Types.Left', E230} -> (fun (V605) -> {'Idris.Prelude.Types.Left', V605} end(E230)); {'Idris.Prelude.Types.Right', E231} -> (fun (V606) -> {'Idris.Prelude.Types.Right', 0} end(E231)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V607) -> begin (V635 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V608) -> fun (V609) -> fun (V610) -> fun (V611) -> fun (V612) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V610, V611, V612)) end end end end end, fun (V613) -> fun (V614) -> fun (V615) -> V614 end end end, fun (V616) -> fun (V617) -> fun (V618) -> fun (V619) -> fun (V620) -> begin (V621 = (V618(V620))), begin (V622 = (V619(V620))), (V621(V622)) end end end end end end end}, fun (V623) -> fun (V624) -> fun (V625) -> fun (V626) -> fun (V627) -> begin (V628 = (V625(V627))), ((V626(V628))(V627)) end end end end end end, fun (V629) -> fun (V630) -> fun (V631) -> begin (V632 = (V630(V631))), (V632(V631)) end end end end}, fun (V633) -> fun (V634) -> V634 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t find declaration for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V371))))))(V607))), {'Idris.Prelude.Types.Right', V635} end end, V4)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E212)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V636 of {'Idris.Prelude.Types.Left', E232} -> (fun (V637) -> {'Idris.Prelude.Types.Left', V637} end(E232)); {'Idris.Prelude.Types.Right', E233} -> (fun (V638) -> {'Idris.Prelude.Types.Right', 1} end(E233)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E179, E180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E177, E178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E175, E176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E174)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V671 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V639) -> case V639 of {'Idris.Prelude.Types.Left', E234} -> (fun (V640) -> {'Idris.Prelude.Types.Left', V640} end(E234)); {'Idris.Prelude.Types.Right', E235} -> (fun (V641) -> {'Idris.Prelude.Types.Right', 0} end(E235)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V642) -> begin (V670 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V643) -> fun (V644) -> fun (V645) -> fun (V646) -> fun (V647) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V645, V646, V647)) end end end end end, fun (V648) -> fun (V649) -> fun (V650) -> V649 end end end, fun (V651) -> fun (V652) -> fun (V653) -> fun (V654) -> fun (V655) -> begin (V656 = (V653(V655))), begin (V657 = (V654(V655))), (V656(V657)) end end end end end end end}, fun (V658) -> fun (V659) -> fun (V660) -> fun (V661) -> fun (V662) -> begin (V663 = (V660(V662))), ((V661(V663))(V662)) end end end end end end, fun (V664) -> fun (V665) -> fun (V666) -> begin (V667 = (V665(V666))), (V667(V666)) end end end end}, fun (V668) -> fun (V669) -> V669 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t find declaration for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V371))))))(V642))), {'Idris.Prelude.Types.Right', V670} end end, V4))), case V671 of {'Idris.Prelude.Types.Left', E236} -> (fun (V672) -> {'Idris.Prelude.Types.Left', V672} end(E236)); {'Idris.Prelude.Types.Right', E237} -> (fun (V673) -> {'Idris.Prelude.Types.Right', 1} end(E237)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E173)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E171)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E168, E169)); {'Idris.TTImp.TTImp.Missing', E238} -> (fun (V674) -> begin (V676 = begin (V675 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V675} end), case V676 of {'Idris.Prelude.Types.Left', E239} -> (fun (V677) -> {'Idris.Prelude.Types.Left', V677} end(E239)); {'Idris.Prelude.Types.Right', E240} -> (fun (V678) -> begin (V709 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V674, case V678 of {'Idris.Core.Context.MkDefs', E241, E242, E243, E244, E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266, E267, E268, E269, E270} -> (fun (V679, V680, V681, V682, V683, V684, V685, V686, V687, V688, V689, V690, V691, V692, V693, V694, V695, V696, V697, V698, V699, V700, V701, V702, V703, V704, V705, V706, V707, V708) -> V679 end(E241, E242, E243, E244, E245, E246, E247, E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262, E263, E264, E265, E266, E267, E268, E269, E270)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4))), case V709 of {'Idris.Prelude.Types.Left', E271} -> (fun (V710) -> {'Idris.Prelude.Types.Left', V710} end(E271)); {'Idris.Prelude.Types.Right', E272} -> (fun (V711) -> case V711 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V674, V4)); _ -> begin (V823 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V712) -> fun (V713) -> begin (V714 = ('Idris.Idris2.Core.Context':'un--getTotality'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V712, V713))), case V714 of {'Idris.Prelude.Types.Left', E273} -> (fun (V715) -> {'Idris.Prelude.Types.Left', V715} end(E273)); {'Idris.Prelude.Types.Right', E274} -> (fun (V716) -> case V716 of {'Idris.Core.TT.MkTotality', E275, E276} -> (fun (V717, V718) -> case V718 of {'Idris.Core.TT.MissingCases', E279} -> (fun (V719) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V720) -> case V720 of {'Idris.Prelude.Types.Left', E280} -> (fun (V721) -> {'Idris.Prelude.Types.Left', V721} end(E280)); {'Idris.Prelude.Types.Right', E281} -> (fun (V722) -> {'Idris.Prelude.Types.Right', 0} end(E281)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V723) -> begin (V752 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V724) -> fun (V725) -> fun (V726) -> fun (V727) -> fun (V728) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V726, V727, V728)) end end end end end, fun (V729) -> fun (V730) -> fun (V731) -> V730 end end end, fun (V732) -> fun (V733) -> fun (V734) -> fun (V735) -> fun (V736) -> begin (V737 = (V734(V736))), begin (V738 = (V735(V736))), (V737(V738)) end end end end end end end}, fun (V739) -> fun (V740) -> fun (V741) -> fun (V742) -> fun (V743) -> begin (V744 = (V741(V743))), ((V742(V744))(V743)) end end end end end end, fun (V745) -> fun (V746) -> fun (V747) -> begin (V748 = (V746(V747))), (V748(V747)) end end end end}, fun (V749) -> fun (V750) -> V750 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V712)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<":\x{a}"/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<"\x{a}"/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V751) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V751)) end, V719))))))))))(V723))), {'Idris.Prelude.Types.Right', V752} end end, V713)) end(E279)); {'Idris.Core.TT.NonCoveringCall', E282} -> (fun (V753) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V754) -> case V754 of {'Idris.Prelude.Types.Left', E283} -> (fun (V755) -> {'Idris.Prelude.Types.Left', V755} end(E283)); {'Idris.Prelude.Types.Right', E284} -> (fun (V756) -> {'Idris.Prelude.Types.Right', 0} end(E284)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V757) -> begin (V789 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V758) -> fun (V759) -> fun (V760) -> fun (V761) -> fun (V762) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V760, V761, V762)) end end end end end, fun (V763) -> fun (V764) -> fun (V765) -> V764 end end end, fun (V766) -> fun (V767) -> fun (V768) -> fun (V769) -> fun (V770) -> begin (V771 = (V768(V770))), begin (V772 = (V769(V770))), (V771(V772)) end end end end end end end}, fun (V773) -> fun (V774) -> fun (V775) -> fun (V776) -> fun (V777) -> begin (V778 = (V775(V777))), ((V776(V778))(V777)) end end end end end end, fun (V779) -> fun (V780) -> fun (V781) -> begin (V782 = (V780(V781))), (V782(V781)) end end end end}, fun (V783) -> fun (V784) -> V784 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V712)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<": Calls non covering function"/utf8>>, case V753 of [E285 | E286] -> (fun (V785, V786) -> case V786 of [] -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V785)))); _ -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V787) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V787)) end, V753)))))) end end(E285, E286)); _ -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"s: "/utf8>>, ('Idris.Idris2.Core.Name.Namespace':'un--showSep'(<<", "/utf8>>, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V788) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V788)) end, V753)))))) end))))))(V757))), {'Idris.Prelude.Types.Right', V789} end end, V713)) end(E282)); _ -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V790) -> case V790 of {'Idris.Prelude.Types.Left', E277} -> (fun (V791) -> {'Idris.Prelude.Types.Left', V791} end(E277)); {'Idris.Prelude.Types.Right', E278} -> (fun (V792) -> {'Idris.Prelude.Types.Right', 0} end(E278)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V793) -> begin (V821 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V794) -> fun (V795) -> fun (V796) -> fun (V797) -> fun (V798) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V796, V797, V798)) end end end end end, fun (V799) -> fun (V800) -> fun (V801) -> V800 end end end, fun (V802) -> fun (V803) -> fun (V804) -> fun (V805) -> fun (V806) -> begin (V807 = (V804(V806))), begin (V808 = (V805(V806))), (V807(V808)) end end end end end end end}, fun (V809) -> fun (V810) -> fun (V811) -> fun (V812) -> fun (V813) -> begin (V814 = (V811(V813))), ((V812(V814))(V813)) end end end end end end, fun (V815) -> fun (V816) -> fun (V817) -> begin (V818 = (V816(V817))), (V818(V817)) end end end end}, fun (V819) -> fun (V820) -> V820 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V712)), <<": All cases covered"/utf8>>))))(V793))), {'Idris.Prelude.Types.Right', V821} end end, V713)) end end(E275, E276)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E274)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V822) -> ('Idris.Idris2.Builtin':'un--fst'(V822)) end, V711)), V4))), case V823 of {'Idris.Prelude.Types.Left', E287} -> (fun (V824) -> {'Idris.Prelude.Types.Left', V824} end(E287)); {'Idris.Prelude.Types.Right', E288} -> (fun (V825) -> {'Idris.Prelude.Types.Right', 1} end(E288)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E272)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E240)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E238)); {'Idris.TTImp.TTImp.CheckTotal', E289} -> (fun (V826) -> begin (V828 = begin (V827 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V827} end), case V828 of {'Idris.Prelude.Types.Left', E290} -> (fun (V829) -> {'Idris.Prelude.Types.Left', V829} end(E290)); {'Idris.Prelude.Types.Right', E291} -> (fun (V830) -> begin (V861 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V826, case V830 of {'Idris.Core.Context.MkDefs', E292, E293, E294, E295, E296, E297, E298, E299, E300, E301, E302, E303, E304, E305, E306, E307, E308, E309, E310, E311, E312, E313, E314, E315, E316, E317, E318, E319, E320, E321} -> (fun (V831, V832, V833, V834, V835, V836, V837, V838, V839, V840, V841, V842, V843, V844, V845, V846, V847, V848, V849, V850, V851, V852, V853, V854, V855, V856, V857, V858, V859, V860) -> V831 end(E292, E293, E294, E295, E296, E297, E298, E299, E300, E301, E302, E303, E304, E305, E306, E307, E308, E309, E310, E311, E312, E313, E314, E315, E316, E317, E318, E319, E320, E321)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4))), case V861 of {'Idris.Prelude.Types.Left', E322} -> (fun (V862) -> {'Idris.Prelude.Types.Left', V862} end(E322)); {'Idris.Prelude.Types.Right', E323} -> (fun (V863) -> case V863 of [] -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V826, V4)); _ -> begin (V909 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V864) -> fun (V865) -> begin (V870 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V866) -> case V866 of {'Idris.Prelude.Types.Left', E324} -> (fun (V867) -> {'Idris.Prelude.Types.Left', V867} end(E324)); {'Idris.Prelude.Types.Right', E325} -> (fun (V868) -> {'Idris.Prelude.Types.Right', 0} end(E325)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V869) -> ('Idris.Idris2.Core.Termination':'un--checkTotal'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V864, V869)) end, V865))), case V870 of {'Idris.Prelude.Types.Left', E326} -> (fun (V871) -> {'Idris.Prelude.Types.Left', V871} end(E326)); {'Idris.Prelude.Types.Right', E327} -> (fun (V872) -> begin (V873 = ('Idris.Idris2.Core.Context':'un--getTotality'(V0, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V864, V865))), case V873 of {'Idris.Prelude.Types.Left', E328} -> (fun (V874) -> {'Idris.Prelude.Types.Left', V874} end(E328)); {'Idris.Prelude.Types.Right', E329} -> (fun (V875) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V876) -> case V876 of {'Idris.Prelude.Types.Left', E330} -> (fun (V877) -> {'Idris.Prelude.Types.Left', V877} end(E330)); {'Idris.Prelude.Types.Right', E331} -> (fun (V878) -> {'Idris.Prelude.Types.Right', 0} end(E331)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V879) -> begin (V907 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V880) -> fun (V881) -> fun (V882) -> fun (V883) -> fun (V884) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V882, V883, V884)) end end end end end, fun (V885) -> fun (V886) -> fun (V887) -> V886 end end end, fun (V888) -> fun (V889) -> fun (V890) -> fun (V891) -> fun (V892) -> begin (V893 = (V890(V892))), begin (V894 = (V891(V892))), (V893(V894)) end end end end end end end}, fun (V895) -> fun (V896) -> fun (V897) -> fun (V898) -> fun (V899) -> begin (V900 = (V897(V899))), ((V898(V900))(V899)) end end end end end end, fun (V901) -> fun (V902) -> fun (V903) -> begin (V904 = (V902(V903))), (V904(V903)) end end end end}, fun (V905) -> fun (V906) -> V906 end end}, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V864)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" is "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_Totality'(V875))))))))(V879))), {'Idris.Prelude.Types.Right', V907} end end, V865)) end(E329)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E327)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V908) -> ('Idris.Idris2.Builtin':'un--fst'(V908)) end, V863)), V4))), case V909 of {'Idris.Prelude.Types.Left', E332} -> (fun (V910) -> {'Idris.Prelude.Types.Left', V910} end(E332)); {'Idris.Prelude.Types.Right', E333} -> (fun (V911) -> {'Idris.Prelude.Types.Right', 1} end(E333)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E323)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E291)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E289)); {'Idris.TTImp.TTImp.DebugInfo', E334} -> (fun (V912) -> begin (V914 = begin (V913 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V913} end), case V914 of {'Idris.Prelude.Types.Left', E335} -> (fun (V915) -> {'Idris.Prelude.Types.Left', V915} end(E335)); {'Idris.Prelude.Types.Right', E336} -> (fun (V916) -> begin (V952 = begin (V947 = (('Idris.Idris2.Core.Context':'un--lookupCtxtName'(V912, case V916 of {'Idris.Core.Context.MkDefs', E337, E338, E339, E340, E341, E342, E343, E344, E345, E346, E347, E348, E349, E350, E351, E352, E353, E354, E355, E356, E357, E358, E359, E360, E361, E362, E363, E364, E365, E366} -> (fun (V917, V918, V919, V920, V921, V922, V923, V924, V925, V926, V927, V928, V929, V930, V931, V932, V933, V934, V935, V936, V937, V938, V939, V940, V941, V942, V943, V944, V945, V946) -> V917 end(E337, E338, E339, E340, E341, E342, E343, E344, E345, E346, E347, E348, E349, E350, E351, E352, E353, E354, E355, E356, E357, E358, E359, E360, E361, E362, E363, E364, E365, E366)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V4))), case V947 of {'Idris.Prelude.Types.Left', E367} -> (fun (V948) -> {'Idris.Prelude.Types.Left', V948} end(E367)); {'Idris.Prelude.Types.Right', E368} -> (fun (V949) -> ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V950) -> fun (V951) -> ('un--showInfo'(V950, V951)) end end, V949, V4)) end(E368)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V952 of {'Idris.Prelude.Types.Left', E369} -> (fun (V953) -> {'Idris.Prelude.Types.Left', V953} end(E369)); {'Idris.Prelude.Types.Right', E370} -> (fun (V954) -> {'Idris.Prelude.Types.Right', 1} end(E370)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E336)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E334)); {'Idris.TTImp.TTImp.Quit'} -> (fun () -> begin (V987 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V955) -> case V955 of {'Idris.Prelude.Types.Left', E371} -> (fun (V956) -> {'Idris.Prelude.Types.Left', V956} end(E371)); {'Idris.Prelude.Types.Right', E372} -> (fun (V957) -> {'Idris.Prelude.Types.Right', 0} end(E372)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V958) -> begin (V986 = (('Idris.Idris2.Prelude.IO':'un--putStrLn'({'Idris.Prelude.IO.MkHasIO', {'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V959) -> fun (V960) -> fun (V961) -> fun (V962) -> fun (V963) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(V961, V962, V963)) end end end end end, fun (V964) -> fun (V965) -> fun (V966) -> V965 end end end, fun (V967) -> fun (V968) -> fun (V969) -> fun (V970) -> fun (V971) -> begin (V972 = (V969(V971))), begin (V973 = (V970(V971))), (V972(V973)) end end end end end end end}, fun (V974) -> fun (V975) -> fun (V976) -> fun (V977) -> fun (V978) -> begin (V979 = (V976(V978))), ((V977(V979))(V978)) end end end end end end, fun (V980) -> fun (V981) -> fun (V982) -> begin (V983 = (V981(V982))), (V983(V982)) end end end end}, fun (V984) -> fun (V985) -> V985 end end}, <<"Bye for now!"/utf8>>))(V958))), {'Idris.Prelude.Types.Right', V986} end end, V4))), case V987 of {'Idris.Prelude.Types.Left', E373} -> (fun (V988) -> {'Idris.Prelude.Types.Left', V988} end(E373)); {'Idris.Prelude.Types.Right', E374} -> (fun (V989) -> {'Idris.Prelude.Types.Right', 0} end(E374)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
