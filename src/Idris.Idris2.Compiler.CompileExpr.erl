-module('Idris.Idris2.Compiler.CompileExpr').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--case block in getFieldArgs-5858'/10,
  'case--case block in getPArgs-5669'/11,
  'case--case block in conCases-4451'/13,
  'case--toCExp-4196'/8,
  'nested--13192-6995--in--un--toLam'/11,
  'nested--9371-3495--in--un--toEnum'/5,
  'nested--13192-7257--in--un--toArgExp'/7,
  'nested--13192-7118--in--un--toArgExp'/6,
  'nested--13890-7600--in--un--noDefYet'/4,
  'nested--10267-4806--in--un--mkSubst'/15,
  'nested--7953-2209--in--un--mkLocal'/6,
  'nested--7953-2210--in--un--mkApp'/6,
  'nested--13146-6924--in--un--lamBind'/5,
  'nested--8157-2392--in--un--keepArg'/6,
  'nested--8157-2391--in--un--keep'/7,
  'nested--8564-2750--in--un--go'/4,
  'nested--13192-7258--in--un--getVars'/7,
  'nested--13192-7119--in--un--getVars'/6,
  'nested--8564-2749--in--un--fire'/4,
  'nested--10255-4399--in--un--dcon'/10,
  'nested--9449-3558--in--un--ciFlags'/3,
  'nested--8053-2310--in--un--applyAll'/5,
  'nested--8053-2332--in--un--addArg'/7,
  'un--weakenVar'/1,
  'un--tryZBranch'/1,
  'un--trySBranch'/2,
  'un--toCExpTree\x{27}'/5,
  'un--toCExpTree'/5,
  'un--toCExpTm'/6,
  'un--toCExp'/7,
  'un--toCDef'/5,
  'un--numArgs'/3,
  'un--nfToCFType'/4,
  'un--newSuccName'/2,
  'un--natHack'/0,
  'un--natBranch'/1,
  'un--mkSub'/3,
  'un--mkDropSubst'/4,
  'un--mkBounds'/1,
  'un--mkArgList'/2,
  'un--magic__natUnsuc'/3,
  'un--magic__natMinus'/3,
  'un--magic'/2,
  'un--lamRHSenv'/3,
  'un--lamRHS'/2,
  'un--getZBranch'/1,
  'un--getSBranch'/2,
  'un--getPArgs'/4,
  'un--getNewType'/7,
  'un--getNewArgs'/2,
  'un--getNArgs'/4,
  'un--getFieldArgs'/4,
  'un--getDef'/5,
  'un--getCFTypes'/4,
  'un--expandToArity'/4,
  'un--etaExpand'/5,
  'un--eraseConArgs'/5,
  'un--enumTree'/1,
  'un--dropPos'/2,
  'un--dropFrom'/3,
  'un--dconFlag'/3,
  'un--constCases'/5,
  'un--conCases'/5,
  'un--compileExp'/3,
  'un--compileDef'/3,
  'un--builtinNatTree'/3,
  'un--builtinMagic'/2,
  'un--applyNewType'/5
]).
'case--case block in getFieldArgs-5858'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of [E0 | E1] -> (fun (V10, V11) -> case V11 of [E2 | E3] -> (fun (V12, V13) -> fun (V14) -> case V13 of [E4 | E5] -> (fun (V15, V16) -> case V16 of [] -> begin (V17 = ('un--getFieldArgs'(V2, V1, V15, V14))), case V17 of {'Idris.Prelude.Types.Left', E6} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V19) -> begin (V20 = ('un--getPArgs'(V2, V1, V12, V14))), case V20 of {'Idris.Prelude.Types.Left', E8} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V22) -> case V22 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V23, V24) -> {'Idris.Prelude.Types.Right', [{'Idris.Builtin.MkPair', V23, V24} | V19]} end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> {'Idris.Prelude.Types.Right', []} end end(E4, E5)); _ -> {'Idris.Prelude.Types.Right', []} end end end(E2, E3)); _ -> fun (V25) -> {'Idris.Prelude.Types.Right', []} end end end(E0, E1)); _ -> fun (V26) -> {'Idris.Prelude.Types.Right', []} end end.
'case--case block in getPArgs-5669'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V9 of [E0 | E1] -> (fun (V11, V12) -> case V12 of [E2 | E3] -> (fun (V13, V14) -> begin (V15 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V2, [], V1, V13))(V10))), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> case V17 of {'Idris.Core.Value.NPrimVal', E6, E7} -> (fun (V18, V19) -> case V19 of {'Idris.Core.TT.Str', E8} -> (fun (V20) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V20, V11}} end(E8)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V17)), <<"Unknown field name"/utf8>>}, V10)) end end(E6, E7)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V17)), <<"Unknown field name"/utf8>>}, V10)) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V7, <<"Badly formed struct type"/utf8>>}, V10)) end end(E0, E1)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V7, <<"Badly formed struct type"/utf8>>}, V10)) end.
'case--case block in conCases-4451'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Core.Context.Context.DCon', E52, E53, E54} -> (fun (V13, V14, V15) -> case V15 of {'Idris.Prelude.Types.Just', E107} -> (fun (V16) -> ('un--conCases'(V1, V8, V7, V6, V5)) end(E107)); _ -> fun (V17) -> begin (V18 = ('Idris.Idris2.Core.Context':'un--getFullName'(V8, V4, V17))), case V18 of {'Idris.Prelude.Types.Left', E55} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V20) -> case ('un--mkDropSubst'(0, case V10 of {'Idris.Core.Context.Context.MkGlobalDef', E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106} -> (fun (V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40) -> V24 end(E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V1, V0)) of {'Idris.Builtin.DPair.MkDPair', E57, E58} -> (fun (V41, V42) -> begin (V43 = (('un--toCExpTree'(('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V0, V1)), V8, V7, V6, V2))(V17))), case V43 of {'Idris.Prelude.Types.Left', E59} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V45) -> begin (V46 = (('un--conCases'(V1, V8, V7, V6, V5))(V17))), case V46 of {'Idris.Prelude.Types.Left', E61} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V48) -> case ('nested--10255-4399--in--un--dcon'(V0, V1, V2, V3, V4, V5, V6, V7, V8, case V10 of {'Idris.Core.Context.Context.MkGlobalDef', E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86} -> (fun (V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68) -> V66 end(E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of 1 -> begin (V69 = ('un--dconFlag'(V8, V20, V17))), case V69 of {'Idris.Prelude.Types.Left', E63} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V71) -> {'Idris.Prelude.Types.Right', [{'Idris.Core.CompileExpr.MkConAlt', V20, V71, {'Idris.Prelude.Types.Just', V3}, V41, ('Idris.Idris2.Core.CompileExpr':'un--shrinkCExp'(V42, V45))} | V48]} end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V72 = ('un--dconFlag'(V8, V20, V17))), case V72 of {'Idris.Prelude.Types.Left', E65} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V74) -> {'Idris.Prelude.Types.Right', [{'Idris.Core.CompileExpr.MkConAlt', V20, V74, {'Idris.Prelude.Types.Nothing'}, V41, ('Idris.Idris2.Core.CompileExpr':'un--shrinkCExp'(V42, V45))} | V48]} end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E57, E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E52, E53, E54)); _ -> fun (V75) -> begin (V76 = ('Idris.Idris2.Core.Context':'un--getFullName'(V8, V4, V75))), case V76 of {'Idris.Prelude.Types.Left', E0} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V78) -> case ('un--mkDropSubst'(0, case V10 of {'Idris.Core.Context.Context.MkGlobalDef', E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51} -> (fun (V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98) -> V82 end(E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V1, V0)) of {'Idris.Builtin.DPair.MkDPair', E2, E3} -> (fun (V99, V100) -> begin (V101 = (('un--toCExpTree'(('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V0, V1)), V8, V7, V6, V2))(V75))), case V101 of {'Idris.Prelude.Types.Left', E4} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V103) -> begin (V104 = (('un--conCases'(V1, V8, V7, V6, V5))(V75))), case V104 of {'Idris.Prelude.Types.Left', E6} -> (fun (V105) -> {'Idris.Prelude.Types.Left', V105} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V106) -> case ('nested--10255-4399--in--un--dcon'(V0, V1, V2, V3, V4, V5, V6, V7, V8, case V10 of {'Idris.Core.Context.Context.MkGlobalDef', E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126) -> V124 end(E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of 1 -> begin (V127 = ('un--dconFlag'(V8, V78, V75))), case V127 of {'Idris.Prelude.Types.Left', E8} -> (fun (V128) -> {'Idris.Prelude.Types.Left', V128} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V129) -> {'Idris.Prelude.Types.Right', [{'Idris.Core.CompileExpr.MkConAlt', V78, V129, {'Idris.Prelude.Types.Just', V3}, V99, ('Idris.Idris2.Core.CompileExpr':'un--shrinkCExp'(V100, V103))} | V106]} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V130 = ('un--dconFlag'(V8, V78, V75))), case V130 of {'Idris.Prelude.Types.Left', E10} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V132) -> {'Idris.Prelude.Types.Right', [{'Idris.Core.CompileExpr.MkConAlt', V78, V132, {'Idris.Prelude.Types.Nothing'}, V99, ('Idris.Idris2.Core.CompileExpr':'un--shrinkCExp'(V100, V103))} | V106]} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'case--toCExp-4196'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V8, V9) -> begin (V13 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V10) -> fun (V11) -> ('un--toCExp'(V0, V5, V4, fun (V12) -> (V3('erased')) end, V2, V10, V11)) end end, V9, [], V7))), case V13 of {'Idris.Prelude.Types.Left', E2} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V15) -> begin (V17 = begin (V16 = ('erlang':'get'(V5))), {'Idris.Prelude.Types.Right', V16} end), case V17 of {'Idris.Prelude.Types.Left', E4} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V19) -> begin (V21 = (('un--toCExpTm'(V0, V5, V4, fun (V20) -> (V3('erased')) end, V2, V8))(V7))), case V21 of {'Idris.Prelude.Types.Left', E6} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V23) -> begin (V24 = ('un--numArgs'(V19, V8, V7))), case V24 of {'Idris.Prelude.Types.Left', E8} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V26) -> case V26 of {'Idris.Compiler.CompileExpr.Arity', E10} -> (fun (V27) -> begin (V28 = ('un--expandToArity'(V0, V27, V23, V15))), {'Idris.Prelude.Types.Right', ((V3('erased'))(V28))} end end(E10)); {'Idris.Compiler.CompileExpr.NewTypeBy', E11, E12} -> (fun (V29, V30) -> begin (V31 = ('un--applyNewType'(V0, V29, V30, V23, V15))), {'Idris.Prelude.Types.Right', ((V3('erased'))(V31))} end end(E11, E12)); {'Idris.Compiler.CompileExpr.EraseArgs', E13, E14} -> (fun (V32, V33) -> begin (V34 = ('un--eraseConArgs'(V0, V32, V33, V23, V15))), {'Idris.Prelude.Types.Right', ((V3('erased'))(V34))} end end(E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--13192-6995--in--un--toLam'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V9 of 1 -> case V10 of {'Idris.Core.CompileExpr.MkFun', E0, E1} -> (fun (V11, V12) -> {'Idris.Core.CompileExpr.MkFun', [], ('un--lamRHS'(V11, V12))} end(E0, E1)); _ -> V10 end; _ -> V10 end.
'nested--9371-3495--in--un--toEnum'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3, E4} -> (fun (V5, V6, V7, V8, V9) -> case V6 of 4 -> case V7 of {'Idris.Prelude.Types.Just', E5} -> (fun (V10) -> case V8 of [] -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'({'Idris.Core.CompileExpr.MkConstAlt', {'Idris.Core.TT.I', V10}, V9})); _ -> {'Idris.Prelude.Types.Nothing'} end end(E5)); _ -> {'Idris.Prelude.Types.Nothing'} end; _ -> {'Idris.Prelude.Types.Nothing'} end end(E0, E1, E2, E3, E4)); _ -> {'Idris.Prelude.Types.Nothing'} end.
'nested--13192-7257--in--un--toArgExp'(V0, V1, V2, V3, V4, V5, V6) -> {'Idris.Core.CompileExpr.CLocal', V6, ('Idris.Idris2.Core.FC':'un--emptyFC'())}.
'nested--13192-7118--in--un--toArgExp'(V0, V1, V2, V3, V4, V5) -> {'Idris.Core.CompileExpr.CLocal', V5, ('Idris.Idris2.Core.FC':'un--emptyFC'())}.
'nested--13890-7600--in--un--noDefYet'(V0, V1, V2, V3) -> case V2 of {'Idris.Core.Context.Context.None'} -> (fun () -> case V3 of [E0 | E1] -> (fun (V4, V5) -> 1 end(E0, E1)); _ -> 0 end end()); _ -> 0 end.
'nested--10267-4806--in--un--mkSubst'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of [] -> {'Idris.Core.CompileExpr.SubstCEnv.Nil'}; [E0 | E1] -> (fun (V15, V16) -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V11, V13)) of 1 -> {'Idris.Core.CompileExpr.SubstCEnv.::', V12, ('nested--10267-4806--in--un--mkSubst'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, ('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'((1 + 0), V11)), V12, V13, V16))}; 0 -> {'Idris.Core.CompileExpr.SubstCEnv.::', {'Idris.Core.CompileExpr.CErased', V8}, ('nested--10267-4806--in--un--mkSubst'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, ('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'((1 + 0), V11)), V12, V13, V16))}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7953-2209--in--un--mkLocal'(V0, V1, V2, V3, V4, V5) -> {'Idris.Core.CompileExpr.CLocal', V5, V4}.
'nested--7953-2210--in--un--mkApp'(V0, V1, V2, V3, V4, V5) -> case V5 of [] -> V4; _ -> case V4 of {'Idris.Core.CompileExpr.CApp', E0, E1, E2} -> (fun (V6, V7, V8) -> {'Idris.Core.CompileExpr.CApp', V6, V7, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V8, V5))} end(E0, E1, E2)); {'Idris.Core.CompileExpr.CCon', E3, E4, E5, E6, E7} -> (fun (V9, V10, V11, V12, V13) -> {'Idris.Core.CompileExpr.CCon', V9, V10, V11, V12, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V13, V5))} end(E3, E4, E5, E6, E7)); {'Idris.Core.CompileExpr.CExtPrim', E8, E9, E10} -> (fun (V14, V15, V16) -> {'Idris.Core.CompileExpr.CExtPrim', V14, V15, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V16, V5))} end(E8, E9, E10)); _ -> {'Idris.Core.CompileExpr.CApp', ('Idris.Idris2.Core.CompileExpr':'un--getFC'(V4)), V4, V5} end end.
'nested--13146-6924--in--un--lamBind'(V0, V1, V2, V3, V4) -> case V3 of [] -> V4; [E0 | E1] -> (fun (V5, V6) -> ('nested--13146-6924--in--un--lamBind'(V0, V1, V2, V6, {'Idris.Core.CompileExpr.CLam', V2, V5, V4})) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--8157-2392--in--un--keepArg'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Core.CompileExpr.CLam', E0, E1, E2} -> (fun (V6, V7, V8) -> {'Idris.Core.CompileExpr.CLam', V6, V7, ('nested--8157-2392--in--un--keepArg'(V0, V1, V2, V3, V4, V8))} end(E0, E1, E2)); {'Idris.Core.CompileExpr.CCon', E3, E4, E5, E6, E7} -> (fun (V9, V10, V11, V12, V13) -> ('nested--8157-2391--in--un--keep'(V0, V1, V2, V3, V4, 0, V13)) end(E3, E4, E5, E6, E7)); _ -> {'Idris.Core.CompileExpr.CErased', ('Idris.Idris2.Core.CompileExpr':'un--getFC'(V2))} end.
'nested--8157-2391--in--un--keep'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of [] -> {'Idris.Core.CompileExpr.CErased', ('Idris.Idris2.Core.CompileExpr':'un--getFC'(V2))}; [E0 | E1] -> (fun (V7, V8) -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V5, V3)) of 1 -> V7; 0 -> ('nested--8157-2391--in--un--keep'(V0, V1, V2, V3, V4, ('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'((1 + 0), V5)), V8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--8564-2750--in--un--go'(V0, V1, V2, V3) -> case V2 of [] -> V3; [E0 | E1] -> (fun (V4, V5) -> case ('nested--8564-2749--in--un--fire'(V0, V1, V4, V3)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('nested--8564-2750--in--un--go'(V0, V1, V5, V3)) end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V6) -> V6 end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--13192-7258--in--un--getVars'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of {'Idris.Compiler.CompileExpr.NoArgs'} -> (fun () -> {'Idris.Data.Vect.Nil'} end()); {'Idris.Compiler.CompileExpr.ConsArg', E0, E1} -> (fun (V7, V8) -> {'Idris.Data.Vect.::', 0, ('Idris.Idris2.Data.Vect':'dn--un--map_Functor_(Vect $n)'(fun (V9) -> ('un--weakenVar'(V9)) end, ('nested--13192-7258--in--un--getVars'(V0, V1, V2, V3, V4, V5, V8))))} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--13192-7119--in--un--getVars'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Compiler.CompileExpr.NoArgs'} -> (fun () -> [] end()); {'Idris.Compiler.CompileExpr.ConsArg', E0, E1} -> (fun (V6, V7) -> [0 | ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V8) -> ('un--weakenVar'(V8)) end, ('nested--13192-7119--in--un--getVars'(V0, V1, V2, V3, V4, V7))))] end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--8564-2749--in--un--fire'(V0, V1, V2, V3) -> case V2 of {'Idris.Compiler.CompileExpr.MagicCCon', E0, E1, E2} -> (fun (V4, V5, V6) -> case V3 of {'Idris.Core.CompileExpr.CCon', E3, E4, E5, E6, E7} -> (fun (V7, V8, V9, V10, V11) -> ('Idris.Idris2.Prelude.Interfaces':'un-->>'({'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V14, V15)) end end end end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V17)) end end, fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V20, V21)) end end end end}, fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(V24, V25)) end end end end, fun (V26) -> fun (V27) -> ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_Maybe'(V27)) end end}, ('Idris.Idris2.Prelude.Interfaces':'un--guard'({'Idris.Prelude.Interfaces.MkAlternative', {'Idris.Prelude.Interfaces.MkApplicative', fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V30, V31)) end end end end, fun (V32) -> fun (V33) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V33)) end end, fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V36, V37)) end end end end}, fun (V38) -> ('Idris.Idris2.Prelude.Types':'dn--un--empty_Alternative_Maybe'()) end, fun (V39) -> fun (V40) -> fun (V41) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'(V40, V41)) end end end}, ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4, V8)))), fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(((V6(V7))('erased')), ('Idris.Idris2.Data.Vect':'un--toVect'(V5, V11)))) end)) end(E3, E4, E5, E6, E7)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E0, E1, E2)); {'Idris.Compiler.CompileExpr.MagicCRef', E8, E9, E10} -> (fun (V42, V43, V44) -> case V3 of {'Idris.Core.CompileExpr.CApp', E11, E12, E13} -> (fun (V45, V46, V47) -> case V46 of {'Idris.Core.CompileExpr.CRef', E14, E15} -> (fun (V48, V49) -> ('Idris.Idris2.Prelude.Interfaces':'un-->>'({'Idris.Prelude.Interfaces.MkMonad', {'Idris.Prelude.Interfaces.MkApplicative', fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V52, V53)) end end end end, fun (V54) -> fun (V55) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V55)) end end, fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V58, V59)) end end end end}, fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(V62, V63)) end end end end, fun (V64) -> fun (V65) -> ('Idris.Idris2.Prelude.Types':'dn--un--join_Monad_Maybe'(V65)) end end}, ('Idris.Idris2.Prelude.Interfaces':'un--guard'({'Idris.Prelude.Interfaces.MkAlternative', {'Idris.Prelude.Interfaces.MkApplicative', fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V68, V69)) end end end end, fun (V70) -> fun (V71) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V71)) end end, fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V74, V75)) end end end end}, fun (V76) -> ('Idris.Idris2.Prelude.Types':'dn--un--empty_Alternative_Maybe'()) end, fun (V77) -> fun (V78) -> fun (V79) -> ('Idris.Idris2.Prelude.Types':'dn--un--<|>_Alternative_Maybe'(V78, V79)) end end end}, ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V42, V49)))), fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'((((V44(V45))(V48))('erased')), ('Idris.Idris2.Data.Vect':'un--toVect'(V43, V47)))) end)) end(E14, E15)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E11, E12, E13)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E8, E9, E10)); _ -> {'Idris.Prelude.Types.Nothing'} end.
'nested--10255-4399--in--un--dcon'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Core.Context.Context.DCon', E0, E1, E2} -> (fun (V10, V11, V12) -> 1 end(E0, E1, E2)); _ -> 0 end.
'nested--9449-3558--in--un--ciFlags'(V0, V1, V2) -> case V2 of [] -> 0; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Idris.Core.Context.Context.ConType', E2} -> (fun (V5) -> V5 end(E2)); _ -> ('nested--9449-3558--in--un--ciFlags'(V0, V1, V4)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--8053-2310--in--un--applyAll'(V0, V1, V2, V3, V4) -> case V4 of [] -> V3; [E0 | E1] -> (fun (V5, V6) -> ('nested--8053-2310--in--un--applyAll'(V0, V1, V2, {'Idris.Core.CompileExpr.CApp', ('Idris.Idris2.Core.CompileExpr':'un--getFC'(V3)), V3, [V5 | []]}, V6)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--8053-2332--in--un--addArg'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.Core.CompileExpr.CApp', E0, E1, E2} -> (fun (V7, V8, V9) -> {'Idris.Core.CompileExpr.CApp', V7, V8, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V9, [V6 | []]))} end(E0, E1, E2)); {'Idris.Core.CompileExpr.CCon', E3, E4, E5, E6, E7} -> (fun (V10, V11, V12, V13, V14) -> {'Idris.Core.CompileExpr.CCon', V10, V11, V12, V13, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V14, [V6 | []]))} end(E3, E4, E5, E6, E7)); {'Idris.Core.CompileExpr.CExtPrim', E8, E9, E10} -> (fun (V15, V16, V17) -> {'Idris.Core.CompileExpr.CExtPrim', V15, V16, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V17, [V6 | []]))} end(E8, E9, E10)); _ -> {'Idris.Core.CompileExpr.CApp', ('Idris.Idris2.Core.CompileExpr':'un--getFC'(V5)), V5, [V6 | []]} end.
'un--weakenVar'(V0) -> (1 + V0).
'un--tryZBranch'(V0) -> case V0 of {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3, E4} -> (fun (V1, V2, V3, V4, V5) -> case V2 of 8 -> case V4 of [] -> {'Idris.Prelude.Types.Just', V5}; _ -> {'Idris.Prelude.Types.Nothing'} end; _ -> {'Idris.Prelude.Types.Nothing'} end end(E0, E1, E2, E3, E4)); _ -> {'Idris.Prelude.Types.Nothing'} end.
'un--trySBranch'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3, E4} -> (fun (V2, V3, V4, V5, V6) -> case V3 of 9 -> case V5 of [E5 | E6] -> (fun (V7, V8) -> case V8 of [] -> {'Idris.Prelude.Types.Just', {'Idris.Core.CompileExpr.CLet', ('Idris.Idris2.Core.CompileExpr':'un--getFC'(V0)), V7, 1, ('un--magic__natUnsuc'(('Idris.Idris2.Core.CompileExpr':'un--getFC'(V0)), ('Idris.Idris2.Core.CompileExpr':'un--getFC'(V0)), {'Idris.Data.Vect.::', V0, {'Idris.Data.Vect.Nil'}})), V6}}; _ -> {'Idris.Prelude.Types.Nothing'} end end(E5, E6)); _ -> {'Idris.Prelude.Types.Nothing'} end; _ -> {'Idris.Prelude.Types.Nothing'} end end(E0, E1, E2, E3, E4)); _ -> {'Idris.Prelude.Types.Nothing'} end.
'un--toCExpTree\x{27}'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.CaseTree.Case', E0, E1, E2, E3} -> (fun (V5, V6, V7, V8) -> case V8 of [E4 | E5] -> (fun (V9, V10) -> case V9 of {'Idris.Core.CaseTree.ConCase', E6, E7, E8, E9} -> (fun (V11, V12, V13, V14) -> begin (V15 = ('Idris.Idris2.Core.TT':'un--getLoc'(V7))), fun (V16) -> begin (V17 = (('un--getNewType'(V0, V1, V2, V15, {'Idris.Core.CompileExpr.CLocal', V6, V15}, V3, V8))(V16))), case V17 of {'Idris.Prelude.Types.Left', E10} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V19) -> begin (V20 = [{'Idris.Core.CaseTree.ConCase', V11, V12, V13, V14} | V10]), case V19 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V22 = begin (V21 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V21} end), case V22 of {'Idris.Prelude.Types.Left', E12} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V24) -> begin (V25 = (('un--conCases'(V0, V1, V2, V3, V20))(V16))), case V25 of {'Idris.Prelude.Types.Left', E14} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V27) -> begin (V28 = (('un--getDef'(V0, V1, V2, V3, V20))(V16))), case V28 of {'Idris.Prelude.Types.Left', E16} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V30) -> case ('Idris.Idris2.Data.List':'un--isNil'(V27)) of 1 -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> {'Idris.Core.CompileExpr.CErased', V15} end, V30))}; 0 -> begin (V31 = ('un--builtinNatTree'(V2, {'Idris.Core.CompileExpr.CConCase', V15, {'Idris.Core.CompileExpr.CLocal', V6, V15}, V27, V30}, V16))), case V31 of {'Idris.Prelude.Types.Left', E18} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V33) -> {'Idris.Prelude.Types.Right', ('un--enumTree'(V33))} end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E20} -> (fun (V34) -> {'Idris.Prelude.Types.Right', V34} end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E6, E7, E8, E9)); {'Idris.Core.CaseTree.DelayCase', E21, E22, E23} -> (fun (V35, V36, V37) -> fun (V38) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', <<"Unexpected DelayCase"/utf8>>}, V38)) end end(E21, E22, E23)); {'Idris.Core.CaseTree.ConstCase', E24, E25} -> (fun (V39, V40) -> begin (V41 = ('Idris.Idris2.Core.TT':'un--getLoc'(V7))), fun (V42) -> begin (V43 = (('un--constCases'(V0, V1, V2, V3, V8))(V42))), case V43 of {'Idris.Prelude.Types.Left', E26} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V45) -> begin (V46 = (('un--getDef'(V0, V1, V2, V3, V8))(V42))), case V46 of {'Idris.Prelude.Types.Left', E28} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V48) -> case ('Idris.Idris2.Data.List':'un--isNil'(V45)) of 1 -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> {'Idris.Core.CompileExpr.CErased', V41} end, V48))}; 0 -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CConstCase', V41, {'Idris.Core.CompileExpr.CLocal', V6, V41}, V45, V48}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E24, E25)); {'Idris.Core.CaseTree.DefaultCase', E30} -> (fun (V49) -> ('un--toCExpTree'(V0, V1, V2, V3, V49)) end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5)); [] -> fun (V50) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.TT':'un--getLoc'(V7)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Missing case tree in "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V3))))}} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1, E2, E3)); {'Idris.Core.CaseTree.STerm', E31, E32} -> (fun (V51, V52) -> fun (V53) -> begin (V54 = ('un--builtinMagic'(V1, V53))), case V54 of {'Idris.Prelude.Types.Left', E33} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V56) -> ('un--toCExp'(V0, V1, V2, fun (V57) -> (V56('erased')) end, V3, V52, V53)) end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E31, E32)); {'Idris.Core.CaseTree.Unmatched', E35} -> (fun (V58) -> fun (V59) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V58}} end end(E35)); {'Idris.Core.CaseTree.Impossible'} -> (fun () -> fun (V60) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.FC':'un--emptyFC'()), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Impossible case encountered in "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V3))))}} end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--toCExpTree'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.CaseTree.Case', E0, E1, E2, E3} -> (fun (V5, V6, V7, V8) -> case V8 of [E4 | E5] -> (fun (V9, V10) -> case V9 of {'Idris.Core.CaseTree.DelayCase', E6, E7, E8} -> (fun (V11, V12, V13) -> begin (V14 = ('Idris.Idris2.Core.TT':'un--getLoc'(V7))), fun (V15) -> begin (V16 = (('un--toCExpTree'([V11 | [V12 | V0]], V1, V2, V3, V13))(V15))), case V16 of {'Idris.Prelude.Types.Left', E9} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CLet', V14, V12, 1, {'Idris.Core.CompileExpr.CForce', V14, 0, {'Idris.Core.CompileExpr.CLocal', V6, ('Idris.Idris2.Core.TT':'un--getLoc'(V7))}}, {'Idris.Core.CompileExpr.CLet', V14, V11, 1, {'Idris.Core.CompileExpr.CErased', V14}, V18}}} end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E6, E7, E8)); _ -> ('un--toCExpTree\x{27}'(V0, V1, V2, V3, V4)) end end(E4, E5)); _ -> ('un--toCExpTree\x{27}'(V0, V1, V2, V3, V4)) end end(E0, E1, E2, E3)); _ -> ('un--toCExpTree\x{27}'(V0, V1, V2, V3, V4)) end.
'un--toCExpTm'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Core.TT.Local', E0, E1, E2} -> (fun (V6, V7, V8) -> fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CLocal', V8, V6}} end end(E0, E1, E2)); {'Idris.Core.TT.Ref', E3, E4, E5} -> (fun (V10, V11, V12) -> fun (V13) -> case V11 of {'Idris.Core.TT.DataCon', E8, E9} -> (fun (V14, V15) -> begin (V16 = ('Idris.Idris2.Core.Context':'un--getFullName'(V1, V12, V13))), case V16 of {'Idris.Prelude.Types.Left', E10} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V18) -> begin (V19 = ('un--dconFlag'(V1, V18, V13))), case V19 of {'Idris.Prelude.Types.Left', E12} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V21) -> case V21 of 4 -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CPrimVal', V10, {'Idris.Core.TT.I', V14}}}; 8 -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CPrimVal', V10, {'Idris.Core.TT.BI', 0}}}; 9 -> begin (V22 = ('un--newSuccName'(V2, V13))), case V22 of {'Idris.Prelude.Types.Left', E14} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V24) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CLam', V10, V24, {'Idris.Core.CompileExpr.COp', (1 + (1 + 0)), V10, {'Idris.Core.TT.Add', {'Idris.Core.TT.IntegerType'}}, {'Idris.Data.Vect.::', {'Idris.Core.CompileExpr.CPrimVal', V10, {'Idris.Core.TT.BI', 1}}, {'Idris.Data.Vect.::', {'Idris.Core.CompileExpr.CLocal', 0, V10}, {'Idris.Data.Vect.Nil'}}}}}} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCon', V10, V18, V21, {'Idris.Prelude.Types.Just', V14}, []}} end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8, E9)); {'Idris.Core.TT.TyCon', E16, E17} -> (fun (V25, V26) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCon', V10, V12, 1, {'Idris.Prelude.Types.Nothing'}, []}} end(E16, E17)); _ -> begin (V27 = ('Idris.Idris2.Core.Context':'un--getFullName'(V1, V12, V13))), case V27 of {'Idris.Prelude.Types.Left', E6} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V29) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CApp', V10, {'Idris.Core.CompileExpr.CRef', V10, V29}, []}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E3, E4, E5)); {'Idris.Core.TT.Meta', E18, E19, E20, E21} -> (fun (V30, V31, V32, V33) -> fun (V34) -> begin (V38 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V35) -> fun (V36) -> ('un--toCExp'(V0, V1, V2, fun (V37) -> (V3('erased')) end, V4, V35, V36)) end end, V33, [], V34))), case V38 of {'Idris.Prelude.Types.Left', E22} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V40) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CApp', V30, {'Idris.Core.CompileExpr.CRef', V30, V31}, V40}} end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E18, E19, E20, E21)); {'Idris.Core.TT.Bind', E24, E25, E26, E27} -> (fun (V41, V42, V43, V44) -> fun (V45) -> case V43 of {'Idris.Core.TT.Lam', E28, E29, E30, E31} -> (fun (V46, V47, V48, V49) -> begin (V51 = ('un--toCExp'([V42 | V0], V1, V2, fun (V50) -> (V3('erased')) end, V4, V44, V45))), case V51 of {'Idris.Prelude.Types.Left', E32} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V53) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CLam', V41, V42, V53}} end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28, E29, E30, E31)); {'Idris.Core.TT.Let', E34, E35, E36, E37} -> (fun (V54, V55, V56, V57) -> begin (V59 = ('un--toCExp'([V42 | V0], V1, V2, fun (V58) -> (V3('erased')) end, V4, V44, V45))), case V59 of {'Idris.Prelude.Types.Left', E38} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V61) -> begin (V63 = ('un--toCExp'(V0, V1, V2, fun (V62) -> (V3('erased')) end, V4, V56, V45))), case V63 of {'Idris.Prelude.Types.Left', E40} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V65) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Algebra.Semiring':'un--branchZero'({'Idris.Builtin.MkPair', {'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V66) -> fun (V67) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring_ZeroOneOmega'(V66, V67)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring_ZeroOneOmega'()), fun (V68) -> fun (V69) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring_ZeroOneOmega'(V68, V69)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring_ZeroOneOmega'())}, {'Idris.Prelude.EqOrd.MkEq', fun (V70) -> fun (V71) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--==_Eq_ZeroOneOmega'(V70, V71)) end end, fun (V72) -> fun (V73) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--/=_Eq_ZeroOneOmega'(V72, V73)) end end}}, fun () -> ('Idris.Idris2.Core.CompileExpr':'un--shrinkCExp'({'Idris.Core.TT.DropCons', {'Idris.Core.TT.SubRefl'}}, V61)) end, fun () -> {'Idris.Core.CompileExpr.CLet', V41, V42, 1, V65, V61} end, V55))} end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E34, E35, E36, E37)); {'Idris.Core.TT.Pi', E42, E43, E44, E45} -> (fun (V74, V75, V76, V77) -> begin (V79 = ('un--toCExp'(V0, V1, V2, fun (V78) -> (V3('erased')) end, V4, V77, V45))), case V79 of {'Idris.Prelude.Types.Left', E46} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V81) -> begin (V83 = ('un--toCExp'([V42 | V0], V1, V2, fun (V82) -> (V3('erased')) end, V4, V44, V45))), case V83 of {'Idris.Prelude.Types.Left', E48} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V85) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCon', V41, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"->"/utf8>>}}, 1, {'Idris.Prelude.Types.Nothing'}, [V81 | [{'Idris.Core.CompileExpr.CLam', V41, V42, V85} | []]]}} end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E42, E43, E44, E45)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CErased', V41}} end end end(E24, E25, E26, E27)); {'Idris.Core.TT.App', E50, E51, E52} -> (fun (V86, V87, V88) -> fun (V89) -> begin (V91 = ('un--toCExp'(V0, V1, V2, fun (V90) -> (V3('erased')) end, V4, V87, V89))), case V91 of {'Idris.Prelude.Types.Left', E53} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V93) -> begin (V95 = ('un--toCExp'(V0, V1, V2, fun (V94) -> (V3('erased')) end, V4, V88, V89))), case V95 of {'Idris.Prelude.Types.Left', E55} -> (fun (V96) -> {'Idris.Prelude.Types.Left', V96} end(E55)); {'Idris.Prelude.Types.Right', E56} -> (fun (V97) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CApp', V86, V93, [V97 | []]}} end(E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E50, E51, E52)); {'Idris.Core.TT.As', E57, E58, E59, E60} -> (fun (V98, V99, V100, V101) -> ('un--toCExpTm'(V0, V1, V2, fun (V102) -> (V3('erased')) end, V4, V101)) end(E57, E58, E59, E60)); {'Idris.Core.TT.TDelayed', E61, E62, E63} -> (fun (V103, V104, V105) -> fun (V106) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CErased', V103}} end end(E61, E62, E63)); {'Idris.Core.TT.TDelay', E64, E65, E66, E67} -> (fun (V107, V108, V109, V110) -> fun (V111) -> begin (V113 = ('un--toCExp'(V0, V1, V2, fun (V112) -> (V3('erased')) end, V4, V110, V111))), case V113 of {'Idris.Prelude.Types.Left', E68} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V115) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CDelay', V107, V108, V115}} end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E64, E65, E66, E67)); {'Idris.Core.TT.TForce', E70, E71, E72} -> (fun (V116, V117, V118) -> fun (V119) -> begin (V121 = ('un--toCExp'(V0, V1, V2, fun (V120) -> (V3('erased')) end, V4, V118, V119))), case V121 of {'Idris.Prelude.Types.Left', E73} -> (fun (V122) -> {'Idris.Prelude.Types.Left', V122} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V123) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CForce', V116, V117, V123}} end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E70, E71, E72)); {'Idris.Core.TT.PrimVal', E75, E76} -> (fun (V124, V125) -> begin (V126 = ('Idris.Idris2.Core.TT':'un--constTag'(V125))), fun (V127) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V126, 0)) of 1 -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CPrimVal', V124, V125}}; 0 -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCon', V124, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', ('Idris.Idris2.Core.TT':'dn--un--show_Show_Constant'(V125))}}, 1, {'Idris.Prelude.Types.Nothing'}, []}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E75, E76)); {'Idris.Core.TT.Erased', E77, E78} -> (fun (V128, V129) -> fun (V130) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CErased', V128}} end end(E77, E78)); {'Idris.Core.TT.TType', E79} -> (fun (V131) -> fun (V132) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CCon', V131, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, 1, {'Idris.Prelude.Types.Nothing'}, []}} end end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--toCExp'(V0, V1, V2, V3, V4, V5, V6) -> ('case--toCExp-4196'(V0, V5, V4, V3, V2, V1, ('Idris.Idris2.Core.TT':'un--getFnArgs'(V5)), V6)).
'un--toCDef'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.Context.Context.None'} -> (fun () -> fun (V5) -> begin (V6 = ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V1, V5))), case V6 of {'Idris.Prelude.Types.Left', E2} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkError', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.FC':'un--emptyFC'()), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Encountered undefined name "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8))))}}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); {'Idris.Core.Context.Context.PMDef', E4, E5, E6, E7, E8} -> (fun (V9, V10, V11, V12, V13) -> fun (V14) -> case ('un--mkSub'(0, V10, V3)) of {'Idris.Builtin.DPair.MkDPair', E9, E10} -> (fun (V15, V16) -> begin (V17 = ('Idris.Idris2.Core.Core':'un--newRef'({'Idris.Compiler.CompileExpr.NextSucc'}, 0, V14))), case V17 of {'Idris.Prelude.Types.Left', E11} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V19) -> begin (V20 = (('un--toCExpTree'(V10, V0, V19, V1, V12))(V14))), case V20 of {'Idris.Prelude.Types.Left', E13} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V22) -> {'Idris.Prelude.Types.Right', ('nested--13192-6995--in--un--toLam'(V10, V11, V13, V12, V9, V3, V2, V1, V0, case V9 of {'Idris.Core.Context.Context.MkPMDefInfo', E15, E16, E17} -> (fun (V23, V24, V25) -> V25 end(E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case ('Idris.Idris2.Data.List':'un--isNil'(V3)) of 1 -> {'Idris.Core.CompileExpr.MkFun', V10, V22}; 0 -> {'Idris.Core.CompileExpr.MkFun', V15, ('Idris.Idris2.Core.CompileExpr':'un--shrinkCExp'(V16, V22))}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end))} end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5, E6, E7, E8)); {'Idris.Core.Context.Context.ExternDef', E18} -> (fun (V26) -> fun (V27) -> case ('un--mkArgList'(0, V26)) of {'Idris.Builtin.DPair.MkDPair', E19, E20} -> (fun (V28, V29) -> begin (V30 = ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V1, V27))), case V30 of {'Idris.Prelude.Types.Left', E21} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V32) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkFun', V28, {'Idris.Core.CompileExpr.CExtPrim', ('Idris.Idris2.Core.FC':'un--emptyFC'()), V32, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V33) -> ('nested--13192-7118--in--un--toArgExp'(V3, V26, V2, V1, V0, V33)) end, ('nested--13192-7119--in--un--getVars'(V3, V26, V2, V1, V0, V29))))}}} end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); {'Idris.Core.Context.Context.ForeignDef', E23, E24} -> (fun (V34, V35) -> fun (V36) -> begin (V38 = begin (V37 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V37} end), case V38 of {'Idris.Prelude.Types.Left', E25} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V40) -> begin (V44 = begin (V41 = (('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V0, [], V40, {'Idris.Core.Env.Nil'}, V2))(V36))), case V41 of {'Idris.Prelude.Types.Left', E27} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V43) -> ('un--getCFTypes'(V0, [], V43, V36)) end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V44 of {'Idris.Prelude.Types.Left', E29} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V46) -> case V46 of {'Idris.Builtin.MkPair', E31, E32} -> (fun (V47, V48) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkForeign', V35, V47, V48}} end(E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E23, E24)); {'Idris.Core.Context.Context.Builtin', E33, E34} -> (fun (V49, V50) -> fun (V51) -> case ('un--mkArgList'(0, V49)) of {'Idris.Builtin.DPair.MkDPair', E35, E36} -> (fun (V52, V53) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkFun', V52, {'Idris.Core.CompileExpr.COp', V49, ('Idris.Idris2.Core.FC':'un--emptyFC'()), V50, ('Idris.Idris2.Data.Vect':'dn--un--map_Functor_(Vect $n)'(fun (V54) -> ('nested--13192-7257--in--un--toArgExp'(V3, V49, V50, V2, V1, V0, V54)) end, ('nested--13192-7258--in--un--getVars'(V3, V49, V50, V2, V1, V0, V53))))}}} end(E35, E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E33, E34)); {'Idris.Core.Context.Context.DCon', E37, E38, E39} -> (fun (V55, V56, V57) -> begin (V63 = ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V60, V61)) end end end end, fun (V62) -> ('Idris.Idris2.Builtin':'un--snd'(V62)) end, V57))), fun (V64) -> begin (V66 = begin (V65 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V65} end), case V66 of {'Idris.Prelude.Types.Left', E40} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V68) -> begin (V69 = ('un--numArgs'(V68, {'Idris.Core.TT.Ref', {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.TT.DataCon', V55, V56}, V1}, V64))), case V69 of {'Idris.Prelude.Types.Left', E42} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V71) -> begin (V77 = case V71 of {'Idris.Compiler.CompileExpr.NewTypeBy', E44, E45} -> (fun (V72, V73) -> V72 end(E44, E45)); {'Idris.Compiler.CompileExpr.EraseArgs', E46, E47} -> (fun (V74, V75) -> ('Idris.Idris2.Prelude.Types':'un--prim__integerToNat'((V74 - ('Idris.Idris2.Prelude.Types.List':'un--length'(V75))))) end(E46, E47)); {'Idris.Compiler.CompileExpr.Arity', E48} -> (fun (V76) -> V76 end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkCon', {'Idris.Prelude.Types.Just', V55}, V77, V63}} end end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E37, E38, E39)); {'Idris.Core.Context.Context.TCon', E49, E50, E51, E52, E53, E54, E55, E56} -> (fun (V78, V79, V80, V81, V82, V83, V84, V85) -> fun (V86) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkCon', {'Idris.Prelude.Types.Nothing'}, V79, {'Idris.Prelude.Types.Nothing'}}} end end(E49, E50, E51, E52, E53, E54, E55, E56)); {'Idris.Core.Context.Context.Hole', E57, E58} -> (fun (V87, V88) -> fun (V89) -> begin (V90 = ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V1, V89))), case V90 of {'Idris.Prelude.Types.Left', E59} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V92) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkError', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.FC':'un--emptyFC'()), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Encountered unimplemented hole "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V92))))}}} end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E57, E58)); {'Idris.Core.Context.Context.Guess', E61, E62, E63} -> (fun (V93, V94, V95) -> fun (V96) -> begin (V97 = ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V1, V96))), case V97 of {'Idris.Prelude.Types.Left', E64} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V99) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkError', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.FC':'un--emptyFC'()), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Encountered constrained hole "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V99))))}}} end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E61, E62, E63)); {'Idris.Core.Context.Context.BySearch', E66, E67, E68} -> (fun (V100, V101, V102) -> fun (V103) -> begin (V104 = ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V1, V103))), case V104 of {'Idris.Prelude.Types.Left', E69} -> (fun (V105) -> {'Idris.Prelude.Types.Left', V105} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V106) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkError', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.FC':'un--emptyFC'()), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Encountered incomplete proof search "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V106))))}}} end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E66, E67, E68)); _ -> fun (V107) -> begin (V108 = ('Idris.Idris2.Core.Context':'un--getFullName'(V0, V1, V107))), case V108 of {'Idris.Prelude.Types.Left', E0} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V110) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.MkError', {'Idris.Core.CompileExpr.CCrash', ('Idris.Idris2.Core.FC':'un--emptyFC'()), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Encountered uncompilable name "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V111) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V111)) end, fun (V112) -> fun (V113) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V112, V113)) end end}, {'Idris.Prelude.Show.MkShow', fun (V114) -> ('Idris.Idris2.Core.Context.Context':'dn--un--show_Show_Def'(V114)) end, fun (V115) -> fun (V116) -> ('Idris.Idris2.Core.Context.Context':'dn--un--showPrec_Show_Def'(V115, V116)) end end}}, {'Idris.Builtin.MkPair', V110, V4}))))}}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--numArgs'(V0, V1, V2) -> case V1 of {'Idris.Core.TT.Ref', E0, E1, E2} -> (fun (V3, V4, V5) -> case V4 of {'Idris.Core.TT.TyCon', E112, E113} -> (fun (V6, V7) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', V7}} end(E112, E113)); _ -> begin (V38 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V5, case V0 of {'Idris.Core.Context.MkDefs', E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32} -> (fun (V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V8 end(E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V38 of {'Idris.Prelude.Types.Left', E33} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V40) -> case V40 of {'Idris.Prelude.Types.Just', E35} -> (fun (V41) -> case V41 of {'Idris.Core.Context.Context.MkGlobalDef', E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55} -> (fun (V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61) -> case V59 of {'Idris.Core.Context.Context.DCon', E56, E57, E58} -> (fun (V62, V63, V64) -> case V64 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.EraseArgs', V63, case V41 of {'Idris.Core.Context.Context.MkGlobalDef', E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78} -> (fun (V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84) -> V68 end(E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end}} end()); {'Idris.Prelude.Types.Just', E79} -> (fun (V85) -> case V85 of {'Idris.Builtin.MkPair', E80, E81} -> (fun (V86, V87) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NewTypeBy', V63, V87}} end(E80, E81)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end end(E79)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end end(E56, E57, E58)); {'Idris.Core.Context.Context.PMDef', E82, E83, E84, E85, E86} -> (fun (V88, V89, V90, V91, V92) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.EraseArgs', ('Idris.Idris2.Prelude.Types.List':'un--length'(V89)), case V41 of {'Idris.Core.Context.Context.MkGlobalDef', E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106} -> (fun (V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112) -> V96 end(E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end}} end(E82, E83, E84, E85, E86)); {'Idris.Core.Context.Context.ExternDef', E107} -> (fun (V113) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', V113}} end(E107)); {'Idris.Core.Context.Context.ForeignDef', E108, E109} -> (fun (V114, V115) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', V114}} end(E108, E109)); {'Idris.Core.Context.Context.Builtin', E110, E111} -> (fun (V116, V117) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', V116}} end(E110, E111)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end end(E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E35)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Arity', 0}} end.
'un--nfToCFType'(V0, V1, V2, V3) -> case V3 of {'Idris.Core.Value.NPrimVal', E1874, E1875} -> (fun (V4, V5) -> case V5 of {'Idris.Core.TT.IntType'} -> (fun () -> fun (V6) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFInt'}} end end()); {'Idris.Core.TT.IntegerType'} -> (fun () -> fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFInteger'}} end end()); {'Idris.Core.TT.Bits8Type'} -> (fun () -> fun (V8) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnsigned8'}} end end()); {'Idris.Core.TT.Bits16Type'} -> (fun () -> fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnsigned16'}} end end()); {'Idris.Core.TT.Bits32Type'} -> (fun () -> fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnsigned32'}} end end()); {'Idris.Core.TT.Bits64Type'} -> (fun () -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnsigned64'}} end end()); {'Idris.Core.TT.Int8Type'} -> (fun () -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFInt8'}} end end()); {'Idris.Core.TT.Int16Type'} -> (fun () -> fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFInt16'}} end end()); {'Idris.Core.TT.Int32Type'} -> (fun () -> fun (V14) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFInt32'}} end end()); {'Idris.Core.TT.Int64Type'} -> (fun () -> fun (V15) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFInt64'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NPrimVal', E2624, E2625} -> (fun (V16, V17) -> case V17 of {'Idris.Core.TT.StringType'} -> (fun () -> fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFString'}} end end()); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E2812, E2813} -> (fun (V19, V20) -> case V20 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V22) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V23) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E2896, E2897, E2898, E2899} -> (fun (V24, V25, V26, V27) -> fun (V28) -> case V26 of {'Idris.Core.TT.Pi', E2941, E2942, E2943, E2944} -> (fun (V29, V30, V31, V32) -> begin (V34 = begin (V33 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V33} end), case V34 of {'Idris.Prelude.Types.Left', E2945} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E2945)); {'Idris.Prelude.Types.Right', E2946} -> (fun (V36) -> begin (V40 = begin (V37 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V36, V32))(V28))), case V37 of {'Idris.Prelude.Types.Left', E2947} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E2947)); {'Idris.Prelude.Types.Right', E2948} -> (fun (V39) -> (('un--nfToCFType'(V0, V24, 0, V39))(V28)) end(E2948)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V40 of {'Idris.Prelude.Types.Left', E2949} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E2949)); {'Idris.Prelude.Types.Right', E2950} -> (fun (V42) -> begin (V43 = (((V27(V36))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V24, 0}))))(V28))), case V43 of {'Idris.Prelude.Types.Left', E2951} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E2951)); {'Idris.Prelude.Types.Right', E2952} -> (fun (V45) -> begin (V46 = (('un--nfToCFType'(V0, V24, 0, V45))(V28))), case V46 of {'Idris.Prelude.Types.Left', E2953} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E2953)); {'Idris.Prelude.Types.Right', E2954} -> (fun (V48) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V42, V48}} end(E2954)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2952)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2950)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2946)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2941, E2942, E2943, E2944)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2906, E2907, E2908, E2909, E2910} -> (fun (V49, V50, V51, V52, V53) -> begin (V55 = begin (V54 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V54} end), case V55 of {'Idris.Prelude.Types.Left', E2911} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E2911)); {'Idris.Prelude.Types.Right', E2912} -> (fun (V57) -> begin (V64 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V58) -> fun (V59) -> fun (V60) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V58, V59, V60)) end end end, fun (V61) -> fun (V62) -> fun (V63) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V61, V62, V63)) end end end}, V50, V28))), case V64 of {'Idris.Prelude.Types.Left', E2913} -> (fun (V65) -> {'Idris.Prelude.Types.Left', V65} end(E2913)); {'Idris.Prelude.Types.Right', E2914} -> (fun (V66) -> begin (V68 = (('un--getNArgs'(V0, V57, V66, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V67) -> ('Idris.Idris2.Builtin':'un--snd'(V67)) end, V53))))(V28))), case V68 of {'Idris.Prelude.Types.Left', E2915} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E2915)); {'Idris.Prelude.Types.Right', E2916} -> (fun (V70) -> case V70 of {'Idris.Compiler.CompileExpr.User', E2917, E2918} -> (fun (V71, V72) -> begin (V74 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V73) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V57, V73)) end, V72, [], V28))), case V74 of {'Idris.Prelude.Types.Left', E2919} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E2919)); {'Idris.Prelude.Types.Right', E2920} -> (fun (V76) -> begin (V78 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V77) -> ('un--nfToCFType'(V0, V49, V2, V77)) end, V76, [], V28))), case V78 of {'Idris.Prelude.Types.Left', E2921} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E2921)); {'Idris.Prelude.Types.Right', E2922} -> (fun (V80) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V66, V80}} end(E2922)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2920)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2917, E2918)); {'Idris.Compiler.CompileExpr.Struct', E2923, E2924} -> (fun (V81, V82) -> begin (V93 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V83) -> fun (V84) -> case V83 of {'Idris.Builtin.MkPair', E2925, E2926} -> (fun (V85, V86) -> begin (V87 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V57, V86))(V84))), case V87 of {'Idris.Prelude.Types.Left', E2927} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E2927)); {'Idris.Prelude.Types.Right', E2928} -> (fun (V89) -> begin (V90 = (('un--nfToCFType'(V0, V49, 1, V89))(V84))), case V90 of {'Idris.Prelude.Types.Left', E2929} -> (fun (V91) -> {'Idris.Prelude.Types.Left', V91} end(E2929)); {'Idris.Prelude.Types.Right', E2930} -> (fun (V92) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V85, V92}} end(E2930)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2928)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2925, E2926)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V82, [], V28))), case V93 of {'Idris.Prelude.Types.Left', E2931} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E2931)); {'Idris.Prelude.Types.Right', E2932} -> (fun (V95) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V81, V95}} end(E2932)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2923, E2924)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2933} -> (fun (V96) -> begin (V97 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V57, V96))(V28))), case V97 of {'Idris.Prelude.Types.Left', E2934} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E2934)); {'Idris.Prelude.Types.Right', E2935} -> (fun (V99) -> begin (V100 = (('un--nfToCFType'(V0, V49, V2, V99))(V28))), case V100 of {'Idris.Prelude.Types.Left', E2936} -> (fun (V101) -> {'Idris.Prelude.Types.Left', V101} end(E2936)); {'Idris.Prelude.Types.Right', E2937} -> (fun (V102) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V102}} end(E2937)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2935)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2933)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2916)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2914)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2912)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2906, E2907, E2908, E2909, E2910)); {'Idris.Core.Value.NType', E2938} -> (fun (V103) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2938)); {'Idris.Core.Value.NErased', E2939, E2940} -> (fun (V104, V105) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2939, E2940)); _ -> begin (V107 = begin (V106 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V106} end), case V107 of {'Idris.Prelude.Types.Left', E2900} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E2900)); {'Idris.Prelude.Types.Right', E2901} -> (fun (V109) -> begin (V110 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V109, {'Idris.Core.Env.Nil'}, V3, V28))), case V110 of {'Idris.Prelude.Types.Left', E2902} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E2902)); {'Idris.Prelude.Types.Right', E2903} -> (fun (V112) -> begin (V119 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V113) -> fun (V114) -> fun (V115) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V113, V114, V115)) end end end, fun (V116) -> fun (V117) -> fun (V118) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V116, V117, V118)) end end end}, V112, V28))), case V119 of {'Idris.Prelude.Types.Left', E2904} -> (fun (V120) -> {'Idris.Prelude.Types.Left', V120} end(E2904)); {'Idris.Prelude.Types.Right', E2905} -> (fun (V121) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V121))))}, V28)) end(E2905)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2903)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2901)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E2896, E2897, E2898, E2899)); _ -> fun (V122) -> case V3 of {'Idris.Core.Value.NTCon', E2861, E2862, E2863, E2864, E2865} -> (fun (V123, V124, V125, V126, V127) -> begin (V129 = begin (V128 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V128} end), case V129 of {'Idris.Prelude.Types.Left', E2866} -> (fun (V130) -> {'Idris.Prelude.Types.Left', V130} end(E2866)); {'Idris.Prelude.Types.Right', E2867} -> (fun (V131) -> begin (V138 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V132) -> fun (V133) -> fun (V134) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V132, V133, V134)) end end end, fun (V135) -> fun (V136) -> fun (V137) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V135, V136, V137)) end end end}, V124, V122))), case V138 of {'Idris.Prelude.Types.Left', E2868} -> (fun (V139) -> {'Idris.Prelude.Types.Left', V139} end(E2868)); {'Idris.Prelude.Types.Right', E2869} -> (fun (V140) -> begin (V142 = (('un--getNArgs'(V0, V131, V140, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V141) -> ('Idris.Idris2.Builtin':'un--snd'(V141)) end, V127))))(V122))), case V142 of {'Idris.Prelude.Types.Left', E2870} -> (fun (V143) -> {'Idris.Prelude.Types.Left', V143} end(E2870)); {'Idris.Prelude.Types.Right', E2871} -> (fun (V144) -> case V144 of {'Idris.Compiler.CompileExpr.User', E2872, E2873} -> (fun (V145, V146) -> begin (V148 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V147) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V131, V147)) end, V146, [], V122))), case V148 of {'Idris.Prelude.Types.Left', E2874} -> (fun (V149) -> {'Idris.Prelude.Types.Left', V149} end(E2874)); {'Idris.Prelude.Types.Right', E2875} -> (fun (V150) -> begin (V152 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V151) -> ('un--nfToCFType'(V0, V123, V2, V151)) end, V150, [], V122))), case V152 of {'Idris.Prelude.Types.Left', E2876} -> (fun (V153) -> {'Idris.Prelude.Types.Left', V153} end(E2876)); {'Idris.Prelude.Types.Right', E2877} -> (fun (V154) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V140, V154}} end(E2877)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2875)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2872, E2873)); {'Idris.Compiler.CompileExpr.Struct', E2878, E2879} -> (fun (V155, V156) -> begin (V167 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V157) -> fun (V158) -> case V157 of {'Idris.Builtin.MkPair', E2880, E2881} -> (fun (V159, V160) -> begin (V161 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V131, V160))(V158))), case V161 of {'Idris.Prelude.Types.Left', E2882} -> (fun (V162) -> {'Idris.Prelude.Types.Left', V162} end(E2882)); {'Idris.Prelude.Types.Right', E2883} -> (fun (V163) -> begin (V164 = (('un--nfToCFType'(V0, V123, 1, V163))(V158))), case V164 of {'Idris.Prelude.Types.Left', E2884} -> (fun (V165) -> {'Idris.Prelude.Types.Left', V165} end(E2884)); {'Idris.Prelude.Types.Right', E2885} -> (fun (V166) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V159, V166}} end(E2885)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2883)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2880, E2881)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V156, [], V122))), case V167 of {'Idris.Prelude.Types.Left', E2886} -> (fun (V168) -> {'Idris.Prelude.Types.Left', V168} end(E2886)); {'Idris.Prelude.Types.Right', E2887} -> (fun (V169) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V155, V169}} end(E2887)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2878, E2879)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2888} -> (fun (V170) -> begin (V171 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V131, V170))(V122))), case V171 of {'Idris.Prelude.Types.Left', E2889} -> (fun (V172) -> {'Idris.Prelude.Types.Left', V172} end(E2889)); {'Idris.Prelude.Types.Right', E2890} -> (fun (V173) -> begin (V174 = (('un--nfToCFType'(V0, V123, V2, V173))(V122))), case V174 of {'Idris.Prelude.Types.Left', E2891} -> (fun (V175) -> {'Idris.Prelude.Types.Left', V175} end(E2891)); {'Idris.Prelude.Types.Right', E2892} -> (fun (V176) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V176}} end(E2892)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2890)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2888)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2871)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2869)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2867)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2861, E2862, E2863, E2864, E2865)); {'Idris.Core.Value.NType', E2893} -> (fun (V177) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2893)); {'Idris.Core.Value.NErased', E2894, E2895} -> (fun (V178, V179) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2894, E2895)); _ -> begin (V181 = begin (V180 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V180} end), case V181 of {'Idris.Prelude.Types.Left', E2855} -> (fun (V182) -> {'Idris.Prelude.Types.Left', V182} end(E2855)); {'Idris.Prelude.Types.Right', E2856} -> (fun (V183) -> begin (V184 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V183, {'Idris.Core.Env.Nil'}, V3, V122))), case V184 of {'Idris.Prelude.Types.Left', E2857} -> (fun (V185) -> {'Idris.Prelude.Types.Left', V185} end(E2857)); {'Idris.Prelude.Types.Right', E2858} -> (fun (V186) -> begin (V193 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V187) -> fun (V188) -> fun (V189) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V187, V188, V189)) end end end, fun (V190) -> fun (V191) -> fun (V192) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V190, V191, V192)) end end end}, V186, V122))), case V193 of {'Idris.Prelude.Types.Left', E2859} -> (fun (V194) -> {'Idris.Prelude.Types.Left', V194} end(E2859)); {'Idris.Prelude.Types.Right', E2860} -> (fun (V195) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V195))))}, V122)) end(E2860)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2858)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2856)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V196) -> case V3 of {'Idris.Core.Value.NBind', E2996, E2997, E2998, E2999} -> (fun (V197, V198, V199, V200) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V197, <<"Function types not allowed in a foreign struct"/utf8>>}, V196)) end(E2996, E2997, E2998, E2999)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2961, E2962, E2963, E2964, E2965} -> (fun (V201, V202, V203, V204, V205) -> begin (V207 = begin (V206 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V206} end), case V207 of {'Idris.Prelude.Types.Left', E2966} -> (fun (V208) -> {'Idris.Prelude.Types.Left', V208} end(E2966)); {'Idris.Prelude.Types.Right', E2967} -> (fun (V209) -> begin (V216 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V210) -> fun (V211) -> fun (V212) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V210, V211, V212)) end end end, fun (V213) -> fun (V214) -> fun (V215) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V213, V214, V215)) end end end}, V202, V196))), case V216 of {'Idris.Prelude.Types.Left', E2968} -> (fun (V217) -> {'Idris.Prelude.Types.Left', V217} end(E2968)); {'Idris.Prelude.Types.Right', E2969} -> (fun (V218) -> begin (V220 = (('un--getNArgs'(V0, V209, V218, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V219) -> ('Idris.Idris2.Builtin':'un--snd'(V219)) end, V205))))(V196))), case V220 of {'Idris.Prelude.Types.Left', E2970} -> (fun (V221) -> {'Idris.Prelude.Types.Left', V221} end(E2970)); {'Idris.Prelude.Types.Right', E2971} -> (fun (V222) -> case V222 of {'Idris.Compiler.CompileExpr.User', E2972, E2973} -> (fun (V223, V224) -> begin (V226 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V225) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V209, V225)) end, V224, [], V196))), case V226 of {'Idris.Prelude.Types.Left', E2974} -> (fun (V227) -> {'Idris.Prelude.Types.Left', V227} end(E2974)); {'Idris.Prelude.Types.Right', E2975} -> (fun (V228) -> begin (V230 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V229) -> ('un--nfToCFType'(V0, V201, V2, V229)) end, V228, [], V196))), case V230 of {'Idris.Prelude.Types.Left', E2976} -> (fun (V231) -> {'Idris.Prelude.Types.Left', V231} end(E2976)); {'Idris.Prelude.Types.Right', E2977} -> (fun (V232) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V218, V232}} end(E2977)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2975)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2972, E2973)); {'Idris.Compiler.CompileExpr.Struct', E2978, E2979} -> (fun (V233, V234) -> begin (V245 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V235) -> fun (V236) -> case V235 of {'Idris.Builtin.MkPair', E2980, E2981} -> (fun (V237, V238) -> begin (V239 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V209, V238))(V236))), case V239 of {'Idris.Prelude.Types.Left', E2982} -> (fun (V240) -> {'Idris.Prelude.Types.Left', V240} end(E2982)); {'Idris.Prelude.Types.Right', E2983} -> (fun (V241) -> begin (V242 = (('un--nfToCFType'(V0, V201, 1, V241))(V236))), case V242 of {'Idris.Prelude.Types.Left', E2984} -> (fun (V243) -> {'Idris.Prelude.Types.Left', V243} end(E2984)); {'Idris.Prelude.Types.Right', E2985} -> (fun (V244) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V237, V244}} end(E2985)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2983)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2980, E2981)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V234, [], V196))), case V245 of {'Idris.Prelude.Types.Left', E2986} -> (fun (V246) -> {'Idris.Prelude.Types.Left', V246} end(E2986)); {'Idris.Prelude.Types.Right', E2987} -> (fun (V247) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V233, V247}} end(E2987)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2978, E2979)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2988} -> (fun (V248) -> begin (V249 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V209, V248))(V196))), case V249 of {'Idris.Prelude.Types.Left', E2989} -> (fun (V250) -> {'Idris.Prelude.Types.Left', V250} end(E2989)); {'Idris.Prelude.Types.Right', E2990} -> (fun (V251) -> begin (V252 = (('un--nfToCFType'(V0, V201, V2, V251))(V196))), case V252 of {'Idris.Prelude.Types.Left', E2991} -> (fun (V253) -> {'Idris.Prelude.Types.Left', V253} end(E2991)); {'Idris.Prelude.Types.Right', E2992} -> (fun (V254) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V254}} end(E2992)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2990)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2988)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2971)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2969)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2967)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2961, E2962, E2963, E2964, E2965)); {'Idris.Core.Value.NType', E2993} -> (fun (V255) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2993)); {'Idris.Core.Value.NErased', E2994, E2995} -> (fun (V256, V257) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2994, E2995)); _ -> begin (V259 = begin (V258 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V258} end), case V259 of {'Idris.Prelude.Types.Left', E2955} -> (fun (V260) -> {'Idris.Prelude.Types.Left', V260} end(E2955)); {'Idris.Prelude.Types.Right', E2956} -> (fun (V261) -> begin (V262 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V261, {'Idris.Core.Env.Nil'}, V3, V196))), case V262 of {'Idris.Prelude.Types.Left', E2957} -> (fun (V263) -> {'Idris.Prelude.Types.Left', V263} end(E2957)); {'Idris.Prelude.Types.Right', E2958} -> (fun (V264) -> begin (V271 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V265) -> fun (V266) -> fun (V267) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V265, V266, V267)) end end end, fun (V268) -> fun (V269) -> fun (V270) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V268, V269, V270)) end end end}, V264, V196))), case V271 of {'Idris.Prelude.Types.Left', E2959} -> (fun (V272) -> {'Idris.Prelude.Types.Left', V272} end(E2959)); {'Idris.Prelude.Types.Right', E2960} -> (fun (V273) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V273))))}, V196)) end(E2960)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2958)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2956)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V274) -> case V3 of {'Idris.Core.Value.NTCon', E2820, E2821, E2822, E2823, E2824} -> (fun (V275, V276, V277, V278, V279) -> begin (V281 = begin (V280 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V280} end), case V281 of {'Idris.Prelude.Types.Left', E2825} -> (fun (V282) -> {'Idris.Prelude.Types.Left', V282} end(E2825)); {'Idris.Prelude.Types.Right', E2826} -> (fun (V283) -> begin (V290 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V284) -> fun (V285) -> fun (V286) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V284, V285, V286)) end end end, fun (V287) -> fun (V288) -> fun (V289) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V287, V288, V289)) end end end}, V276, V274))), case V290 of {'Idris.Prelude.Types.Left', E2827} -> (fun (V291) -> {'Idris.Prelude.Types.Left', V291} end(E2827)); {'Idris.Prelude.Types.Right', E2828} -> (fun (V292) -> begin (V294 = (('un--getNArgs'(V0, V283, V292, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V293) -> ('Idris.Idris2.Builtin':'un--snd'(V293)) end, V279))))(V274))), case V294 of {'Idris.Prelude.Types.Left', E2829} -> (fun (V295) -> {'Idris.Prelude.Types.Left', V295} end(E2829)); {'Idris.Prelude.Types.Right', E2830} -> (fun (V296) -> case V296 of {'Idris.Compiler.CompileExpr.User', E2831, E2832} -> (fun (V297, V298) -> begin (V300 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V299) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V283, V299)) end, V298, [], V274))), case V300 of {'Idris.Prelude.Types.Left', E2833} -> (fun (V301) -> {'Idris.Prelude.Types.Left', V301} end(E2833)); {'Idris.Prelude.Types.Right', E2834} -> (fun (V302) -> begin (V304 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V303) -> ('un--nfToCFType'(V0, V275, V2, V303)) end, V302, [], V274))), case V304 of {'Idris.Prelude.Types.Left', E2835} -> (fun (V305) -> {'Idris.Prelude.Types.Left', V305} end(E2835)); {'Idris.Prelude.Types.Right', E2836} -> (fun (V306) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V292, V306}} end(E2836)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2834)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2831, E2832)); {'Idris.Compiler.CompileExpr.Struct', E2837, E2838} -> (fun (V307, V308) -> begin (V319 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V309) -> fun (V310) -> case V309 of {'Idris.Builtin.MkPair', E2839, E2840} -> (fun (V311, V312) -> begin (V313 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V283, V312))(V310))), case V313 of {'Idris.Prelude.Types.Left', E2841} -> (fun (V314) -> {'Idris.Prelude.Types.Left', V314} end(E2841)); {'Idris.Prelude.Types.Right', E2842} -> (fun (V315) -> begin (V316 = (('un--nfToCFType'(V0, V275, 1, V315))(V310))), case V316 of {'Idris.Prelude.Types.Left', E2843} -> (fun (V317) -> {'Idris.Prelude.Types.Left', V317} end(E2843)); {'Idris.Prelude.Types.Right', E2844} -> (fun (V318) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V311, V318}} end(E2844)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2842)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2839, E2840)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V308, [], V274))), case V319 of {'Idris.Prelude.Types.Left', E2845} -> (fun (V320) -> {'Idris.Prelude.Types.Left', V320} end(E2845)); {'Idris.Prelude.Types.Right', E2846} -> (fun (V321) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V307, V321}} end(E2846)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2837, E2838)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2847} -> (fun (V322) -> begin (V323 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V283, V322))(V274))), case V323 of {'Idris.Prelude.Types.Left', E2848} -> (fun (V324) -> {'Idris.Prelude.Types.Left', V324} end(E2848)); {'Idris.Prelude.Types.Right', E2849} -> (fun (V325) -> begin (V326 = (('un--nfToCFType'(V0, V275, V2, V325))(V274))), case V326 of {'Idris.Prelude.Types.Left', E2850} -> (fun (V327) -> {'Idris.Prelude.Types.Left', V327} end(E2850)); {'Idris.Prelude.Types.Right', E2851} -> (fun (V328) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V328}} end(E2851)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2849)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2847)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2830)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2828)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2826)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2820, E2821, E2822, E2823, E2824)); {'Idris.Core.Value.NType', E2852} -> (fun (V329) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2852)); {'Idris.Core.Value.NErased', E2853, E2854} -> (fun (V330, V331) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2853, E2854)); _ -> begin (V333 = begin (V332 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V332} end), case V333 of {'Idris.Prelude.Types.Left', E2814} -> (fun (V334) -> {'Idris.Prelude.Types.Left', V334} end(E2814)); {'Idris.Prelude.Types.Right', E2815} -> (fun (V335) -> begin (V336 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V335, {'Idris.Core.Env.Nil'}, V3, V274))), case V336 of {'Idris.Prelude.Types.Left', E2816} -> (fun (V337) -> {'Idris.Prelude.Types.Left', V337} end(E2816)); {'Idris.Prelude.Types.Right', E2817} -> (fun (V338) -> begin (V345 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V339) -> fun (V340) -> fun (V341) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V339, V340, V341)) end end end, fun (V342) -> fun (V343) -> fun (V344) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V342, V343, V344)) end end end}, V338, V274))), case V345 of {'Idris.Prelude.Types.Left', E2818} -> (fun (V346) -> {'Idris.Prelude.Types.Left', V346} end(E2818)); {'Idris.Prelude.Types.Right', E2819} -> (fun (V347) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V347))))}, V274)) end(E2819)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2817)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2815)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E2812, E2813)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E2708, E2709, E2710, E2711} -> (fun (V348, V349, V350, V351) -> fun (V352) -> case V350 of {'Idris.Core.TT.Pi', E2753, E2754, E2755, E2756} -> (fun (V353, V354, V355, V356) -> begin (V358 = begin (V357 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V357} end), case V358 of {'Idris.Prelude.Types.Left', E2757} -> (fun (V359) -> {'Idris.Prelude.Types.Left', V359} end(E2757)); {'Idris.Prelude.Types.Right', E2758} -> (fun (V360) -> begin (V364 = begin (V361 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V360, V356))(V352))), case V361 of {'Idris.Prelude.Types.Left', E2759} -> (fun (V362) -> {'Idris.Prelude.Types.Left', V362} end(E2759)); {'Idris.Prelude.Types.Right', E2760} -> (fun (V363) -> (('un--nfToCFType'(V0, V348, 0, V363))(V352)) end(E2760)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V364 of {'Idris.Prelude.Types.Left', E2761} -> (fun (V365) -> {'Idris.Prelude.Types.Left', V365} end(E2761)); {'Idris.Prelude.Types.Right', E2762} -> (fun (V366) -> begin (V367 = (((V351(V360))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V348, 0}))))(V352))), case V367 of {'Idris.Prelude.Types.Left', E2763} -> (fun (V368) -> {'Idris.Prelude.Types.Left', V368} end(E2763)); {'Idris.Prelude.Types.Right', E2764} -> (fun (V369) -> begin (V370 = (('un--nfToCFType'(V0, V348, 0, V369))(V352))), case V370 of {'Idris.Prelude.Types.Left', E2765} -> (fun (V371) -> {'Idris.Prelude.Types.Left', V371} end(E2765)); {'Idris.Prelude.Types.Right', E2766} -> (fun (V372) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V366, V372}} end(E2766)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2764)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2762)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2758)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2753, E2754, E2755, E2756)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2718, E2719, E2720, E2721, E2722} -> (fun (V373, V374, V375, V376, V377) -> begin (V379 = begin (V378 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V378} end), case V379 of {'Idris.Prelude.Types.Left', E2723} -> (fun (V380) -> {'Idris.Prelude.Types.Left', V380} end(E2723)); {'Idris.Prelude.Types.Right', E2724} -> (fun (V381) -> begin (V388 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V382) -> fun (V383) -> fun (V384) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V382, V383, V384)) end end end, fun (V385) -> fun (V386) -> fun (V387) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V385, V386, V387)) end end end}, V374, V352))), case V388 of {'Idris.Prelude.Types.Left', E2725} -> (fun (V389) -> {'Idris.Prelude.Types.Left', V389} end(E2725)); {'Idris.Prelude.Types.Right', E2726} -> (fun (V390) -> begin (V392 = (('un--getNArgs'(V0, V381, V390, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V391) -> ('Idris.Idris2.Builtin':'un--snd'(V391)) end, V377))))(V352))), case V392 of {'Idris.Prelude.Types.Left', E2727} -> (fun (V393) -> {'Idris.Prelude.Types.Left', V393} end(E2727)); {'Idris.Prelude.Types.Right', E2728} -> (fun (V394) -> case V394 of {'Idris.Compiler.CompileExpr.User', E2729, E2730} -> (fun (V395, V396) -> begin (V398 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V397) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V381, V397)) end, V396, [], V352))), case V398 of {'Idris.Prelude.Types.Left', E2731} -> (fun (V399) -> {'Idris.Prelude.Types.Left', V399} end(E2731)); {'Idris.Prelude.Types.Right', E2732} -> (fun (V400) -> begin (V402 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V401) -> ('un--nfToCFType'(V0, V373, V2, V401)) end, V400, [], V352))), case V402 of {'Idris.Prelude.Types.Left', E2733} -> (fun (V403) -> {'Idris.Prelude.Types.Left', V403} end(E2733)); {'Idris.Prelude.Types.Right', E2734} -> (fun (V404) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V390, V404}} end(E2734)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2732)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2729, E2730)); {'Idris.Compiler.CompileExpr.Struct', E2735, E2736} -> (fun (V405, V406) -> begin (V417 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V407) -> fun (V408) -> case V407 of {'Idris.Builtin.MkPair', E2737, E2738} -> (fun (V409, V410) -> begin (V411 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V381, V410))(V408))), case V411 of {'Idris.Prelude.Types.Left', E2739} -> (fun (V412) -> {'Idris.Prelude.Types.Left', V412} end(E2739)); {'Idris.Prelude.Types.Right', E2740} -> (fun (V413) -> begin (V414 = (('un--nfToCFType'(V0, V373, 1, V413))(V408))), case V414 of {'Idris.Prelude.Types.Left', E2741} -> (fun (V415) -> {'Idris.Prelude.Types.Left', V415} end(E2741)); {'Idris.Prelude.Types.Right', E2742} -> (fun (V416) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V409, V416}} end(E2742)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2740)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2737, E2738)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V406, [], V352))), case V417 of {'Idris.Prelude.Types.Left', E2743} -> (fun (V418) -> {'Idris.Prelude.Types.Left', V418} end(E2743)); {'Idris.Prelude.Types.Right', E2744} -> (fun (V419) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V405, V419}} end(E2744)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2735, E2736)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2745} -> (fun (V420) -> begin (V421 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V381, V420))(V352))), case V421 of {'Idris.Prelude.Types.Left', E2746} -> (fun (V422) -> {'Idris.Prelude.Types.Left', V422} end(E2746)); {'Idris.Prelude.Types.Right', E2747} -> (fun (V423) -> begin (V424 = (('un--nfToCFType'(V0, V373, V2, V423))(V352))), case V424 of {'Idris.Prelude.Types.Left', E2748} -> (fun (V425) -> {'Idris.Prelude.Types.Left', V425} end(E2748)); {'Idris.Prelude.Types.Right', E2749} -> (fun (V426) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V426}} end(E2749)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2747)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2745)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2728)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2726)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2724)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2718, E2719, E2720, E2721, E2722)); {'Idris.Core.Value.NType', E2750} -> (fun (V427) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2750)); {'Idris.Core.Value.NErased', E2751, E2752} -> (fun (V428, V429) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2751, E2752)); _ -> begin (V431 = begin (V430 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V430} end), case V431 of {'Idris.Prelude.Types.Left', E2712} -> (fun (V432) -> {'Idris.Prelude.Types.Left', V432} end(E2712)); {'Idris.Prelude.Types.Right', E2713} -> (fun (V433) -> begin (V434 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V433, {'Idris.Core.Env.Nil'}, V3, V352))), case V434 of {'Idris.Prelude.Types.Left', E2714} -> (fun (V435) -> {'Idris.Prelude.Types.Left', V435} end(E2714)); {'Idris.Prelude.Types.Right', E2715} -> (fun (V436) -> begin (V443 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V437) -> fun (V438) -> fun (V439) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V437, V438, V439)) end end end, fun (V440) -> fun (V441) -> fun (V442) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V440, V441, V442)) end end end}, V436, V352))), case V443 of {'Idris.Prelude.Types.Left', E2716} -> (fun (V444) -> {'Idris.Prelude.Types.Left', V444} end(E2716)); {'Idris.Prelude.Types.Right', E2717} -> (fun (V445) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V445))))}, V352)) end(E2717)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2715)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2713)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E2708, E2709, E2710, E2711)); _ -> fun (V446) -> case V3 of {'Idris.Core.Value.NTCon', E2673, E2674, E2675, E2676, E2677} -> (fun (V447, V448, V449, V450, V451) -> begin (V453 = begin (V452 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V452} end), case V453 of {'Idris.Prelude.Types.Left', E2678} -> (fun (V454) -> {'Idris.Prelude.Types.Left', V454} end(E2678)); {'Idris.Prelude.Types.Right', E2679} -> (fun (V455) -> begin (V462 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V456) -> fun (V457) -> fun (V458) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V456, V457, V458)) end end end, fun (V459) -> fun (V460) -> fun (V461) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V459, V460, V461)) end end end}, V448, V446))), case V462 of {'Idris.Prelude.Types.Left', E2680} -> (fun (V463) -> {'Idris.Prelude.Types.Left', V463} end(E2680)); {'Idris.Prelude.Types.Right', E2681} -> (fun (V464) -> begin (V466 = (('un--getNArgs'(V0, V455, V464, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V465) -> ('Idris.Idris2.Builtin':'un--snd'(V465)) end, V451))))(V446))), case V466 of {'Idris.Prelude.Types.Left', E2682} -> (fun (V467) -> {'Idris.Prelude.Types.Left', V467} end(E2682)); {'Idris.Prelude.Types.Right', E2683} -> (fun (V468) -> case V468 of {'Idris.Compiler.CompileExpr.User', E2684, E2685} -> (fun (V469, V470) -> begin (V472 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V471) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V455, V471)) end, V470, [], V446))), case V472 of {'Idris.Prelude.Types.Left', E2686} -> (fun (V473) -> {'Idris.Prelude.Types.Left', V473} end(E2686)); {'Idris.Prelude.Types.Right', E2687} -> (fun (V474) -> begin (V476 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V475) -> ('un--nfToCFType'(V0, V447, V2, V475)) end, V474, [], V446))), case V476 of {'Idris.Prelude.Types.Left', E2688} -> (fun (V477) -> {'Idris.Prelude.Types.Left', V477} end(E2688)); {'Idris.Prelude.Types.Right', E2689} -> (fun (V478) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V464, V478}} end(E2689)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2687)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2684, E2685)); {'Idris.Compiler.CompileExpr.Struct', E2690, E2691} -> (fun (V479, V480) -> begin (V491 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V481) -> fun (V482) -> case V481 of {'Idris.Builtin.MkPair', E2692, E2693} -> (fun (V483, V484) -> begin (V485 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V455, V484))(V482))), case V485 of {'Idris.Prelude.Types.Left', E2694} -> (fun (V486) -> {'Idris.Prelude.Types.Left', V486} end(E2694)); {'Idris.Prelude.Types.Right', E2695} -> (fun (V487) -> begin (V488 = (('un--nfToCFType'(V0, V447, 1, V487))(V482))), case V488 of {'Idris.Prelude.Types.Left', E2696} -> (fun (V489) -> {'Idris.Prelude.Types.Left', V489} end(E2696)); {'Idris.Prelude.Types.Right', E2697} -> (fun (V490) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V483, V490}} end(E2697)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2695)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2692, E2693)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V480, [], V446))), case V491 of {'Idris.Prelude.Types.Left', E2698} -> (fun (V492) -> {'Idris.Prelude.Types.Left', V492} end(E2698)); {'Idris.Prelude.Types.Right', E2699} -> (fun (V493) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V479, V493}} end(E2699)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2690, E2691)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2700} -> (fun (V494) -> begin (V495 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V455, V494))(V446))), case V495 of {'Idris.Prelude.Types.Left', E2701} -> (fun (V496) -> {'Idris.Prelude.Types.Left', V496} end(E2701)); {'Idris.Prelude.Types.Right', E2702} -> (fun (V497) -> begin (V498 = (('un--nfToCFType'(V0, V447, V2, V497))(V446))), case V498 of {'Idris.Prelude.Types.Left', E2703} -> (fun (V499) -> {'Idris.Prelude.Types.Left', V499} end(E2703)); {'Idris.Prelude.Types.Right', E2704} -> (fun (V500) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V500}} end(E2704)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2702)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2700)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2683)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2681)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2679)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2673, E2674, E2675, E2676, E2677)); {'Idris.Core.Value.NType', E2705} -> (fun (V501) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2705)); {'Idris.Core.Value.NErased', E2706, E2707} -> (fun (V502, V503) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2706, E2707)); _ -> begin (V505 = begin (V504 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V504} end), case V505 of {'Idris.Prelude.Types.Left', E2667} -> (fun (V506) -> {'Idris.Prelude.Types.Left', V506} end(E2667)); {'Idris.Prelude.Types.Right', E2668} -> (fun (V507) -> begin (V508 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V507, {'Idris.Core.Env.Nil'}, V3, V446))), case V508 of {'Idris.Prelude.Types.Left', E2669} -> (fun (V509) -> {'Idris.Prelude.Types.Left', V509} end(E2669)); {'Idris.Prelude.Types.Right', E2670} -> (fun (V510) -> begin (V517 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V511) -> fun (V512) -> fun (V513) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V511, V512, V513)) end end end, fun (V514) -> fun (V515) -> fun (V516) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V514, V515, V516)) end end end}, V510, V446))), case V517 of {'Idris.Prelude.Types.Left', E2671} -> (fun (V518) -> {'Idris.Prelude.Types.Left', V518} end(E2671)); {'Idris.Prelude.Types.Right', E2672} -> (fun (V519) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V519))))}, V446)) end(E2672)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2670)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2668)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V520) -> case V3 of {'Idris.Core.Value.NBind', E2808, E2809, E2810, E2811} -> (fun (V521, V522, V523, V524) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V521, <<"Function types not allowed in a foreign struct"/utf8>>}, V520)) end(E2808, E2809, E2810, E2811)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2773, E2774, E2775, E2776, E2777} -> (fun (V525, V526, V527, V528, V529) -> begin (V531 = begin (V530 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V530} end), case V531 of {'Idris.Prelude.Types.Left', E2778} -> (fun (V532) -> {'Idris.Prelude.Types.Left', V532} end(E2778)); {'Idris.Prelude.Types.Right', E2779} -> (fun (V533) -> begin (V540 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V534) -> fun (V535) -> fun (V536) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V534, V535, V536)) end end end, fun (V537) -> fun (V538) -> fun (V539) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V537, V538, V539)) end end end}, V526, V520))), case V540 of {'Idris.Prelude.Types.Left', E2780} -> (fun (V541) -> {'Idris.Prelude.Types.Left', V541} end(E2780)); {'Idris.Prelude.Types.Right', E2781} -> (fun (V542) -> begin (V544 = (('un--getNArgs'(V0, V533, V542, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V543) -> ('Idris.Idris2.Builtin':'un--snd'(V543)) end, V529))))(V520))), case V544 of {'Idris.Prelude.Types.Left', E2782} -> (fun (V545) -> {'Idris.Prelude.Types.Left', V545} end(E2782)); {'Idris.Prelude.Types.Right', E2783} -> (fun (V546) -> case V546 of {'Idris.Compiler.CompileExpr.User', E2784, E2785} -> (fun (V547, V548) -> begin (V550 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V549) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V533, V549)) end, V548, [], V520))), case V550 of {'Idris.Prelude.Types.Left', E2786} -> (fun (V551) -> {'Idris.Prelude.Types.Left', V551} end(E2786)); {'Idris.Prelude.Types.Right', E2787} -> (fun (V552) -> begin (V554 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V553) -> ('un--nfToCFType'(V0, V525, V2, V553)) end, V552, [], V520))), case V554 of {'Idris.Prelude.Types.Left', E2788} -> (fun (V555) -> {'Idris.Prelude.Types.Left', V555} end(E2788)); {'Idris.Prelude.Types.Right', E2789} -> (fun (V556) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V542, V556}} end(E2789)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2787)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2784, E2785)); {'Idris.Compiler.CompileExpr.Struct', E2790, E2791} -> (fun (V557, V558) -> begin (V569 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V559) -> fun (V560) -> case V559 of {'Idris.Builtin.MkPair', E2792, E2793} -> (fun (V561, V562) -> begin (V563 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V533, V562))(V560))), case V563 of {'Idris.Prelude.Types.Left', E2794} -> (fun (V564) -> {'Idris.Prelude.Types.Left', V564} end(E2794)); {'Idris.Prelude.Types.Right', E2795} -> (fun (V565) -> begin (V566 = (('un--nfToCFType'(V0, V525, 1, V565))(V560))), case V566 of {'Idris.Prelude.Types.Left', E2796} -> (fun (V567) -> {'Idris.Prelude.Types.Left', V567} end(E2796)); {'Idris.Prelude.Types.Right', E2797} -> (fun (V568) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V561, V568}} end(E2797)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2795)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2792, E2793)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V558, [], V520))), case V569 of {'Idris.Prelude.Types.Left', E2798} -> (fun (V570) -> {'Idris.Prelude.Types.Left', V570} end(E2798)); {'Idris.Prelude.Types.Right', E2799} -> (fun (V571) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V557, V571}} end(E2799)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2790, E2791)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2800} -> (fun (V572) -> begin (V573 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V533, V572))(V520))), case V573 of {'Idris.Prelude.Types.Left', E2801} -> (fun (V574) -> {'Idris.Prelude.Types.Left', V574} end(E2801)); {'Idris.Prelude.Types.Right', E2802} -> (fun (V575) -> begin (V576 = (('un--nfToCFType'(V0, V525, V2, V575))(V520))), case V576 of {'Idris.Prelude.Types.Left', E2803} -> (fun (V577) -> {'Idris.Prelude.Types.Left', V577} end(E2803)); {'Idris.Prelude.Types.Right', E2804} -> (fun (V578) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V578}} end(E2804)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2802)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2800)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2783)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2781)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2779)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2773, E2774, E2775, E2776, E2777)); {'Idris.Core.Value.NType', E2805} -> (fun (V579) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2805)); {'Idris.Core.Value.NErased', E2806, E2807} -> (fun (V580, V581) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2806, E2807)); _ -> begin (V583 = begin (V582 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V582} end), case V583 of {'Idris.Prelude.Types.Left', E2767} -> (fun (V584) -> {'Idris.Prelude.Types.Left', V584} end(E2767)); {'Idris.Prelude.Types.Right', E2768} -> (fun (V585) -> begin (V586 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V585, {'Idris.Core.Env.Nil'}, V3, V520))), case V586 of {'Idris.Prelude.Types.Left', E2769} -> (fun (V587) -> {'Idris.Prelude.Types.Left', V587} end(E2769)); {'Idris.Prelude.Types.Right', E2770} -> (fun (V588) -> begin (V595 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V589) -> fun (V590) -> fun (V591) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V589, V590, V591)) end end end, fun (V592) -> fun (V593) -> fun (V594) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V592, V593, V594)) end end end}, V588, V520))), case V595 of {'Idris.Prelude.Types.Left', E2771} -> (fun (V596) -> {'Idris.Prelude.Types.Left', V596} end(E2771)); {'Idris.Prelude.Types.Right', E2772} -> (fun (V597) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V597))))}, V520)) end(E2772)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2770)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2768)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V598) -> case V3 of {'Idris.Core.Value.NTCon', E2632, E2633, E2634, E2635, E2636} -> (fun (V599, V600, V601, V602, V603) -> begin (V605 = begin (V604 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V604} end), case V605 of {'Idris.Prelude.Types.Left', E2637} -> (fun (V606) -> {'Idris.Prelude.Types.Left', V606} end(E2637)); {'Idris.Prelude.Types.Right', E2638} -> (fun (V607) -> begin (V614 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V608) -> fun (V609) -> fun (V610) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V608, V609, V610)) end end end, fun (V611) -> fun (V612) -> fun (V613) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V611, V612, V613)) end end end}, V600, V598))), case V614 of {'Idris.Prelude.Types.Left', E2639} -> (fun (V615) -> {'Idris.Prelude.Types.Left', V615} end(E2639)); {'Idris.Prelude.Types.Right', E2640} -> (fun (V616) -> begin (V618 = (('un--getNArgs'(V0, V607, V616, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V617) -> ('Idris.Idris2.Builtin':'un--snd'(V617)) end, V603))))(V598))), case V618 of {'Idris.Prelude.Types.Left', E2641} -> (fun (V619) -> {'Idris.Prelude.Types.Left', V619} end(E2641)); {'Idris.Prelude.Types.Right', E2642} -> (fun (V620) -> case V620 of {'Idris.Compiler.CompileExpr.User', E2643, E2644} -> (fun (V621, V622) -> begin (V624 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V623) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V607, V623)) end, V622, [], V598))), case V624 of {'Idris.Prelude.Types.Left', E2645} -> (fun (V625) -> {'Idris.Prelude.Types.Left', V625} end(E2645)); {'Idris.Prelude.Types.Right', E2646} -> (fun (V626) -> begin (V628 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V627) -> ('un--nfToCFType'(V0, V599, V2, V627)) end, V626, [], V598))), case V628 of {'Idris.Prelude.Types.Left', E2647} -> (fun (V629) -> {'Idris.Prelude.Types.Left', V629} end(E2647)); {'Idris.Prelude.Types.Right', E2648} -> (fun (V630) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V616, V630}} end(E2648)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2646)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2643, E2644)); {'Idris.Compiler.CompileExpr.Struct', E2649, E2650} -> (fun (V631, V632) -> begin (V643 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V633) -> fun (V634) -> case V633 of {'Idris.Builtin.MkPair', E2651, E2652} -> (fun (V635, V636) -> begin (V637 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V607, V636))(V634))), case V637 of {'Idris.Prelude.Types.Left', E2653} -> (fun (V638) -> {'Idris.Prelude.Types.Left', V638} end(E2653)); {'Idris.Prelude.Types.Right', E2654} -> (fun (V639) -> begin (V640 = (('un--nfToCFType'(V0, V599, 1, V639))(V634))), case V640 of {'Idris.Prelude.Types.Left', E2655} -> (fun (V641) -> {'Idris.Prelude.Types.Left', V641} end(E2655)); {'Idris.Prelude.Types.Right', E2656} -> (fun (V642) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V635, V642}} end(E2656)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2654)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2651, E2652)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V632, [], V598))), case V643 of {'Idris.Prelude.Types.Left', E2657} -> (fun (V644) -> {'Idris.Prelude.Types.Left', V644} end(E2657)); {'Idris.Prelude.Types.Right', E2658} -> (fun (V645) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V631, V645}} end(E2658)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2649, E2650)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2659} -> (fun (V646) -> begin (V647 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V607, V646))(V598))), case V647 of {'Idris.Prelude.Types.Left', E2660} -> (fun (V648) -> {'Idris.Prelude.Types.Left', V648} end(E2660)); {'Idris.Prelude.Types.Right', E2661} -> (fun (V649) -> begin (V650 = (('un--nfToCFType'(V0, V599, V2, V649))(V598))), case V650 of {'Idris.Prelude.Types.Left', E2662} -> (fun (V651) -> {'Idris.Prelude.Types.Left', V651} end(E2662)); {'Idris.Prelude.Types.Right', E2663} -> (fun (V652) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V652}} end(E2663)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2661)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2659)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2642)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2640)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2638)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2632, E2633, E2634, E2635, E2636)); {'Idris.Core.Value.NType', E2664} -> (fun (V653) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2664)); {'Idris.Core.Value.NErased', E2665, E2666} -> (fun (V654, V655) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2665, E2666)); _ -> begin (V657 = begin (V656 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V656} end), case V657 of {'Idris.Prelude.Types.Left', E2626} -> (fun (V658) -> {'Idris.Prelude.Types.Left', V658} end(E2626)); {'Idris.Prelude.Types.Right', E2627} -> (fun (V659) -> begin (V660 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V659, {'Idris.Core.Env.Nil'}, V3, V598))), case V660 of {'Idris.Prelude.Types.Left', E2628} -> (fun (V661) -> {'Idris.Prelude.Types.Left', V661} end(E2628)); {'Idris.Prelude.Types.Right', E2629} -> (fun (V662) -> begin (V669 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V663) -> fun (V664) -> fun (V665) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V663, V664, V665)) end end end, fun (V666) -> fun (V667) -> fun (V668) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V666, V667, V668)) end end end}, V662, V598))), case V669 of {'Idris.Prelude.Types.Left', E2630} -> (fun (V670) -> {'Idris.Prelude.Types.Left', V670} end(E2630)); {'Idris.Prelude.Types.Right', E2631} -> (fun (V671) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V671))))}, V598)) end(E2631)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2629)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2627)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end(E2624, E2625)); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E2436, E2437} -> (fun (V672, V673) -> case V673 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V674) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V675) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V676) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E2520, E2521, E2522, E2523} -> (fun (V677, V678, V679, V680) -> fun (V681) -> case V679 of {'Idris.Core.TT.Pi', E2565, E2566, E2567, E2568} -> (fun (V682, V683, V684, V685) -> begin (V687 = begin (V686 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V686} end), case V687 of {'Idris.Prelude.Types.Left', E2569} -> (fun (V688) -> {'Idris.Prelude.Types.Left', V688} end(E2569)); {'Idris.Prelude.Types.Right', E2570} -> (fun (V689) -> begin (V693 = begin (V690 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V689, V685))(V681))), case V690 of {'Idris.Prelude.Types.Left', E2571} -> (fun (V691) -> {'Idris.Prelude.Types.Left', V691} end(E2571)); {'Idris.Prelude.Types.Right', E2572} -> (fun (V692) -> (('un--nfToCFType'(V0, V677, 0, V692))(V681)) end(E2572)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V693 of {'Idris.Prelude.Types.Left', E2573} -> (fun (V694) -> {'Idris.Prelude.Types.Left', V694} end(E2573)); {'Idris.Prelude.Types.Right', E2574} -> (fun (V695) -> begin (V696 = (((V680(V689))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V677, 0}))))(V681))), case V696 of {'Idris.Prelude.Types.Left', E2575} -> (fun (V697) -> {'Idris.Prelude.Types.Left', V697} end(E2575)); {'Idris.Prelude.Types.Right', E2576} -> (fun (V698) -> begin (V699 = (('un--nfToCFType'(V0, V677, 0, V698))(V681))), case V699 of {'Idris.Prelude.Types.Left', E2577} -> (fun (V700) -> {'Idris.Prelude.Types.Left', V700} end(E2577)); {'Idris.Prelude.Types.Right', E2578} -> (fun (V701) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V695, V701}} end(E2578)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2576)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2574)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2570)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2565, E2566, E2567, E2568)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2530, E2531, E2532, E2533, E2534} -> (fun (V702, V703, V704, V705, V706) -> begin (V708 = begin (V707 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V707} end), case V708 of {'Idris.Prelude.Types.Left', E2535} -> (fun (V709) -> {'Idris.Prelude.Types.Left', V709} end(E2535)); {'Idris.Prelude.Types.Right', E2536} -> (fun (V710) -> begin (V717 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V711) -> fun (V712) -> fun (V713) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V711, V712, V713)) end end end, fun (V714) -> fun (V715) -> fun (V716) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V714, V715, V716)) end end end}, V703, V681))), case V717 of {'Idris.Prelude.Types.Left', E2537} -> (fun (V718) -> {'Idris.Prelude.Types.Left', V718} end(E2537)); {'Idris.Prelude.Types.Right', E2538} -> (fun (V719) -> begin (V721 = (('un--getNArgs'(V0, V710, V719, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V720) -> ('Idris.Idris2.Builtin':'un--snd'(V720)) end, V706))))(V681))), case V721 of {'Idris.Prelude.Types.Left', E2539} -> (fun (V722) -> {'Idris.Prelude.Types.Left', V722} end(E2539)); {'Idris.Prelude.Types.Right', E2540} -> (fun (V723) -> case V723 of {'Idris.Compiler.CompileExpr.User', E2541, E2542} -> (fun (V724, V725) -> begin (V727 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V726) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V710, V726)) end, V725, [], V681))), case V727 of {'Idris.Prelude.Types.Left', E2543} -> (fun (V728) -> {'Idris.Prelude.Types.Left', V728} end(E2543)); {'Idris.Prelude.Types.Right', E2544} -> (fun (V729) -> begin (V731 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V730) -> ('un--nfToCFType'(V0, V702, V2, V730)) end, V729, [], V681))), case V731 of {'Idris.Prelude.Types.Left', E2545} -> (fun (V732) -> {'Idris.Prelude.Types.Left', V732} end(E2545)); {'Idris.Prelude.Types.Right', E2546} -> (fun (V733) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V719, V733}} end(E2546)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2544)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2541, E2542)); {'Idris.Compiler.CompileExpr.Struct', E2547, E2548} -> (fun (V734, V735) -> begin (V746 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V736) -> fun (V737) -> case V736 of {'Idris.Builtin.MkPair', E2549, E2550} -> (fun (V738, V739) -> begin (V740 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V710, V739))(V737))), case V740 of {'Idris.Prelude.Types.Left', E2551} -> (fun (V741) -> {'Idris.Prelude.Types.Left', V741} end(E2551)); {'Idris.Prelude.Types.Right', E2552} -> (fun (V742) -> begin (V743 = (('un--nfToCFType'(V0, V702, 1, V742))(V737))), case V743 of {'Idris.Prelude.Types.Left', E2553} -> (fun (V744) -> {'Idris.Prelude.Types.Left', V744} end(E2553)); {'Idris.Prelude.Types.Right', E2554} -> (fun (V745) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V738, V745}} end(E2554)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2552)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2549, E2550)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V735, [], V681))), case V746 of {'Idris.Prelude.Types.Left', E2555} -> (fun (V747) -> {'Idris.Prelude.Types.Left', V747} end(E2555)); {'Idris.Prelude.Types.Right', E2556} -> (fun (V748) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V734, V748}} end(E2556)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2547, E2548)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2557} -> (fun (V749) -> begin (V750 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V710, V749))(V681))), case V750 of {'Idris.Prelude.Types.Left', E2558} -> (fun (V751) -> {'Idris.Prelude.Types.Left', V751} end(E2558)); {'Idris.Prelude.Types.Right', E2559} -> (fun (V752) -> begin (V753 = (('un--nfToCFType'(V0, V702, V2, V752))(V681))), case V753 of {'Idris.Prelude.Types.Left', E2560} -> (fun (V754) -> {'Idris.Prelude.Types.Left', V754} end(E2560)); {'Idris.Prelude.Types.Right', E2561} -> (fun (V755) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V755}} end(E2561)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2559)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2557)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2540)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2538)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2536)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2530, E2531, E2532, E2533, E2534)); {'Idris.Core.Value.NType', E2562} -> (fun (V756) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2562)); {'Idris.Core.Value.NErased', E2563, E2564} -> (fun (V757, V758) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2563, E2564)); _ -> begin (V760 = begin (V759 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V759} end), case V760 of {'Idris.Prelude.Types.Left', E2524} -> (fun (V761) -> {'Idris.Prelude.Types.Left', V761} end(E2524)); {'Idris.Prelude.Types.Right', E2525} -> (fun (V762) -> begin (V763 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V762, {'Idris.Core.Env.Nil'}, V3, V681))), case V763 of {'Idris.Prelude.Types.Left', E2526} -> (fun (V764) -> {'Idris.Prelude.Types.Left', V764} end(E2526)); {'Idris.Prelude.Types.Right', E2527} -> (fun (V765) -> begin (V772 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V766) -> fun (V767) -> fun (V768) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V766, V767, V768)) end end end, fun (V769) -> fun (V770) -> fun (V771) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V769, V770, V771)) end end end}, V765, V681))), case V772 of {'Idris.Prelude.Types.Left', E2528} -> (fun (V773) -> {'Idris.Prelude.Types.Left', V773} end(E2528)); {'Idris.Prelude.Types.Right', E2529} -> (fun (V774) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V774))))}, V681)) end(E2529)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2527)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2525)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E2520, E2521, E2522, E2523)); _ -> fun (V775) -> case V3 of {'Idris.Core.Value.NTCon', E2485, E2486, E2487, E2488, E2489} -> (fun (V776, V777, V778, V779, V780) -> begin (V782 = begin (V781 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V781} end), case V782 of {'Idris.Prelude.Types.Left', E2490} -> (fun (V783) -> {'Idris.Prelude.Types.Left', V783} end(E2490)); {'Idris.Prelude.Types.Right', E2491} -> (fun (V784) -> begin (V791 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V785) -> fun (V786) -> fun (V787) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V785, V786, V787)) end end end, fun (V788) -> fun (V789) -> fun (V790) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V788, V789, V790)) end end end}, V777, V775))), case V791 of {'Idris.Prelude.Types.Left', E2492} -> (fun (V792) -> {'Idris.Prelude.Types.Left', V792} end(E2492)); {'Idris.Prelude.Types.Right', E2493} -> (fun (V793) -> begin (V795 = (('un--getNArgs'(V0, V784, V793, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V794) -> ('Idris.Idris2.Builtin':'un--snd'(V794)) end, V780))))(V775))), case V795 of {'Idris.Prelude.Types.Left', E2494} -> (fun (V796) -> {'Idris.Prelude.Types.Left', V796} end(E2494)); {'Idris.Prelude.Types.Right', E2495} -> (fun (V797) -> case V797 of {'Idris.Compiler.CompileExpr.User', E2496, E2497} -> (fun (V798, V799) -> begin (V801 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V800) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V784, V800)) end, V799, [], V775))), case V801 of {'Idris.Prelude.Types.Left', E2498} -> (fun (V802) -> {'Idris.Prelude.Types.Left', V802} end(E2498)); {'Idris.Prelude.Types.Right', E2499} -> (fun (V803) -> begin (V805 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V804) -> ('un--nfToCFType'(V0, V776, V2, V804)) end, V803, [], V775))), case V805 of {'Idris.Prelude.Types.Left', E2500} -> (fun (V806) -> {'Idris.Prelude.Types.Left', V806} end(E2500)); {'Idris.Prelude.Types.Right', E2501} -> (fun (V807) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V793, V807}} end(E2501)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2499)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2496, E2497)); {'Idris.Compiler.CompileExpr.Struct', E2502, E2503} -> (fun (V808, V809) -> begin (V820 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V810) -> fun (V811) -> case V810 of {'Idris.Builtin.MkPair', E2504, E2505} -> (fun (V812, V813) -> begin (V814 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V784, V813))(V811))), case V814 of {'Idris.Prelude.Types.Left', E2506} -> (fun (V815) -> {'Idris.Prelude.Types.Left', V815} end(E2506)); {'Idris.Prelude.Types.Right', E2507} -> (fun (V816) -> begin (V817 = (('un--nfToCFType'(V0, V776, 1, V816))(V811))), case V817 of {'Idris.Prelude.Types.Left', E2508} -> (fun (V818) -> {'Idris.Prelude.Types.Left', V818} end(E2508)); {'Idris.Prelude.Types.Right', E2509} -> (fun (V819) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V812, V819}} end(E2509)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2507)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2504, E2505)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V809, [], V775))), case V820 of {'Idris.Prelude.Types.Left', E2510} -> (fun (V821) -> {'Idris.Prelude.Types.Left', V821} end(E2510)); {'Idris.Prelude.Types.Right', E2511} -> (fun (V822) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V808, V822}} end(E2511)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2502, E2503)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2512} -> (fun (V823) -> begin (V824 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V784, V823))(V775))), case V824 of {'Idris.Prelude.Types.Left', E2513} -> (fun (V825) -> {'Idris.Prelude.Types.Left', V825} end(E2513)); {'Idris.Prelude.Types.Right', E2514} -> (fun (V826) -> begin (V827 = (('un--nfToCFType'(V0, V776, V2, V826))(V775))), case V827 of {'Idris.Prelude.Types.Left', E2515} -> (fun (V828) -> {'Idris.Prelude.Types.Left', V828} end(E2515)); {'Idris.Prelude.Types.Right', E2516} -> (fun (V829) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V829}} end(E2516)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2514)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2512)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2495)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2493)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2491)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2485, E2486, E2487, E2488, E2489)); {'Idris.Core.Value.NType', E2517} -> (fun (V830) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2517)); {'Idris.Core.Value.NErased', E2518, E2519} -> (fun (V831, V832) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2518, E2519)); _ -> begin (V834 = begin (V833 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V833} end), case V834 of {'Idris.Prelude.Types.Left', E2479} -> (fun (V835) -> {'Idris.Prelude.Types.Left', V835} end(E2479)); {'Idris.Prelude.Types.Right', E2480} -> (fun (V836) -> begin (V837 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V836, {'Idris.Core.Env.Nil'}, V3, V775))), case V837 of {'Idris.Prelude.Types.Left', E2481} -> (fun (V838) -> {'Idris.Prelude.Types.Left', V838} end(E2481)); {'Idris.Prelude.Types.Right', E2482} -> (fun (V839) -> begin (V846 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V840) -> fun (V841) -> fun (V842) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V840, V841, V842)) end end end, fun (V843) -> fun (V844) -> fun (V845) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V843, V844, V845)) end end end}, V839, V775))), case V846 of {'Idris.Prelude.Types.Left', E2483} -> (fun (V847) -> {'Idris.Prelude.Types.Left', V847} end(E2483)); {'Idris.Prelude.Types.Right', E2484} -> (fun (V848) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V848))))}, V775)) end(E2484)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2482)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2480)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V849) -> case V3 of {'Idris.Core.Value.NBind', E2620, E2621, E2622, E2623} -> (fun (V850, V851, V852, V853) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V850, <<"Function types not allowed in a foreign struct"/utf8>>}, V849)) end(E2620, E2621, E2622, E2623)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2585, E2586, E2587, E2588, E2589} -> (fun (V854, V855, V856, V857, V858) -> begin (V860 = begin (V859 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V859} end), case V860 of {'Idris.Prelude.Types.Left', E2590} -> (fun (V861) -> {'Idris.Prelude.Types.Left', V861} end(E2590)); {'Idris.Prelude.Types.Right', E2591} -> (fun (V862) -> begin (V869 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V863) -> fun (V864) -> fun (V865) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V863, V864, V865)) end end end, fun (V866) -> fun (V867) -> fun (V868) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V866, V867, V868)) end end end}, V855, V849))), case V869 of {'Idris.Prelude.Types.Left', E2592} -> (fun (V870) -> {'Idris.Prelude.Types.Left', V870} end(E2592)); {'Idris.Prelude.Types.Right', E2593} -> (fun (V871) -> begin (V873 = (('un--getNArgs'(V0, V862, V871, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V872) -> ('Idris.Idris2.Builtin':'un--snd'(V872)) end, V858))))(V849))), case V873 of {'Idris.Prelude.Types.Left', E2594} -> (fun (V874) -> {'Idris.Prelude.Types.Left', V874} end(E2594)); {'Idris.Prelude.Types.Right', E2595} -> (fun (V875) -> case V875 of {'Idris.Compiler.CompileExpr.User', E2596, E2597} -> (fun (V876, V877) -> begin (V879 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V878) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V862, V878)) end, V877, [], V849))), case V879 of {'Idris.Prelude.Types.Left', E2598} -> (fun (V880) -> {'Idris.Prelude.Types.Left', V880} end(E2598)); {'Idris.Prelude.Types.Right', E2599} -> (fun (V881) -> begin (V883 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V882) -> ('un--nfToCFType'(V0, V854, V2, V882)) end, V881, [], V849))), case V883 of {'Idris.Prelude.Types.Left', E2600} -> (fun (V884) -> {'Idris.Prelude.Types.Left', V884} end(E2600)); {'Idris.Prelude.Types.Right', E2601} -> (fun (V885) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V871, V885}} end(E2601)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2599)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2596, E2597)); {'Idris.Compiler.CompileExpr.Struct', E2602, E2603} -> (fun (V886, V887) -> begin (V898 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V888) -> fun (V889) -> case V888 of {'Idris.Builtin.MkPair', E2604, E2605} -> (fun (V890, V891) -> begin (V892 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V862, V891))(V889))), case V892 of {'Idris.Prelude.Types.Left', E2606} -> (fun (V893) -> {'Idris.Prelude.Types.Left', V893} end(E2606)); {'Idris.Prelude.Types.Right', E2607} -> (fun (V894) -> begin (V895 = (('un--nfToCFType'(V0, V854, 1, V894))(V889))), case V895 of {'Idris.Prelude.Types.Left', E2608} -> (fun (V896) -> {'Idris.Prelude.Types.Left', V896} end(E2608)); {'Idris.Prelude.Types.Right', E2609} -> (fun (V897) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V890, V897}} end(E2609)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2607)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2604, E2605)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V887, [], V849))), case V898 of {'Idris.Prelude.Types.Left', E2610} -> (fun (V899) -> {'Idris.Prelude.Types.Left', V899} end(E2610)); {'Idris.Prelude.Types.Right', E2611} -> (fun (V900) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V886, V900}} end(E2611)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2602, E2603)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2612} -> (fun (V901) -> begin (V902 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V862, V901))(V849))), case V902 of {'Idris.Prelude.Types.Left', E2613} -> (fun (V903) -> {'Idris.Prelude.Types.Left', V903} end(E2613)); {'Idris.Prelude.Types.Right', E2614} -> (fun (V904) -> begin (V905 = (('un--nfToCFType'(V0, V854, V2, V904))(V849))), case V905 of {'Idris.Prelude.Types.Left', E2615} -> (fun (V906) -> {'Idris.Prelude.Types.Left', V906} end(E2615)); {'Idris.Prelude.Types.Right', E2616} -> (fun (V907) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V907}} end(E2616)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2614)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2612)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2595)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2593)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2591)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2585, E2586, E2587, E2588, E2589)); {'Idris.Core.Value.NType', E2617} -> (fun (V908) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2617)); {'Idris.Core.Value.NErased', E2618, E2619} -> (fun (V909, V910) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2618, E2619)); _ -> begin (V912 = begin (V911 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V911} end), case V912 of {'Idris.Prelude.Types.Left', E2579} -> (fun (V913) -> {'Idris.Prelude.Types.Left', V913} end(E2579)); {'Idris.Prelude.Types.Right', E2580} -> (fun (V914) -> begin (V915 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V914, {'Idris.Core.Env.Nil'}, V3, V849))), case V915 of {'Idris.Prelude.Types.Left', E2581} -> (fun (V916) -> {'Idris.Prelude.Types.Left', V916} end(E2581)); {'Idris.Prelude.Types.Right', E2582} -> (fun (V917) -> begin (V924 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V918) -> fun (V919) -> fun (V920) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V918, V919, V920)) end end end, fun (V921) -> fun (V922) -> fun (V923) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V921, V922, V923)) end end end}, V917, V849))), case V924 of {'Idris.Prelude.Types.Left', E2583} -> (fun (V925) -> {'Idris.Prelude.Types.Left', V925} end(E2583)); {'Idris.Prelude.Types.Right', E2584} -> (fun (V926) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V926))))}, V849)) end(E2584)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2582)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2580)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V927) -> case V3 of {'Idris.Core.Value.NTCon', E2444, E2445, E2446, E2447, E2448} -> (fun (V928, V929, V930, V931, V932) -> begin (V934 = begin (V933 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V933} end), case V934 of {'Idris.Prelude.Types.Left', E2449} -> (fun (V935) -> {'Idris.Prelude.Types.Left', V935} end(E2449)); {'Idris.Prelude.Types.Right', E2450} -> (fun (V936) -> begin (V943 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V937) -> fun (V938) -> fun (V939) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V937, V938, V939)) end end end, fun (V940) -> fun (V941) -> fun (V942) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V940, V941, V942)) end end end}, V929, V927))), case V943 of {'Idris.Prelude.Types.Left', E2451} -> (fun (V944) -> {'Idris.Prelude.Types.Left', V944} end(E2451)); {'Idris.Prelude.Types.Right', E2452} -> (fun (V945) -> begin (V947 = (('un--getNArgs'(V0, V936, V945, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V946) -> ('Idris.Idris2.Builtin':'un--snd'(V946)) end, V932))))(V927))), case V947 of {'Idris.Prelude.Types.Left', E2453} -> (fun (V948) -> {'Idris.Prelude.Types.Left', V948} end(E2453)); {'Idris.Prelude.Types.Right', E2454} -> (fun (V949) -> case V949 of {'Idris.Compiler.CompileExpr.User', E2455, E2456} -> (fun (V950, V951) -> begin (V953 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V952) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V936, V952)) end, V951, [], V927))), case V953 of {'Idris.Prelude.Types.Left', E2457} -> (fun (V954) -> {'Idris.Prelude.Types.Left', V954} end(E2457)); {'Idris.Prelude.Types.Right', E2458} -> (fun (V955) -> begin (V957 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V956) -> ('un--nfToCFType'(V0, V928, V2, V956)) end, V955, [], V927))), case V957 of {'Idris.Prelude.Types.Left', E2459} -> (fun (V958) -> {'Idris.Prelude.Types.Left', V958} end(E2459)); {'Idris.Prelude.Types.Right', E2460} -> (fun (V959) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V945, V959}} end(E2460)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2458)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2455, E2456)); {'Idris.Compiler.CompileExpr.Struct', E2461, E2462} -> (fun (V960, V961) -> begin (V972 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V962) -> fun (V963) -> case V962 of {'Idris.Builtin.MkPair', E2463, E2464} -> (fun (V964, V965) -> begin (V966 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V936, V965))(V963))), case V966 of {'Idris.Prelude.Types.Left', E2465} -> (fun (V967) -> {'Idris.Prelude.Types.Left', V967} end(E2465)); {'Idris.Prelude.Types.Right', E2466} -> (fun (V968) -> begin (V969 = (('un--nfToCFType'(V0, V928, 1, V968))(V963))), case V969 of {'Idris.Prelude.Types.Left', E2467} -> (fun (V970) -> {'Idris.Prelude.Types.Left', V970} end(E2467)); {'Idris.Prelude.Types.Right', E2468} -> (fun (V971) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V964, V971}} end(E2468)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2466)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2463, E2464)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V961, [], V927))), case V972 of {'Idris.Prelude.Types.Left', E2469} -> (fun (V973) -> {'Idris.Prelude.Types.Left', V973} end(E2469)); {'Idris.Prelude.Types.Right', E2470} -> (fun (V974) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V960, V974}} end(E2470)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2461, E2462)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2471} -> (fun (V975) -> begin (V976 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V936, V975))(V927))), case V976 of {'Idris.Prelude.Types.Left', E2472} -> (fun (V977) -> {'Idris.Prelude.Types.Left', V977} end(E2472)); {'Idris.Prelude.Types.Right', E2473} -> (fun (V978) -> begin (V979 = (('un--nfToCFType'(V0, V928, V2, V978))(V927))), case V979 of {'Idris.Prelude.Types.Left', E2474} -> (fun (V980) -> {'Idris.Prelude.Types.Left', V980} end(E2474)); {'Idris.Prelude.Types.Right', E2475} -> (fun (V981) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V981}} end(E2475)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2473)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2471)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2454)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2452)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2450)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2444, E2445, E2446, E2447, E2448)); {'Idris.Core.Value.NType', E2476} -> (fun (V982) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2476)); {'Idris.Core.Value.NErased', E2477, E2478} -> (fun (V983, V984) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2477, E2478)); _ -> begin (V986 = begin (V985 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V985} end), case V986 of {'Idris.Prelude.Types.Left', E2438} -> (fun (V987) -> {'Idris.Prelude.Types.Left', V987} end(E2438)); {'Idris.Prelude.Types.Right', E2439} -> (fun (V988) -> begin (V989 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V988, {'Idris.Core.Env.Nil'}, V3, V927))), case V989 of {'Idris.Prelude.Types.Left', E2440} -> (fun (V990) -> {'Idris.Prelude.Types.Left', V990} end(E2440)); {'Idris.Prelude.Types.Right', E2441} -> (fun (V991) -> begin (V998 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V992) -> fun (V993) -> fun (V994) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V992, V993, V994)) end end end, fun (V995) -> fun (V996) -> fun (V997) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V995, V996, V997)) end end end}, V991, V927))), case V998 of {'Idris.Prelude.Types.Left', E2442} -> (fun (V999) -> {'Idris.Prelude.Types.Left', V999} end(E2442)); {'Idris.Prelude.Types.Right', E2443} -> (fun (V1000) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1000))))}, V927)) end(E2443)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2441)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2439)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E2436, E2437)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E2332, E2333, E2334, E2335} -> (fun (V1001, V1002, V1003, V1004) -> fun (V1005) -> case V1003 of {'Idris.Core.TT.Pi', E2377, E2378, E2379, E2380} -> (fun (V1006, V1007, V1008, V1009) -> begin (V1011 = begin (V1010 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1010} end), case V1011 of {'Idris.Prelude.Types.Left', E2381} -> (fun (V1012) -> {'Idris.Prelude.Types.Left', V1012} end(E2381)); {'Idris.Prelude.Types.Right', E2382} -> (fun (V1013) -> begin (V1017 = begin (V1014 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1013, V1009))(V1005))), case V1014 of {'Idris.Prelude.Types.Left', E2383} -> (fun (V1015) -> {'Idris.Prelude.Types.Left', V1015} end(E2383)); {'Idris.Prelude.Types.Right', E2384} -> (fun (V1016) -> (('un--nfToCFType'(V0, V1001, 0, V1016))(V1005)) end(E2384)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V1017 of {'Idris.Prelude.Types.Left', E2385} -> (fun (V1018) -> {'Idris.Prelude.Types.Left', V1018} end(E2385)); {'Idris.Prelude.Types.Right', E2386} -> (fun (V1019) -> begin (V1020 = (((V1004(V1013))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V1001, 0}))))(V1005))), case V1020 of {'Idris.Prelude.Types.Left', E2387} -> (fun (V1021) -> {'Idris.Prelude.Types.Left', V1021} end(E2387)); {'Idris.Prelude.Types.Right', E2388} -> (fun (V1022) -> begin (V1023 = (('un--nfToCFType'(V0, V1001, 0, V1022))(V1005))), case V1023 of {'Idris.Prelude.Types.Left', E2389} -> (fun (V1024) -> {'Idris.Prelude.Types.Left', V1024} end(E2389)); {'Idris.Prelude.Types.Right', E2390} -> (fun (V1025) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V1019, V1025}} end(E2390)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2388)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2386)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2382)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2377, E2378, E2379, E2380)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2342, E2343, E2344, E2345, E2346} -> (fun (V1026, V1027, V1028, V1029, V1030) -> begin (V1032 = begin (V1031 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1031} end), case V1032 of {'Idris.Prelude.Types.Left', E2347} -> (fun (V1033) -> {'Idris.Prelude.Types.Left', V1033} end(E2347)); {'Idris.Prelude.Types.Right', E2348} -> (fun (V1034) -> begin (V1041 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1035) -> fun (V1036) -> fun (V1037) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1035, V1036, V1037)) end end end, fun (V1038) -> fun (V1039) -> fun (V1040) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1038, V1039, V1040)) end end end}, V1027, V1005))), case V1041 of {'Idris.Prelude.Types.Left', E2349} -> (fun (V1042) -> {'Idris.Prelude.Types.Left', V1042} end(E2349)); {'Idris.Prelude.Types.Right', E2350} -> (fun (V1043) -> begin (V1045 = (('un--getNArgs'(V0, V1034, V1043, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1044) -> ('Idris.Idris2.Builtin':'un--snd'(V1044)) end, V1030))))(V1005))), case V1045 of {'Idris.Prelude.Types.Left', E2351} -> (fun (V1046) -> {'Idris.Prelude.Types.Left', V1046} end(E2351)); {'Idris.Prelude.Types.Right', E2352} -> (fun (V1047) -> case V1047 of {'Idris.Compiler.CompileExpr.User', E2353, E2354} -> (fun (V1048, V1049) -> begin (V1051 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1050) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1034, V1050)) end, V1049, [], V1005))), case V1051 of {'Idris.Prelude.Types.Left', E2355} -> (fun (V1052) -> {'Idris.Prelude.Types.Left', V1052} end(E2355)); {'Idris.Prelude.Types.Right', E2356} -> (fun (V1053) -> begin (V1055 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1054) -> ('un--nfToCFType'(V0, V1026, V2, V1054)) end, V1053, [], V1005))), case V1055 of {'Idris.Prelude.Types.Left', E2357} -> (fun (V1056) -> {'Idris.Prelude.Types.Left', V1056} end(E2357)); {'Idris.Prelude.Types.Right', E2358} -> (fun (V1057) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1043, V1057}} end(E2358)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2356)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2353, E2354)); {'Idris.Compiler.CompileExpr.Struct', E2359, E2360} -> (fun (V1058, V1059) -> begin (V1070 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1060) -> fun (V1061) -> case V1060 of {'Idris.Builtin.MkPair', E2361, E2362} -> (fun (V1062, V1063) -> begin (V1064 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1034, V1063))(V1061))), case V1064 of {'Idris.Prelude.Types.Left', E2363} -> (fun (V1065) -> {'Idris.Prelude.Types.Left', V1065} end(E2363)); {'Idris.Prelude.Types.Right', E2364} -> (fun (V1066) -> begin (V1067 = (('un--nfToCFType'(V0, V1026, 1, V1066))(V1061))), case V1067 of {'Idris.Prelude.Types.Left', E2365} -> (fun (V1068) -> {'Idris.Prelude.Types.Left', V1068} end(E2365)); {'Idris.Prelude.Types.Right', E2366} -> (fun (V1069) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1062, V1069}} end(E2366)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2364)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2361, E2362)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1059, [], V1005))), case V1070 of {'Idris.Prelude.Types.Left', E2367} -> (fun (V1071) -> {'Idris.Prelude.Types.Left', V1071} end(E2367)); {'Idris.Prelude.Types.Right', E2368} -> (fun (V1072) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1058, V1072}} end(E2368)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2359, E2360)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2369} -> (fun (V1073) -> begin (V1074 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1034, V1073))(V1005))), case V1074 of {'Idris.Prelude.Types.Left', E2370} -> (fun (V1075) -> {'Idris.Prelude.Types.Left', V1075} end(E2370)); {'Idris.Prelude.Types.Right', E2371} -> (fun (V1076) -> begin (V1077 = (('un--nfToCFType'(V0, V1026, V2, V1076))(V1005))), case V1077 of {'Idris.Prelude.Types.Left', E2372} -> (fun (V1078) -> {'Idris.Prelude.Types.Left', V1078} end(E2372)); {'Idris.Prelude.Types.Right', E2373} -> (fun (V1079) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1079}} end(E2373)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2371)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2369)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2352)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2350)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2348)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2342, E2343, E2344, E2345, E2346)); {'Idris.Core.Value.NType', E2374} -> (fun (V1080) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2374)); {'Idris.Core.Value.NErased', E2375, E2376} -> (fun (V1081, V1082) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2375, E2376)); _ -> begin (V1084 = begin (V1083 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1083} end), case V1084 of {'Idris.Prelude.Types.Left', E2336} -> (fun (V1085) -> {'Idris.Prelude.Types.Left', V1085} end(E2336)); {'Idris.Prelude.Types.Right', E2337} -> (fun (V1086) -> begin (V1087 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V1086, {'Idris.Core.Env.Nil'}, V3, V1005))), case V1087 of {'Idris.Prelude.Types.Left', E2338} -> (fun (V1088) -> {'Idris.Prelude.Types.Left', V1088} end(E2338)); {'Idris.Prelude.Types.Right', E2339} -> (fun (V1089) -> begin (V1096 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1090) -> fun (V1091) -> fun (V1092) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1090, V1091, V1092)) end end end, fun (V1093) -> fun (V1094) -> fun (V1095) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1093, V1094, V1095)) end end end}, V1089, V1005))), case V1096 of {'Idris.Prelude.Types.Left', E2340} -> (fun (V1097) -> {'Idris.Prelude.Types.Left', V1097} end(E2340)); {'Idris.Prelude.Types.Right', E2341} -> (fun (V1098) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1098))))}, V1005)) end(E2341)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2339)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2337)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E2332, E2333, E2334, E2335)); _ -> fun (V1099) -> case V3 of {'Idris.Core.Value.NTCon', E2297, E2298, E2299, E2300, E2301} -> (fun (V1100, V1101, V1102, V1103, V1104) -> begin (V1106 = begin (V1105 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1105} end), case V1106 of {'Idris.Prelude.Types.Left', E2302} -> (fun (V1107) -> {'Idris.Prelude.Types.Left', V1107} end(E2302)); {'Idris.Prelude.Types.Right', E2303} -> (fun (V1108) -> begin (V1115 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1109) -> fun (V1110) -> fun (V1111) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1109, V1110, V1111)) end end end, fun (V1112) -> fun (V1113) -> fun (V1114) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1112, V1113, V1114)) end end end}, V1101, V1099))), case V1115 of {'Idris.Prelude.Types.Left', E2304} -> (fun (V1116) -> {'Idris.Prelude.Types.Left', V1116} end(E2304)); {'Idris.Prelude.Types.Right', E2305} -> (fun (V1117) -> begin (V1119 = (('un--getNArgs'(V0, V1108, V1117, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1118) -> ('Idris.Idris2.Builtin':'un--snd'(V1118)) end, V1104))))(V1099))), case V1119 of {'Idris.Prelude.Types.Left', E2306} -> (fun (V1120) -> {'Idris.Prelude.Types.Left', V1120} end(E2306)); {'Idris.Prelude.Types.Right', E2307} -> (fun (V1121) -> case V1121 of {'Idris.Compiler.CompileExpr.User', E2308, E2309} -> (fun (V1122, V1123) -> begin (V1125 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1124) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1108, V1124)) end, V1123, [], V1099))), case V1125 of {'Idris.Prelude.Types.Left', E2310} -> (fun (V1126) -> {'Idris.Prelude.Types.Left', V1126} end(E2310)); {'Idris.Prelude.Types.Right', E2311} -> (fun (V1127) -> begin (V1129 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1128) -> ('un--nfToCFType'(V0, V1100, V2, V1128)) end, V1127, [], V1099))), case V1129 of {'Idris.Prelude.Types.Left', E2312} -> (fun (V1130) -> {'Idris.Prelude.Types.Left', V1130} end(E2312)); {'Idris.Prelude.Types.Right', E2313} -> (fun (V1131) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1117, V1131}} end(E2313)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2311)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2308, E2309)); {'Idris.Compiler.CompileExpr.Struct', E2314, E2315} -> (fun (V1132, V1133) -> begin (V1144 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1134) -> fun (V1135) -> case V1134 of {'Idris.Builtin.MkPair', E2316, E2317} -> (fun (V1136, V1137) -> begin (V1138 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1108, V1137))(V1135))), case V1138 of {'Idris.Prelude.Types.Left', E2318} -> (fun (V1139) -> {'Idris.Prelude.Types.Left', V1139} end(E2318)); {'Idris.Prelude.Types.Right', E2319} -> (fun (V1140) -> begin (V1141 = (('un--nfToCFType'(V0, V1100, 1, V1140))(V1135))), case V1141 of {'Idris.Prelude.Types.Left', E2320} -> (fun (V1142) -> {'Idris.Prelude.Types.Left', V1142} end(E2320)); {'Idris.Prelude.Types.Right', E2321} -> (fun (V1143) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1136, V1143}} end(E2321)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2319)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2316, E2317)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1133, [], V1099))), case V1144 of {'Idris.Prelude.Types.Left', E2322} -> (fun (V1145) -> {'Idris.Prelude.Types.Left', V1145} end(E2322)); {'Idris.Prelude.Types.Right', E2323} -> (fun (V1146) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1132, V1146}} end(E2323)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2314, E2315)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2324} -> (fun (V1147) -> begin (V1148 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1108, V1147))(V1099))), case V1148 of {'Idris.Prelude.Types.Left', E2325} -> (fun (V1149) -> {'Idris.Prelude.Types.Left', V1149} end(E2325)); {'Idris.Prelude.Types.Right', E2326} -> (fun (V1150) -> begin (V1151 = (('un--nfToCFType'(V0, V1100, V2, V1150))(V1099))), case V1151 of {'Idris.Prelude.Types.Left', E2327} -> (fun (V1152) -> {'Idris.Prelude.Types.Left', V1152} end(E2327)); {'Idris.Prelude.Types.Right', E2328} -> (fun (V1153) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1153}} end(E2328)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2326)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2324)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2307)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2305)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2303)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2297, E2298, E2299, E2300, E2301)); {'Idris.Core.Value.NType', E2329} -> (fun (V1154) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2329)); {'Idris.Core.Value.NErased', E2330, E2331} -> (fun (V1155, V1156) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2330, E2331)); _ -> begin (V1158 = begin (V1157 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1157} end), case V1158 of {'Idris.Prelude.Types.Left', E2291} -> (fun (V1159) -> {'Idris.Prelude.Types.Left', V1159} end(E2291)); {'Idris.Prelude.Types.Right', E2292} -> (fun (V1160) -> begin (V1161 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V1160, {'Idris.Core.Env.Nil'}, V3, V1099))), case V1161 of {'Idris.Prelude.Types.Left', E2293} -> (fun (V1162) -> {'Idris.Prelude.Types.Left', V1162} end(E2293)); {'Idris.Prelude.Types.Right', E2294} -> (fun (V1163) -> begin (V1170 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1164) -> fun (V1165) -> fun (V1166) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1164, V1165, V1166)) end end end, fun (V1167) -> fun (V1168) -> fun (V1169) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1167, V1168, V1169)) end end end}, V1163, V1099))), case V1170 of {'Idris.Prelude.Types.Left', E2295} -> (fun (V1171) -> {'Idris.Prelude.Types.Left', V1171} end(E2295)); {'Idris.Prelude.Types.Right', E2296} -> (fun (V1172) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1172))))}, V1099)) end(E2296)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2294)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2292)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V1173) -> case V3 of {'Idris.Core.Value.NBind', E2432, E2433, E2434, E2435} -> (fun (V1174, V1175, V1176, V1177) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V1174, <<"Function types not allowed in a foreign struct"/utf8>>}, V1173)) end(E2432, E2433, E2434, E2435)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2397, E2398, E2399, E2400, E2401} -> (fun (V1178, V1179, V1180, V1181, V1182) -> begin (V1184 = begin (V1183 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1183} end), case V1184 of {'Idris.Prelude.Types.Left', E2402} -> (fun (V1185) -> {'Idris.Prelude.Types.Left', V1185} end(E2402)); {'Idris.Prelude.Types.Right', E2403} -> (fun (V1186) -> begin (V1193 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1187) -> fun (V1188) -> fun (V1189) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1187, V1188, V1189)) end end end, fun (V1190) -> fun (V1191) -> fun (V1192) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1190, V1191, V1192)) end end end}, V1179, V1173))), case V1193 of {'Idris.Prelude.Types.Left', E2404} -> (fun (V1194) -> {'Idris.Prelude.Types.Left', V1194} end(E2404)); {'Idris.Prelude.Types.Right', E2405} -> (fun (V1195) -> begin (V1197 = (('un--getNArgs'(V0, V1186, V1195, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1196) -> ('Idris.Idris2.Builtin':'un--snd'(V1196)) end, V1182))))(V1173))), case V1197 of {'Idris.Prelude.Types.Left', E2406} -> (fun (V1198) -> {'Idris.Prelude.Types.Left', V1198} end(E2406)); {'Idris.Prelude.Types.Right', E2407} -> (fun (V1199) -> case V1199 of {'Idris.Compiler.CompileExpr.User', E2408, E2409} -> (fun (V1200, V1201) -> begin (V1203 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1202) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1186, V1202)) end, V1201, [], V1173))), case V1203 of {'Idris.Prelude.Types.Left', E2410} -> (fun (V1204) -> {'Idris.Prelude.Types.Left', V1204} end(E2410)); {'Idris.Prelude.Types.Right', E2411} -> (fun (V1205) -> begin (V1207 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1206) -> ('un--nfToCFType'(V0, V1178, V2, V1206)) end, V1205, [], V1173))), case V1207 of {'Idris.Prelude.Types.Left', E2412} -> (fun (V1208) -> {'Idris.Prelude.Types.Left', V1208} end(E2412)); {'Idris.Prelude.Types.Right', E2413} -> (fun (V1209) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1195, V1209}} end(E2413)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2411)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2408, E2409)); {'Idris.Compiler.CompileExpr.Struct', E2414, E2415} -> (fun (V1210, V1211) -> begin (V1222 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1212) -> fun (V1213) -> case V1212 of {'Idris.Builtin.MkPair', E2416, E2417} -> (fun (V1214, V1215) -> begin (V1216 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1186, V1215))(V1213))), case V1216 of {'Idris.Prelude.Types.Left', E2418} -> (fun (V1217) -> {'Idris.Prelude.Types.Left', V1217} end(E2418)); {'Idris.Prelude.Types.Right', E2419} -> (fun (V1218) -> begin (V1219 = (('un--nfToCFType'(V0, V1178, 1, V1218))(V1213))), case V1219 of {'Idris.Prelude.Types.Left', E2420} -> (fun (V1220) -> {'Idris.Prelude.Types.Left', V1220} end(E2420)); {'Idris.Prelude.Types.Right', E2421} -> (fun (V1221) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1214, V1221}} end(E2421)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2419)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2416, E2417)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1211, [], V1173))), case V1222 of {'Idris.Prelude.Types.Left', E2422} -> (fun (V1223) -> {'Idris.Prelude.Types.Left', V1223} end(E2422)); {'Idris.Prelude.Types.Right', E2423} -> (fun (V1224) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1210, V1224}} end(E2423)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2414, E2415)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2424} -> (fun (V1225) -> begin (V1226 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1186, V1225))(V1173))), case V1226 of {'Idris.Prelude.Types.Left', E2425} -> (fun (V1227) -> {'Idris.Prelude.Types.Left', V1227} end(E2425)); {'Idris.Prelude.Types.Right', E2426} -> (fun (V1228) -> begin (V1229 = (('un--nfToCFType'(V0, V1178, V2, V1228))(V1173))), case V1229 of {'Idris.Prelude.Types.Left', E2427} -> (fun (V1230) -> {'Idris.Prelude.Types.Left', V1230} end(E2427)); {'Idris.Prelude.Types.Right', E2428} -> (fun (V1231) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1231}} end(E2428)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2426)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2424)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2407)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2405)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2403)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2397, E2398, E2399, E2400, E2401)); {'Idris.Core.Value.NType', E2429} -> (fun (V1232) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2429)); {'Idris.Core.Value.NErased', E2430, E2431} -> (fun (V1233, V1234) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2430, E2431)); _ -> begin (V1236 = begin (V1235 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1235} end), case V1236 of {'Idris.Prelude.Types.Left', E2391} -> (fun (V1237) -> {'Idris.Prelude.Types.Left', V1237} end(E2391)); {'Idris.Prelude.Types.Right', E2392} -> (fun (V1238) -> begin (V1239 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V1238, {'Idris.Core.Env.Nil'}, V3, V1173))), case V1239 of {'Idris.Prelude.Types.Left', E2393} -> (fun (V1240) -> {'Idris.Prelude.Types.Left', V1240} end(E2393)); {'Idris.Prelude.Types.Right', E2394} -> (fun (V1241) -> begin (V1248 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1242) -> fun (V1243) -> fun (V1244) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1242, V1243, V1244)) end end end, fun (V1245) -> fun (V1246) -> fun (V1247) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1245, V1246, V1247)) end end end}, V1241, V1173))), case V1248 of {'Idris.Prelude.Types.Left', E2395} -> (fun (V1249) -> {'Idris.Prelude.Types.Left', V1249} end(E2395)); {'Idris.Prelude.Types.Right', E2396} -> (fun (V1250) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1250))))}, V1173)) end(E2396)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2394)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2392)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V1251) -> case V3 of {'Idris.Core.Value.NTCon', E2256, E2257, E2258, E2259, E2260} -> (fun (V1252, V1253, V1254, V1255, V1256) -> begin (V1258 = begin (V1257 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1257} end), case V1258 of {'Idris.Prelude.Types.Left', E2261} -> (fun (V1259) -> {'Idris.Prelude.Types.Left', V1259} end(E2261)); {'Idris.Prelude.Types.Right', E2262} -> (fun (V1260) -> begin (V1267 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1261) -> fun (V1262) -> fun (V1263) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1261, V1262, V1263)) end end end, fun (V1264) -> fun (V1265) -> fun (V1266) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1264, V1265, V1266)) end end end}, V1253, V1251))), case V1267 of {'Idris.Prelude.Types.Left', E2263} -> (fun (V1268) -> {'Idris.Prelude.Types.Left', V1268} end(E2263)); {'Idris.Prelude.Types.Right', E2264} -> (fun (V1269) -> begin (V1271 = (('un--getNArgs'(V0, V1260, V1269, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1270) -> ('Idris.Idris2.Builtin':'un--snd'(V1270)) end, V1256))))(V1251))), case V1271 of {'Idris.Prelude.Types.Left', E2265} -> (fun (V1272) -> {'Idris.Prelude.Types.Left', V1272} end(E2265)); {'Idris.Prelude.Types.Right', E2266} -> (fun (V1273) -> case V1273 of {'Idris.Compiler.CompileExpr.User', E2267, E2268} -> (fun (V1274, V1275) -> begin (V1277 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1276) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1260, V1276)) end, V1275, [], V1251))), case V1277 of {'Idris.Prelude.Types.Left', E2269} -> (fun (V1278) -> {'Idris.Prelude.Types.Left', V1278} end(E2269)); {'Idris.Prelude.Types.Right', E2270} -> (fun (V1279) -> begin (V1281 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1280) -> ('un--nfToCFType'(V0, V1252, V2, V1280)) end, V1279, [], V1251))), case V1281 of {'Idris.Prelude.Types.Left', E2271} -> (fun (V1282) -> {'Idris.Prelude.Types.Left', V1282} end(E2271)); {'Idris.Prelude.Types.Right', E2272} -> (fun (V1283) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1269, V1283}} end(E2272)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2270)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2267, E2268)); {'Idris.Compiler.CompileExpr.Struct', E2273, E2274} -> (fun (V1284, V1285) -> begin (V1296 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1286) -> fun (V1287) -> case V1286 of {'Idris.Builtin.MkPair', E2275, E2276} -> (fun (V1288, V1289) -> begin (V1290 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1260, V1289))(V1287))), case V1290 of {'Idris.Prelude.Types.Left', E2277} -> (fun (V1291) -> {'Idris.Prelude.Types.Left', V1291} end(E2277)); {'Idris.Prelude.Types.Right', E2278} -> (fun (V1292) -> begin (V1293 = (('un--nfToCFType'(V0, V1252, 1, V1292))(V1287))), case V1293 of {'Idris.Prelude.Types.Left', E2279} -> (fun (V1294) -> {'Idris.Prelude.Types.Left', V1294} end(E2279)); {'Idris.Prelude.Types.Right', E2280} -> (fun (V1295) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1288, V1295}} end(E2280)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2278)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2275, E2276)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1285, [], V1251))), case V1296 of {'Idris.Prelude.Types.Left', E2281} -> (fun (V1297) -> {'Idris.Prelude.Types.Left', V1297} end(E2281)); {'Idris.Prelude.Types.Right', E2282} -> (fun (V1298) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1284, V1298}} end(E2282)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2273, E2274)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2283} -> (fun (V1299) -> begin (V1300 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1260, V1299))(V1251))), case V1300 of {'Idris.Prelude.Types.Left', E2284} -> (fun (V1301) -> {'Idris.Prelude.Types.Left', V1301} end(E2284)); {'Idris.Prelude.Types.Right', E2285} -> (fun (V1302) -> begin (V1303 = (('un--nfToCFType'(V0, V1252, V2, V1302))(V1251))), case V1303 of {'Idris.Prelude.Types.Left', E2286} -> (fun (V1304) -> {'Idris.Prelude.Types.Left', V1304} end(E2286)); {'Idris.Prelude.Types.Right', E2287} -> (fun (V1305) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1305}} end(E2287)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2285)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2283)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2266)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2264)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2262)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2256, E2257, E2258, E2259, E2260)); {'Idris.Core.Value.NType', E2288} -> (fun (V1306) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2288)); {'Idris.Core.Value.NErased', E2289, E2290} -> (fun (V1307, V1308) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2289, E2290)); _ -> begin (V1310 = begin (V1309 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1309} end), case V1310 of {'Idris.Prelude.Types.Left', E2250} -> (fun (V1311) -> {'Idris.Prelude.Types.Left', V1311} end(E2250)); {'Idris.Prelude.Types.Right', E2251} -> (fun (V1312) -> begin (V1313 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V1312, {'Idris.Core.Env.Nil'}, V3, V1251))), case V1313 of {'Idris.Prelude.Types.Left', E2252} -> (fun (V1314) -> {'Idris.Prelude.Types.Left', V1314} end(E2252)); {'Idris.Prelude.Types.Right', E2253} -> (fun (V1315) -> begin (V1322 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1316) -> fun (V1317) -> fun (V1318) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1316, V1317, V1318)) end end end, fun (V1319) -> fun (V1320) -> fun (V1321) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1319, V1320, V1321)) end end end}, V1315, V1251))), case V1322 of {'Idris.Prelude.Types.Left', E2254} -> (fun (V1323) -> {'Idris.Prelude.Types.Left', V1323} end(E2254)); {'Idris.Prelude.Types.Right', E2255} -> (fun (V1324) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1324))))}, V1251)) end(E2255)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2253)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2251)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end; 1 -> case V3 of {'Idris.Core.Value.NPrimVal', E3374, E3375} -> (fun (V1325, V1326) -> case V1326 of {'Idris.Core.TT.StringType'} -> (fun () -> fun (V1327) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V1, <<"String not allowed in a foreign struct"/utf8>>}, V1327)) end end()); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E3562, E3563} -> (fun (V1328, V1329) -> case V1329 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V1330) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V1331) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V1332) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E3646, E3647, E3648, E3649} -> (fun (V1333, V1334, V1335, V1336) -> fun (V1337) -> case V1335 of {'Idris.Core.TT.Pi', E3691, E3692, E3693, E3694} -> (fun (V1338, V1339, V1340, V1341) -> begin (V1343 = begin (V1342 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1342} end), case V1343 of {'Idris.Prelude.Types.Left', E3695} -> (fun (V1344) -> {'Idris.Prelude.Types.Left', V1344} end(E3695)); {'Idris.Prelude.Types.Right', E3696} -> (fun (V1345) -> begin (V1349 = begin (V1346 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1345, V1341))(V1337))), case V1346 of {'Idris.Prelude.Types.Left', E3697} -> (fun (V1347) -> {'Idris.Prelude.Types.Left', V1347} end(E3697)); {'Idris.Prelude.Types.Right', E3698} -> (fun (V1348) -> (('un--nfToCFType'(V0, V1333, 0, V1348))(V1337)) end(E3698)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V1349 of {'Idris.Prelude.Types.Left', E3699} -> (fun (V1350) -> {'Idris.Prelude.Types.Left', V1350} end(E3699)); {'Idris.Prelude.Types.Right', E3700} -> (fun (V1351) -> begin (V1352 = (((V1336(V1345))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V1333, 0}))))(V1337))), case V1352 of {'Idris.Prelude.Types.Left', E3701} -> (fun (V1353) -> {'Idris.Prelude.Types.Left', V1353} end(E3701)); {'Idris.Prelude.Types.Right', E3702} -> (fun (V1354) -> begin (V1355 = (('un--nfToCFType'(V0, V1333, 0, V1354))(V1337))), case V1355 of {'Idris.Prelude.Types.Left', E3703} -> (fun (V1356) -> {'Idris.Prelude.Types.Left', V1356} end(E3703)); {'Idris.Prelude.Types.Right', E3704} -> (fun (V1357) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V1351, V1357}} end(E3704)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3702)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3700)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3696)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3691, E3692, E3693, E3694)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3656, E3657, E3658, E3659, E3660} -> (fun (V1358, V1359, V1360, V1361, V1362) -> begin (V1364 = begin (V1363 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1363} end), case V1364 of {'Idris.Prelude.Types.Left', E3661} -> (fun (V1365) -> {'Idris.Prelude.Types.Left', V1365} end(E3661)); {'Idris.Prelude.Types.Right', E3662} -> (fun (V1366) -> begin (V1373 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1367) -> fun (V1368) -> fun (V1369) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1367, V1368, V1369)) end end end, fun (V1370) -> fun (V1371) -> fun (V1372) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1370, V1371, V1372)) end end end}, V1359, V1337))), case V1373 of {'Idris.Prelude.Types.Left', E3663} -> (fun (V1374) -> {'Idris.Prelude.Types.Left', V1374} end(E3663)); {'Idris.Prelude.Types.Right', E3664} -> (fun (V1375) -> begin (V1377 = (('un--getNArgs'(V0, V1366, V1375, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1376) -> ('Idris.Idris2.Builtin':'un--snd'(V1376)) end, V1362))))(V1337))), case V1377 of {'Idris.Prelude.Types.Left', E3665} -> (fun (V1378) -> {'Idris.Prelude.Types.Left', V1378} end(E3665)); {'Idris.Prelude.Types.Right', E3666} -> (fun (V1379) -> case V1379 of {'Idris.Compiler.CompileExpr.User', E3667, E3668} -> (fun (V1380, V1381) -> begin (V1383 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1382) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1366, V1382)) end, V1381, [], V1337))), case V1383 of {'Idris.Prelude.Types.Left', E3669} -> (fun (V1384) -> {'Idris.Prelude.Types.Left', V1384} end(E3669)); {'Idris.Prelude.Types.Right', E3670} -> (fun (V1385) -> begin (V1387 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1386) -> ('un--nfToCFType'(V0, V1358, V2, V1386)) end, V1385, [], V1337))), case V1387 of {'Idris.Prelude.Types.Left', E3671} -> (fun (V1388) -> {'Idris.Prelude.Types.Left', V1388} end(E3671)); {'Idris.Prelude.Types.Right', E3672} -> (fun (V1389) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1375, V1389}} end(E3672)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3670)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3667, E3668)); {'Idris.Compiler.CompileExpr.Struct', E3673, E3674} -> (fun (V1390, V1391) -> begin (V1402 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1392) -> fun (V1393) -> case V1392 of {'Idris.Builtin.MkPair', E3675, E3676} -> (fun (V1394, V1395) -> begin (V1396 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1366, V1395))(V1393))), case V1396 of {'Idris.Prelude.Types.Left', E3677} -> (fun (V1397) -> {'Idris.Prelude.Types.Left', V1397} end(E3677)); {'Idris.Prelude.Types.Right', E3678} -> (fun (V1398) -> begin (V1399 = (('un--nfToCFType'(V0, V1358, 1, V1398))(V1393))), case V1399 of {'Idris.Prelude.Types.Left', E3679} -> (fun (V1400) -> {'Idris.Prelude.Types.Left', V1400} end(E3679)); {'Idris.Prelude.Types.Right', E3680} -> (fun (V1401) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1394, V1401}} end(E3680)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3678)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3675, E3676)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1391, [], V1337))), case V1402 of {'Idris.Prelude.Types.Left', E3681} -> (fun (V1403) -> {'Idris.Prelude.Types.Left', V1403} end(E3681)); {'Idris.Prelude.Types.Right', E3682} -> (fun (V1404) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1390, V1404}} end(E3682)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3673, E3674)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3683} -> (fun (V1405) -> begin (V1406 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1366, V1405))(V1337))), case V1406 of {'Idris.Prelude.Types.Left', E3684} -> (fun (V1407) -> {'Idris.Prelude.Types.Left', V1407} end(E3684)); {'Idris.Prelude.Types.Right', E3685} -> (fun (V1408) -> begin (V1409 = (('un--nfToCFType'(V0, V1358, V2, V1408))(V1337))), case V1409 of {'Idris.Prelude.Types.Left', E3686} -> (fun (V1410) -> {'Idris.Prelude.Types.Left', V1410} end(E3686)); {'Idris.Prelude.Types.Right', E3687} -> (fun (V1411) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1411}} end(E3687)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3685)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3683)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3666)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3664)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3662)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3656, E3657, E3658, E3659, E3660)); {'Idris.Core.Value.NType', E3688} -> (fun (V1412) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E3688)); {'Idris.Core.Value.NErased', E3689, E3690} -> (fun (V1413, V1414) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E3689, E3690)); _ -> begin (V1416 = begin (V1415 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1415} end), case V1416 of {'Idris.Prelude.Types.Left', E3650} -> (fun (V1417) -> {'Idris.Prelude.Types.Left', V1417} end(E3650)); {'Idris.Prelude.Types.Right', E3651} -> (fun (V1418) -> begin (V1419 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V1418, {'Idris.Core.Env.Nil'}, V3, V1337))), case V1419 of {'Idris.Prelude.Types.Left', E3652} -> (fun (V1420) -> {'Idris.Prelude.Types.Left', V1420} end(E3652)); {'Idris.Prelude.Types.Right', E3653} -> (fun (V1421) -> begin (V1428 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1422) -> fun (V1423) -> fun (V1424) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1422, V1423, V1424)) end end end, fun (V1425) -> fun (V1426) -> fun (V1427) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1425, V1426, V1427)) end end end}, V1421, V1337))), case V1428 of {'Idris.Prelude.Types.Left', E3654} -> (fun (V1429) -> {'Idris.Prelude.Types.Left', V1429} end(E3654)); {'Idris.Prelude.Types.Right', E3655} -> (fun (V1430) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1430))))}, V1337)) end(E3655)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3653)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3651)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E3646, E3647, E3648, E3649)); _ -> fun (V1431) -> case V3 of {'Idris.Core.Value.NTCon', E3611, E3612, E3613, E3614, E3615} -> (fun (V1432, V1433, V1434, V1435, V1436) -> begin (V1438 = begin (V1437 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1437} end), case V1438 of {'Idris.Prelude.Types.Left', E3616} -> (fun (V1439) -> {'Idris.Prelude.Types.Left', V1439} end(E3616)); {'Idris.Prelude.Types.Right', E3617} -> (fun (V1440) -> begin (V1447 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1441) -> fun (V1442) -> fun (V1443) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1441, V1442, V1443)) end end end, fun (V1444) -> fun (V1445) -> fun (V1446) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1444, V1445, V1446)) end end end}, V1433, V1431))), case V1447 of {'Idris.Prelude.Types.Left', E3618} -> (fun (V1448) -> {'Idris.Prelude.Types.Left', V1448} end(E3618)); {'Idris.Prelude.Types.Right', E3619} -> (fun (V1449) -> begin (V1451 = (('un--getNArgs'(V0, V1440, V1449, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1450) -> ('Idris.Idris2.Builtin':'un--snd'(V1450)) end, V1436))))(V1431))), case V1451 of {'Idris.Prelude.Types.Left', E3620} -> (fun (V1452) -> {'Idris.Prelude.Types.Left', V1452} end(E3620)); {'Idris.Prelude.Types.Right', E3621} -> (fun (V1453) -> case V1453 of {'Idris.Compiler.CompileExpr.User', E3622, E3623} -> (fun (V1454, V1455) -> begin (V1457 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1456) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1440, V1456)) end, V1455, [], V1431))), case V1457 of {'Idris.Prelude.Types.Left', E3624} -> (fun (V1458) -> {'Idris.Prelude.Types.Left', V1458} end(E3624)); {'Idris.Prelude.Types.Right', E3625} -> (fun (V1459) -> begin (V1461 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1460) -> ('un--nfToCFType'(V0, V1432, V2, V1460)) end, V1459, [], V1431))), case V1461 of {'Idris.Prelude.Types.Left', E3626} -> (fun (V1462) -> {'Idris.Prelude.Types.Left', V1462} end(E3626)); {'Idris.Prelude.Types.Right', E3627} -> (fun (V1463) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1449, V1463}} end(E3627)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3625)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3622, E3623)); {'Idris.Compiler.CompileExpr.Struct', E3628, E3629} -> (fun (V1464, V1465) -> begin (V1476 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1466) -> fun (V1467) -> case V1466 of {'Idris.Builtin.MkPair', E3630, E3631} -> (fun (V1468, V1469) -> begin (V1470 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1440, V1469))(V1467))), case V1470 of {'Idris.Prelude.Types.Left', E3632} -> (fun (V1471) -> {'Idris.Prelude.Types.Left', V1471} end(E3632)); {'Idris.Prelude.Types.Right', E3633} -> (fun (V1472) -> begin (V1473 = (('un--nfToCFType'(V0, V1432, 1, V1472))(V1467))), case V1473 of {'Idris.Prelude.Types.Left', E3634} -> (fun (V1474) -> {'Idris.Prelude.Types.Left', V1474} end(E3634)); {'Idris.Prelude.Types.Right', E3635} -> (fun (V1475) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1468, V1475}} end(E3635)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3633)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3630, E3631)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1465, [], V1431))), case V1476 of {'Idris.Prelude.Types.Left', E3636} -> (fun (V1477) -> {'Idris.Prelude.Types.Left', V1477} end(E3636)); {'Idris.Prelude.Types.Right', E3637} -> (fun (V1478) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1464, V1478}} end(E3637)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3628, E3629)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3638} -> (fun (V1479) -> begin (V1480 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1440, V1479))(V1431))), case V1480 of {'Idris.Prelude.Types.Left', E3639} -> (fun (V1481) -> {'Idris.Prelude.Types.Left', V1481} end(E3639)); {'Idris.Prelude.Types.Right', E3640} -> (fun (V1482) -> begin (V1483 = (('un--nfToCFType'(V0, V1432, V2, V1482))(V1431))), case V1483 of {'Idris.Prelude.Types.Left', E3641} -> (fun (V1484) -> {'Idris.Prelude.Types.Left', V1484} end(E3641)); {'Idris.Prelude.Types.Right', E3642} -> (fun (V1485) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1485}} end(E3642)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3640)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3638)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3621)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3619)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3617)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3611, E3612, E3613, E3614, E3615)); {'Idris.Core.Value.NType', E3643} -> (fun (V1486) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E3643)); {'Idris.Core.Value.NErased', E3644, E3645} -> (fun (V1487, V1488) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E3644, E3645)); _ -> begin (V1490 = begin (V1489 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1489} end), case V1490 of {'Idris.Prelude.Types.Left', E3605} -> (fun (V1491) -> {'Idris.Prelude.Types.Left', V1491} end(E3605)); {'Idris.Prelude.Types.Right', E3606} -> (fun (V1492) -> begin (V1493 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V1492, {'Idris.Core.Env.Nil'}, V3, V1431))), case V1493 of {'Idris.Prelude.Types.Left', E3607} -> (fun (V1494) -> {'Idris.Prelude.Types.Left', V1494} end(E3607)); {'Idris.Prelude.Types.Right', E3608} -> (fun (V1495) -> begin (V1502 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1496) -> fun (V1497) -> fun (V1498) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1496, V1497, V1498)) end end end, fun (V1499) -> fun (V1500) -> fun (V1501) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1499, V1500, V1501)) end end end}, V1495, V1431))), case V1502 of {'Idris.Prelude.Types.Left', E3609} -> (fun (V1503) -> {'Idris.Prelude.Types.Left', V1503} end(E3609)); {'Idris.Prelude.Types.Right', E3610} -> (fun (V1504) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1504))))}, V1431)) end(E3610)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3608)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3606)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V1505) -> case V3 of {'Idris.Core.Value.NBind', E3746, E3747, E3748, E3749} -> (fun (V1506, V1507, V1508, V1509) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V1506, <<"Function types not allowed in a foreign struct"/utf8>>}, V1505)) end(E3746, E3747, E3748, E3749)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3711, E3712, E3713, E3714, E3715} -> (fun (V1510, V1511, V1512, V1513, V1514) -> begin (V1516 = begin (V1515 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1515} end), case V1516 of {'Idris.Prelude.Types.Left', E3716} -> (fun (V1517) -> {'Idris.Prelude.Types.Left', V1517} end(E3716)); {'Idris.Prelude.Types.Right', E3717} -> (fun (V1518) -> begin (V1525 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1519) -> fun (V1520) -> fun (V1521) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1519, V1520, V1521)) end end end, fun (V1522) -> fun (V1523) -> fun (V1524) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1522, V1523, V1524)) end end end}, V1511, V1505))), case V1525 of {'Idris.Prelude.Types.Left', E3718} -> (fun (V1526) -> {'Idris.Prelude.Types.Left', V1526} end(E3718)); {'Idris.Prelude.Types.Right', E3719} -> (fun (V1527) -> begin (V1529 = (('un--getNArgs'(V0, V1518, V1527, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1528) -> ('Idris.Idris2.Builtin':'un--snd'(V1528)) end, V1514))))(V1505))), case V1529 of {'Idris.Prelude.Types.Left', E3720} -> (fun (V1530) -> {'Idris.Prelude.Types.Left', V1530} end(E3720)); {'Idris.Prelude.Types.Right', E3721} -> (fun (V1531) -> case V1531 of {'Idris.Compiler.CompileExpr.User', E3722, E3723} -> (fun (V1532, V1533) -> begin (V1535 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1534) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1518, V1534)) end, V1533, [], V1505))), case V1535 of {'Idris.Prelude.Types.Left', E3724} -> (fun (V1536) -> {'Idris.Prelude.Types.Left', V1536} end(E3724)); {'Idris.Prelude.Types.Right', E3725} -> (fun (V1537) -> begin (V1539 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1538) -> ('un--nfToCFType'(V0, V1510, V2, V1538)) end, V1537, [], V1505))), case V1539 of {'Idris.Prelude.Types.Left', E3726} -> (fun (V1540) -> {'Idris.Prelude.Types.Left', V1540} end(E3726)); {'Idris.Prelude.Types.Right', E3727} -> (fun (V1541) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1527, V1541}} end(E3727)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3725)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3722, E3723)); {'Idris.Compiler.CompileExpr.Struct', E3728, E3729} -> (fun (V1542, V1543) -> begin (V1554 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1544) -> fun (V1545) -> case V1544 of {'Idris.Builtin.MkPair', E3730, E3731} -> (fun (V1546, V1547) -> begin (V1548 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1518, V1547))(V1545))), case V1548 of {'Idris.Prelude.Types.Left', E3732} -> (fun (V1549) -> {'Idris.Prelude.Types.Left', V1549} end(E3732)); {'Idris.Prelude.Types.Right', E3733} -> (fun (V1550) -> begin (V1551 = (('un--nfToCFType'(V0, V1510, 1, V1550))(V1545))), case V1551 of {'Idris.Prelude.Types.Left', E3734} -> (fun (V1552) -> {'Idris.Prelude.Types.Left', V1552} end(E3734)); {'Idris.Prelude.Types.Right', E3735} -> (fun (V1553) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1546, V1553}} end(E3735)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3733)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3730, E3731)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1543, [], V1505))), case V1554 of {'Idris.Prelude.Types.Left', E3736} -> (fun (V1555) -> {'Idris.Prelude.Types.Left', V1555} end(E3736)); {'Idris.Prelude.Types.Right', E3737} -> (fun (V1556) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1542, V1556}} end(E3737)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3728, E3729)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3738} -> (fun (V1557) -> begin (V1558 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1518, V1557))(V1505))), case V1558 of {'Idris.Prelude.Types.Left', E3739} -> (fun (V1559) -> {'Idris.Prelude.Types.Left', V1559} end(E3739)); {'Idris.Prelude.Types.Right', E3740} -> (fun (V1560) -> begin (V1561 = (('un--nfToCFType'(V0, V1510, V2, V1560))(V1505))), case V1561 of {'Idris.Prelude.Types.Left', E3741} -> (fun (V1562) -> {'Idris.Prelude.Types.Left', V1562} end(E3741)); {'Idris.Prelude.Types.Right', E3742} -> (fun (V1563) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1563}} end(E3742)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3740)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3738)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3721)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3719)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3717)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3711, E3712, E3713, E3714, E3715)); {'Idris.Core.Value.NType', E3743} -> (fun (V1564) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E3743)); {'Idris.Core.Value.NErased', E3744, E3745} -> (fun (V1565, V1566) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E3744, E3745)); _ -> begin (V1568 = begin (V1567 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1567} end), case V1568 of {'Idris.Prelude.Types.Left', E3705} -> (fun (V1569) -> {'Idris.Prelude.Types.Left', V1569} end(E3705)); {'Idris.Prelude.Types.Right', E3706} -> (fun (V1570) -> begin (V1571 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V1570, {'Idris.Core.Env.Nil'}, V3, V1505))), case V1571 of {'Idris.Prelude.Types.Left', E3707} -> (fun (V1572) -> {'Idris.Prelude.Types.Left', V1572} end(E3707)); {'Idris.Prelude.Types.Right', E3708} -> (fun (V1573) -> begin (V1580 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1574) -> fun (V1575) -> fun (V1576) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1574, V1575, V1576)) end end end, fun (V1577) -> fun (V1578) -> fun (V1579) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1577, V1578, V1579)) end end end}, V1573, V1505))), case V1580 of {'Idris.Prelude.Types.Left', E3709} -> (fun (V1581) -> {'Idris.Prelude.Types.Left', V1581} end(E3709)); {'Idris.Prelude.Types.Right', E3710} -> (fun (V1582) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1582))))}, V1505)) end(E3710)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3708)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3706)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V1583) -> case V3 of {'Idris.Core.Value.NTCon', E3570, E3571, E3572, E3573, E3574} -> (fun (V1584, V1585, V1586, V1587, V1588) -> begin (V1590 = begin (V1589 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1589} end), case V1590 of {'Idris.Prelude.Types.Left', E3575} -> (fun (V1591) -> {'Idris.Prelude.Types.Left', V1591} end(E3575)); {'Idris.Prelude.Types.Right', E3576} -> (fun (V1592) -> begin (V1599 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1593) -> fun (V1594) -> fun (V1595) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1593, V1594, V1595)) end end end, fun (V1596) -> fun (V1597) -> fun (V1598) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1596, V1597, V1598)) end end end}, V1585, V1583))), case V1599 of {'Idris.Prelude.Types.Left', E3577} -> (fun (V1600) -> {'Idris.Prelude.Types.Left', V1600} end(E3577)); {'Idris.Prelude.Types.Right', E3578} -> (fun (V1601) -> begin (V1603 = (('un--getNArgs'(V0, V1592, V1601, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1602) -> ('Idris.Idris2.Builtin':'un--snd'(V1602)) end, V1588))))(V1583))), case V1603 of {'Idris.Prelude.Types.Left', E3579} -> (fun (V1604) -> {'Idris.Prelude.Types.Left', V1604} end(E3579)); {'Idris.Prelude.Types.Right', E3580} -> (fun (V1605) -> case V1605 of {'Idris.Compiler.CompileExpr.User', E3581, E3582} -> (fun (V1606, V1607) -> begin (V1609 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1608) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1592, V1608)) end, V1607, [], V1583))), case V1609 of {'Idris.Prelude.Types.Left', E3583} -> (fun (V1610) -> {'Idris.Prelude.Types.Left', V1610} end(E3583)); {'Idris.Prelude.Types.Right', E3584} -> (fun (V1611) -> begin (V1613 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1612) -> ('un--nfToCFType'(V0, V1584, V2, V1612)) end, V1611, [], V1583))), case V1613 of {'Idris.Prelude.Types.Left', E3585} -> (fun (V1614) -> {'Idris.Prelude.Types.Left', V1614} end(E3585)); {'Idris.Prelude.Types.Right', E3586} -> (fun (V1615) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1601, V1615}} end(E3586)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3584)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3581, E3582)); {'Idris.Compiler.CompileExpr.Struct', E3587, E3588} -> (fun (V1616, V1617) -> begin (V1628 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1618) -> fun (V1619) -> case V1618 of {'Idris.Builtin.MkPair', E3589, E3590} -> (fun (V1620, V1621) -> begin (V1622 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1592, V1621))(V1619))), case V1622 of {'Idris.Prelude.Types.Left', E3591} -> (fun (V1623) -> {'Idris.Prelude.Types.Left', V1623} end(E3591)); {'Idris.Prelude.Types.Right', E3592} -> (fun (V1624) -> begin (V1625 = (('un--nfToCFType'(V0, V1584, 1, V1624))(V1619))), case V1625 of {'Idris.Prelude.Types.Left', E3593} -> (fun (V1626) -> {'Idris.Prelude.Types.Left', V1626} end(E3593)); {'Idris.Prelude.Types.Right', E3594} -> (fun (V1627) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1620, V1627}} end(E3594)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3592)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3589, E3590)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1617, [], V1583))), case V1628 of {'Idris.Prelude.Types.Left', E3595} -> (fun (V1629) -> {'Idris.Prelude.Types.Left', V1629} end(E3595)); {'Idris.Prelude.Types.Right', E3596} -> (fun (V1630) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1616, V1630}} end(E3596)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3587, E3588)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3597} -> (fun (V1631) -> begin (V1632 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1592, V1631))(V1583))), case V1632 of {'Idris.Prelude.Types.Left', E3598} -> (fun (V1633) -> {'Idris.Prelude.Types.Left', V1633} end(E3598)); {'Idris.Prelude.Types.Right', E3599} -> (fun (V1634) -> begin (V1635 = (('un--nfToCFType'(V0, V1584, V2, V1634))(V1583))), case V1635 of {'Idris.Prelude.Types.Left', E3600} -> (fun (V1636) -> {'Idris.Prelude.Types.Left', V1636} end(E3600)); {'Idris.Prelude.Types.Right', E3601} -> (fun (V1637) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1637}} end(E3601)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3599)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3597)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3580)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3578)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3576)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3570, E3571, E3572, E3573, E3574)); {'Idris.Core.Value.NType', E3602} -> (fun (V1638) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E3602)); {'Idris.Core.Value.NErased', E3603, E3604} -> (fun (V1639, V1640) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E3603, E3604)); _ -> begin (V1642 = begin (V1641 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1641} end), case V1642 of {'Idris.Prelude.Types.Left', E3564} -> (fun (V1643) -> {'Idris.Prelude.Types.Left', V1643} end(E3564)); {'Idris.Prelude.Types.Right', E3565} -> (fun (V1644) -> begin (V1645 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V1644, {'Idris.Core.Env.Nil'}, V3, V1583))), case V1645 of {'Idris.Prelude.Types.Left', E3566} -> (fun (V1646) -> {'Idris.Prelude.Types.Left', V1646} end(E3566)); {'Idris.Prelude.Types.Right', E3567} -> (fun (V1647) -> begin (V1654 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1648) -> fun (V1649) -> fun (V1650) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1648, V1649, V1650)) end end end, fun (V1651) -> fun (V1652) -> fun (V1653) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1651, V1652, V1653)) end end end}, V1647, V1583))), case V1654 of {'Idris.Prelude.Types.Left', E3568} -> (fun (V1655) -> {'Idris.Prelude.Types.Left', V1655} end(E3568)); {'Idris.Prelude.Types.Right', E3569} -> (fun (V1656) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1656))))}, V1583)) end(E3569)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3567)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3565)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E3562, E3563)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E3458, E3459, E3460, E3461} -> (fun (V1657, V1658, V1659, V1660) -> fun (V1661) -> case V1659 of {'Idris.Core.TT.Pi', E3503, E3504, E3505, E3506} -> (fun (V1662, V1663, V1664, V1665) -> begin (V1667 = begin (V1666 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1666} end), case V1667 of {'Idris.Prelude.Types.Left', E3507} -> (fun (V1668) -> {'Idris.Prelude.Types.Left', V1668} end(E3507)); {'Idris.Prelude.Types.Right', E3508} -> (fun (V1669) -> begin (V1673 = begin (V1670 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1669, V1665))(V1661))), case V1670 of {'Idris.Prelude.Types.Left', E3509} -> (fun (V1671) -> {'Idris.Prelude.Types.Left', V1671} end(E3509)); {'Idris.Prelude.Types.Right', E3510} -> (fun (V1672) -> (('un--nfToCFType'(V0, V1657, 0, V1672))(V1661)) end(E3510)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V1673 of {'Idris.Prelude.Types.Left', E3511} -> (fun (V1674) -> {'Idris.Prelude.Types.Left', V1674} end(E3511)); {'Idris.Prelude.Types.Right', E3512} -> (fun (V1675) -> begin (V1676 = (((V1660(V1669))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V1657, 0}))))(V1661))), case V1676 of {'Idris.Prelude.Types.Left', E3513} -> (fun (V1677) -> {'Idris.Prelude.Types.Left', V1677} end(E3513)); {'Idris.Prelude.Types.Right', E3514} -> (fun (V1678) -> begin (V1679 = (('un--nfToCFType'(V0, V1657, 0, V1678))(V1661))), case V1679 of {'Idris.Prelude.Types.Left', E3515} -> (fun (V1680) -> {'Idris.Prelude.Types.Left', V1680} end(E3515)); {'Idris.Prelude.Types.Right', E3516} -> (fun (V1681) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V1675, V1681}} end(E3516)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3514)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3512)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3508)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3503, E3504, E3505, E3506)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3468, E3469, E3470, E3471, E3472} -> (fun (V1682, V1683, V1684, V1685, V1686) -> begin (V1688 = begin (V1687 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1687} end), case V1688 of {'Idris.Prelude.Types.Left', E3473} -> (fun (V1689) -> {'Idris.Prelude.Types.Left', V1689} end(E3473)); {'Idris.Prelude.Types.Right', E3474} -> (fun (V1690) -> begin (V1697 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1691) -> fun (V1692) -> fun (V1693) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1691, V1692, V1693)) end end end, fun (V1694) -> fun (V1695) -> fun (V1696) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1694, V1695, V1696)) end end end}, V1683, V1661))), case V1697 of {'Idris.Prelude.Types.Left', E3475} -> (fun (V1698) -> {'Idris.Prelude.Types.Left', V1698} end(E3475)); {'Idris.Prelude.Types.Right', E3476} -> (fun (V1699) -> begin (V1701 = (('un--getNArgs'(V0, V1690, V1699, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1700) -> ('Idris.Idris2.Builtin':'un--snd'(V1700)) end, V1686))))(V1661))), case V1701 of {'Idris.Prelude.Types.Left', E3477} -> (fun (V1702) -> {'Idris.Prelude.Types.Left', V1702} end(E3477)); {'Idris.Prelude.Types.Right', E3478} -> (fun (V1703) -> case V1703 of {'Idris.Compiler.CompileExpr.User', E3479, E3480} -> (fun (V1704, V1705) -> begin (V1707 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1706) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1690, V1706)) end, V1705, [], V1661))), case V1707 of {'Idris.Prelude.Types.Left', E3481} -> (fun (V1708) -> {'Idris.Prelude.Types.Left', V1708} end(E3481)); {'Idris.Prelude.Types.Right', E3482} -> (fun (V1709) -> begin (V1711 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1710) -> ('un--nfToCFType'(V0, V1682, V2, V1710)) end, V1709, [], V1661))), case V1711 of {'Idris.Prelude.Types.Left', E3483} -> (fun (V1712) -> {'Idris.Prelude.Types.Left', V1712} end(E3483)); {'Idris.Prelude.Types.Right', E3484} -> (fun (V1713) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1699, V1713}} end(E3484)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3482)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3479, E3480)); {'Idris.Compiler.CompileExpr.Struct', E3485, E3486} -> (fun (V1714, V1715) -> begin (V1726 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1716) -> fun (V1717) -> case V1716 of {'Idris.Builtin.MkPair', E3487, E3488} -> (fun (V1718, V1719) -> begin (V1720 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1690, V1719))(V1717))), case V1720 of {'Idris.Prelude.Types.Left', E3489} -> (fun (V1721) -> {'Idris.Prelude.Types.Left', V1721} end(E3489)); {'Idris.Prelude.Types.Right', E3490} -> (fun (V1722) -> begin (V1723 = (('un--nfToCFType'(V0, V1682, 1, V1722))(V1717))), case V1723 of {'Idris.Prelude.Types.Left', E3491} -> (fun (V1724) -> {'Idris.Prelude.Types.Left', V1724} end(E3491)); {'Idris.Prelude.Types.Right', E3492} -> (fun (V1725) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1718, V1725}} end(E3492)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3490)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3487, E3488)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1715, [], V1661))), case V1726 of {'Idris.Prelude.Types.Left', E3493} -> (fun (V1727) -> {'Idris.Prelude.Types.Left', V1727} end(E3493)); {'Idris.Prelude.Types.Right', E3494} -> (fun (V1728) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1714, V1728}} end(E3494)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3485, E3486)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3495} -> (fun (V1729) -> begin (V1730 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1690, V1729))(V1661))), case V1730 of {'Idris.Prelude.Types.Left', E3496} -> (fun (V1731) -> {'Idris.Prelude.Types.Left', V1731} end(E3496)); {'Idris.Prelude.Types.Right', E3497} -> (fun (V1732) -> begin (V1733 = (('un--nfToCFType'(V0, V1682, V2, V1732))(V1661))), case V1733 of {'Idris.Prelude.Types.Left', E3498} -> (fun (V1734) -> {'Idris.Prelude.Types.Left', V1734} end(E3498)); {'Idris.Prelude.Types.Right', E3499} -> (fun (V1735) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1735}} end(E3499)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3497)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3495)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3478)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3476)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3474)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3468, E3469, E3470, E3471, E3472)); {'Idris.Core.Value.NType', E3500} -> (fun (V1736) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E3500)); {'Idris.Core.Value.NErased', E3501, E3502} -> (fun (V1737, V1738) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E3501, E3502)); _ -> begin (V1740 = begin (V1739 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1739} end), case V1740 of {'Idris.Prelude.Types.Left', E3462} -> (fun (V1741) -> {'Idris.Prelude.Types.Left', V1741} end(E3462)); {'Idris.Prelude.Types.Right', E3463} -> (fun (V1742) -> begin (V1743 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V1742, {'Idris.Core.Env.Nil'}, V3, V1661))), case V1743 of {'Idris.Prelude.Types.Left', E3464} -> (fun (V1744) -> {'Idris.Prelude.Types.Left', V1744} end(E3464)); {'Idris.Prelude.Types.Right', E3465} -> (fun (V1745) -> begin (V1752 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1746) -> fun (V1747) -> fun (V1748) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1746, V1747, V1748)) end end end, fun (V1749) -> fun (V1750) -> fun (V1751) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1749, V1750, V1751)) end end end}, V1745, V1661))), case V1752 of {'Idris.Prelude.Types.Left', E3466} -> (fun (V1753) -> {'Idris.Prelude.Types.Left', V1753} end(E3466)); {'Idris.Prelude.Types.Right', E3467} -> (fun (V1754) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1754))))}, V1661)) end(E3467)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3465)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3463)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E3458, E3459, E3460, E3461)); _ -> fun (V1755) -> case V3 of {'Idris.Core.Value.NTCon', E3423, E3424, E3425, E3426, E3427} -> (fun (V1756, V1757, V1758, V1759, V1760) -> begin (V1762 = begin (V1761 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1761} end), case V1762 of {'Idris.Prelude.Types.Left', E3428} -> (fun (V1763) -> {'Idris.Prelude.Types.Left', V1763} end(E3428)); {'Idris.Prelude.Types.Right', E3429} -> (fun (V1764) -> begin (V1771 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1765) -> fun (V1766) -> fun (V1767) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1765, V1766, V1767)) end end end, fun (V1768) -> fun (V1769) -> fun (V1770) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1768, V1769, V1770)) end end end}, V1757, V1755))), case V1771 of {'Idris.Prelude.Types.Left', E3430} -> (fun (V1772) -> {'Idris.Prelude.Types.Left', V1772} end(E3430)); {'Idris.Prelude.Types.Right', E3431} -> (fun (V1773) -> begin (V1775 = (('un--getNArgs'(V0, V1764, V1773, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1774) -> ('Idris.Idris2.Builtin':'un--snd'(V1774)) end, V1760))))(V1755))), case V1775 of {'Idris.Prelude.Types.Left', E3432} -> (fun (V1776) -> {'Idris.Prelude.Types.Left', V1776} end(E3432)); {'Idris.Prelude.Types.Right', E3433} -> (fun (V1777) -> case V1777 of {'Idris.Compiler.CompileExpr.User', E3434, E3435} -> (fun (V1778, V1779) -> begin (V1781 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1780) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1764, V1780)) end, V1779, [], V1755))), case V1781 of {'Idris.Prelude.Types.Left', E3436} -> (fun (V1782) -> {'Idris.Prelude.Types.Left', V1782} end(E3436)); {'Idris.Prelude.Types.Right', E3437} -> (fun (V1783) -> begin (V1785 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1784) -> ('un--nfToCFType'(V0, V1756, V2, V1784)) end, V1783, [], V1755))), case V1785 of {'Idris.Prelude.Types.Left', E3438} -> (fun (V1786) -> {'Idris.Prelude.Types.Left', V1786} end(E3438)); {'Idris.Prelude.Types.Right', E3439} -> (fun (V1787) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1773, V1787}} end(E3439)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3437)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3434, E3435)); {'Idris.Compiler.CompileExpr.Struct', E3440, E3441} -> (fun (V1788, V1789) -> begin (V1800 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1790) -> fun (V1791) -> case V1790 of {'Idris.Builtin.MkPair', E3442, E3443} -> (fun (V1792, V1793) -> begin (V1794 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1764, V1793))(V1791))), case V1794 of {'Idris.Prelude.Types.Left', E3444} -> (fun (V1795) -> {'Idris.Prelude.Types.Left', V1795} end(E3444)); {'Idris.Prelude.Types.Right', E3445} -> (fun (V1796) -> begin (V1797 = (('un--nfToCFType'(V0, V1756, 1, V1796))(V1791))), case V1797 of {'Idris.Prelude.Types.Left', E3446} -> (fun (V1798) -> {'Idris.Prelude.Types.Left', V1798} end(E3446)); {'Idris.Prelude.Types.Right', E3447} -> (fun (V1799) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1792, V1799}} end(E3447)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3445)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3442, E3443)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1789, [], V1755))), case V1800 of {'Idris.Prelude.Types.Left', E3448} -> (fun (V1801) -> {'Idris.Prelude.Types.Left', V1801} end(E3448)); {'Idris.Prelude.Types.Right', E3449} -> (fun (V1802) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1788, V1802}} end(E3449)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3440, E3441)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3450} -> (fun (V1803) -> begin (V1804 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1764, V1803))(V1755))), case V1804 of {'Idris.Prelude.Types.Left', E3451} -> (fun (V1805) -> {'Idris.Prelude.Types.Left', V1805} end(E3451)); {'Idris.Prelude.Types.Right', E3452} -> (fun (V1806) -> begin (V1807 = (('un--nfToCFType'(V0, V1756, V2, V1806))(V1755))), case V1807 of {'Idris.Prelude.Types.Left', E3453} -> (fun (V1808) -> {'Idris.Prelude.Types.Left', V1808} end(E3453)); {'Idris.Prelude.Types.Right', E3454} -> (fun (V1809) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1809}} end(E3454)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3452)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3450)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3433)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3431)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3429)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3423, E3424, E3425, E3426, E3427)); {'Idris.Core.Value.NType', E3455} -> (fun (V1810) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E3455)); {'Idris.Core.Value.NErased', E3456, E3457} -> (fun (V1811, V1812) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E3456, E3457)); _ -> begin (V1814 = begin (V1813 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1813} end), case V1814 of {'Idris.Prelude.Types.Left', E3417} -> (fun (V1815) -> {'Idris.Prelude.Types.Left', V1815} end(E3417)); {'Idris.Prelude.Types.Right', E3418} -> (fun (V1816) -> begin (V1817 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V1816, {'Idris.Core.Env.Nil'}, V3, V1755))), case V1817 of {'Idris.Prelude.Types.Left', E3419} -> (fun (V1818) -> {'Idris.Prelude.Types.Left', V1818} end(E3419)); {'Idris.Prelude.Types.Right', E3420} -> (fun (V1819) -> begin (V1826 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1820) -> fun (V1821) -> fun (V1822) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1820, V1821, V1822)) end end end, fun (V1823) -> fun (V1824) -> fun (V1825) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1823, V1824, V1825)) end end end}, V1819, V1755))), case V1826 of {'Idris.Prelude.Types.Left', E3421} -> (fun (V1827) -> {'Idris.Prelude.Types.Left', V1827} end(E3421)); {'Idris.Prelude.Types.Right', E3422} -> (fun (V1828) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1828))))}, V1755)) end(E3422)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3420)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3418)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V1829) -> case V3 of {'Idris.Core.Value.NBind', E3558, E3559, E3560, E3561} -> (fun (V1830, V1831, V1832, V1833) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V1830, <<"Function types not allowed in a foreign struct"/utf8>>}, V1829)) end(E3558, E3559, E3560, E3561)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3523, E3524, E3525, E3526, E3527} -> (fun (V1834, V1835, V1836, V1837, V1838) -> begin (V1840 = begin (V1839 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1839} end), case V1840 of {'Idris.Prelude.Types.Left', E3528} -> (fun (V1841) -> {'Idris.Prelude.Types.Left', V1841} end(E3528)); {'Idris.Prelude.Types.Right', E3529} -> (fun (V1842) -> begin (V1849 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1843) -> fun (V1844) -> fun (V1845) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1843, V1844, V1845)) end end end, fun (V1846) -> fun (V1847) -> fun (V1848) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1846, V1847, V1848)) end end end}, V1835, V1829))), case V1849 of {'Idris.Prelude.Types.Left', E3530} -> (fun (V1850) -> {'Idris.Prelude.Types.Left', V1850} end(E3530)); {'Idris.Prelude.Types.Right', E3531} -> (fun (V1851) -> begin (V1853 = (('un--getNArgs'(V0, V1842, V1851, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1852) -> ('Idris.Idris2.Builtin':'un--snd'(V1852)) end, V1838))))(V1829))), case V1853 of {'Idris.Prelude.Types.Left', E3532} -> (fun (V1854) -> {'Idris.Prelude.Types.Left', V1854} end(E3532)); {'Idris.Prelude.Types.Right', E3533} -> (fun (V1855) -> case V1855 of {'Idris.Compiler.CompileExpr.User', E3534, E3535} -> (fun (V1856, V1857) -> begin (V1859 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1858) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1842, V1858)) end, V1857, [], V1829))), case V1859 of {'Idris.Prelude.Types.Left', E3536} -> (fun (V1860) -> {'Idris.Prelude.Types.Left', V1860} end(E3536)); {'Idris.Prelude.Types.Right', E3537} -> (fun (V1861) -> begin (V1863 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1862) -> ('un--nfToCFType'(V0, V1834, V2, V1862)) end, V1861, [], V1829))), case V1863 of {'Idris.Prelude.Types.Left', E3538} -> (fun (V1864) -> {'Idris.Prelude.Types.Left', V1864} end(E3538)); {'Idris.Prelude.Types.Right', E3539} -> (fun (V1865) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1851, V1865}} end(E3539)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3537)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3534, E3535)); {'Idris.Compiler.CompileExpr.Struct', E3540, E3541} -> (fun (V1866, V1867) -> begin (V1878 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1868) -> fun (V1869) -> case V1868 of {'Idris.Builtin.MkPair', E3542, E3543} -> (fun (V1870, V1871) -> begin (V1872 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1842, V1871))(V1869))), case V1872 of {'Idris.Prelude.Types.Left', E3544} -> (fun (V1873) -> {'Idris.Prelude.Types.Left', V1873} end(E3544)); {'Idris.Prelude.Types.Right', E3545} -> (fun (V1874) -> begin (V1875 = (('un--nfToCFType'(V0, V1834, 1, V1874))(V1869))), case V1875 of {'Idris.Prelude.Types.Left', E3546} -> (fun (V1876) -> {'Idris.Prelude.Types.Left', V1876} end(E3546)); {'Idris.Prelude.Types.Right', E3547} -> (fun (V1877) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1870, V1877}} end(E3547)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3545)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3542, E3543)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1867, [], V1829))), case V1878 of {'Idris.Prelude.Types.Left', E3548} -> (fun (V1879) -> {'Idris.Prelude.Types.Left', V1879} end(E3548)); {'Idris.Prelude.Types.Right', E3549} -> (fun (V1880) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1866, V1880}} end(E3549)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3540, E3541)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3550} -> (fun (V1881) -> begin (V1882 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1842, V1881))(V1829))), case V1882 of {'Idris.Prelude.Types.Left', E3551} -> (fun (V1883) -> {'Idris.Prelude.Types.Left', V1883} end(E3551)); {'Idris.Prelude.Types.Right', E3552} -> (fun (V1884) -> begin (V1885 = (('un--nfToCFType'(V0, V1834, V2, V1884))(V1829))), case V1885 of {'Idris.Prelude.Types.Left', E3553} -> (fun (V1886) -> {'Idris.Prelude.Types.Left', V1886} end(E3553)); {'Idris.Prelude.Types.Right', E3554} -> (fun (V1887) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1887}} end(E3554)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3552)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3550)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3533)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3531)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3529)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3523, E3524, E3525, E3526, E3527)); {'Idris.Core.Value.NType', E3555} -> (fun (V1888) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E3555)); {'Idris.Core.Value.NErased', E3556, E3557} -> (fun (V1889, V1890) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E3556, E3557)); _ -> begin (V1892 = begin (V1891 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1891} end), case V1892 of {'Idris.Prelude.Types.Left', E3517} -> (fun (V1893) -> {'Idris.Prelude.Types.Left', V1893} end(E3517)); {'Idris.Prelude.Types.Right', E3518} -> (fun (V1894) -> begin (V1895 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V1894, {'Idris.Core.Env.Nil'}, V3, V1829))), case V1895 of {'Idris.Prelude.Types.Left', E3519} -> (fun (V1896) -> {'Idris.Prelude.Types.Left', V1896} end(E3519)); {'Idris.Prelude.Types.Right', E3520} -> (fun (V1897) -> begin (V1904 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1898) -> fun (V1899) -> fun (V1900) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1898, V1899, V1900)) end end end, fun (V1901) -> fun (V1902) -> fun (V1903) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1901, V1902, V1903)) end end end}, V1897, V1829))), case V1904 of {'Idris.Prelude.Types.Left', E3521} -> (fun (V1905) -> {'Idris.Prelude.Types.Left', V1905} end(E3521)); {'Idris.Prelude.Types.Right', E3522} -> (fun (V1906) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1906))))}, V1829)) end(E3522)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3520)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3518)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V1907) -> case V3 of {'Idris.Core.Value.NTCon', E3382, E3383, E3384, E3385, E3386} -> (fun (V1908, V1909, V1910, V1911, V1912) -> begin (V1914 = begin (V1913 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1913} end), case V1914 of {'Idris.Prelude.Types.Left', E3387} -> (fun (V1915) -> {'Idris.Prelude.Types.Left', V1915} end(E3387)); {'Idris.Prelude.Types.Right', E3388} -> (fun (V1916) -> begin (V1923 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1917) -> fun (V1918) -> fun (V1919) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V1917, V1918, V1919)) end end end, fun (V1920) -> fun (V1921) -> fun (V1922) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V1920, V1921, V1922)) end end end}, V1909, V1907))), case V1923 of {'Idris.Prelude.Types.Left', E3389} -> (fun (V1924) -> {'Idris.Prelude.Types.Left', V1924} end(E3389)); {'Idris.Prelude.Types.Right', E3390} -> (fun (V1925) -> begin (V1927 = (('un--getNArgs'(V0, V1916, V1925, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1926) -> ('Idris.Idris2.Builtin':'un--snd'(V1926)) end, V1912))))(V1907))), case V1927 of {'Idris.Prelude.Types.Left', E3391} -> (fun (V1928) -> {'Idris.Prelude.Types.Left', V1928} end(E3391)); {'Idris.Prelude.Types.Right', E3392} -> (fun (V1929) -> case V1929 of {'Idris.Compiler.CompileExpr.User', E3393, E3394} -> (fun (V1930, V1931) -> begin (V1933 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1932) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1916, V1932)) end, V1931, [], V1907))), case V1933 of {'Idris.Prelude.Types.Left', E3395} -> (fun (V1934) -> {'Idris.Prelude.Types.Left', V1934} end(E3395)); {'Idris.Prelude.Types.Right', E3396} -> (fun (V1935) -> begin (V1937 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1936) -> ('un--nfToCFType'(V0, V1908, V2, V1936)) end, V1935, [], V1907))), case V1937 of {'Idris.Prelude.Types.Left', E3397} -> (fun (V1938) -> {'Idris.Prelude.Types.Left', V1938} end(E3397)); {'Idris.Prelude.Types.Right', E3398} -> (fun (V1939) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V1925, V1939}} end(E3398)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3396)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3393, E3394)); {'Idris.Compiler.CompileExpr.Struct', E3399, E3400} -> (fun (V1940, V1941) -> begin (V1952 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1942) -> fun (V1943) -> case V1942 of {'Idris.Builtin.MkPair', E3401, E3402} -> (fun (V1944, V1945) -> begin (V1946 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1916, V1945))(V1943))), case V1946 of {'Idris.Prelude.Types.Left', E3403} -> (fun (V1947) -> {'Idris.Prelude.Types.Left', V1947} end(E3403)); {'Idris.Prelude.Types.Right', E3404} -> (fun (V1948) -> begin (V1949 = (('un--nfToCFType'(V0, V1908, 1, V1948))(V1943))), case V1949 of {'Idris.Prelude.Types.Left', E3405} -> (fun (V1950) -> {'Idris.Prelude.Types.Left', V1950} end(E3405)); {'Idris.Prelude.Types.Right', E3406} -> (fun (V1951) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V1944, V1951}} end(E3406)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3404)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3401, E3402)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1941, [], V1907))), case V1952 of {'Idris.Prelude.Types.Left', E3407} -> (fun (V1953) -> {'Idris.Prelude.Types.Left', V1953} end(E3407)); {'Idris.Prelude.Types.Right', E3408} -> (fun (V1954) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V1940, V1954}} end(E3408)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3399, E3400)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3409} -> (fun (V1955) -> begin (V1956 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1916, V1955))(V1907))), case V1956 of {'Idris.Prelude.Types.Left', E3410} -> (fun (V1957) -> {'Idris.Prelude.Types.Left', V1957} end(E3410)); {'Idris.Prelude.Types.Right', E3411} -> (fun (V1958) -> begin (V1959 = (('un--nfToCFType'(V0, V1908, V2, V1958))(V1907))), case V1959 of {'Idris.Prelude.Types.Left', E3412} -> (fun (V1960) -> {'Idris.Prelude.Types.Left', V1960} end(E3412)); {'Idris.Prelude.Types.Right', E3413} -> (fun (V1961) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V1961}} end(E3413)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3411)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3409)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3392)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3390)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3388)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3382, E3383, E3384, E3385, E3386)); {'Idris.Core.Value.NType', E3414} -> (fun (V1962) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E3414)); {'Idris.Core.Value.NErased', E3415, E3416} -> (fun (V1963, V1964) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E3415, E3416)); _ -> begin (V1966 = begin (V1965 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1965} end), case V1966 of {'Idris.Prelude.Types.Left', E3376} -> (fun (V1967) -> {'Idris.Prelude.Types.Left', V1967} end(E3376)); {'Idris.Prelude.Types.Right', E3377} -> (fun (V1968) -> begin (V1969 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V1968, {'Idris.Core.Env.Nil'}, V3, V1907))), case V1969 of {'Idris.Prelude.Types.Left', E3378} -> (fun (V1970) -> {'Idris.Prelude.Types.Left', V1970} end(E3378)); {'Idris.Prelude.Types.Right', E3379} -> (fun (V1971) -> begin (V1978 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V1972) -> fun (V1973) -> fun (V1974) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V1972, V1973, V1974)) end end end, fun (V1975) -> fun (V1976) -> fun (V1977) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V1975, V1976, V1977)) end end end}, V1971, V1907))), case V1978 of {'Idris.Prelude.Types.Left', E3380} -> (fun (V1979) -> {'Idris.Prelude.Types.Left', V1979} end(E3380)); {'Idris.Prelude.Types.Right', E3381} -> (fun (V1980) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V1980))))}, V1907)) end(E3381)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3379)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3377)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end(E3374, E3375)); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E3186, E3187} -> (fun (V1981, V1982) -> case V1982 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V1983) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V1984) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V1985) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E3270, E3271, E3272, E3273} -> (fun (V1986, V1987, V1988, V1989) -> fun (V1990) -> case V1988 of {'Idris.Core.TT.Pi', E3315, E3316, E3317, E3318} -> (fun (V1991, V1992, V1993, V1994) -> begin (V1996 = begin (V1995 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1995} end), case V1996 of {'Idris.Prelude.Types.Left', E3319} -> (fun (V1997) -> {'Idris.Prelude.Types.Left', V1997} end(E3319)); {'Idris.Prelude.Types.Right', E3320} -> (fun (V1998) -> begin (V2002 = begin (V1999 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1998, V1994))(V1990))), case V1999 of {'Idris.Prelude.Types.Left', E3321} -> (fun (V2000) -> {'Idris.Prelude.Types.Left', V2000} end(E3321)); {'Idris.Prelude.Types.Right', E3322} -> (fun (V2001) -> (('un--nfToCFType'(V0, V1986, 0, V2001))(V1990)) end(E3322)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V2002 of {'Idris.Prelude.Types.Left', E3323} -> (fun (V2003) -> {'Idris.Prelude.Types.Left', V2003} end(E3323)); {'Idris.Prelude.Types.Right', E3324} -> (fun (V2004) -> begin (V2005 = (((V1989(V1998))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V1986, 0}))))(V1990))), case V2005 of {'Idris.Prelude.Types.Left', E3325} -> (fun (V2006) -> {'Idris.Prelude.Types.Left', V2006} end(E3325)); {'Idris.Prelude.Types.Right', E3326} -> (fun (V2007) -> begin (V2008 = (('un--nfToCFType'(V0, V1986, 0, V2007))(V1990))), case V2008 of {'Idris.Prelude.Types.Left', E3327} -> (fun (V2009) -> {'Idris.Prelude.Types.Left', V2009} end(E3327)); {'Idris.Prelude.Types.Right', E3328} -> (fun (V2010) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V2004, V2010}} end(E3328)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3326)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3324)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3320)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3315, E3316, E3317, E3318)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3280, E3281, E3282, E3283, E3284} -> (fun (V2011, V2012, V2013, V2014, V2015) -> begin (V2017 = begin (V2016 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2016} end), case V2017 of {'Idris.Prelude.Types.Left', E3285} -> (fun (V2018) -> {'Idris.Prelude.Types.Left', V2018} end(E3285)); {'Idris.Prelude.Types.Right', E3286} -> (fun (V2019) -> begin (V2026 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2020) -> fun (V2021) -> fun (V2022) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2020, V2021, V2022)) end end end, fun (V2023) -> fun (V2024) -> fun (V2025) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2023, V2024, V2025)) end end end}, V2012, V1990))), case V2026 of {'Idris.Prelude.Types.Left', E3287} -> (fun (V2027) -> {'Idris.Prelude.Types.Left', V2027} end(E3287)); {'Idris.Prelude.Types.Right', E3288} -> (fun (V2028) -> begin (V2030 = (('un--getNArgs'(V0, V2019, V2028, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2029) -> ('Idris.Idris2.Builtin':'un--snd'(V2029)) end, V2015))))(V1990))), case V2030 of {'Idris.Prelude.Types.Left', E3289} -> (fun (V2031) -> {'Idris.Prelude.Types.Left', V2031} end(E3289)); {'Idris.Prelude.Types.Right', E3290} -> (fun (V2032) -> case V2032 of {'Idris.Compiler.CompileExpr.User', E3291, E3292} -> (fun (V2033, V2034) -> begin (V2036 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2035) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2019, V2035)) end, V2034, [], V1990))), case V2036 of {'Idris.Prelude.Types.Left', E3293} -> (fun (V2037) -> {'Idris.Prelude.Types.Left', V2037} end(E3293)); {'Idris.Prelude.Types.Right', E3294} -> (fun (V2038) -> begin (V2040 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2039) -> ('un--nfToCFType'(V0, V2011, V2, V2039)) end, V2038, [], V1990))), case V2040 of {'Idris.Prelude.Types.Left', E3295} -> (fun (V2041) -> {'Idris.Prelude.Types.Left', V2041} end(E3295)); {'Idris.Prelude.Types.Right', E3296} -> (fun (V2042) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2028, V2042}} end(E3296)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3294)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3291, E3292)); {'Idris.Compiler.CompileExpr.Struct', E3297, E3298} -> (fun (V2043, V2044) -> begin (V2055 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2045) -> fun (V2046) -> case V2045 of {'Idris.Builtin.MkPair', E3299, E3300} -> (fun (V2047, V2048) -> begin (V2049 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2019, V2048))(V2046))), case V2049 of {'Idris.Prelude.Types.Left', E3301} -> (fun (V2050) -> {'Idris.Prelude.Types.Left', V2050} end(E3301)); {'Idris.Prelude.Types.Right', E3302} -> (fun (V2051) -> begin (V2052 = (('un--nfToCFType'(V0, V2011, 1, V2051))(V2046))), case V2052 of {'Idris.Prelude.Types.Left', E3303} -> (fun (V2053) -> {'Idris.Prelude.Types.Left', V2053} end(E3303)); {'Idris.Prelude.Types.Right', E3304} -> (fun (V2054) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2047, V2054}} end(E3304)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3302)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3299, E3300)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2044, [], V1990))), case V2055 of {'Idris.Prelude.Types.Left', E3305} -> (fun (V2056) -> {'Idris.Prelude.Types.Left', V2056} end(E3305)); {'Idris.Prelude.Types.Right', E3306} -> (fun (V2057) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2043, V2057}} end(E3306)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3297, E3298)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3307} -> (fun (V2058) -> begin (V2059 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2019, V2058))(V1990))), case V2059 of {'Idris.Prelude.Types.Left', E3308} -> (fun (V2060) -> {'Idris.Prelude.Types.Left', V2060} end(E3308)); {'Idris.Prelude.Types.Right', E3309} -> (fun (V2061) -> begin (V2062 = (('un--nfToCFType'(V0, V2011, V2, V2061))(V1990))), case V2062 of {'Idris.Prelude.Types.Left', E3310} -> (fun (V2063) -> {'Idris.Prelude.Types.Left', V2063} end(E3310)); {'Idris.Prelude.Types.Right', E3311} -> (fun (V2064) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2064}} end(E3311)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3309)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3307)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3290)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3288)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3286)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3280, E3281, E3282, E3283, E3284)); {'Idris.Core.Value.NType', E3312} -> (fun (V2065) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E3312)); {'Idris.Core.Value.NErased', E3313, E3314} -> (fun (V2066, V2067) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E3313, E3314)); _ -> begin (V2069 = begin (V2068 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2068} end), case V2069 of {'Idris.Prelude.Types.Left', E3274} -> (fun (V2070) -> {'Idris.Prelude.Types.Left', V2070} end(E3274)); {'Idris.Prelude.Types.Right', E3275} -> (fun (V2071) -> begin (V2072 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V2071, {'Idris.Core.Env.Nil'}, V3, V1990))), case V2072 of {'Idris.Prelude.Types.Left', E3276} -> (fun (V2073) -> {'Idris.Prelude.Types.Left', V2073} end(E3276)); {'Idris.Prelude.Types.Right', E3277} -> (fun (V2074) -> begin (V2081 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2075) -> fun (V2076) -> fun (V2077) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2075, V2076, V2077)) end end end, fun (V2078) -> fun (V2079) -> fun (V2080) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2078, V2079, V2080)) end end end}, V2074, V1990))), case V2081 of {'Idris.Prelude.Types.Left', E3278} -> (fun (V2082) -> {'Idris.Prelude.Types.Left', V2082} end(E3278)); {'Idris.Prelude.Types.Right', E3279} -> (fun (V2083) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2083))))}, V1990)) end(E3279)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3277)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3275)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E3270, E3271, E3272, E3273)); _ -> fun (V2084) -> case V3 of {'Idris.Core.Value.NTCon', E3235, E3236, E3237, E3238, E3239} -> (fun (V2085, V2086, V2087, V2088, V2089) -> begin (V2091 = begin (V2090 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2090} end), case V2091 of {'Idris.Prelude.Types.Left', E3240} -> (fun (V2092) -> {'Idris.Prelude.Types.Left', V2092} end(E3240)); {'Idris.Prelude.Types.Right', E3241} -> (fun (V2093) -> begin (V2100 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2094) -> fun (V2095) -> fun (V2096) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2094, V2095, V2096)) end end end, fun (V2097) -> fun (V2098) -> fun (V2099) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2097, V2098, V2099)) end end end}, V2086, V2084))), case V2100 of {'Idris.Prelude.Types.Left', E3242} -> (fun (V2101) -> {'Idris.Prelude.Types.Left', V2101} end(E3242)); {'Idris.Prelude.Types.Right', E3243} -> (fun (V2102) -> begin (V2104 = (('un--getNArgs'(V0, V2093, V2102, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2103) -> ('Idris.Idris2.Builtin':'un--snd'(V2103)) end, V2089))))(V2084))), case V2104 of {'Idris.Prelude.Types.Left', E3244} -> (fun (V2105) -> {'Idris.Prelude.Types.Left', V2105} end(E3244)); {'Idris.Prelude.Types.Right', E3245} -> (fun (V2106) -> case V2106 of {'Idris.Compiler.CompileExpr.User', E3246, E3247} -> (fun (V2107, V2108) -> begin (V2110 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2109) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2093, V2109)) end, V2108, [], V2084))), case V2110 of {'Idris.Prelude.Types.Left', E3248} -> (fun (V2111) -> {'Idris.Prelude.Types.Left', V2111} end(E3248)); {'Idris.Prelude.Types.Right', E3249} -> (fun (V2112) -> begin (V2114 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2113) -> ('un--nfToCFType'(V0, V2085, V2, V2113)) end, V2112, [], V2084))), case V2114 of {'Idris.Prelude.Types.Left', E3250} -> (fun (V2115) -> {'Idris.Prelude.Types.Left', V2115} end(E3250)); {'Idris.Prelude.Types.Right', E3251} -> (fun (V2116) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2102, V2116}} end(E3251)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3249)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3246, E3247)); {'Idris.Compiler.CompileExpr.Struct', E3252, E3253} -> (fun (V2117, V2118) -> begin (V2129 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2119) -> fun (V2120) -> case V2119 of {'Idris.Builtin.MkPair', E3254, E3255} -> (fun (V2121, V2122) -> begin (V2123 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2093, V2122))(V2120))), case V2123 of {'Idris.Prelude.Types.Left', E3256} -> (fun (V2124) -> {'Idris.Prelude.Types.Left', V2124} end(E3256)); {'Idris.Prelude.Types.Right', E3257} -> (fun (V2125) -> begin (V2126 = (('un--nfToCFType'(V0, V2085, 1, V2125))(V2120))), case V2126 of {'Idris.Prelude.Types.Left', E3258} -> (fun (V2127) -> {'Idris.Prelude.Types.Left', V2127} end(E3258)); {'Idris.Prelude.Types.Right', E3259} -> (fun (V2128) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2121, V2128}} end(E3259)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3257)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3254, E3255)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2118, [], V2084))), case V2129 of {'Idris.Prelude.Types.Left', E3260} -> (fun (V2130) -> {'Idris.Prelude.Types.Left', V2130} end(E3260)); {'Idris.Prelude.Types.Right', E3261} -> (fun (V2131) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2117, V2131}} end(E3261)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3252, E3253)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3262} -> (fun (V2132) -> begin (V2133 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2093, V2132))(V2084))), case V2133 of {'Idris.Prelude.Types.Left', E3263} -> (fun (V2134) -> {'Idris.Prelude.Types.Left', V2134} end(E3263)); {'Idris.Prelude.Types.Right', E3264} -> (fun (V2135) -> begin (V2136 = (('un--nfToCFType'(V0, V2085, V2, V2135))(V2084))), case V2136 of {'Idris.Prelude.Types.Left', E3265} -> (fun (V2137) -> {'Idris.Prelude.Types.Left', V2137} end(E3265)); {'Idris.Prelude.Types.Right', E3266} -> (fun (V2138) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2138}} end(E3266)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3264)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3262)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3245)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3243)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3241)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3235, E3236, E3237, E3238, E3239)); {'Idris.Core.Value.NType', E3267} -> (fun (V2139) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E3267)); {'Idris.Core.Value.NErased', E3268, E3269} -> (fun (V2140, V2141) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E3268, E3269)); _ -> begin (V2143 = begin (V2142 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2142} end), case V2143 of {'Idris.Prelude.Types.Left', E3229} -> (fun (V2144) -> {'Idris.Prelude.Types.Left', V2144} end(E3229)); {'Idris.Prelude.Types.Right', E3230} -> (fun (V2145) -> begin (V2146 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V2145, {'Idris.Core.Env.Nil'}, V3, V2084))), case V2146 of {'Idris.Prelude.Types.Left', E3231} -> (fun (V2147) -> {'Idris.Prelude.Types.Left', V2147} end(E3231)); {'Idris.Prelude.Types.Right', E3232} -> (fun (V2148) -> begin (V2155 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2149) -> fun (V2150) -> fun (V2151) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2149, V2150, V2151)) end end end, fun (V2152) -> fun (V2153) -> fun (V2154) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2152, V2153, V2154)) end end end}, V2148, V2084))), case V2155 of {'Idris.Prelude.Types.Left', E3233} -> (fun (V2156) -> {'Idris.Prelude.Types.Left', V2156} end(E3233)); {'Idris.Prelude.Types.Right', E3234} -> (fun (V2157) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2157))))}, V2084)) end(E3234)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3232)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V2158) -> case V3 of {'Idris.Core.Value.NBind', E3370, E3371, E3372, E3373} -> (fun (V2159, V2160, V2161, V2162) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V2159, <<"Function types not allowed in a foreign struct"/utf8>>}, V2158)) end(E3370, E3371, E3372, E3373)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3335, E3336, E3337, E3338, E3339} -> (fun (V2163, V2164, V2165, V2166, V2167) -> begin (V2169 = begin (V2168 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2168} end), case V2169 of {'Idris.Prelude.Types.Left', E3340} -> (fun (V2170) -> {'Idris.Prelude.Types.Left', V2170} end(E3340)); {'Idris.Prelude.Types.Right', E3341} -> (fun (V2171) -> begin (V2178 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2172) -> fun (V2173) -> fun (V2174) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2172, V2173, V2174)) end end end, fun (V2175) -> fun (V2176) -> fun (V2177) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2175, V2176, V2177)) end end end}, V2164, V2158))), case V2178 of {'Idris.Prelude.Types.Left', E3342} -> (fun (V2179) -> {'Idris.Prelude.Types.Left', V2179} end(E3342)); {'Idris.Prelude.Types.Right', E3343} -> (fun (V2180) -> begin (V2182 = (('un--getNArgs'(V0, V2171, V2180, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2181) -> ('Idris.Idris2.Builtin':'un--snd'(V2181)) end, V2167))))(V2158))), case V2182 of {'Idris.Prelude.Types.Left', E3344} -> (fun (V2183) -> {'Idris.Prelude.Types.Left', V2183} end(E3344)); {'Idris.Prelude.Types.Right', E3345} -> (fun (V2184) -> case V2184 of {'Idris.Compiler.CompileExpr.User', E3346, E3347} -> (fun (V2185, V2186) -> begin (V2188 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2187) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2171, V2187)) end, V2186, [], V2158))), case V2188 of {'Idris.Prelude.Types.Left', E3348} -> (fun (V2189) -> {'Idris.Prelude.Types.Left', V2189} end(E3348)); {'Idris.Prelude.Types.Right', E3349} -> (fun (V2190) -> begin (V2192 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2191) -> ('un--nfToCFType'(V0, V2163, V2, V2191)) end, V2190, [], V2158))), case V2192 of {'Idris.Prelude.Types.Left', E3350} -> (fun (V2193) -> {'Idris.Prelude.Types.Left', V2193} end(E3350)); {'Idris.Prelude.Types.Right', E3351} -> (fun (V2194) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2180, V2194}} end(E3351)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3349)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3346, E3347)); {'Idris.Compiler.CompileExpr.Struct', E3352, E3353} -> (fun (V2195, V2196) -> begin (V2207 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2197) -> fun (V2198) -> case V2197 of {'Idris.Builtin.MkPair', E3354, E3355} -> (fun (V2199, V2200) -> begin (V2201 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2171, V2200))(V2198))), case V2201 of {'Idris.Prelude.Types.Left', E3356} -> (fun (V2202) -> {'Idris.Prelude.Types.Left', V2202} end(E3356)); {'Idris.Prelude.Types.Right', E3357} -> (fun (V2203) -> begin (V2204 = (('un--nfToCFType'(V0, V2163, 1, V2203))(V2198))), case V2204 of {'Idris.Prelude.Types.Left', E3358} -> (fun (V2205) -> {'Idris.Prelude.Types.Left', V2205} end(E3358)); {'Idris.Prelude.Types.Right', E3359} -> (fun (V2206) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2199, V2206}} end(E3359)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3357)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3354, E3355)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2196, [], V2158))), case V2207 of {'Idris.Prelude.Types.Left', E3360} -> (fun (V2208) -> {'Idris.Prelude.Types.Left', V2208} end(E3360)); {'Idris.Prelude.Types.Right', E3361} -> (fun (V2209) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2195, V2209}} end(E3361)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3352, E3353)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3362} -> (fun (V2210) -> begin (V2211 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2171, V2210))(V2158))), case V2211 of {'Idris.Prelude.Types.Left', E3363} -> (fun (V2212) -> {'Idris.Prelude.Types.Left', V2212} end(E3363)); {'Idris.Prelude.Types.Right', E3364} -> (fun (V2213) -> begin (V2214 = (('un--nfToCFType'(V0, V2163, V2, V2213))(V2158))), case V2214 of {'Idris.Prelude.Types.Left', E3365} -> (fun (V2215) -> {'Idris.Prelude.Types.Left', V2215} end(E3365)); {'Idris.Prelude.Types.Right', E3366} -> (fun (V2216) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2216}} end(E3366)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3364)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3362)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3345)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3343)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3341)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3335, E3336, E3337, E3338, E3339)); {'Idris.Core.Value.NType', E3367} -> (fun (V2217) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E3367)); {'Idris.Core.Value.NErased', E3368, E3369} -> (fun (V2218, V2219) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E3368, E3369)); _ -> begin (V2221 = begin (V2220 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2220} end), case V2221 of {'Idris.Prelude.Types.Left', E3329} -> (fun (V2222) -> {'Idris.Prelude.Types.Left', V2222} end(E3329)); {'Idris.Prelude.Types.Right', E3330} -> (fun (V2223) -> begin (V2224 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V2223, {'Idris.Core.Env.Nil'}, V3, V2158))), case V2224 of {'Idris.Prelude.Types.Left', E3331} -> (fun (V2225) -> {'Idris.Prelude.Types.Left', V2225} end(E3331)); {'Idris.Prelude.Types.Right', E3332} -> (fun (V2226) -> begin (V2233 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2227) -> fun (V2228) -> fun (V2229) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2227, V2228, V2229)) end end end, fun (V2230) -> fun (V2231) -> fun (V2232) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2230, V2231, V2232)) end end end}, V2226, V2158))), case V2233 of {'Idris.Prelude.Types.Left', E3333} -> (fun (V2234) -> {'Idris.Prelude.Types.Left', V2234} end(E3333)); {'Idris.Prelude.Types.Right', E3334} -> (fun (V2235) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2235))))}, V2158)) end(E3334)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3332)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3330)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V2236) -> case V3 of {'Idris.Core.Value.NTCon', E3194, E3195, E3196, E3197, E3198} -> (fun (V2237, V2238, V2239, V2240, V2241) -> begin (V2243 = begin (V2242 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2242} end), case V2243 of {'Idris.Prelude.Types.Left', E3199} -> (fun (V2244) -> {'Idris.Prelude.Types.Left', V2244} end(E3199)); {'Idris.Prelude.Types.Right', E3200} -> (fun (V2245) -> begin (V2252 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2246) -> fun (V2247) -> fun (V2248) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2246, V2247, V2248)) end end end, fun (V2249) -> fun (V2250) -> fun (V2251) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2249, V2250, V2251)) end end end}, V2238, V2236))), case V2252 of {'Idris.Prelude.Types.Left', E3201} -> (fun (V2253) -> {'Idris.Prelude.Types.Left', V2253} end(E3201)); {'Idris.Prelude.Types.Right', E3202} -> (fun (V2254) -> begin (V2256 = (('un--getNArgs'(V0, V2245, V2254, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2255) -> ('Idris.Idris2.Builtin':'un--snd'(V2255)) end, V2241))))(V2236))), case V2256 of {'Idris.Prelude.Types.Left', E3203} -> (fun (V2257) -> {'Idris.Prelude.Types.Left', V2257} end(E3203)); {'Idris.Prelude.Types.Right', E3204} -> (fun (V2258) -> case V2258 of {'Idris.Compiler.CompileExpr.User', E3205, E3206} -> (fun (V2259, V2260) -> begin (V2262 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2261) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2245, V2261)) end, V2260, [], V2236))), case V2262 of {'Idris.Prelude.Types.Left', E3207} -> (fun (V2263) -> {'Idris.Prelude.Types.Left', V2263} end(E3207)); {'Idris.Prelude.Types.Right', E3208} -> (fun (V2264) -> begin (V2266 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2265) -> ('un--nfToCFType'(V0, V2237, V2, V2265)) end, V2264, [], V2236))), case V2266 of {'Idris.Prelude.Types.Left', E3209} -> (fun (V2267) -> {'Idris.Prelude.Types.Left', V2267} end(E3209)); {'Idris.Prelude.Types.Right', E3210} -> (fun (V2268) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2254, V2268}} end(E3210)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3208)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3205, E3206)); {'Idris.Compiler.CompileExpr.Struct', E3211, E3212} -> (fun (V2269, V2270) -> begin (V2281 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2271) -> fun (V2272) -> case V2271 of {'Idris.Builtin.MkPair', E3213, E3214} -> (fun (V2273, V2274) -> begin (V2275 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2245, V2274))(V2272))), case V2275 of {'Idris.Prelude.Types.Left', E3215} -> (fun (V2276) -> {'Idris.Prelude.Types.Left', V2276} end(E3215)); {'Idris.Prelude.Types.Right', E3216} -> (fun (V2277) -> begin (V2278 = (('un--nfToCFType'(V0, V2237, 1, V2277))(V2272))), case V2278 of {'Idris.Prelude.Types.Left', E3217} -> (fun (V2279) -> {'Idris.Prelude.Types.Left', V2279} end(E3217)); {'Idris.Prelude.Types.Right', E3218} -> (fun (V2280) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2273, V2280}} end(E3218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3213, E3214)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2270, [], V2236))), case V2281 of {'Idris.Prelude.Types.Left', E3219} -> (fun (V2282) -> {'Idris.Prelude.Types.Left', V2282} end(E3219)); {'Idris.Prelude.Types.Right', E3220} -> (fun (V2283) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2269, V2283}} end(E3220)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3211, E3212)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3221} -> (fun (V2284) -> begin (V2285 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2245, V2284))(V2236))), case V2285 of {'Idris.Prelude.Types.Left', E3222} -> (fun (V2286) -> {'Idris.Prelude.Types.Left', V2286} end(E3222)); {'Idris.Prelude.Types.Right', E3223} -> (fun (V2287) -> begin (V2288 = (('un--nfToCFType'(V0, V2237, V2, V2287))(V2236))), case V2288 of {'Idris.Prelude.Types.Left', E3224} -> (fun (V2289) -> {'Idris.Prelude.Types.Left', V2289} end(E3224)); {'Idris.Prelude.Types.Right', E3225} -> (fun (V2290) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2290}} end(E3225)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3223)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3204)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3202)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3200)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3194, E3195, E3196, E3197, E3198)); {'Idris.Core.Value.NType', E3226} -> (fun (V2291) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E3226)); {'Idris.Core.Value.NErased', E3227, E3228} -> (fun (V2292, V2293) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E3227, E3228)); _ -> begin (V2295 = begin (V2294 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2294} end), case V2295 of {'Idris.Prelude.Types.Left', E3188} -> (fun (V2296) -> {'Idris.Prelude.Types.Left', V2296} end(E3188)); {'Idris.Prelude.Types.Right', E3189} -> (fun (V2297) -> begin (V2298 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V2297, {'Idris.Core.Env.Nil'}, V3, V2236))), case V2298 of {'Idris.Prelude.Types.Left', E3190} -> (fun (V2299) -> {'Idris.Prelude.Types.Left', V2299} end(E3190)); {'Idris.Prelude.Types.Right', E3191} -> (fun (V2300) -> begin (V2307 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2301) -> fun (V2302) -> fun (V2303) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2301, V2302, V2303)) end end end, fun (V2304) -> fun (V2305) -> fun (V2306) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2304, V2305, V2306)) end end end}, V2300, V2236))), case V2307 of {'Idris.Prelude.Types.Left', E3192} -> (fun (V2308) -> {'Idris.Prelude.Types.Left', V2308} end(E3192)); {'Idris.Prelude.Types.Right', E3193} -> (fun (V2309) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2309))))}, V2236)) end(E3193)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3191)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3189)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E3186, E3187)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E3082, E3083, E3084, E3085} -> (fun (V2310, V2311, V2312, V2313) -> fun (V2314) -> case V2312 of {'Idris.Core.TT.Pi', E3127, E3128, E3129, E3130} -> (fun (V2315, V2316, V2317, V2318) -> begin (V2320 = begin (V2319 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2319} end), case V2320 of {'Idris.Prelude.Types.Left', E3131} -> (fun (V2321) -> {'Idris.Prelude.Types.Left', V2321} end(E3131)); {'Idris.Prelude.Types.Right', E3132} -> (fun (V2322) -> begin (V2326 = begin (V2323 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2322, V2318))(V2314))), case V2323 of {'Idris.Prelude.Types.Left', E3133} -> (fun (V2324) -> {'Idris.Prelude.Types.Left', V2324} end(E3133)); {'Idris.Prelude.Types.Right', E3134} -> (fun (V2325) -> (('un--nfToCFType'(V0, V2310, 0, V2325))(V2314)) end(E3134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V2326 of {'Idris.Prelude.Types.Left', E3135} -> (fun (V2327) -> {'Idris.Prelude.Types.Left', V2327} end(E3135)); {'Idris.Prelude.Types.Right', E3136} -> (fun (V2328) -> begin (V2329 = (((V2313(V2322))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V2310, 0}))))(V2314))), case V2329 of {'Idris.Prelude.Types.Left', E3137} -> (fun (V2330) -> {'Idris.Prelude.Types.Left', V2330} end(E3137)); {'Idris.Prelude.Types.Right', E3138} -> (fun (V2331) -> begin (V2332 = (('un--nfToCFType'(V0, V2310, 0, V2331))(V2314))), case V2332 of {'Idris.Prelude.Types.Left', E3139} -> (fun (V2333) -> {'Idris.Prelude.Types.Left', V2333} end(E3139)); {'Idris.Prelude.Types.Right', E3140} -> (fun (V2334) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V2328, V2334}} end(E3140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3136)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3132)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3127, E3128, E3129, E3130)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3092, E3093, E3094, E3095, E3096} -> (fun (V2335, V2336, V2337, V2338, V2339) -> begin (V2341 = begin (V2340 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2340} end), case V2341 of {'Idris.Prelude.Types.Left', E3097} -> (fun (V2342) -> {'Idris.Prelude.Types.Left', V2342} end(E3097)); {'Idris.Prelude.Types.Right', E3098} -> (fun (V2343) -> begin (V2350 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2344) -> fun (V2345) -> fun (V2346) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2344, V2345, V2346)) end end end, fun (V2347) -> fun (V2348) -> fun (V2349) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2347, V2348, V2349)) end end end}, V2336, V2314))), case V2350 of {'Idris.Prelude.Types.Left', E3099} -> (fun (V2351) -> {'Idris.Prelude.Types.Left', V2351} end(E3099)); {'Idris.Prelude.Types.Right', E3100} -> (fun (V2352) -> begin (V2354 = (('un--getNArgs'(V0, V2343, V2352, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2353) -> ('Idris.Idris2.Builtin':'un--snd'(V2353)) end, V2339))))(V2314))), case V2354 of {'Idris.Prelude.Types.Left', E3101} -> (fun (V2355) -> {'Idris.Prelude.Types.Left', V2355} end(E3101)); {'Idris.Prelude.Types.Right', E3102} -> (fun (V2356) -> case V2356 of {'Idris.Compiler.CompileExpr.User', E3103, E3104} -> (fun (V2357, V2358) -> begin (V2360 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2359) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2343, V2359)) end, V2358, [], V2314))), case V2360 of {'Idris.Prelude.Types.Left', E3105} -> (fun (V2361) -> {'Idris.Prelude.Types.Left', V2361} end(E3105)); {'Idris.Prelude.Types.Right', E3106} -> (fun (V2362) -> begin (V2364 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2363) -> ('un--nfToCFType'(V0, V2335, V2, V2363)) end, V2362, [], V2314))), case V2364 of {'Idris.Prelude.Types.Left', E3107} -> (fun (V2365) -> {'Idris.Prelude.Types.Left', V2365} end(E3107)); {'Idris.Prelude.Types.Right', E3108} -> (fun (V2366) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2352, V2366}} end(E3108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3103, E3104)); {'Idris.Compiler.CompileExpr.Struct', E3109, E3110} -> (fun (V2367, V2368) -> begin (V2379 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2369) -> fun (V2370) -> case V2369 of {'Idris.Builtin.MkPair', E3111, E3112} -> (fun (V2371, V2372) -> begin (V2373 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2343, V2372))(V2370))), case V2373 of {'Idris.Prelude.Types.Left', E3113} -> (fun (V2374) -> {'Idris.Prelude.Types.Left', V2374} end(E3113)); {'Idris.Prelude.Types.Right', E3114} -> (fun (V2375) -> begin (V2376 = (('un--nfToCFType'(V0, V2335, 1, V2375))(V2370))), case V2376 of {'Idris.Prelude.Types.Left', E3115} -> (fun (V2377) -> {'Idris.Prelude.Types.Left', V2377} end(E3115)); {'Idris.Prelude.Types.Right', E3116} -> (fun (V2378) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2371, V2378}} end(E3116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3111, E3112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2368, [], V2314))), case V2379 of {'Idris.Prelude.Types.Left', E3117} -> (fun (V2380) -> {'Idris.Prelude.Types.Left', V2380} end(E3117)); {'Idris.Prelude.Types.Right', E3118} -> (fun (V2381) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2367, V2381}} end(E3118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3109, E3110)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3119} -> (fun (V2382) -> begin (V2383 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2343, V2382))(V2314))), case V2383 of {'Idris.Prelude.Types.Left', E3120} -> (fun (V2384) -> {'Idris.Prelude.Types.Left', V2384} end(E3120)); {'Idris.Prelude.Types.Right', E3121} -> (fun (V2385) -> begin (V2386 = (('un--nfToCFType'(V0, V2335, V2, V2385))(V2314))), case V2386 of {'Idris.Prelude.Types.Left', E3122} -> (fun (V2387) -> {'Idris.Prelude.Types.Left', V2387} end(E3122)); {'Idris.Prelude.Types.Right', E3123} -> (fun (V2388) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2388}} end(E3123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3098)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3092, E3093, E3094, E3095, E3096)); {'Idris.Core.Value.NType', E3124} -> (fun (V2389) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E3124)); {'Idris.Core.Value.NErased', E3125, E3126} -> (fun (V2390, V2391) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E3125, E3126)); _ -> begin (V2393 = begin (V2392 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2392} end), case V2393 of {'Idris.Prelude.Types.Left', E3086} -> (fun (V2394) -> {'Idris.Prelude.Types.Left', V2394} end(E3086)); {'Idris.Prelude.Types.Right', E3087} -> (fun (V2395) -> begin (V2396 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V2395, {'Idris.Core.Env.Nil'}, V3, V2314))), case V2396 of {'Idris.Prelude.Types.Left', E3088} -> (fun (V2397) -> {'Idris.Prelude.Types.Left', V2397} end(E3088)); {'Idris.Prelude.Types.Right', E3089} -> (fun (V2398) -> begin (V2405 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2399) -> fun (V2400) -> fun (V2401) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2399, V2400, V2401)) end end end, fun (V2402) -> fun (V2403) -> fun (V2404) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2402, V2403, V2404)) end end end}, V2398, V2314))), case V2405 of {'Idris.Prelude.Types.Left', E3090} -> (fun (V2406) -> {'Idris.Prelude.Types.Left', V2406} end(E3090)); {'Idris.Prelude.Types.Right', E3091} -> (fun (V2407) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2407))))}, V2314)) end(E3091)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3089)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3087)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E3082, E3083, E3084, E3085)); _ -> fun (V2408) -> case V3 of {'Idris.Core.Value.NTCon', E3047, E3048, E3049, E3050, E3051} -> (fun (V2409, V2410, V2411, V2412, V2413) -> begin (V2415 = begin (V2414 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2414} end), case V2415 of {'Idris.Prelude.Types.Left', E3052} -> (fun (V2416) -> {'Idris.Prelude.Types.Left', V2416} end(E3052)); {'Idris.Prelude.Types.Right', E3053} -> (fun (V2417) -> begin (V2424 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2418) -> fun (V2419) -> fun (V2420) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2418, V2419, V2420)) end end end, fun (V2421) -> fun (V2422) -> fun (V2423) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2421, V2422, V2423)) end end end}, V2410, V2408))), case V2424 of {'Idris.Prelude.Types.Left', E3054} -> (fun (V2425) -> {'Idris.Prelude.Types.Left', V2425} end(E3054)); {'Idris.Prelude.Types.Right', E3055} -> (fun (V2426) -> begin (V2428 = (('un--getNArgs'(V0, V2417, V2426, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2427) -> ('Idris.Idris2.Builtin':'un--snd'(V2427)) end, V2413))))(V2408))), case V2428 of {'Idris.Prelude.Types.Left', E3056} -> (fun (V2429) -> {'Idris.Prelude.Types.Left', V2429} end(E3056)); {'Idris.Prelude.Types.Right', E3057} -> (fun (V2430) -> case V2430 of {'Idris.Compiler.CompileExpr.User', E3058, E3059} -> (fun (V2431, V2432) -> begin (V2434 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2433) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2417, V2433)) end, V2432, [], V2408))), case V2434 of {'Idris.Prelude.Types.Left', E3060} -> (fun (V2435) -> {'Idris.Prelude.Types.Left', V2435} end(E3060)); {'Idris.Prelude.Types.Right', E3061} -> (fun (V2436) -> begin (V2438 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2437) -> ('un--nfToCFType'(V0, V2409, V2, V2437)) end, V2436, [], V2408))), case V2438 of {'Idris.Prelude.Types.Left', E3062} -> (fun (V2439) -> {'Idris.Prelude.Types.Left', V2439} end(E3062)); {'Idris.Prelude.Types.Right', E3063} -> (fun (V2440) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2426, V2440}} end(E3063)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3061)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3058, E3059)); {'Idris.Compiler.CompileExpr.Struct', E3064, E3065} -> (fun (V2441, V2442) -> begin (V2453 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2443) -> fun (V2444) -> case V2443 of {'Idris.Builtin.MkPair', E3066, E3067} -> (fun (V2445, V2446) -> begin (V2447 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2417, V2446))(V2444))), case V2447 of {'Idris.Prelude.Types.Left', E3068} -> (fun (V2448) -> {'Idris.Prelude.Types.Left', V2448} end(E3068)); {'Idris.Prelude.Types.Right', E3069} -> (fun (V2449) -> begin (V2450 = (('un--nfToCFType'(V0, V2409, 1, V2449))(V2444))), case V2450 of {'Idris.Prelude.Types.Left', E3070} -> (fun (V2451) -> {'Idris.Prelude.Types.Left', V2451} end(E3070)); {'Idris.Prelude.Types.Right', E3071} -> (fun (V2452) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2445, V2452}} end(E3071)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3069)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3066, E3067)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2442, [], V2408))), case V2453 of {'Idris.Prelude.Types.Left', E3072} -> (fun (V2454) -> {'Idris.Prelude.Types.Left', V2454} end(E3072)); {'Idris.Prelude.Types.Right', E3073} -> (fun (V2455) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2441, V2455}} end(E3073)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3064, E3065)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3074} -> (fun (V2456) -> begin (V2457 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2417, V2456))(V2408))), case V2457 of {'Idris.Prelude.Types.Left', E3075} -> (fun (V2458) -> {'Idris.Prelude.Types.Left', V2458} end(E3075)); {'Idris.Prelude.Types.Right', E3076} -> (fun (V2459) -> begin (V2460 = (('un--nfToCFType'(V0, V2409, V2, V2459))(V2408))), case V2460 of {'Idris.Prelude.Types.Left', E3077} -> (fun (V2461) -> {'Idris.Prelude.Types.Left', V2461} end(E3077)); {'Idris.Prelude.Types.Right', E3078} -> (fun (V2462) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2462}} end(E3078)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3076)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3074)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3057)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3055)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3053)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3047, E3048, E3049, E3050, E3051)); {'Idris.Core.Value.NType', E3079} -> (fun (V2463) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E3079)); {'Idris.Core.Value.NErased', E3080, E3081} -> (fun (V2464, V2465) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E3080, E3081)); _ -> begin (V2467 = begin (V2466 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2466} end), case V2467 of {'Idris.Prelude.Types.Left', E3041} -> (fun (V2468) -> {'Idris.Prelude.Types.Left', V2468} end(E3041)); {'Idris.Prelude.Types.Right', E3042} -> (fun (V2469) -> begin (V2470 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V2469, {'Idris.Core.Env.Nil'}, V3, V2408))), case V2470 of {'Idris.Prelude.Types.Left', E3043} -> (fun (V2471) -> {'Idris.Prelude.Types.Left', V2471} end(E3043)); {'Idris.Prelude.Types.Right', E3044} -> (fun (V2472) -> begin (V2479 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2473) -> fun (V2474) -> fun (V2475) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2473, V2474, V2475)) end end end, fun (V2476) -> fun (V2477) -> fun (V2478) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2476, V2477, V2478)) end end end}, V2472, V2408))), case V2479 of {'Idris.Prelude.Types.Left', E3045} -> (fun (V2480) -> {'Idris.Prelude.Types.Left', V2480} end(E3045)); {'Idris.Prelude.Types.Right', E3046} -> (fun (V2481) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2481))))}, V2408)) end(E3046)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3044)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3042)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V2482) -> case V3 of {'Idris.Core.Value.NBind', E3182, E3183, E3184, E3185} -> (fun (V2483, V2484, V2485, V2486) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V2483, <<"Function types not allowed in a foreign struct"/utf8>>}, V2482)) end(E3182, E3183, E3184, E3185)); _ -> case V3 of {'Idris.Core.Value.NTCon', E3147, E3148, E3149, E3150, E3151} -> (fun (V2487, V2488, V2489, V2490, V2491) -> begin (V2493 = begin (V2492 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2492} end), case V2493 of {'Idris.Prelude.Types.Left', E3152} -> (fun (V2494) -> {'Idris.Prelude.Types.Left', V2494} end(E3152)); {'Idris.Prelude.Types.Right', E3153} -> (fun (V2495) -> begin (V2502 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2496) -> fun (V2497) -> fun (V2498) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2496, V2497, V2498)) end end end, fun (V2499) -> fun (V2500) -> fun (V2501) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2499, V2500, V2501)) end end end}, V2488, V2482))), case V2502 of {'Idris.Prelude.Types.Left', E3154} -> (fun (V2503) -> {'Idris.Prelude.Types.Left', V2503} end(E3154)); {'Idris.Prelude.Types.Right', E3155} -> (fun (V2504) -> begin (V2506 = (('un--getNArgs'(V0, V2495, V2504, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2505) -> ('Idris.Idris2.Builtin':'un--snd'(V2505)) end, V2491))))(V2482))), case V2506 of {'Idris.Prelude.Types.Left', E3156} -> (fun (V2507) -> {'Idris.Prelude.Types.Left', V2507} end(E3156)); {'Idris.Prelude.Types.Right', E3157} -> (fun (V2508) -> case V2508 of {'Idris.Compiler.CompileExpr.User', E3158, E3159} -> (fun (V2509, V2510) -> begin (V2512 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2511) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2495, V2511)) end, V2510, [], V2482))), case V2512 of {'Idris.Prelude.Types.Left', E3160} -> (fun (V2513) -> {'Idris.Prelude.Types.Left', V2513} end(E3160)); {'Idris.Prelude.Types.Right', E3161} -> (fun (V2514) -> begin (V2516 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2515) -> ('un--nfToCFType'(V0, V2487, V2, V2515)) end, V2514, [], V2482))), case V2516 of {'Idris.Prelude.Types.Left', E3162} -> (fun (V2517) -> {'Idris.Prelude.Types.Left', V2517} end(E3162)); {'Idris.Prelude.Types.Right', E3163} -> (fun (V2518) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2504, V2518}} end(E3163)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3158, E3159)); {'Idris.Compiler.CompileExpr.Struct', E3164, E3165} -> (fun (V2519, V2520) -> begin (V2531 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2521) -> fun (V2522) -> case V2521 of {'Idris.Builtin.MkPair', E3166, E3167} -> (fun (V2523, V2524) -> begin (V2525 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2495, V2524))(V2522))), case V2525 of {'Idris.Prelude.Types.Left', E3168} -> (fun (V2526) -> {'Idris.Prelude.Types.Left', V2526} end(E3168)); {'Idris.Prelude.Types.Right', E3169} -> (fun (V2527) -> begin (V2528 = (('un--nfToCFType'(V0, V2487, 1, V2527))(V2522))), case V2528 of {'Idris.Prelude.Types.Left', E3170} -> (fun (V2529) -> {'Idris.Prelude.Types.Left', V2529} end(E3170)); {'Idris.Prelude.Types.Right', E3171} -> (fun (V2530) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2523, V2530}} end(E3171)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3166, E3167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2520, [], V2482))), case V2531 of {'Idris.Prelude.Types.Left', E3172} -> (fun (V2532) -> {'Idris.Prelude.Types.Left', V2532} end(E3172)); {'Idris.Prelude.Types.Right', E3173} -> (fun (V2533) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2519, V2533}} end(E3173)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3164, E3165)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3174} -> (fun (V2534) -> begin (V2535 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2495, V2534))(V2482))), case V2535 of {'Idris.Prelude.Types.Left', E3175} -> (fun (V2536) -> {'Idris.Prelude.Types.Left', V2536} end(E3175)); {'Idris.Prelude.Types.Right', E3176} -> (fun (V2537) -> begin (V2538 = (('un--nfToCFType'(V0, V2487, V2, V2537))(V2482))), case V2538 of {'Idris.Prelude.Types.Left', E3177} -> (fun (V2539) -> {'Idris.Prelude.Types.Left', V2539} end(E3177)); {'Idris.Prelude.Types.Right', E3178} -> (fun (V2540) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2540}} end(E3178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3147, E3148, E3149, E3150, E3151)); {'Idris.Core.Value.NType', E3179} -> (fun (V2541) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E3179)); {'Idris.Core.Value.NErased', E3180, E3181} -> (fun (V2542, V2543) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E3180, E3181)); _ -> begin (V2545 = begin (V2544 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2544} end), case V2545 of {'Idris.Prelude.Types.Left', E3141} -> (fun (V2546) -> {'Idris.Prelude.Types.Left', V2546} end(E3141)); {'Idris.Prelude.Types.Right', E3142} -> (fun (V2547) -> begin (V2548 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V2547, {'Idris.Core.Env.Nil'}, V3, V2482))), case V2548 of {'Idris.Prelude.Types.Left', E3143} -> (fun (V2549) -> {'Idris.Prelude.Types.Left', V2549} end(E3143)); {'Idris.Prelude.Types.Right', E3144} -> (fun (V2550) -> begin (V2557 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2551) -> fun (V2552) -> fun (V2553) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2551, V2552, V2553)) end end end, fun (V2554) -> fun (V2555) -> fun (V2556) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2554, V2555, V2556)) end end end}, V2550, V2482))), case V2557 of {'Idris.Prelude.Types.Left', E3145} -> (fun (V2558) -> {'Idris.Prelude.Types.Left', V2558} end(E3145)); {'Idris.Prelude.Types.Right', E3146} -> (fun (V2559) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2559))))}, V2482)) end(E3146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V2560) -> case V3 of {'Idris.Core.Value.NTCon', E3006, E3007, E3008, E3009, E3010} -> (fun (V2561, V2562, V2563, V2564, V2565) -> begin (V2567 = begin (V2566 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2566} end), case V2567 of {'Idris.Prelude.Types.Left', E3011} -> (fun (V2568) -> {'Idris.Prelude.Types.Left', V2568} end(E3011)); {'Idris.Prelude.Types.Right', E3012} -> (fun (V2569) -> begin (V2576 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2570) -> fun (V2571) -> fun (V2572) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2570, V2571, V2572)) end end end, fun (V2573) -> fun (V2574) -> fun (V2575) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2573, V2574, V2575)) end end end}, V2562, V2560))), case V2576 of {'Idris.Prelude.Types.Left', E3013} -> (fun (V2577) -> {'Idris.Prelude.Types.Left', V2577} end(E3013)); {'Idris.Prelude.Types.Right', E3014} -> (fun (V2578) -> begin (V2580 = (('un--getNArgs'(V0, V2569, V2578, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2579) -> ('Idris.Idris2.Builtin':'un--snd'(V2579)) end, V2565))))(V2560))), case V2580 of {'Idris.Prelude.Types.Left', E3015} -> (fun (V2581) -> {'Idris.Prelude.Types.Left', V2581} end(E3015)); {'Idris.Prelude.Types.Right', E3016} -> (fun (V2582) -> case V2582 of {'Idris.Compiler.CompileExpr.User', E3017, E3018} -> (fun (V2583, V2584) -> begin (V2586 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2585) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2569, V2585)) end, V2584, [], V2560))), case V2586 of {'Idris.Prelude.Types.Left', E3019} -> (fun (V2587) -> {'Idris.Prelude.Types.Left', V2587} end(E3019)); {'Idris.Prelude.Types.Right', E3020} -> (fun (V2588) -> begin (V2590 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2589) -> ('un--nfToCFType'(V0, V2561, V2, V2589)) end, V2588, [], V2560))), case V2590 of {'Idris.Prelude.Types.Left', E3021} -> (fun (V2591) -> {'Idris.Prelude.Types.Left', V2591} end(E3021)); {'Idris.Prelude.Types.Right', E3022} -> (fun (V2592) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2578, V2592}} end(E3022)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3020)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3017, E3018)); {'Idris.Compiler.CompileExpr.Struct', E3023, E3024} -> (fun (V2593, V2594) -> begin (V2605 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2595) -> fun (V2596) -> case V2595 of {'Idris.Builtin.MkPair', E3025, E3026} -> (fun (V2597, V2598) -> begin (V2599 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2569, V2598))(V2596))), case V2599 of {'Idris.Prelude.Types.Left', E3027} -> (fun (V2600) -> {'Idris.Prelude.Types.Left', V2600} end(E3027)); {'Idris.Prelude.Types.Right', E3028} -> (fun (V2601) -> begin (V2602 = (('un--nfToCFType'(V0, V2561, 1, V2601))(V2596))), case V2602 of {'Idris.Prelude.Types.Left', E3029} -> (fun (V2603) -> {'Idris.Prelude.Types.Left', V2603} end(E3029)); {'Idris.Prelude.Types.Right', E3030} -> (fun (V2604) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2597, V2604}} end(E3030)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3028)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3025, E3026)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2594, [], V2560))), case V2605 of {'Idris.Prelude.Types.Left', E3031} -> (fun (V2606) -> {'Idris.Prelude.Types.Left', V2606} end(E3031)); {'Idris.Prelude.Types.Right', E3032} -> (fun (V2607) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2593, V2607}} end(E3032)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3023, E3024)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E3033} -> (fun (V2608) -> begin (V2609 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2569, V2608))(V2560))), case V2609 of {'Idris.Prelude.Types.Left', E3034} -> (fun (V2610) -> {'Idris.Prelude.Types.Left', V2610} end(E3034)); {'Idris.Prelude.Types.Right', E3035} -> (fun (V2611) -> begin (V2612 = (('un--nfToCFType'(V0, V2561, V2, V2611))(V2560))), case V2612 of {'Idris.Prelude.Types.Left', E3036} -> (fun (V2613) -> {'Idris.Prelude.Types.Left', V2613} end(E3036)); {'Idris.Prelude.Types.Right', E3037} -> (fun (V2614) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2614}} end(E3037)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3035)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3033)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3016)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3014)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3012)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3006, E3007, E3008, E3009, E3010)); {'Idris.Core.Value.NType', E3038} -> (fun (V2615) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E3038)); {'Idris.Core.Value.NErased', E3039, E3040} -> (fun (V2616, V2617) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E3039, E3040)); _ -> begin (V2619 = begin (V2618 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2618} end), case V2619 of {'Idris.Prelude.Types.Left', E3000} -> (fun (V2620) -> {'Idris.Prelude.Types.Left', V2620} end(E3000)); {'Idris.Prelude.Types.Right', E3001} -> (fun (V2621) -> begin (V2622 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V2621, {'Idris.Core.Env.Nil'}, V3, V2560))), case V2622 of {'Idris.Prelude.Types.Left', E3002} -> (fun (V2623) -> {'Idris.Prelude.Types.Left', V2623} end(E3002)); {'Idris.Prelude.Types.Right', E3003} -> (fun (V2624) -> begin (V2631 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2625) -> fun (V2626) -> fun (V2627) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2625, V2626, V2627)) end end end, fun (V2628) -> fun (V2629) -> fun (V2630) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2628, V2629, V2630)) end end end}, V2624, V2560))), case V2631 of {'Idris.Prelude.Types.Left', E3004} -> (fun (V2632) -> {'Idris.Prelude.Types.Left', V2632} end(E3004)); {'Idris.Prelude.Types.Right', E3005} -> (fun (V2633) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2633))))}, V2560)) end(E3005)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3003)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3001)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end; _ -> case V3 of {'Idris.Core.Value.NPrimVal', E2062, E2063} -> (fun (V2634, V2635) -> case V2635 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V2636) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V2637) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V2638) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E2146, E2147, E2148, E2149} -> (fun (V2639, V2640, V2641, V2642) -> fun (V2643) -> case V2641 of {'Idris.Core.TT.Pi', E2191, E2192, E2193, E2194} -> (fun (V2644, V2645, V2646, V2647) -> begin (V2649 = begin (V2648 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2648} end), case V2649 of {'Idris.Prelude.Types.Left', E2195} -> (fun (V2650) -> {'Idris.Prelude.Types.Left', V2650} end(E2195)); {'Idris.Prelude.Types.Right', E2196} -> (fun (V2651) -> begin (V2655 = begin (V2652 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2651, V2647))(V2643))), case V2652 of {'Idris.Prelude.Types.Left', E2197} -> (fun (V2653) -> {'Idris.Prelude.Types.Left', V2653} end(E2197)); {'Idris.Prelude.Types.Right', E2198} -> (fun (V2654) -> (('un--nfToCFType'(V0, V2639, 0, V2654))(V2643)) end(E2198)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V2655 of {'Idris.Prelude.Types.Left', E2199} -> (fun (V2656) -> {'Idris.Prelude.Types.Left', V2656} end(E2199)); {'Idris.Prelude.Types.Right', E2200} -> (fun (V2657) -> begin (V2658 = (((V2642(V2651))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V2639, 0}))))(V2643))), case V2658 of {'Idris.Prelude.Types.Left', E2201} -> (fun (V2659) -> {'Idris.Prelude.Types.Left', V2659} end(E2201)); {'Idris.Prelude.Types.Right', E2202} -> (fun (V2660) -> begin (V2661 = (('un--nfToCFType'(V0, V2639, 0, V2660))(V2643))), case V2661 of {'Idris.Prelude.Types.Left', E2203} -> (fun (V2662) -> {'Idris.Prelude.Types.Left', V2662} end(E2203)); {'Idris.Prelude.Types.Right', E2204} -> (fun (V2663) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V2657, V2663}} end(E2204)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2202)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2200)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2196)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2191, E2192, E2193, E2194)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2156, E2157, E2158, E2159, E2160} -> (fun (V2664, V2665, V2666, V2667, V2668) -> begin (V2670 = begin (V2669 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2669} end), case V2670 of {'Idris.Prelude.Types.Left', E2161} -> (fun (V2671) -> {'Idris.Prelude.Types.Left', V2671} end(E2161)); {'Idris.Prelude.Types.Right', E2162} -> (fun (V2672) -> begin (V2679 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2673) -> fun (V2674) -> fun (V2675) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2673, V2674, V2675)) end end end, fun (V2676) -> fun (V2677) -> fun (V2678) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2676, V2677, V2678)) end end end}, V2665, V2643))), case V2679 of {'Idris.Prelude.Types.Left', E2163} -> (fun (V2680) -> {'Idris.Prelude.Types.Left', V2680} end(E2163)); {'Idris.Prelude.Types.Right', E2164} -> (fun (V2681) -> begin (V2683 = (('un--getNArgs'(V0, V2672, V2681, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2682) -> ('Idris.Idris2.Builtin':'un--snd'(V2682)) end, V2668))))(V2643))), case V2683 of {'Idris.Prelude.Types.Left', E2165} -> (fun (V2684) -> {'Idris.Prelude.Types.Left', V2684} end(E2165)); {'Idris.Prelude.Types.Right', E2166} -> (fun (V2685) -> case V2685 of {'Idris.Compiler.CompileExpr.User', E2167, E2168} -> (fun (V2686, V2687) -> begin (V2689 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2688) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2672, V2688)) end, V2687, [], V2643))), case V2689 of {'Idris.Prelude.Types.Left', E2169} -> (fun (V2690) -> {'Idris.Prelude.Types.Left', V2690} end(E2169)); {'Idris.Prelude.Types.Right', E2170} -> (fun (V2691) -> begin (V2693 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2692) -> ('un--nfToCFType'(V0, V2664, V2, V2692)) end, V2691, [], V2643))), case V2693 of {'Idris.Prelude.Types.Left', E2171} -> (fun (V2694) -> {'Idris.Prelude.Types.Left', V2694} end(E2171)); {'Idris.Prelude.Types.Right', E2172} -> (fun (V2695) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2681, V2695}} end(E2172)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2170)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2167, E2168)); {'Idris.Compiler.CompileExpr.Struct', E2173, E2174} -> (fun (V2696, V2697) -> begin (V2708 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2698) -> fun (V2699) -> case V2698 of {'Idris.Builtin.MkPair', E2175, E2176} -> (fun (V2700, V2701) -> begin (V2702 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2672, V2701))(V2699))), case V2702 of {'Idris.Prelude.Types.Left', E2177} -> (fun (V2703) -> {'Idris.Prelude.Types.Left', V2703} end(E2177)); {'Idris.Prelude.Types.Right', E2178} -> (fun (V2704) -> begin (V2705 = (('un--nfToCFType'(V0, V2664, 1, V2704))(V2699))), case V2705 of {'Idris.Prelude.Types.Left', E2179} -> (fun (V2706) -> {'Idris.Prelude.Types.Left', V2706} end(E2179)); {'Idris.Prelude.Types.Right', E2180} -> (fun (V2707) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2700, V2707}} end(E2180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2175, E2176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2697, [], V2643))), case V2708 of {'Idris.Prelude.Types.Left', E2181} -> (fun (V2709) -> {'Idris.Prelude.Types.Left', V2709} end(E2181)); {'Idris.Prelude.Types.Right', E2182} -> (fun (V2710) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2696, V2710}} end(E2182)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2173, E2174)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2183} -> (fun (V2711) -> begin (V2712 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2672, V2711))(V2643))), case V2712 of {'Idris.Prelude.Types.Left', E2184} -> (fun (V2713) -> {'Idris.Prelude.Types.Left', V2713} end(E2184)); {'Idris.Prelude.Types.Right', E2185} -> (fun (V2714) -> begin (V2715 = (('un--nfToCFType'(V0, V2664, V2, V2714))(V2643))), case V2715 of {'Idris.Prelude.Types.Left', E2186} -> (fun (V2716) -> {'Idris.Prelude.Types.Left', V2716} end(E2186)); {'Idris.Prelude.Types.Right', E2187} -> (fun (V2717) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2717}} end(E2187)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2185)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2183)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2162)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2156, E2157, E2158, E2159, E2160)); {'Idris.Core.Value.NType', E2188} -> (fun (V2718) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2188)); {'Idris.Core.Value.NErased', E2189, E2190} -> (fun (V2719, V2720) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2189, E2190)); _ -> begin (V2722 = begin (V2721 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2721} end), case V2722 of {'Idris.Prelude.Types.Left', E2150} -> (fun (V2723) -> {'Idris.Prelude.Types.Left', V2723} end(E2150)); {'Idris.Prelude.Types.Right', E2151} -> (fun (V2724) -> begin (V2725 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V2724, {'Idris.Core.Env.Nil'}, V3, V2643))), case V2725 of {'Idris.Prelude.Types.Left', E2152} -> (fun (V2726) -> {'Idris.Prelude.Types.Left', V2726} end(E2152)); {'Idris.Prelude.Types.Right', E2153} -> (fun (V2727) -> begin (V2734 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2728) -> fun (V2729) -> fun (V2730) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2728, V2729, V2730)) end end end, fun (V2731) -> fun (V2732) -> fun (V2733) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2731, V2732, V2733)) end end end}, V2727, V2643))), case V2734 of {'Idris.Prelude.Types.Left', E2154} -> (fun (V2735) -> {'Idris.Prelude.Types.Left', V2735} end(E2154)); {'Idris.Prelude.Types.Right', E2155} -> (fun (V2736) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2736))))}, V2643)) end(E2155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E2146, E2147, E2148, E2149)); _ -> fun (V2737) -> case V3 of {'Idris.Core.Value.NTCon', E2111, E2112, E2113, E2114, E2115} -> (fun (V2738, V2739, V2740, V2741, V2742) -> begin (V2744 = begin (V2743 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2743} end), case V2744 of {'Idris.Prelude.Types.Left', E2116} -> (fun (V2745) -> {'Idris.Prelude.Types.Left', V2745} end(E2116)); {'Idris.Prelude.Types.Right', E2117} -> (fun (V2746) -> begin (V2753 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2747) -> fun (V2748) -> fun (V2749) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2747, V2748, V2749)) end end end, fun (V2750) -> fun (V2751) -> fun (V2752) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2750, V2751, V2752)) end end end}, V2739, V2737))), case V2753 of {'Idris.Prelude.Types.Left', E2118} -> (fun (V2754) -> {'Idris.Prelude.Types.Left', V2754} end(E2118)); {'Idris.Prelude.Types.Right', E2119} -> (fun (V2755) -> begin (V2757 = (('un--getNArgs'(V0, V2746, V2755, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2756) -> ('Idris.Idris2.Builtin':'un--snd'(V2756)) end, V2742))))(V2737))), case V2757 of {'Idris.Prelude.Types.Left', E2120} -> (fun (V2758) -> {'Idris.Prelude.Types.Left', V2758} end(E2120)); {'Idris.Prelude.Types.Right', E2121} -> (fun (V2759) -> case V2759 of {'Idris.Compiler.CompileExpr.User', E2122, E2123} -> (fun (V2760, V2761) -> begin (V2763 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2762) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2746, V2762)) end, V2761, [], V2737))), case V2763 of {'Idris.Prelude.Types.Left', E2124} -> (fun (V2764) -> {'Idris.Prelude.Types.Left', V2764} end(E2124)); {'Idris.Prelude.Types.Right', E2125} -> (fun (V2765) -> begin (V2767 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2766) -> ('un--nfToCFType'(V0, V2738, V2, V2766)) end, V2765, [], V2737))), case V2767 of {'Idris.Prelude.Types.Left', E2126} -> (fun (V2768) -> {'Idris.Prelude.Types.Left', V2768} end(E2126)); {'Idris.Prelude.Types.Right', E2127} -> (fun (V2769) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2755, V2769}} end(E2127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2122, E2123)); {'Idris.Compiler.CompileExpr.Struct', E2128, E2129} -> (fun (V2770, V2771) -> begin (V2782 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2772) -> fun (V2773) -> case V2772 of {'Idris.Builtin.MkPair', E2130, E2131} -> (fun (V2774, V2775) -> begin (V2776 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2746, V2775))(V2773))), case V2776 of {'Idris.Prelude.Types.Left', E2132} -> (fun (V2777) -> {'Idris.Prelude.Types.Left', V2777} end(E2132)); {'Idris.Prelude.Types.Right', E2133} -> (fun (V2778) -> begin (V2779 = (('un--nfToCFType'(V0, V2738, 1, V2778))(V2773))), case V2779 of {'Idris.Prelude.Types.Left', E2134} -> (fun (V2780) -> {'Idris.Prelude.Types.Left', V2780} end(E2134)); {'Idris.Prelude.Types.Right', E2135} -> (fun (V2781) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2774, V2781}} end(E2135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2130, E2131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2771, [], V2737))), case V2782 of {'Idris.Prelude.Types.Left', E2136} -> (fun (V2783) -> {'Idris.Prelude.Types.Left', V2783} end(E2136)); {'Idris.Prelude.Types.Right', E2137} -> (fun (V2784) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2770, V2784}} end(E2137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2128, E2129)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2138} -> (fun (V2785) -> begin (V2786 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2746, V2785))(V2737))), case V2786 of {'Idris.Prelude.Types.Left', E2139} -> (fun (V2787) -> {'Idris.Prelude.Types.Left', V2787} end(E2139)); {'Idris.Prelude.Types.Right', E2140} -> (fun (V2788) -> begin (V2789 = (('un--nfToCFType'(V0, V2738, V2, V2788))(V2737))), case V2789 of {'Idris.Prelude.Types.Left', E2141} -> (fun (V2790) -> {'Idris.Prelude.Types.Left', V2790} end(E2141)); {'Idris.Prelude.Types.Right', E2142} -> (fun (V2791) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2791}} end(E2142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2117)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2111, E2112, E2113, E2114, E2115)); {'Idris.Core.Value.NType', E2143} -> (fun (V2792) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2143)); {'Idris.Core.Value.NErased', E2144, E2145} -> (fun (V2793, V2794) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2144, E2145)); _ -> begin (V2796 = begin (V2795 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2795} end), case V2796 of {'Idris.Prelude.Types.Left', E2105} -> (fun (V2797) -> {'Idris.Prelude.Types.Left', V2797} end(E2105)); {'Idris.Prelude.Types.Right', E2106} -> (fun (V2798) -> begin (V2799 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V2798, {'Idris.Core.Env.Nil'}, V3, V2737))), case V2799 of {'Idris.Prelude.Types.Left', E2107} -> (fun (V2800) -> {'Idris.Prelude.Types.Left', V2800} end(E2107)); {'Idris.Prelude.Types.Right', E2108} -> (fun (V2801) -> begin (V2808 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2802) -> fun (V2803) -> fun (V2804) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2802, V2803, V2804)) end end end, fun (V2805) -> fun (V2806) -> fun (V2807) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2805, V2806, V2807)) end end end}, V2801, V2737))), case V2808 of {'Idris.Prelude.Types.Left', E2109} -> (fun (V2809) -> {'Idris.Prelude.Types.Left', V2809} end(E2109)); {'Idris.Prelude.Types.Right', E2110} -> (fun (V2810) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2810))))}, V2737)) end(E2110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V2811) -> case V3 of {'Idris.Core.Value.NBind', E2246, E2247, E2248, E2249} -> (fun (V2812, V2813, V2814, V2815) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V2812, <<"Function types not allowed in a foreign struct"/utf8>>}, V2811)) end(E2246, E2247, E2248, E2249)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2211, E2212, E2213, E2214, E2215} -> (fun (V2816, V2817, V2818, V2819, V2820) -> begin (V2822 = begin (V2821 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2821} end), case V2822 of {'Idris.Prelude.Types.Left', E2216} -> (fun (V2823) -> {'Idris.Prelude.Types.Left', V2823} end(E2216)); {'Idris.Prelude.Types.Right', E2217} -> (fun (V2824) -> begin (V2831 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2825) -> fun (V2826) -> fun (V2827) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2825, V2826, V2827)) end end end, fun (V2828) -> fun (V2829) -> fun (V2830) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2828, V2829, V2830)) end end end}, V2817, V2811))), case V2831 of {'Idris.Prelude.Types.Left', E2218} -> (fun (V2832) -> {'Idris.Prelude.Types.Left', V2832} end(E2218)); {'Idris.Prelude.Types.Right', E2219} -> (fun (V2833) -> begin (V2835 = (('un--getNArgs'(V0, V2824, V2833, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2834) -> ('Idris.Idris2.Builtin':'un--snd'(V2834)) end, V2820))))(V2811))), case V2835 of {'Idris.Prelude.Types.Left', E2220} -> (fun (V2836) -> {'Idris.Prelude.Types.Left', V2836} end(E2220)); {'Idris.Prelude.Types.Right', E2221} -> (fun (V2837) -> case V2837 of {'Idris.Compiler.CompileExpr.User', E2222, E2223} -> (fun (V2838, V2839) -> begin (V2841 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2840) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2824, V2840)) end, V2839, [], V2811))), case V2841 of {'Idris.Prelude.Types.Left', E2224} -> (fun (V2842) -> {'Idris.Prelude.Types.Left', V2842} end(E2224)); {'Idris.Prelude.Types.Right', E2225} -> (fun (V2843) -> begin (V2845 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2844) -> ('un--nfToCFType'(V0, V2816, V2, V2844)) end, V2843, [], V2811))), case V2845 of {'Idris.Prelude.Types.Left', E2226} -> (fun (V2846) -> {'Idris.Prelude.Types.Left', V2846} end(E2226)); {'Idris.Prelude.Types.Right', E2227} -> (fun (V2847) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2833, V2847}} end(E2227)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2225)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2222, E2223)); {'Idris.Compiler.CompileExpr.Struct', E2228, E2229} -> (fun (V2848, V2849) -> begin (V2860 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2850) -> fun (V2851) -> case V2850 of {'Idris.Builtin.MkPair', E2230, E2231} -> (fun (V2852, V2853) -> begin (V2854 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2824, V2853))(V2851))), case V2854 of {'Idris.Prelude.Types.Left', E2232} -> (fun (V2855) -> {'Idris.Prelude.Types.Left', V2855} end(E2232)); {'Idris.Prelude.Types.Right', E2233} -> (fun (V2856) -> begin (V2857 = (('un--nfToCFType'(V0, V2816, 1, V2856))(V2851))), case V2857 of {'Idris.Prelude.Types.Left', E2234} -> (fun (V2858) -> {'Idris.Prelude.Types.Left', V2858} end(E2234)); {'Idris.Prelude.Types.Right', E2235} -> (fun (V2859) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2852, V2859}} end(E2235)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2233)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2230, E2231)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2849, [], V2811))), case V2860 of {'Idris.Prelude.Types.Left', E2236} -> (fun (V2861) -> {'Idris.Prelude.Types.Left', V2861} end(E2236)); {'Idris.Prelude.Types.Right', E2237} -> (fun (V2862) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2848, V2862}} end(E2237)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2228, E2229)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2238} -> (fun (V2863) -> begin (V2864 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2824, V2863))(V2811))), case V2864 of {'Idris.Prelude.Types.Left', E2239} -> (fun (V2865) -> {'Idris.Prelude.Types.Left', V2865} end(E2239)); {'Idris.Prelude.Types.Right', E2240} -> (fun (V2866) -> begin (V2867 = (('un--nfToCFType'(V0, V2816, V2, V2866))(V2811))), case V2867 of {'Idris.Prelude.Types.Left', E2241} -> (fun (V2868) -> {'Idris.Prelude.Types.Left', V2868} end(E2241)); {'Idris.Prelude.Types.Right', E2242} -> (fun (V2869) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2869}} end(E2242)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2240)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2238)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2219)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2217)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2211, E2212, E2213, E2214, E2215)); {'Idris.Core.Value.NType', E2243} -> (fun (V2870) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2243)); {'Idris.Core.Value.NErased', E2244, E2245} -> (fun (V2871, V2872) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2244, E2245)); _ -> begin (V2874 = begin (V2873 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2873} end), case V2874 of {'Idris.Prelude.Types.Left', E2205} -> (fun (V2875) -> {'Idris.Prelude.Types.Left', V2875} end(E2205)); {'Idris.Prelude.Types.Right', E2206} -> (fun (V2876) -> begin (V2877 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V2876, {'Idris.Core.Env.Nil'}, V3, V2811))), case V2877 of {'Idris.Prelude.Types.Left', E2207} -> (fun (V2878) -> {'Idris.Prelude.Types.Left', V2878} end(E2207)); {'Idris.Prelude.Types.Right', E2208} -> (fun (V2879) -> begin (V2886 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2880) -> fun (V2881) -> fun (V2882) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2880, V2881, V2882)) end end end, fun (V2883) -> fun (V2884) -> fun (V2885) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2883, V2884, V2885)) end end end}, V2879, V2811))), case V2886 of {'Idris.Prelude.Types.Left', E2209} -> (fun (V2887) -> {'Idris.Prelude.Types.Left', V2887} end(E2209)); {'Idris.Prelude.Types.Right', E2210} -> (fun (V2888) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2888))))}, V2811)) end(E2210)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2208)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2206)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V2889) -> case V3 of {'Idris.Core.Value.NTCon', E2070, E2071, E2072, E2073, E2074} -> (fun (V2890, V2891, V2892, V2893, V2894) -> begin (V2896 = begin (V2895 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2895} end), case V2896 of {'Idris.Prelude.Types.Left', E2075} -> (fun (V2897) -> {'Idris.Prelude.Types.Left', V2897} end(E2075)); {'Idris.Prelude.Types.Right', E2076} -> (fun (V2898) -> begin (V2905 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2899) -> fun (V2900) -> fun (V2901) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2899, V2900, V2901)) end end end, fun (V2902) -> fun (V2903) -> fun (V2904) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V2902, V2903, V2904)) end end end}, V2891, V2889))), case V2905 of {'Idris.Prelude.Types.Left', E2077} -> (fun (V2906) -> {'Idris.Prelude.Types.Left', V2906} end(E2077)); {'Idris.Prelude.Types.Right', E2078} -> (fun (V2907) -> begin (V2909 = (('un--getNArgs'(V0, V2898, V2907, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2908) -> ('Idris.Idris2.Builtin':'un--snd'(V2908)) end, V2894))))(V2889))), case V2909 of {'Idris.Prelude.Types.Left', E2079} -> (fun (V2910) -> {'Idris.Prelude.Types.Left', V2910} end(E2079)); {'Idris.Prelude.Types.Right', E2080} -> (fun (V2911) -> case V2911 of {'Idris.Compiler.CompileExpr.User', E2081, E2082} -> (fun (V2912, V2913) -> begin (V2915 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2914) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2898, V2914)) end, V2913, [], V2889))), case V2915 of {'Idris.Prelude.Types.Left', E2083} -> (fun (V2916) -> {'Idris.Prelude.Types.Left', V2916} end(E2083)); {'Idris.Prelude.Types.Right', E2084} -> (fun (V2917) -> begin (V2919 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2918) -> ('un--nfToCFType'(V0, V2890, V2, V2918)) end, V2917, [], V2889))), case V2919 of {'Idris.Prelude.Types.Left', E2085} -> (fun (V2920) -> {'Idris.Prelude.Types.Left', V2920} end(E2085)); {'Idris.Prelude.Types.Right', E2086} -> (fun (V2921) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V2907, V2921}} end(E2086)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2084)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2081, E2082)); {'Idris.Compiler.CompileExpr.Struct', E2087, E2088} -> (fun (V2922, V2923) -> begin (V2934 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2924) -> fun (V2925) -> case V2924 of {'Idris.Builtin.MkPair', E2089, E2090} -> (fun (V2926, V2927) -> begin (V2928 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2898, V2927))(V2925))), case V2928 of {'Idris.Prelude.Types.Left', E2091} -> (fun (V2929) -> {'Idris.Prelude.Types.Left', V2929} end(E2091)); {'Idris.Prelude.Types.Right', E2092} -> (fun (V2930) -> begin (V2931 = (('un--nfToCFType'(V0, V2890, 1, V2930))(V2925))), case V2931 of {'Idris.Prelude.Types.Left', E2093} -> (fun (V2932) -> {'Idris.Prelude.Types.Left', V2932} end(E2093)); {'Idris.Prelude.Types.Right', E2094} -> (fun (V2933) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V2926, V2933}} end(E2094)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2092)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2089, E2090)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2923, [], V2889))), case V2934 of {'Idris.Prelude.Types.Left', E2095} -> (fun (V2935) -> {'Idris.Prelude.Types.Left', V2935} end(E2095)); {'Idris.Prelude.Types.Right', E2096} -> (fun (V2936) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V2922, V2936}} end(E2096)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2087, E2088)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2097} -> (fun (V2937) -> begin (V2938 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2898, V2937))(V2889))), case V2938 of {'Idris.Prelude.Types.Left', E2098} -> (fun (V2939) -> {'Idris.Prelude.Types.Left', V2939} end(E2098)); {'Idris.Prelude.Types.Right', E2099} -> (fun (V2940) -> begin (V2941 = (('un--nfToCFType'(V0, V2890, V2, V2940))(V2889))), case V2941 of {'Idris.Prelude.Types.Left', E2100} -> (fun (V2942) -> {'Idris.Prelude.Types.Left', V2942} end(E2100)); {'Idris.Prelude.Types.Right', E2101} -> (fun (V2943) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V2943}} end(E2101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2099)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2097)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2080)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2078)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2076)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2070, E2071, E2072, E2073, E2074)); {'Idris.Core.Value.NType', E2102} -> (fun (V2944) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2102)); {'Idris.Core.Value.NErased', E2103, E2104} -> (fun (V2945, V2946) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2103, E2104)); _ -> begin (V2948 = begin (V2947 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2947} end), case V2948 of {'Idris.Prelude.Types.Left', E2064} -> (fun (V2949) -> {'Idris.Prelude.Types.Left', V2949} end(E2064)); {'Idris.Prelude.Types.Right', E2065} -> (fun (V2950) -> begin (V2951 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V2950, {'Idris.Core.Env.Nil'}, V3, V2889))), case V2951 of {'Idris.Prelude.Types.Left', E2066} -> (fun (V2952) -> {'Idris.Prelude.Types.Left', V2952} end(E2066)); {'Idris.Prelude.Types.Right', E2067} -> (fun (V2953) -> begin (V2960 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2954) -> fun (V2955) -> fun (V2956) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V2954, V2955, V2956)) end end end, fun (V2957) -> fun (V2958) -> fun (V2959) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V2957, V2958, V2959)) end end end}, V2953, V2889))), case V2960 of {'Idris.Prelude.Types.Left', E2068} -> (fun (V2961) -> {'Idris.Prelude.Types.Left', V2961} end(E2068)); {'Idris.Prelude.Types.Right', E2069} -> (fun (V2962) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V2962))))}, V2889)) end(E2069)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2067)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2065)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E2062, E2063)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E1958, E1959, E1960, E1961} -> (fun (V2963, V2964, V2965, V2966) -> fun (V2967) -> case V2965 of {'Idris.Core.TT.Pi', E2003, E2004, E2005, E2006} -> (fun (V2968, V2969, V2970, V2971) -> begin (V2973 = begin (V2972 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2972} end), case V2973 of {'Idris.Prelude.Types.Left', E2007} -> (fun (V2974) -> {'Idris.Prelude.Types.Left', V2974} end(E2007)); {'Idris.Prelude.Types.Right', E2008} -> (fun (V2975) -> begin (V2979 = begin (V2976 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2975, V2971))(V2967))), case V2976 of {'Idris.Prelude.Types.Left', E2009} -> (fun (V2977) -> {'Idris.Prelude.Types.Left', V2977} end(E2009)); {'Idris.Prelude.Types.Right', E2010} -> (fun (V2978) -> (('un--nfToCFType'(V0, V2963, 0, V2978))(V2967)) end(E2010)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V2979 of {'Idris.Prelude.Types.Left', E2011} -> (fun (V2980) -> {'Idris.Prelude.Types.Left', V2980} end(E2011)); {'Idris.Prelude.Types.Right', E2012} -> (fun (V2981) -> begin (V2982 = (((V2966(V2975))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V2963, 0}))))(V2967))), case V2982 of {'Idris.Prelude.Types.Left', E2013} -> (fun (V2983) -> {'Idris.Prelude.Types.Left', V2983} end(E2013)); {'Idris.Prelude.Types.Right', E2014} -> (fun (V2984) -> begin (V2985 = (('un--nfToCFType'(V0, V2963, 0, V2984))(V2967))), case V2985 of {'Idris.Prelude.Types.Left', E2015} -> (fun (V2986) -> {'Idris.Prelude.Types.Left', V2986} end(E2015)); {'Idris.Prelude.Types.Right', E2016} -> (fun (V2987) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V2981, V2987}} end(E2016)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2014)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2012)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2008)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2003, E2004, E2005, E2006)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1968, E1969, E1970, E1971, E1972} -> (fun (V2988, V2989, V2990, V2991, V2992) -> begin (V2994 = begin (V2993 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2993} end), case V2994 of {'Idris.Prelude.Types.Left', E1973} -> (fun (V2995) -> {'Idris.Prelude.Types.Left', V2995} end(E1973)); {'Idris.Prelude.Types.Right', E1974} -> (fun (V2996) -> begin (V3003 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V2997) -> fun (V2998) -> fun (V2999) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V2997, V2998, V2999)) end end end, fun (V3000) -> fun (V3001) -> fun (V3002) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3000, V3001, V3002)) end end end}, V2989, V2967))), case V3003 of {'Idris.Prelude.Types.Left', E1975} -> (fun (V3004) -> {'Idris.Prelude.Types.Left', V3004} end(E1975)); {'Idris.Prelude.Types.Right', E1976} -> (fun (V3005) -> begin (V3007 = (('un--getNArgs'(V0, V2996, V3005, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3006) -> ('Idris.Idris2.Builtin':'un--snd'(V3006)) end, V2992))))(V2967))), case V3007 of {'Idris.Prelude.Types.Left', E1977} -> (fun (V3008) -> {'Idris.Prelude.Types.Left', V3008} end(E1977)); {'Idris.Prelude.Types.Right', E1978} -> (fun (V3009) -> case V3009 of {'Idris.Compiler.CompileExpr.User', E1979, E1980} -> (fun (V3010, V3011) -> begin (V3013 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3012) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2996, V3012)) end, V3011, [], V2967))), case V3013 of {'Idris.Prelude.Types.Left', E1981} -> (fun (V3014) -> {'Idris.Prelude.Types.Left', V3014} end(E1981)); {'Idris.Prelude.Types.Right', E1982} -> (fun (V3015) -> begin (V3017 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3016) -> ('un--nfToCFType'(V0, V2988, V2, V3016)) end, V3015, [], V2967))), case V3017 of {'Idris.Prelude.Types.Left', E1983} -> (fun (V3018) -> {'Idris.Prelude.Types.Left', V3018} end(E1983)); {'Idris.Prelude.Types.Right', E1984} -> (fun (V3019) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3005, V3019}} end(E1984)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1982)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1979, E1980)); {'Idris.Compiler.CompileExpr.Struct', E1985, E1986} -> (fun (V3020, V3021) -> begin (V3032 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3022) -> fun (V3023) -> case V3022 of {'Idris.Builtin.MkPair', E1987, E1988} -> (fun (V3024, V3025) -> begin (V3026 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2996, V3025))(V3023))), case V3026 of {'Idris.Prelude.Types.Left', E1989} -> (fun (V3027) -> {'Idris.Prelude.Types.Left', V3027} end(E1989)); {'Idris.Prelude.Types.Right', E1990} -> (fun (V3028) -> begin (V3029 = (('un--nfToCFType'(V0, V2988, 1, V3028))(V3023))), case V3029 of {'Idris.Prelude.Types.Left', E1991} -> (fun (V3030) -> {'Idris.Prelude.Types.Left', V3030} end(E1991)); {'Idris.Prelude.Types.Right', E1992} -> (fun (V3031) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3024, V3031}} end(E1992)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1990)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1987, E1988)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3021, [], V2967))), case V3032 of {'Idris.Prelude.Types.Left', E1993} -> (fun (V3033) -> {'Idris.Prelude.Types.Left', V3033} end(E1993)); {'Idris.Prelude.Types.Right', E1994} -> (fun (V3034) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3020, V3034}} end(E1994)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1985, E1986)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1995} -> (fun (V3035) -> begin (V3036 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V2996, V3035))(V2967))), case V3036 of {'Idris.Prelude.Types.Left', E1996} -> (fun (V3037) -> {'Idris.Prelude.Types.Left', V3037} end(E1996)); {'Idris.Prelude.Types.Right', E1997} -> (fun (V3038) -> begin (V3039 = (('un--nfToCFType'(V0, V2988, V2, V3038))(V2967))), case V3039 of {'Idris.Prelude.Types.Left', E1998} -> (fun (V3040) -> {'Idris.Prelude.Types.Left', V3040} end(E1998)); {'Idris.Prelude.Types.Right', E1999} -> (fun (V3041) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3041}} end(E1999)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1997)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1995)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1978)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1976)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1974)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1968, E1969, E1970, E1971, E1972)); {'Idris.Core.Value.NType', E2000} -> (fun (V3042) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2000)); {'Idris.Core.Value.NErased', E2001, E2002} -> (fun (V3043, V3044) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2001, E2002)); _ -> begin (V3046 = begin (V3045 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3045} end), case V3046 of {'Idris.Prelude.Types.Left', E1962} -> (fun (V3047) -> {'Idris.Prelude.Types.Left', V3047} end(E1962)); {'Idris.Prelude.Types.Right', E1963} -> (fun (V3048) -> begin (V3049 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V3048, {'Idris.Core.Env.Nil'}, V3, V2967))), case V3049 of {'Idris.Prelude.Types.Left', E1964} -> (fun (V3050) -> {'Idris.Prelude.Types.Left', V3050} end(E1964)); {'Idris.Prelude.Types.Right', E1965} -> (fun (V3051) -> begin (V3058 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3052) -> fun (V3053) -> fun (V3054) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3052, V3053, V3054)) end end end, fun (V3055) -> fun (V3056) -> fun (V3057) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3055, V3056, V3057)) end end end}, V3051, V2967))), case V3058 of {'Idris.Prelude.Types.Left', E1966} -> (fun (V3059) -> {'Idris.Prelude.Types.Left', V3059} end(E1966)); {'Idris.Prelude.Types.Right', E1967} -> (fun (V3060) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3060))))}, V2967)) end(E1967)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1965)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1963)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E1958, E1959, E1960, E1961)); _ -> fun (V3061) -> case V3 of {'Idris.Core.Value.NTCon', E1923, E1924, E1925, E1926, E1927} -> (fun (V3062, V3063, V3064, V3065, V3066) -> begin (V3068 = begin (V3067 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3067} end), case V3068 of {'Idris.Prelude.Types.Left', E1928} -> (fun (V3069) -> {'Idris.Prelude.Types.Left', V3069} end(E1928)); {'Idris.Prelude.Types.Right', E1929} -> (fun (V3070) -> begin (V3077 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3071) -> fun (V3072) -> fun (V3073) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3071, V3072, V3073)) end end end, fun (V3074) -> fun (V3075) -> fun (V3076) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3074, V3075, V3076)) end end end}, V3063, V3061))), case V3077 of {'Idris.Prelude.Types.Left', E1930} -> (fun (V3078) -> {'Idris.Prelude.Types.Left', V3078} end(E1930)); {'Idris.Prelude.Types.Right', E1931} -> (fun (V3079) -> begin (V3081 = (('un--getNArgs'(V0, V3070, V3079, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3080) -> ('Idris.Idris2.Builtin':'un--snd'(V3080)) end, V3066))))(V3061))), case V3081 of {'Idris.Prelude.Types.Left', E1932} -> (fun (V3082) -> {'Idris.Prelude.Types.Left', V3082} end(E1932)); {'Idris.Prelude.Types.Right', E1933} -> (fun (V3083) -> case V3083 of {'Idris.Compiler.CompileExpr.User', E1934, E1935} -> (fun (V3084, V3085) -> begin (V3087 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3086) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3070, V3086)) end, V3085, [], V3061))), case V3087 of {'Idris.Prelude.Types.Left', E1936} -> (fun (V3088) -> {'Idris.Prelude.Types.Left', V3088} end(E1936)); {'Idris.Prelude.Types.Right', E1937} -> (fun (V3089) -> begin (V3091 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3090) -> ('un--nfToCFType'(V0, V3062, V2, V3090)) end, V3089, [], V3061))), case V3091 of {'Idris.Prelude.Types.Left', E1938} -> (fun (V3092) -> {'Idris.Prelude.Types.Left', V3092} end(E1938)); {'Idris.Prelude.Types.Right', E1939} -> (fun (V3093) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3079, V3093}} end(E1939)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1937)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1934, E1935)); {'Idris.Compiler.CompileExpr.Struct', E1940, E1941} -> (fun (V3094, V3095) -> begin (V3106 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3096) -> fun (V3097) -> case V3096 of {'Idris.Builtin.MkPair', E1942, E1943} -> (fun (V3098, V3099) -> begin (V3100 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3070, V3099))(V3097))), case V3100 of {'Idris.Prelude.Types.Left', E1944} -> (fun (V3101) -> {'Idris.Prelude.Types.Left', V3101} end(E1944)); {'Idris.Prelude.Types.Right', E1945} -> (fun (V3102) -> begin (V3103 = (('un--nfToCFType'(V0, V3062, 1, V3102))(V3097))), case V3103 of {'Idris.Prelude.Types.Left', E1946} -> (fun (V3104) -> {'Idris.Prelude.Types.Left', V3104} end(E1946)); {'Idris.Prelude.Types.Right', E1947} -> (fun (V3105) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3098, V3105}} end(E1947)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1945)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1942, E1943)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3095, [], V3061))), case V3106 of {'Idris.Prelude.Types.Left', E1948} -> (fun (V3107) -> {'Idris.Prelude.Types.Left', V3107} end(E1948)); {'Idris.Prelude.Types.Right', E1949} -> (fun (V3108) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3094, V3108}} end(E1949)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1940, E1941)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1950} -> (fun (V3109) -> begin (V3110 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3070, V3109))(V3061))), case V3110 of {'Idris.Prelude.Types.Left', E1951} -> (fun (V3111) -> {'Idris.Prelude.Types.Left', V3111} end(E1951)); {'Idris.Prelude.Types.Right', E1952} -> (fun (V3112) -> begin (V3113 = (('un--nfToCFType'(V0, V3062, V2, V3112))(V3061))), case V3113 of {'Idris.Prelude.Types.Left', E1953} -> (fun (V3114) -> {'Idris.Prelude.Types.Left', V3114} end(E1953)); {'Idris.Prelude.Types.Right', E1954} -> (fun (V3115) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3115}} end(E1954)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1952)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1950)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1933)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1931)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1929)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1923, E1924, E1925, E1926, E1927)); {'Idris.Core.Value.NType', E1955} -> (fun (V3116) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E1955)); {'Idris.Core.Value.NErased', E1956, E1957} -> (fun (V3117, V3118) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E1956, E1957)); _ -> begin (V3120 = begin (V3119 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3119} end), case V3120 of {'Idris.Prelude.Types.Left', E1917} -> (fun (V3121) -> {'Idris.Prelude.Types.Left', V3121} end(E1917)); {'Idris.Prelude.Types.Right', E1918} -> (fun (V3122) -> begin (V3123 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V3122, {'Idris.Core.Env.Nil'}, V3, V3061))), case V3123 of {'Idris.Prelude.Types.Left', E1919} -> (fun (V3124) -> {'Idris.Prelude.Types.Left', V3124} end(E1919)); {'Idris.Prelude.Types.Right', E1920} -> (fun (V3125) -> begin (V3132 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3126) -> fun (V3127) -> fun (V3128) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3126, V3127, V3128)) end end end, fun (V3129) -> fun (V3130) -> fun (V3131) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3129, V3130, V3131)) end end end}, V3125, V3061))), case V3132 of {'Idris.Prelude.Types.Left', E1921} -> (fun (V3133) -> {'Idris.Prelude.Types.Left', V3133} end(E1921)); {'Idris.Prelude.Types.Right', E1922} -> (fun (V3134) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3134))))}, V3061)) end(E1922)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1920)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1918)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V3135) -> case V3 of {'Idris.Core.Value.NBind', E2058, E2059, E2060, E2061} -> (fun (V3136, V3137, V3138, V3139) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V3136, <<"Function types not allowed in a foreign struct"/utf8>>}, V3135)) end(E2058, E2059, E2060, E2061)); _ -> case V3 of {'Idris.Core.Value.NTCon', E2023, E2024, E2025, E2026, E2027} -> (fun (V3140, V3141, V3142, V3143, V3144) -> begin (V3146 = begin (V3145 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3145} end), case V3146 of {'Idris.Prelude.Types.Left', E2028} -> (fun (V3147) -> {'Idris.Prelude.Types.Left', V3147} end(E2028)); {'Idris.Prelude.Types.Right', E2029} -> (fun (V3148) -> begin (V3155 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3149) -> fun (V3150) -> fun (V3151) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3149, V3150, V3151)) end end end, fun (V3152) -> fun (V3153) -> fun (V3154) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3152, V3153, V3154)) end end end}, V3141, V3135))), case V3155 of {'Idris.Prelude.Types.Left', E2030} -> (fun (V3156) -> {'Idris.Prelude.Types.Left', V3156} end(E2030)); {'Idris.Prelude.Types.Right', E2031} -> (fun (V3157) -> begin (V3159 = (('un--getNArgs'(V0, V3148, V3157, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3158) -> ('Idris.Idris2.Builtin':'un--snd'(V3158)) end, V3144))))(V3135))), case V3159 of {'Idris.Prelude.Types.Left', E2032} -> (fun (V3160) -> {'Idris.Prelude.Types.Left', V3160} end(E2032)); {'Idris.Prelude.Types.Right', E2033} -> (fun (V3161) -> case V3161 of {'Idris.Compiler.CompileExpr.User', E2034, E2035} -> (fun (V3162, V3163) -> begin (V3165 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3164) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3148, V3164)) end, V3163, [], V3135))), case V3165 of {'Idris.Prelude.Types.Left', E2036} -> (fun (V3166) -> {'Idris.Prelude.Types.Left', V3166} end(E2036)); {'Idris.Prelude.Types.Right', E2037} -> (fun (V3167) -> begin (V3169 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3168) -> ('un--nfToCFType'(V0, V3140, V2, V3168)) end, V3167, [], V3135))), case V3169 of {'Idris.Prelude.Types.Left', E2038} -> (fun (V3170) -> {'Idris.Prelude.Types.Left', V3170} end(E2038)); {'Idris.Prelude.Types.Right', E2039} -> (fun (V3171) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3157, V3171}} end(E2039)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2037)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2034, E2035)); {'Idris.Compiler.CompileExpr.Struct', E2040, E2041} -> (fun (V3172, V3173) -> begin (V3184 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3174) -> fun (V3175) -> case V3174 of {'Idris.Builtin.MkPair', E2042, E2043} -> (fun (V3176, V3177) -> begin (V3178 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3148, V3177))(V3175))), case V3178 of {'Idris.Prelude.Types.Left', E2044} -> (fun (V3179) -> {'Idris.Prelude.Types.Left', V3179} end(E2044)); {'Idris.Prelude.Types.Right', E2045} -> (fun (V3180) -> begin (V3181 = (('un--nfToCFType'(V0, V3140, 1, V3180))(V3175))), case V3181 of {'Idris.Prelude.Types.Left', E2046} -> (fun (V3182) -> {'Idris.Prelude.Types.Left', V3182} end(E2046)); {'Idris.Prelude.Types.Right', E2047} -> (fun (V3183) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3176, V3183}} end(E2047)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2045)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2042, E2043)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3173, [], V3135))), case V3184 of {'Idris.Prelude.Types.Left', E2048} -> (fun (V3185) -> {'Idris.Prelude.Types.Left', V3185} end(E2048)); {'Idris.Prelude.Types.Right', E2049} -> (fun (V3186) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3172, V3186}} end(E2049)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2040, E2041)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E2050} -> (fun (V3187) -> begin (V3188 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3148, V3187))(V3135))), case V3188 of {'Idris.Prelude.Types.Left', E2051} -> (fun (V3189) -> {'Idris.Prelude.Types.Left', V3189} end(E2051)); {'Idris.Prelude.Types.Right', E2052} -> (fun (V3190) -> begin (V3191 = (('un--nfToCFType'(V0, V3140, V2, V3190))(V3135))), case V3191 of {'Idris.Prelude.Types.Left', E2053} -> (fun (V3192) -> {'Idris.Prelude.Types.Left', V3192} end(E2053)); {'Idris.Prelude.Types.Right', E2054} -> (fun (V3193) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3193}} end(E2054)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2052)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2050)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2033)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2031)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2029)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2023, E2024, E2025, E2026, E2027)); {'Idris.Core.Value.NType', E2055} -> (fun (V3194) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E2055)); {'Idris.Core.Value.NErased', E2056, E2057} -> (fun (V3195, V3196) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E2056, E2057)); _ -> begin (V3198 = begin (V3197 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3197} end), case V3198 of {'Idris.Prelude.Types.Left', E2017} -> (fun (V3199) -> {'Idris.Prelude.Types.Left', V3199} end(E2017)); {'Idris.Prelude.Types.Right', E2018} -> (fun (V3200) -> begin (V3201 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V3200, {'Idris.Core.Env.Nil'}, V3, V3135))), case V3201 of {'Idris.Prelude.Types.Left', E2019} -> (fun (V3202) -> {'Idris.Prelude.Types.Left', V3202} end(E2019)); {'Idris.Prelude.Types.Right', E2020} -> (fun (V3203) -> begin (V3210 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3204) -> fun (V3205) -> fun (V3206) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3204, V3205, V3206)) end end end, fun (V3207) -> fun (V3208) -> fun (V3209) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3207, V3208, V3209)) end end end}, V3203, V3135))), case V3210 of {'Idris.Prelude.Types.Left', E2021} -> (fun (V3211) -> {'Idris.Prelude.Types.Left', V3211} end(E2021)); {'Idris.Prelude.Types.Right', E2022} -> (fun (V3212) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3212))))}, V3135)) end(E2022)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2020)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2018)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V3213) -> case V3 of {'Idris.Core.Value.NTCon', E1882, E1883, E1884, E1885, E1886} -> (fun (V3214, V3215, V3216, V3217, V3218) -> begin (V3220 = begin (V3219 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3219} end), case V3220 of {'Idris.Prelude.Types.Left', E1887} -> (fun (V3221) -> {'Idris.Prelude.Types.Left', V3221} end(E1887)); {'Idris.Prelude.Types.Right', E1888} -> (fun (V3222) -> begin (V3229 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3223) -> fun (V3224) -> fun (V3225) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3223, V3224, V3225)) end end end, fun (V3226) -> fun (V3227) -> fun (V3228) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3226, V3227, V3228)) end end end}, V3215, V3213))), case V3229 of {'Idris.Prelude.Types.Left', E1889} -> (fun (V3230) -> {'Idris.Prelude.Types.Left', V3230} end(E1889)); {'Idris.Prelude.Types.Right', E1890} -> (fun (V3231) -> begin (V3233 = (('un--getNArgs'(V0, V3222, V3231, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3232) -> ('Idris.Idris2.Builtin':'un--snd'(V3232)) end, V3218))))(V3213))), case V3233 of {'Idris.Prelude.Types.Left', E1891} -> (fun (V3234) -> {'Idris.Prelude.Types.Left', V3234} end(E1891)); {'Idris.Prelude.Types.Right', E1892} -> (fun (V3235) -> case V3235 of {'Idris.Compiler.CompileExpr.User', E1893, E1894} -> (fun (V3236, V3237) -> begin (V3239 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3238) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3222, V3238)) end, V3237, [], V3213))), case V3239 of {'Idris.Prelude.Types.Left', E1895} -> (fun (V3240) -> {'Idris.Prelude.Types.Left', V3240} end(E1895)); {'Idris.Prelude.Types.Right', E1896} -> (fun (V3241) -> begin (V3243 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3242) -> ('un--nfToCFType'(V0, V3214, V2, V3242)) end, V3241, [], V3213))), case V3243 of {'Idris.Prelude.Types.Left', E1897} -> (fun (V3244) -> {'Idris.Prelude.Types.Left', V3244} end(E1897)); {'Idris.Prelude.Types.Right', E1898} -> (fun (V3245) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3231, V3245}} end(E1898)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1896)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1893, E1894)); {'Idris.Compiler.CompileExpr.Struct', E1899, E1900} -> (fun (V3246, V3247) -> begin (V3258 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3248) -> fun (V3249) -> case V3248 of {'Idris.Builtin.MkPair', E1901, E1902} -> (fun (V3250, V3251) -> begin (V3252 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3222, V3251))(V3249))), case V3252 of {'Idris.Prelude.Types.Left', E1903} -> (fun (V3253) -> {'Idris.Prelude.Types.Left', V3253} end(E1903)); {'Idris.Prelude.Types.Right', E1904} -> (fun (V3254) -> begin (V3255 = (('un--nfToCFType'(V0, V3214, 1, V3254))(V3249))), case V3255 of {'Idris.Prelude.Types.Left', E1905} -> (fun (V3256) -> {'Idris.Prelude.Types.Left', V3256} end(E1905)); {'Idris.Prelude.Types.Right', E1906} -> (fun (V3257) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3250, V3257}} end(E1906)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1904)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1901, E1902)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3247, [], V3213))), case V3258 of {'Idris.Prelude.Types.Left', E1907} -> (fun (V3259) -> {'Idris.Prelude.Types.Left', V3259} end(E1907)); {'Idris.Prelude.Types.Right', E1908} -> (fun (V3260) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3246, V3260}} end(E1908)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1899, E1900)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1909} -> (fun (V3261) -> begin (V3262 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3222, V3261))(V3213))), case V3262 of {'Idris.Prelude.Types.Left', E1910} -> (fun (V3263) -> {'Idris.Prelude.Types.Left', V3263} end(E1910)); {'Idris.Prelude.Types.Right', E1911} -> (fun (V3264) -> begin (V3265 = (('un--nfToCFType'(V0, V3214, V2, V3264))(V3213))), case V3265 of {'Idris.Prelude.Types.Left', E1912} -> (fun (V3266) -> {'Idris.Prelude.Types.Left', V3266} end(E1912)); {'Idris.Prelude.Types.Right', E1913} -> (fun (V3267) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3267}} end(E1913)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1911)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1909)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1892)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1890)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1888)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1882, E1883, E1884, E1885, E1886)); {'Idris.Core.Value.NType', E1914} -> (fun (V3268) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E1914)); {'Idris.Core.Value.NErased', E1915, E1916} -> (fun (V3269, V3270) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E1915, E1916)); _ -> begin (V3272 = begin (V3271 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3271} end), case V3272 of {'Idris.Prelude.Types.Left', E1876} -> (fun (V3273) -> {'Idris.Prelude.Types.Left', V3273} end(E1876)); {'Idris.Prelude.Types.Right', E1877} -> (fun (V3274) -> begin (V3275 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V3274, {'Idris.Core.Env.Nil'}, V3, V3213))), case V3275 of {'Idris.Prelude.Types.Left', E1878} -> (fun (V3276) -> {'Idris.Prelude.Types.Left', V3276} end(E1878)); {'Idris.Prelude.Types.Right', E1879} -> (fun (V3277) -> begin (V3284 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3278) -> fun (V3279) -> fun (V3280) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3278, V3279, V3280)) end end end, fun (V3281) -> fun (V3282) -> fun (V3283) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3281, V3282, V3283)) end end end}, V3277, V3213))), case V3284 of {'Idris.Prelude.Types.Left', E1880} -> (fun (V3285) -> {'Idris.Prelude.Types.Left', V3285} end(E1880)); {'Idris.Prelude.Types.Right', E1881} -> (fun (V3286) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3286))))}, V3213)) end(E1881)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1879)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1877)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end end(E1874, E1875)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NPrimVal', E748, E749} -> (fun (V3287, V3288) -> case V3288 of {'Idris.Core.TT.StringType'} -> (fun () -> fun (V3289) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFString'}} end end()); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E936, E937} -> (fun (V3290, V3291) -> case V3291 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V3292) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V3293) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V3294) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E1020, E1021, E1022, E1023} -> (fun (V3295, V3296, V3297, V3298) -> fun (V3299) -> case V3297 of {'Idris.Core.TT.Pi', E1065, E1066, E1067, E1068} -> (fun (V3300, V3301, V3302, V3303) -> begin (V3305 = begin (V3304 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3304} end), case V3305 of {'Idris.Prelude.Types.Left', E1069} -> (fun (V3306) -> {'Idris.Prelude.Types.Left', V3306} end(E1069)); {'Idris.Prelude.Types.Right', E1070} -> (fun (V3307) -> begin (V3311 = begin (V3308 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3307, V3303))(V3299))), case V3308 of {'Idris.Prelude.Types.Left', E1071} -> (fun (V3309) -> {'Idris.Prelude.Types.Left', V3309} end(E1071)); {'Idris.Prelude.Types.Right', E1072} -> (fun (V3310) -> (('un--nfToCFType'(V0, V3295, 0, V3310))(V3299)) end(E1072)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V3311 of {'Idris.Prelude.Types.Left', E1073} -> (fun (V3312) -> {'Idris.Prelude.Types.Left', V3312} end(E1073)); {'Idris.Prelude.Types.Right', E1074} -> (fun (V3313) -> begin (V3314 = (((V3298(V3307))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V3295, 0}))))(V3299))), case V3314 of {'Idris.Prelude.Types.Left', E1075} -> (fun (V3315) -> {'Idris.Prelude.Types.Left', V3315} end(E1075)); {'Idris.Prelude.Types.Right', E1076} -> (fun (V3316) -> begin (V3317 = (('un--nfToCFType'(V0, V3295, 0, V3316))(V3299))), case V3317 of {'Idris.Prelude.Types.Left', E1077} -> (fun (V3318) -> {'Idris.Prelude.Types.Left', V3318} end(E1077)); {'Idris.Prelude.Types.Right', E1078} -> (fun (V3319) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V3313, V3319}} end(E1078)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1076)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1074)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1070)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1065, E1066, E1067, E1068)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1030, E1031, E1032, E1033, E1034} -> (fun (V3320, V3321, V3322, V3323, V3324) -> begin (V3326 = begin (V3325 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3325} end), case V3326 of {'Idris.Prelude.Types.Left', E1035} -> (fun (V3327) -> {'Idris.Prelude.Types.Left', V3327} end(E1035)); {'Idris.Prelude.Types.Right', E1036} -> (fun (V3328) -> begin (V3335 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3329) -> fun (V3330) -> fun (V3331) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3329, V3330, V3331)) end end end, fun (V3332) -> fun (V3333) -> fun (V3334) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3332, V3333, V3334)) end end end}, V3321, V3299))), case V3335 of {'Idris.Prelude.Types.Left', E1037} -> (fun (V3336) -> {'Idris.Prelude.Types.Left', V3336} end(E1037)); {'Idris.Prelude.Types.Right', E1038} -> (fun (V3337) -> begin (V3339 = (('un--getNArgs'(V0, V3328, V3337, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3338) -> ('Idris.Idris2.Builtin':'un--snd'(V3338)) end, V3324))))(V3299))), case V3339 of {'Idris.Prelude.Types.Left', E1039} -> (fun (V3340) -> {'Idris.Prelude.Types.Left', V3340} end(E1039)); {'Idris.Prelude.Types.Right', E1040} -> (fun (V3341) -> case V3341 of {'Idris.Compiler.CompileExpr.User', E1041, E1042} -> (fun (V3342, V3343) -> begin (V3345 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3344) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3328, V3344)) end, V3343, [], V3299))), case V3345 of {'Idris.Prelude.Types.Left', E1043} -> (fun (V3346) -> {'Idris.Prelude.Types.Left', V3346} end(E1043)); {'Idris.Prelude.Types.Right', E1044} -> (fun (V3347) -> begin (V3349 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3348) -> ('un--nfToCFType'(V0, V3320, V2, V3348)) end, V3347, [], V3299))), case V3349 of {'Idris.Prelude.Types.Left', E1045} -> (fun (V3350) -> {'Idris.Prelude.Types.Left', V3350} end(E1045)); {'Idris.Prelude.Types.Right', E1046} -> (fun (V3351) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3337, V3351}} end(E1046)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1044)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1041, E1042)); {'Idris.Compiler.CompileExpr.Struct', E1047, E1048} -> (fun (V3352, V3353) -> begin (V3364 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3354) -> fun (V3355) -> case V3354 of {'Idris.Builtin.MkPair', E1049, E1050} -> (fun (V3356, V3357) -> begin (V3358 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3328, V3357))(V3355))), case V3358 of {'Idris.Prelude.Types.Left', E1051} -> (fun (V3359) -> {'Idris.Prelude.Types.Left', V3359} end(E1051)); {'Idris.Prelude.Types.Right', E1052} -> (fun (V3360) -> begin (V3361 = (('un--nfToCFType'(V0, V3320, 1, V3360))(V3355))), case V3361 of {'Idris.Prelude.Types.Left', E1053} -> (fun (V3362) -> {'Idris.Prelude.Types.Left', V3362} end(E1053)); {'Idris.Prelude.Types.Right', E1054} -> (fun (V3363) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3356, V3363}} end(E1054)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1052)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1049, E1050)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3353, [], V3299))), case V3364 of {'Idris.Prelude.Types.Left', E1055} -> (fun (V3365) -> {'Idris.Prelude.Types.Left', V3365} end(E1055)); {'Idris.Prelude.Types.Right', E1056} -> (fun (V3366) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3352, V3366}} end(E1056)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1047, E1048)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1057} -> (fun (V3367) -> begin (V3368 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3328, V3367))(V3299))), case V3368 of {'Idris.Prelude.Types.Left', E1058} -> (fun (V3369) -> {'Idris.Prelude.Types.Left', V3369} end(E1058)); {'Idris.Prelude.Types.Right', E1059} -> (fun (V3370) -> begin (V3371 = (('un--nfToCFType'(V0, V3320, V2, V3370))(V3299))), case V3371 of {'Idris.Prelude.Types.Left', E1060} -> (fun (V3372) -> {'Idris.Prelude.Types.Left', V3372} end(E1060)); {'Idris.Prelude.Types.Right', E1061} -> (fun (V3373) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3373}} end(E1061)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1059)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1057)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1040)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1038)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1036)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1030, E1031, E1032, E1033, E1034)); {'Idris.Core.Value.NType', E1062} -> (fun (V3374) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E1062)); {'Idris.Core.Value.NErased', E1063, E1064} -> (fun (V3375, V3376) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E1063, E1064)); _ -> begin (V3378 = begin (V3377 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3377} end), case V3378 of {'Idris.Prelude.Types.Left', E1024} -> (fun (V3379) -> {'Idris.Prelude.Types.Left', V3379} end(E1024)); {'Idris.Prelude.Types.Right', E1025} -> (fun (V3380) -> begin (V3381 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V3380, {'Idris.Core.Env.Nil'}, V3, V3299))), case V3381 of {'Idris.Prelude.Types.Left', E1026} -> (fun (V3382) -> {'Idris.Prelude.Types.Left', V3382} end(E1026)); {'Idris.Prelude.Types.Right', E1027} -> (fun (V3383) -> begin (V3390 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3384) -> fun (V3385) -> fun (V3386) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3384, V3385, V3386)) end end end, fun (V3387) -> fun (V3388) -> fun (V3389) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3387, V3388, V3389)) end end end}, V3383, V3299))), case V3390 of {'Idris.Prelude.Types.Left', E1028} -> (fun (V3391) -> {'Idris.Prelude.Types.Left', V3391} end(E1028)); {'Idris.Prelude.Types.Right', E1029} -> (fun (V3392) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3392))))}, V3299)) end(E1029)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1027)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1025)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E1020, E1021, E1022, E1023)); _ -> fun (V3393) -> case V3 of {'Idris.Core.Value.NTCon', E985, E986, E987, E988, E989} -> (fun (V3394, V3395, V3396, V3397, V3398) -> begin (V3400 = begin (V3399 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3399} end), case V3400 of {'Idris.Prelude.Types.Left', E990} -> (fun (V3401) -> {'Idris.Prelude.Types.Left', V3401} end(E990)); {'Idris.Prelude.Types.Right', E991} -> (fun (V3402) -> begin (V3409 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3403) -> fun (V3404) -> fun (V3405) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3403, V3404, V3405)) end end end, fun (V3406) -> fun (V3407) -> fun (V3408) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3406, V3407, V3408)) end end end}, V3395, V3393))), case V3409 of {'Idris.Prelude.Types.Left', E992} -> (fun (V3410) -> {'Idris.Prelude.Types.Left', V3410} end(E992)); {'Idris.Prelude.Types.Right', E993} -> (fun (V3411) -> begin (V3413 = (('un--getNArgs'(V0, V3402, V3411, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3412) -> ('Idris.Idris2.Builtin':'un--snd'(V3412)) end, V3398))))(V3393))), case V3413 of {'Idris.Prelude.Types.Left', E994} -> (fun (V3414) -> {'Idris.Prelude.Types.Left', V3414} end(E994)); {'Idris.Prelude.Types.Right', E995} -> (fun (V3415) -> case V3415 of {'Idris.Compiler.CompileExpr.User', E996, E997} -> (fun (V3416, V3417) -> begin (V3419 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3418) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3402, V3418)) end, V3417, [], V3393))), case V3419 of {'Idris.Prelude.Types.Left', E998} -> (fun (V3420) -> {'Idris.Prelude.Types.Left', V3420} end(E998)); {'Idris.Prelude.Types.Right', E999} -> (fun (V3421) -> begin (V3423 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3422) -> ('un--nfToCFType'(V0, V3394, V2, V3422)) end, V3421, [], V3393))), case V3423 of {'Idris.Prelude.Types.Left', E1000} -> (fun (V3424) -> {'Idris.Prelude.Types.Left', V3424} end(E1000)); {'Idris.Prelude.Types.Right', E1001} -> (fun (V3425) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3411, V3425}} end(E1001)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E999)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E996, E997)); {'Idris.Compiler.CompileExpr.Struct', E1002, E1003} -> (fun (V3426, V3427) -> begin (V3438 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3428) -> fun (V3429) -> case V3428 of {'Idris.Builtin.MkPair', E1004, E1005} -> (fun (V3430, V3431) -> begin (V3432 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3402, V3431))(V3429))), case V3432 of {'Idris.Prelude.Types.Left', E1006} -> (fun (V3433) -> {'Idris.Prelude.Types.Left', V3433} end(E1006)); {'Idris.Prelude.Types.Right', E1007} -> (fun (V3434) -> begin (V3435 = (('un--nfToCFType'(V0, V3394, 1, V3434))(V3429))), case V3435 of {'Idris.Prelude.Types.Left', E1008} -> (fun (V3436) -> {'Idris.Prelude.Types.Left', V3436} end(E1008)); {'Idris.Prelude.Types.Right', E1009} -> (fun (V3437) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3430, V3437}} end(E1009)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1007)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1004, E1005)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3427, [], V3393))), case V3438 of {'Idris.Prelude.Types.Left', E1010} -> (fun (V3439) -> {'Idris.Prelude.Types.Left', V3439} end(E1010)); {'Idris.Prelude.Types.Right', E1011} -> (fun (V3440) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3426, V3440}} end(E1011)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1002, E1003)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1012} -> (fun (V3441) -> begin (V3442 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3402, V3441))(V3393))), case V3442 of {'Idris.Prelude.Types.Left', E1013} -> (fun (V3443) -> {'Idris.Prelude.Types.Left', V3443} end(E1013)); {'Idris.Prelude.Types.Right', E1014} -> (fun (V3444) -> begin (V3445 = (('un--nfToCFType'(V0, V3394, V2, V3444))(V3393))), case V3445 of {'Idris.Prelude.Types.Left', E1015} -> (fun (V3446) -> {'Idris.Prelude.Types.Left', V3446} end(E1015)); {'Idris.Prelude.Types.Right', E1016} -> (fun (V3447) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3447}} end(E1016)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1014)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1012)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E995)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E993)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E991)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E985, E986, E987, E988, E989)); {'Idris.Core.Value.NType', E1017} -> (fun (V3448) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E1017)); {'Idris.Core.Value.NErased', E1018, E1019} -> (fun (V3449, V3450) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E1018, E1019)); _ -> begin (V3452 = begin (V3451 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3451} end), case V3452 of {'Idris.Prelude.Types.Left', E979} -> (fun (V3453) -> {'Idris.Prelude.Types.Left', V3453} end(E979)); {'Idris.Prelude.Types.Right', E980} -> (fun (V3454) -> begin (V3455 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V3454, {'Idris.Core.Env.Nil'}, V3, V3393))), case V3455 of {'Idris.Prelude.Types.Left', E981} -> (fun (V3456) -> {'Idris.Prelude.Types.Left', V3456} end(E981)); {'Idris.Prelude.Types.Right', E982} -> (fun (V3457) -> begin (V3464 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3458) -> fun (V3459) -> fun (V3460) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3458, V3459, V3460)) end end end, fun (V3461) -> fun (V3462) -> fun (V3463) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3461, V3462, V3463)) end end end}, V3457, V3393))), case V3464 of {'Idris.Prelude.Types.Left', E983} -> (fun (V3465) -> {'Idris.Prelude.Types.Left', V3465} end(E983)); {'Idris.Prelude.Types.Right', E984} -> (fun (V3466) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3466))))}, V3393)) end(E984)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E982)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E980)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V3467) -> case V3 of {'Idris.Core.Value.NBind', E1120, E1121, E1122, E1123} -> (fun (V3468, V3469, V3470, V3471) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V3468, <<"Function types not allowed in a foreign struct"/utf8>>}, V3467)) end(E1120, E1121, E1122, E1123)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1085, E1086, E1087, E1088, E1089} -> (fun (V3472, V3473, V3474, V3475, V3476) -> begin (V3478 = begin (V3477 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3477} end), case V3478 of {'Idris.Prelude.Types.Left', E1090} -> (fun (V3479) -> {'Idris.Prelude.Types.Left', V3479} end(E1090)); {'Idris.Prelude.Types.Right', E1091} -> (fun (V3480) -> begin (V3487 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3481) -> fun (V3482) -> fun (V3483) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3481, V3482, V3483)) end end end, fun (V3484) -> fun (V3485) -> fun (V3486) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3484, V3485, V3486)) end end end}, V3473, V3467))), case V3487 of {'Idris.Prelude.Types.Left', E1092} -> (fun (V3488) -> {'Idris.Prelude.Types.Left', V3488} end(E1092)); {'Idris.Prelude.Types.Right', E1093} -> (fun (V3489) -> begin (V3491 = (('un--getNArgs'(V0, V3480, V3489, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3490) -> ('Idris.Idris2.Builtin':'un--snd'(V3490)) end, V3476))))(V3467))), case V3491 of {'Idris.Prelude.Types.Left', E1094} -> (fun (V3492) -> {'Idris.Prelude.Types.Left', V3492} end(E1094)); {'Idris.Prelude.Types.Right', E1095} -> (fun (V3493) -> case V3493 of {'Idris.Compiler.CompileExpr.User', E1096, E1097} -> (fun (V3494, V3495) -> begin (V3497 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3496) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3480, V3496)) end, V3495, [], V3467))), case V3497 of {'Idris.Prelude.Types.Left', E1098} -> (fun (V3498) -> {'Idris.Prelude.Types.Left', V3498} end(E1098)); {'Idris.Prelude.Types.Right', E1099} -> (fun (V3499) -> begin (V3501 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3500) -> ('un--nfToCFType'(V0, V3472, V2, V3500)) end, V3499, [], V3467))), case V3501 of {'Idris.Prelude.Types.Left', E1100} -> (fun (V3502) -> {'Idris.Prelude.Types.Left', V3502} end(E1100)); {'Idris.Prelude.Types.Right', E1101} -> (fun (V3503) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3489, V3503}} end(E1101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1099)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1096, E1097)); {'Idris.Compiler.CompileExpr.Struct', E1102, E1103} -> (fun (V3504, V3505) -> begin (V3516 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3506) -> fun (V3507) -> case V3506 of {'Idris.Builtin.MkPair', E1104, E1105} -> (fun (V3508, V3509) -> begin (V3510 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3480, V3509))(V3507))), case V3510 of {'Idris.Prelude.Types.Left', E1106} -> (fun (V3511) -> {'Idris.Prelude.Types.Left', V3511} end(E1106)); {'Idris.Prelude.Types.Right', E1107} -> (fun (V3512) -> begin (V3513 = (('un--nfToCFType'(V0, V3472, 1, V3512))(V3507))), case V3513 of {'Idris.Prelude.Types.Left', E1108} -> (fun (V3514) -> {'Idris.Prelude.Types.Left', V3514} end(E1108)); {'Idris.Prelude.Types.Right', E1109} -> (fun (V3515) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3508, V3515}} end(E1109)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1104, E1105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3505, [], V3467))), case V3516 of {'Idris.Prelude.Types.Left', E1110} -> (fun (V3517) -> {'Idris.Prelude.Types.Left', V3517} end(E1110)); {'Idris.Prelude.Types.Right', E1111} -> (fun (V3518) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3504, V3518}} end(E1111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1102, E1103)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1112} -> (fun (V3519) -> begin (V3520 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3480, V3519))(V3467))), case V3520 of {'Idris.Prelude.Types.Left', E1113} -> (fun (V3521) -> {'Idris.Prelude.Types.Left', V3521} end(E1113)); {'Idris.Prelude.Types.Right', E1114} -> (fun (V3522) -> begin (V3523 = (('un--nfToCFType'(V0, V3472, V2, V3522))(V3467))), case V3523 of {'Idris.Prelude.Types.Left', E1115} -> (fun (V3524) -> {'Idris.Prelude.Types.Left', V3524} end(E1115)); {'Idris.Prelude.Types.Right', E1116} -> (fun (V3525) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3525}} end(E1116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1095)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1093)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1091)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1085, E1086, E1087, E1088, E1089)); {'Idris.Core.Value.NType', E1117} -> (fun (V3526) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E1117)); {'Idris.Core.Value.NErased', E1118, E1119} -> (fun (V3527, V3528) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E1118, E1119)); _ -> begin (V3530 = begin (V3529 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3529} end), case V3530 of {'Idris.Prelude.Types.Left', E1079} -> (fun (V3531) -> {'Idris.Prelude.Types.Left', V3531} end(E1079)); {'Idris.Prelude.Types.Right', E1080} -> (fun (V3532) -> begin (V3533 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V3532, {'Idris.Core.Env.Nil'}, V3, V3467))), case V3533 of {'Idris.Prelude.Types.Left', E1081} -> (fun (V3534) -> {'Idris.Prelude.Types.Left', V3534} end(E1081)); {'Idris.Prelude.Types.Right', E1082} -> (fun (V3535) -> begin (V3542 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3536) -> fun (V3537) -> fun (V3538) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3536, V3537, V3538)) end end end, fun (V3539) -> fun (V3540) -> fun (V3541) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3539, V3540, V3541)) end end end}, V3535, V3467))), case V3542 of {'Idris.Prelude.Types.Left', E1083} -> (fun (V3543) -> {'Idris.Prelude.Types.Left', V3543} end(E1083)); {'Idris.Prelude.Types.Right', E1084} -> (fun (V3544) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3544))))}, V3467)) end(E1084)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1082)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1080)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V3545) -> case V3 of {'Idris.Core.Value.NTCon', E944, E945, E946, E947, E948} -> (fun (V3546, V3547, V3548, V3549, V3550) -> begin (V3552 = begin (V3551 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3551} end), case V3552 of {'Idris.Prelude.Types.Left', E949} -> (fun (V3553) -> {'Idris.Prelude.Types.Left', V3553} end(E949)); {'Idris.Prelude.Types.Right', E950} -> (fun (V3554) -> begin (V3561 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3555) -> fun (V3556) -> fun (V3557) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3555, V3556, V3557)) end end end, fun (V3558) -> fun (V3559) -> fun (V3560) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3558, V3559, V3560)) end end end}, V3547, V3545))), case V3561 of {'Idris.Prelude.Types.Left', E951} -> (fun (V3562) -> {'Idris.Prelude.Types.Left', V3562} end(E951)); {'Idris.Prelude.Types.Right', E952} -> (fun (V3563) -> begin (V3565 = (('un--getNArgs'(V0, V3554, V3563, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3564) -> ('Idris.Idris2.Builtin':'un--snd'(V3564)) end, V3550))))(V3545))), case V3565 of {'Idris.Prelude.Types.Left', E953} -> (fun (V3566) -> {'Idris.Prelude.Types.Left', V3566} end(E953)); {'Idris.Prelude.Types.Right', E954} -> (fun (V3567) -> case V3567 of {'Idris.Compiler.CompileExpr.User', E955, E956} -> (fun (V3568, V3569) -> begin (V3571 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3570) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3554, V3570)) end, V3569, [], V3545))), case V3571 of {'Idris.Prelude.Types.Left', E957} -> (fun (V3572) -> {'Idris.Prelude.Types.Left', V3572} end(E957)); {'Idris.Prelude.Types.Right', E958} -> (fun (V3573) -> begin (V3575 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3574) -> ('un--nfToCFType'(V0, V3546, V2, V3574)) end, V3573, [], V3545))), case V3575 of {'Idris.Prelude.Types.Left', E959} -> (fun (V3576) -> {'Idris.Prelude.Types.Left', V3576} end(E959)); {'Idris.Prelude.Types.Right', E960} -> (fun (V3577) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3563, V3577}} end(E960)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E958)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E955, E956)); {'Idris.Compiler.CompileExpr.Struct', E961, E962} -> (fun (V3578, V3579) -> begin (V3590 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3580) -> fun (V3581) -> case V3580 of {'Idris.Builtin.MkPair', E963, E964} -> (fun (V3582, V3583) -> begin (V3584 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3554, V3583))(V3581))), case V3584 of {'Idris.Prelude.Types.Left', E965} -> (fun (V3585) -> {'Idris.Prelude.Types.Left', V3585} end(E965)); {'Idris.Prelude.Types.Right', E966} -> (fun (V3586) -> begin (V3587 = (('un--nfToCFType'(V0, V3546, 1, V3586))(V3581))), case V3587 of {'Idris.Prelude.Types.Left', E967} -> (fun (V3588) -> {'Idris.Prelude.Types.Left', V3588} end(E967)); {'Idris.Prelude.Types.Right', E968} -> (fun (V3589) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3582, V3589}} end(E968)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E966)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E963, E964)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3579, [], V3545))), case V3590 of {'Idris.Prelude.Types.Left', E969} -> (fun (V3591) -> {'Idris.Prelude.Types.Left', V3591} end(E969)); {'Idris.Prelude.Types.Right', E970} -> (fun (V3592) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3578, V3592}} end(E970)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E961, E962)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E971} -> (fun (V3593) -> begin (V3594 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3554, V3593))(V3545))), case V3594 of {'Idris.Prelude.Types.Left', E972} -> (fun (V3595) -> {'Idris.Prelude.Types.Left', V3595} end(E972)); {'Idris.Prelude.Types.Right', E973} -> (fun (V3596) -> begin (V3597 = (('un--nfToCFType'(V0, V3546, V2, V3596))(V3545))), case V3597 of {'Idris.Prelude.Types.Left', E974} -> (fun (V3598) -> {'Idris.Prelude.Types.Left', V3598} end(E974)); {'Idris.Prelude.Types.Right', E975} -> (fun (V3599) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3599}} end(E975)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E973)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E971)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E954)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E952)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E950)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E944, E945, E946, E947, E948)); {'Idris.Core.Value.NType', E976} -> (fun (V3600) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E976)); {'Idris.Core.Value.NErased', E977, E978} -> (fun (V3601, V3602) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E977, E978)); _ -> begin (V3604 = begin (V3603 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3603} end), case V3604 of {'Idris.Prelude.Types.Left', E938} -> (fun (V3605) -> {'Idris.Prelude.Types.Left', V3605} end(E938)); {'Idris.Prelude.Types.Right', E939} -> (fun (V3606) -> begin (V3607 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V3606, {'Idris.Core.Env.Nil'}, V3, V3545))), case V3607 of {'Idris.Prelude.Types.Left', E940} -> (fun (V3608) -> {'Idris.Prelude.Types.Left', V3608} end(E940)); {'Idris.Prelude.Types.Right', E941} -> (fun (V3609) -> begin (V3616 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3610) -> fun (V3611) -> fun (V3612) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3610, V3611, V3612)) end end end, fun (V3613) -> fun (V3614) -> fun (V3615) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3613, V3614, V3615)) end end end}, V3609, V3545))), case V3616 of {'Idris.Prelude.Types.Left', E942} -> (fun (V3617) -> {'Idris.Prelude.Types.Left', V3617} end(E942)); {'Idris.Prelude.Types.Right', E943} -> (fun (V3618) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3618))))}, V3545)) end(E943)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E941)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E939)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E936, E937)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E832, E833, E834, E835} -> (fun (V3619, V3620, V3621, V3622) -> fun (V3623) -> case V3621 of {'Idris.Core.TT.Pi', E877, E878, E879, E880} -> (fun (V3624, V3625, V3626, V3627) -> begin (V3629 = begin (V3628 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3628} end), case V3629 of {'Idris.Prelude.Types.Left', E881} -> (fun (V3630) -> {'Idris.Prelude.Types.Left', V3630} end(E881)); {'Idris.Prelude.Types.Right', E882} -> (fun (V3631) -> begin (V3635 = begin (V3632 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3631, V3627))(V3623))), case V3632 of {'Idris.Prelude.Types.Left', E883} -> (fun (V3633) -> {'Idris.Prelude.Types.Left', V3633} end(E883)); {'Idris.Prelude.Types.Right', E884} -> (fun (V3634) -> (('un--nfToCFType'(V0, V3619, 0, V3634))(V3623)) end(E884)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V3635 of {'Idris.Prelude.Types.Left', E885} -> (fun (V3636) -> {'Idris.Prelude.Types.Left', V3636} end(E885)); {'Idris.Prelude.Types.Right', E886} -> (fun (V3637) -> begin (V3638 = (((V3622(V3631))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V3619, 0}))))(V3623))), case V3638 of {'Idris.Prelude.Types.Left', E887} -> (fun (V3639) -> {'Idris.Prelude.Types.Left', V3639} end(E887)); {'Idris.Prelude.Types.Right', E888} -> (fun (V3640) -> begin (V3641 = (('un--nfToCFType'(V0, V3619, 0, V3640))(V3623))), case V3641 of {'Idris.Prelude.Types.Left', E889} -> (fun (V3642) -> {'Idris.Prelude.Types.Left', V3642} end(E889)); {'Idris.Prelude.Types.Right', E890} -> (fun (V3643) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V3637, V3643}} end(E890)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E888)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E886)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E882)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E877, E878, E879, E880)); _ -> case V3 of {'Idris.Core.Value.NTCon', E842, E843, E844, E845, E846} -> (fun (V3644, V3645, V3646, V3647, V3648) -> begin (V3650 = begin (V3649 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3649} end), case V3650 of {'Idris.Prelude.Types.Left', E847} -> (fun (V3651) -> {'Idris.Prelude.Types.Left', V3651} end(E847)); {'Idris.Prelude.Types.Right', E848} -> (fun (V3652) -> begin (V3659 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3653) -> fun (V3654) -> fun (V3655) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3653, V3654, V3655)) end end end, fun (V3656) -> fun (V3657) -> fun (V3658) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3656, V3657, V3658)) end end end}, V3645, V3623))), case V3659 of {'Idris.Prelude.Types.Left', E849} -> (fun (V3660) -> {'Idris.Prelude.Types.Left', V3660} end(E849)); {'Idris.Prelude.Types.Right', E850} -> (fun (V3661) -> begin (V3663 = (('un--getNArgs'(V0, V3652, V3661, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3662) -> ('Idris.Idris2.Builtin':'un--snd'(V3662)) end, V3648))))(V3623))), case V3663 of {'Idris.Prelude.Types.Left', E851} -> (fun (V3664) -> {'Idris.Prelude.Types.Left', V3664} end(E851)); {'Idris.Prelude.Types.Right', E852} -> (fun (V3665) -> case V3665 of {'Idris.Compiler.CompileExpr.User', E853, E854} -> (fun (V3666, V3667) -> begin (V3669 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3668) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3652, V3668)) end, V3667, [], V3623))), case V3669 of {'Idris.Prelude.Types.Left', E855} -> (fun (V3670) -> {'Idris.Prelude.Types.Left', V3670} end(E855)); {'Idris.Prelude.Types.Right', E856} -> (fun (V3671) -> begin (V3673 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3672) -> ('un--nfToCFType'(V0, V3644, V2, V3672)) end, V3671, [], V3623))), case V3673 of {'Idris.Prelude.Types.Left', E857} -> (fun (V3674) -> {'Idris.Prelude.Types.Left', V3674} end(E857)); {'Idris.Prelude.Types.Right', E858} -> (fun (V3675) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3661, V3675}} end(E858)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E856)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E853, E854)); {'Idris.Compiler.CompileExpr.Struct', E859, E860} -> (fun (V3676, V3677) -> begin (V3688 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3678) -> fun (V3679) -> case V3678 of {'Idris.Builtin.MkPair', E861, E862} -> (fun (V3680, V3681) -> begin (V3682 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3652, V3681))(V3679))), case V3682 of {'Idris.Prelude.Types.Left', E863} -> (fun (V3683) -> {'Idris.Prelude.Types.Left', V3683} end(E863)); {'Idris.Prelude.Types.Right', E864} -> (fun (V3684) -> begin (V3685 = (('un--nfToCFType'(V0, V3644, 1, V3684))(V3679))), case V3685 of {'Idris.Prelude.Types.Left', E865} -> (fun (V3686) -> {'Idris.Prelude.Types.Left', V3686} end(E865)); {'Idris.Prelude.Types.Right', E866} -> (fun (V3687) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3680, V3687}} end(E866)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E864)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E861, E862)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3677, [], V3623))), case V3688 of {'Idris.Prelude.Types.Left', E867} -> (fun (V3689) -> {'Idris.Prelude.Types.Left', V3689} end(E867)); {'Idris.Prelude.Types.Right', E868} -> (fun (V3690) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3676, V3690}} end(E868)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E859, E860)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E869} -> (fun (V3691) -> begin (V3692 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3652, V3691))(V3623))), case V3692 of {'Idris.Prelude.Types.Left', E870} -> (fun (V3693) -> {'Idris.Prelude.Types.Left', V3693} end(E870)); {'Idris.Prelude.Types.Right', E871} -> (fun (V3694) -> begin (V3695 = (('un--nfToCFType'(V0, V3644, V2, V3694))(V3623))), case V3695 of {'Idris.Prelude.Types.Left', E872} -> (fun (V3696) -> {'Idris.Prelude.Types.Left', V3696} end(E872)); {'Idris.Prelude.Types.Right', E873} -> (fun (V3697) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3697}} end(E873)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E871)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E869)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E852)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E850)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E848)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E842, E843, E844, E845, E846)); {'Idris.Core.Value.NType', E874} -> (fun (V3698) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E874)); {'Idris.Core.Value.NErased', E875, E876} -> (fun (V3699, V3700) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E875, E876)); _ -> begin (V3702 = begin (V3701 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3701} end), case V3702 of {'Idris.Prelude.Types.Left', E836} -> (fun (V3703) -> {'Idris.Prelude.Types.Left', V3703} end(E836)); {'Idris.Prelude.Types.Right', E837} -> (fun (V3704) -> begin (V3705 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V3704, {'Idris.Core.Env.Nil'}, V3, V3623))), case V3705 of {'Idris.Prelude.Types.Left', E838} -> (fun (V3706) -> {'Idris.Prelude.Types.Left', V3706} end(E838)); {'Idris.Prelude.Types.Right', E839} -> (fun (V3707) -> begin (V3714 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3708) -> fun (V3709) -> fun (V3710) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3708, V3709, V3710)) end end end, fun (V3711) -> fun (V3712) -> fun (V3713) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3711, V3712, V3713)) end end end}, V3707, V3623))), case V3714 of {'Idris.Prelude.Types.Left', E840} -> (fun (V3715) -> {'Idris.Prelude.Types.Left', V3715} end(E840)); {'Idris.Prelude.Types.Right', E841} -> (fun (V3716) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3716))))}, V3623)) end(E841)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E839)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E837)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E832, E833, E834, E835)); _ -> fun (V3717) -> case V3 of {'Idris.Core.Value.NTCon', E797, E798, E799, E800, E801} -> (fun (V3718, V3719, V3720, V3721, V3722) -> begin (V3724 = begin (V3723 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3723} end), case V3724 of {'Idris.Prelude.Types.Left', E802} -> (fun (V3725) -> {'Idris.Prelude.Types.Left', V3725} end(E802)); {'Idris.Prelude.Types.Right', E803} -> (fun (V3726) -> begin (V3733 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3727) -> fun (V3728) -> fun (V3729) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3727, V3728, V3729)) end end end, fun (V3730) -> fun (V3731) -> fun (V3732) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3730, V3731, V3732)) end end end}, V3719, V3717))), case V3733 of {'Idris.Prelude.Types.Left', E804} -> (fun (V3734) -> {'Idris.Prelude.Types.Left', V3734} end(E804)); {'Idris.Prelude.Types.Right', E805} -> (fun (V3735) -> begin (V3737 = (('un--getNArgs'(V0, V3726, V3735, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3736) -> ('Idris.Idris2.Builtin':'un--snd'(V3736)) end, V3722))))(V3717))), case V3737 of {'Idris.Prelude.Types.Left', E806} -> (fun (V3738) -> {'Idris.Prelude.Types.Left', V3738} end(E806)); {'Idris.Prelude.Types.Right', E807} -> (fun (V3739) -> case V3739 of {'Idris.Compiler.CompileExpr.User', E808, E809} -> (fun (V3740, V3741) -> begin (V3743 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3742) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3726, V3742)) end, V3741, [], V3717))), case V3743 of {'Idris.Prelude.Types.Left', E810} -> (fun (V3744) -> {'Idris.Prelude.Types.Left', V3744} end(E810)); {'Idris.Prelude.Types.Right', E811} -> (fun (V3745) -> begin (V3747 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3746) -> ('un--nfToCFType'(V0, V3718, V2, V3746)) end, V3745, [], V3717))), case V3747 of {'Idris.Prelude.Types.Left', E812} -> (fun (V3748) -> {'Idris.Prelude.Types.Left', V3748} end(E812)); {'Idris.Prelude.Types.Right', E813} -> (fun (V3749) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3735, V3749}} end(E813)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E811)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E808, E809)); {'Idris.Compiler.CompileExpr.Struct', E814, E815} -> (fun (V3750, V3751) -> begin (V3762 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3752) -> fun (V3753) -> case V3752 of {'Idris.Builtin.MkPair', E816, E817} -> (fun (V3754, V3755) -> begin (V3756 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3726, V3755))(V3753))), case V3756 of {'Idris.Prelude.Types.Left', E818} -> (fun (V3757) -> {'Idris.Prelude.Types.Left', V3757} end(E818)); {'Idris.Prelude.Types.Right', E819} -> (fun (V3758) -> begin (V3759 = (('un--nfToCFType'(V0, V3718, 1, V3758))(V3753))), case V3759 of {'Idris.Prelude.Types.Left', E820} -> (fun (V3760) -> {'Idris.Prelude.Types.Left', V3760} end(E820)); {'Idris.Prelude.Types.Right', E821} -> (fun (V3761) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3754, V3761}} end(E821)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E819)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E816, E817)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3751, [], V3717))), case V3762 of {'Idris.Prelude.Types.Left', E822} -> (fun (V3763) -> {'Idris.Prelude.Types.Left', V3763} end(E822)); {'Idris.Prelude.Types.Right', E823} -> (fun (V3764) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3750, V3764}} end(E823)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E814, E815)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E824} -> (fun (V3765) -> begin (V3766 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3726, V3765))(V3717))), case V3766 of {'Idris.Prelude.Types.Left', E825} -> (fun (V3767) -> {'Idris.Prelude.Types.Left', V3767} end(E825)); {'Idris.Prelude.Types.Right', E826} -> (fun (V3768) -> begin (V3769 = (('un--nfToCFType'(V0, V3718, V2, V3768))(V3717))), case V3769 of {'Idris.Prelude.Types.Left', E827} -> (fun (V3770) -> {'Idris.Prelude.Types.Left', V3770} end(E827)); {'Idris.Prelude.Types.Right', E828} -> (fun (V3771) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3771}} end(E828)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E826)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E824)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E807)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E805)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E803)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E797, E798, E799, E800, E801)); {'Idris.Core.Value.NType', E829} -> (fun (V3772) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E829)); {'Idris.Core.Value.NErased', E830, E831} -> (fun (V3773, V3774) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E830, E831)); _ -> begin (V3776 = begin (V3775 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3775} end), case V3776 of {'Idris.Prelude.Types.Left', E791} -> (fun (V3777) -> {'Idris.Prelude.Types.Left', V3777} end(E791)); {'Idris.Prelude.Types.Right', E792} -> (fun (V3778) -> begin (V3779 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V3778, {'Idris.Core.Env.Nil'}, V3, V3717))), case V3779 of {'Idris.Prelude.Types.Left', E793} -> (fun (V3780) -> {'Idris.Prelude.Types.Left', V3780} end(E793)); {'Idris.Prelude.Types.Right', E794} -> (fun (V3781) -> begin (V3788 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3782) -> fun (V3783) -> fun (V3784) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3782, V3783, V3784)) end end end, fun (V3785) -> fun (V3786) -> fun (V3787) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3785, V3786, V3787)) end end end}, V3781, V3717))), case V3788 of {'Idris.Prelude.Types.Left', E795} -> (fun (V3789) -> {'Idris.Prelude.Types.Left', V3789} end(E795)); {'Idris.Prelude.Types.Right', E796} -> (fun (V3790) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3790))))}, V3717)) end(E796)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E794)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E792)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V3791) -> case V3 of {'Idris.Core.Value.NBind', E932, E933, E934, E935} -> (fun (V3792, V3793, V3794, V3795) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V3792, <<"Function types not allowed in a foreign struct"/utf8>>}, V3791)) end(E932, E933, E934, E935)); _ -> case V3 of {'Idris.Core.Value.NTCon', E897, E898, E899, E900, E901} -> (fun (V3796, V3797, V3798, V3799, V3800) -> begin (V3802 = begin (V3801 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3801} end), case V3802 of {'Idris.Prelude.Types.Left', E902} -> (fun (V3803) -> {'Idris.Prelude.Types.Left', V3803} end(E902)); {'Idris.Prelude.Types.Right', E903} -> (fun (V3804) -> begin (V3811 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3805) -> fun (V3806) -> fun (V3807) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3805, V3806, V3807)) end end end, fun (V3808) -> fun (V3809) -> fun (V3810) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3808, V3809, V3810)) end end end}, V3797, V3791))), case V3811 of {'Idris.Prelude.Types.Left', E904} -> (fun (V3812) -> {'Idris.Prelude.Types.Left', V3812} end(E904)); {'Idris.Prelude.Types.Right', E905} -> (fun (V3813) -> begin (V3815 = (('un--getNArgs'(V0, V3804, V3813, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3814) -> ('Idris.Idris2.Builtin':'un--snd'(V3814)) end, V3800))))(V3791))), case V3815 of {'Idris.Prelude.Types.Left', E906} -> (fun (V3816) -> {'Idris.Prelude.Types.Left', V3816} end(E906)); {'Idris.Prelude.Types.Right', E907} -> (fun (V3817) -> case V3817 of {'Idris.Compiler.CompileExpr.User', E908, E909} -> (fun (V3818, V3819) -> begin (V3821 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3820) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3804, V3820)) end, V3819, [], V3791))), case V3821 of {'Idris.Prelude.Types.Left', E910} -> (fun (V3822) -> {'Idris.Prelude.Types.Left', V3822} end(E910)); {'Idris.Prelude.Types.Right', E911} -> (fun (V3823) -> begin (V3825 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3824) -> ('un--nfToCFType'(V0, V3796, V2, V3824)) end, V3823, [], V3791))), case V3825 of {'Idris.Prelude.Types.Left', E912} -> (fun (V3826) -> {'Idris.Prelude.Types.Left', V3826} end(E912)); {'Idris.Prelude.Types.Right', E913} -> (fun (V3827) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3813, V3827}} end(E913)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E911)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E908, E909)); {'Idris.Compiler.CompileExpr.Struct', E914, E915} -> (fun (V3828, V3829) -> begin (V3840 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3830) -> fun (V3831) -> case V3830 of {'Idris.Builtin.MkPair', E916, E917} -> (fun (V3832, V3833) -> begin (V3834 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3804, V3833))(V3831))), case V3834 of {'Idris.Prelude.Types.Left', E918} -> (fun (V3835) -> {'Idris.Prelude.Types.Left', V3835} end(E918)); {'Idris.Prelude.Types.Right', E919} -> (fun (V3836) -> begin (V3837 = (('un--nfToCFType'(V0, V3796, 1, V3836))(V3831))), case V3837 of {'Idris.Prelude.Types.Left', E920} -> (fun (V3838) -> {'Idris.Prelude.Types.Left', V3838} end(E920)); {'Idris.Prelude.Types.Right', E921} -> (fun (V3839) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3832, V3839}} end(E921)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E919)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E916, E917)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3829, [], V3791))), case V3840 of {'Idris.Prelude.Types.Left', E922} -> (fun (V3841) -> {'Idris.Prelude.Types.Left', V3841} end(E922)); {'Idris.Prelude.Types.Right', E923} -> (fun (V3842) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3828, V3842}} end(E923)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E914, E915)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E924} -> (fun (V3843) -> begin (V3844 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3804, V3843))(V3791))), case V3844 of {'Idris.Prelude.Types.Left', E925} -> (fun (V3845) -> {'Idris.Prelude.Types.Left', V3845} end(E925)); {'Idris.Prelude.Types.Right', E926} -> (fun (V3846) -> begin (V3847 = (('un--nfToCFType'(V0, V3796, V2, V3846))(V3791))), case V3847 of {'Idris.Prelude.Types.Left', E927} -> (fun (V3848) -> {'Idris.Prelude.Types.Left', V3848} end(E927)); {'Idris.Prelude.Types.Right', E928} -> (fun (V3849) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3849}} end(E928)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E926)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E924)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E907)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E905)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E903)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E897, E898, E899, E900, E901)); {'Idris.Core.Value.NType', E929} -> (fun (V3850) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E929)); {'Idris.Core.Value.NErased', E930, E931} -> (fun (V3851, V3852) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E930, E931)); _ -> begin (V3854 = begin (V3853 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3853} end), case V3854 of {'Idris.Prelude.Types.Left', E891} -> (fun (V3855) -> {'Idris.Prelude.Types.Left', V3855} end(E891)); {'Idris.Prelude.Types.Right', E892} -> (fun (V3856) -> begin (V3857 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V3856, {'Idris.Core.Env.Nil'}, V3, V3791))), case V3857 of {'Idris.Prelude.Types.Left', E893} -> (fun (V3858) -> {'Idris.Prelude.Types.Left', V3858} end(E893)); {'Idris.Prelude.Types.Right', E894} -> (fun (V3859) -> begin (V3866 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3860) -> fun (V3861) -> fun (V3862) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3860, V3861, V3862)) end end end, fun (V3863) -> fun (V3864) -> fun (V3865) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3863, V3864, V3865)) end end end}, V3859, V3791))), case V3866 of {'Idris.Prelude.Types.Left', E895} -> (fun (V3867) -> {'Idris.Prelude.Types.Left', V3867} end(E895)); {'Idris.Prelude.Types.Right', E896} -> (fun (V3868) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3868))))}, V3791)) end(E896)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E894)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E892)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V3869) -> case V3 of {'Idris.Core.Value.NTCon', E756, E757, E758, E759, E760} -> (fun (V3870, V3871, V3872, V3873, V3874) -> begin (V3876 = begin (V3875 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3875} end), case V3876 of {'Idris.Prelude.Types.Left', E761} -> (fun (V3877) -> {'Idris.Prelude.Types.Left', V3877} end(E761)); {'Idris.Prelude.Types.Right', E762} -> (fun (V3878) -> begin (V3885 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3879) -> fun (V3880) -> fun (V3881) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3879, V3880, V3881)) end end end, fun (V3882) -> fun (V3883) -> fun (V3884) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3882, V3883, V3884)) end end end}, V3871, V3869))), case V3885 of {'Idris.Prelude.Types.Left', E763} -> (fun (V3886) -> {'Idris.Prelude.Types.Left', V3886} end(E763)); {'Idris.Prelude.Types.Right', E764} -> (fun (V3887) -> begin (V3889 = (('un--getNArgs'(V0, V3878, V3887, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3888) -> ('Idris.Idris2.Builtin':'un--snd'(V3888)) end, V3874))))(V3869))), case V3889 of {'Idris.Prelude.Types.Left', E765} -> (fun (V3890) -> {'Idris.Prelude.Types.Left', V3890} end(E765)); {'Idris.Prelude.Types.Right', E766} -> (fun (V3891) -> case V3891 of {'Idris.Compiler.CompileExpr.User', E767, E768} -> (fun (V3892, V3893) -> begin (V3895 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3894) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3878, V3894)) end, V3893, [], V3869))), case V3895 of {'Idris.Prelude.Types.Left', E769} -> (fun (V3896) -> {'Idris.Prelude.Types.Left', V3896} end(E769)); {'Idris.Prelude.Types.Right', E770} -> (fun (V3897) -> begin (V3899 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3898) -> ('un--nfToCFType'(V0, V3870, V2, V3898)) end, V3897, [], V3869))), case V3899 of {'Idris.Prelude.Types.Left', E771} -> (fun (V3900) -> {'Idris.Prelude.Types.Left', V3900} end(E771)); {'Idris.Prelude.Types.Right', E772} -> (fun (V3901) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3887, V3901}} end(E772)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E770)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E767, E768)); {'Idris.Compiler.CompileExpr.Struct', E773, E774} -> (fun (V3902, V3903) -> begin (V3914 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3904) -> fun (V3905) -> case V3904 of {'Idris.Builtin.MkPair', E775, E776} -> (fun (V3906, V3907) -> begin (V3908 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3878, V3907))(V3905))), case V3908 of {'Idris.Prelude.Types.Left', E777} -> (fun (V3909) -> {'Idris.Prelude.Types.Left', V3909} end(E777)); {'Idris.Prelude.Types.Right', E778} -> (fun (V3910) -> begin (V3911 = (('un--nfToCFType'(V0, V3870, 1, V3910))(V3905))), case V3911 of {'Idris.Prelude.Types.Left', E779} -> (fun (V3912) -> {'Idris.Prelude.Types.Left', V3912} end(E779)); {'Idris.Prelude.Types.Right', E780} -> (fun (V3913) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V3906, V3913}} end(E780)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E778)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E775, E776)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3903, [], V3869))), case V3914 of {'Idris.Prelude.Types.Left', E781} -> (fun (V3915) -> {'Idris.Prelude.Types.Left', V3915} end(E781)); {'Idris.Prelude.Types.Right', E782} -> (fun (V3916) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V3902, V3916}} end(E782)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E773, E774)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E783} -> (fun (V3917) -> begin (V3918 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3878, V3917))(V3869))), case V3918 of {'Idris.Prelude.Types.Left', E784} -> (fun (V3919) -> {'Idris.Prelude.Types.Left', V3919} end(E784)); {'Idris.Prelude.Types.Right', E785} -> (fun (V3920) -> begin (V3921 = (('un--nfToCFType'(V0, V3870, V2, V3920))(V3869))), case V3921 of {'Idris.Prelude.Types.Left', E786} -> (fun (V3922) -> {'Idris.Prelude.Types.Left', V3922} end(E786)); {'Idris.Prelude.Types.Right', E787} -> (fun (V3923) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V3923}} end(E787)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E785)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E783)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E766)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E764)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E762)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E756, E757, E758, E759, E760)); {'Idris.Core.Value.NType', E788} -> (fun (V3924) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E788)); {'Idris.Core.Value.NErased', E789, E790} -> (fun (V3925, V3926) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E789, E790)); _ -> begin (V3928 = begin (V3927 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3927} end), case V3928 of {'Idris.Prelude.Types.Left', E750} -> (fun (V3929) -> {'Idris.Prelude.Types.Left', V3929} end(E750)); {'Idris.Prelude.Types.Right', E751} -> (fun (V3930) -> begin (V3931 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V3930, {'Idris.Core.Env.Nil'}, V3, V3869))), case V3931 of {'Idris.Prelude.Types.Left', E752} -> (fun (V3932) -> {'Idris.Prelude.Types.Left', V3932} end(E752)); {'Idris.Prelude.Types.Right', E753} -> (fun (V3933) -> begin (V3940 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3934) -> fun (V3935) -> fun (V3936) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V3934, V3935, V3936)) end end end, fun (V3937) -> fun (V3938) -> fun (V3939) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V3937, V3938, V3939)) end end end}, V3933, V3869))), case V3940 of {'Idris.Prelude.Types.Left', E754} -> (fun (V3941) -> {'Idris.Prelude.Types.Left', V3941} end(E754)); {'Idris.Prelude.Types.Right', E755} -> (fun (V3942) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V3942))))}, V3869)) end(E755)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E753)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E751)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end(E748, E749)); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E560, E561} -> (fun (V3943, V3944) -> case V3944 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V3945) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V3946) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V3947) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E644, E645, E646, E647} -> (fun (V3948, V3949, V3950, V3951) -> fun (V3952) -> case V3950 of {'Idris.Core.TT.Pi', E689, E690, E691, E692} -> (fun (V3953, V3954, V3955, V3956) -> begin (V3958 = begin (V3957 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3957} end), case V3958 of {'Idris.Prelude.Types.Left', E693} -> (fun (V3959) -> {'Idris.Prelude.Types.Left', V3959} end(E693)); {'Idris.Prelude.Types.Right', E694} -> (fun (V3960) -> begin (V3964 = begin (V3961 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3960, V3956))(V3952))), case V3961 of {'Idris.Prelude.Types.Left', E695} -> (fun (V3962) -> {'Idris.Prelude.Types.Left', V3962} end(E695)); {'Idris.Prelude.Types.Right', E696} -> (fun (V3963) -> (('un--nfToCFType'(V0, V3948, 0, V3963))(V3952)) end(E696)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V3964 of {'Idris.Prelude.Types.Left', E697} -> (fun (V3965) -> {'Idris.Prelude.Types.Left', V3965} end(E697)); {'Idris.Prelude.Types.Right', E698} -> (fun (V3966) -> begin (V3967 = (((V3951(V3960))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V3948, 0}))))(V3952))), case V3967 of {'Idris.Prelude.Types.Left', E699} -> (fun (V3968) -> {'Idris.Prelude.Types.Left', V3968} end(E699)); {'Idris.Prelude.Types.Right', E700} -> (fun (V3969) -> begin (V3970 = (('un--nfToCFType'(V0, V3948, 0, V3969))(V3952))), case V3970 of {'Idris.Prelude.Types.Left', E701} -> (fun (V3971) -> {'Idris.Prelude.Types.Left', V3971} end(E701)); {'Idris.Prelude.Types.Right', E702} -> (fun (V3972) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V3966, V3972}} end(E702)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E700)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E698)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E694)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E689, E690, E691, E692)); _ -> case V3 of {'Idris.Core.Value.NTCon', E654, E655, E656, E657, E658} -> (fun (V3973, V3974, V3975, V3976, V3977) -> begin (V3979 = begin (V3978 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3978} end), case V3979 of {'Idris.Prelude.Types.Left', E659} -> (fun (V3980) -> {'Idris.Prelude.Types.Left', V3980} end(E659)); {'Idris.Prelude.Types.Right', E660} -> (fun (V3981) -> begin (V3988 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V3982) -> fun (V3983) -> fun (V3984) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V3982, V3983, V3984)) end end end, fun (V3985) -> fun (V3986) -> fun (V3987) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V3985, V3986, V3987)) end end end}, V3974, V3952))), case V3988 of {'Idris.Prelude.Types.Left', E661} -> (fun (V3989) -> {'Idris.Prelude.Types.Left', V3989} end(E661)); {'Idris.Prelude.Types.Right', E662} -> (fun (V3990) -> begin (V3992 = (('un--getNArgs'(V0, V3981, V3990, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3991) -> ('Idris.Idris2.Builtin':'un--snd'(V3991)) end, V3977))))(V3952))), case V3992 of {'Idris.Prelude.Types.Left', E663} -> (fun (V3993) -> {'Idris.Prelude.Types.Left', V3993} end(E663)); {'Idris.Prelude.Types.Right', E664} -> (fun (V3994) -> case V3994 of {'Idris.Compiler.CompileExpr.User', E665, E666} -> (fun (V3995, V3996) -> begin (V3998 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3997) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3981, V3997)) end, V3996, [], V3952))), case V3998 of {'Idris.Prelude.Types.Left', E667} -> (fun (V3999) -> {'Idris.Prelude.Types.Left', V3999} end(E667)); {'Idris.Prelude.Types.Right', E668} -> (fun (V4000) -> begin (V4002 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4001) -> ('un--nfToCFType'(V0, V3973, V2, V4001)) end, V4000, [], V3952))), case V4002 of {'Idris.Prelude.Types.Left', E669} -> (fun (V4003) -> {'Idris.Prelude.Types.Left', V4003} end(E669)); {'Idris.Prelude.Types.Right', E670} -> (fun (V4004) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V3990, V4004}} end(E670)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E668)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E665, E666)); {'Idris.Compiler.CompileExpr.Struct', E671, E672} -> (fun (V4005, V4006) -> begin (V4017 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4007) -> fun (V4008) -> case V4007 of {'Idris.Builtin.MkPair', E673, E674} -> (fun (V4009, V4010) -> begin (V4011 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3981, V4010))(V4008))), case V4011 of {'Idris.Prelude.Types.Left', E675} -> (fun (V4012) -> {'Idris.Prelude.Types.Left', V4012} end(E675)); {'Idris.Prelude.Types.Right', E676} -> (fun (V4013) -> begin (V4014 = (('un--nfToCFType'(V0, V3973, 1, V4013))(V4008))), case V4014 of {'Idris.Prelude.Types.Left', E677} -> (fun (V4015) -> {'Idris.Prelude.Types.Left', V4015} end(E677)); {'Idris.Prelude.Types.Right', E678} -> (fun (V4016) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4009, V4016}} end(E678)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E676)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E673, E674)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4006, [], V3952))), case V4017 of {'Idris.Prelude.Types.Left', E679} -> (fun (V4018) -> {'Idris.Prelude.Types.Left', V4018} end(E679)); {'Idris.Prelude.Types.Right', E680} -> (fun (V4019) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4005, V4019}} end(E680)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E671, E672)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E681} -> (fun (V4020) -> begin (V4021 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V3981, V4020))(V3952))), case V4021 of {'Idris.Prelude.Types.Left', E682} -> (fun (V4022) -> {'Idris.Prelude.Types.Left', V4022} end(E682)); {'Idris.Prelude.Types.Right', E683} -> (fun (V4023) -> begin (V4024 = (('un--nfToCFType'(V0, V3973, V2, V4023))(V3952))), case V4024 of {'Idris.Prelude.Types.Left', E684} -> (fun (V4025) -> {'Idris.Prelude.Types.Left', V4025} end(E684)); {'Idris.Prelude.Types.Right', E685} -> (fun (V4026) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4026}} end(E685)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E683)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E681)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E664)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E662)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E660)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E654, E655, E656, E657, E658)); {'Idris.Core.Value.NType', E686} -> (fun (V4027) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E686)); {'Idris.Core.Value.NErased', E687, E688} -> (fun (V4028, V4029) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E687, E688)); _ -> begin (V4031 = begin (V4030 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4030} end), case V4031 of {'Idris.Prelude.Types.Left', E648} -> (fun (V4032) -> {'Idris.Prelude.Types.Left', V4032} end(E648)); {'Idris.Prelude.Types.Right', E649} -> (fun (V4033) -> begin (V4034 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V4033, {'Idris.Core.Env.Nil'}, V3, V3952))), case V4034 of {'Idris.Prelude.Types.Left', E650} -> (fun (V4035) -> {'Idris.Prelude.Types.Left', V4035} end(E650)); {'Idris.Prelude.Types.Right', E651} -> (fun (V4036) -> begin (V4043 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4037) -> fun (V4038) -> fun (V4039) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4037, V4038, V4039)) end end end, fun (V4040) -> fun (V4041) -> fun (V4042) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4040, V4041, V4042)) end end end}, V4036, V3952))), case V4043 of {'Idris.Prelude.Types.Left', E652} -> (fun (V4044) -> {'Idris.Prelude.Types.Left', V4044} end(E652)); {'Idris.Prelude.Types.Right', E653} -> (fun (V4045) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4045))))}, V3952)) end(E653)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E651)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E649)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E644, E645, E646, E647)); _ -> fun (V4046) -> case V3 of {'Idris.Core.Value.NTCon', E609, E610, E611, E612, E613} -> (fun (V4047, V4048, V4049, V4050, V4051) -> begin (V4053 = begin (V4052 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4052} end), case V4053 of {'Idris.Prelude.Types.Left', E614} -> (fun (V4054) -> {'Idris.Prelude.Types.Left', V4054} end(E614)); {'Idris.Prelude.Types.Right', E615} -> (fun (V4055) -> begin (V4062 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4056) -> fun (V4057) -> fun (V4058) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4056, V4057, V4058)) end end end, fun (V4059) -> fun (V4060) -> fun (V4061) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4059, V4060, V4061)) end end end}, V4048, V4046))), case V4062 of {'Idris.Prelude.Types.Left', E616} -> (fun (V4063) -> {'Idris.Prelude.Types.Left', V4063} end(E616)); {'Idris.Prelude.Types.Right', E617} -> (fun (V4064) -> begin (V4066 = (('un--getNArgs'(V0, V4055, V4064, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4065) -> ('Idris.Idris2.Builtin':'un--snd'(V4065)) end, V4051))))(V4046))), case V4066 of {'Idris.Prelude.Types.Left', E618} -> (fun (V4067) -> {'Idris.Prelude.Types.Left', V4067} end(E618)); {'Idris.Prelude.Types.Right', E619} -> (fun (V4068) -> case V4068 of {'Idris.Compiler.CompileExpr.User', E620, E621} -> (fun (V4069, V4070) -> begin (V4072 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4071) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4055, V4071)) end, V4070, [], V4046))), case V4072 of {'Idris.Prelude.Types.Left', E622} -> (fun (V4073) -> {'Idris.Prelude.Types.Left', V4073} end(E622)); {'Idris.Prelude.Types.Right', E623} -> (fun (V4074) -> begin (V4076 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4075) -> ('un--nfToCFType'(V0, V4047, V2, V4075)) end, V4074, [], V4046))), case V4076 of {'Idris.Prelude.Types.Left', E624} -> (fun (V4077) -> {'Idris.Prelude.Types.Left', V4077} end(E624)); {'Idris.Prelude.Types.Right', E625} -> (fun (V4078) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4064, V4078}} end(E625)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E623)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E620, E621)); {'Idris.Compiler.CompileExpr.Struct', E626, E627} -> (fun (V4079, V4080) -> begin (V4091 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4081) -> fun (V4082) -> case V4081 of {'Idris.Builtin.MkPair', E628, E629} -> (fun (V4083, V4084) -> begin (V4085 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4055, V4084))(V4082))), case V4085 of {'Idris.Prelude.Types.Left', E630} -> (fun (V4086) -> {'Idris.Prelude.Types.Left', V4086} end(E630)); {'Idris.Prelude.Types.Right', E631} -> (fun (V4087) -> begin (V4088 = (('un--nfToCFType'(V0, V4047, 1, V4087))(V4082))), case V4088 of {'Idris.Prelude.Types.Left', E632} -> (fun (V4089) -> {'Idris.Prelude.Types.Left', V4089} end(E632)); {'Idris.Prelude.Types.Right', E633} -> (fun (V4090) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4083, V4090}} end(E633)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E631)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E628, E629)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4080, [], V4046))), case V4091 of {'Idris.Prelude.Types.Left', E634} -> (fun (V4092) -> {'Idris.Prelude.Types.Left', V4092} end(E634)); {'Idris.Prelude.Types.Right', E635} -> (fun (V4093) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4079, V4093}} end(E635)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E626, E627)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E636} -> (fun (V4094) -> begin (V4095 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4055, V4094))(V4046))), case V4095 of {'Idris.Prelude.Types.Left', E637} -> (fun (V4096) -> {'Idris.Prelude.Types.Left', V4096} end(E637)); {'Idris.Prelude.Types.Right', E638} -> (fun (V4097) -> begin (V4098 = (('un--nfToCFType'(V0, V4047, V2, V4097))(V4046))), case V4098 of {'Idris.Prelude.Types.Left', E639} -> (fun (V4099) -> {'Idris.Prelude.Types.Left', V4099} end(E639)); {'Idris.Prelude.Types.Right', E640} -> (fun (V4100) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4100}} end(E640)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E638)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E636)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E619)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E617)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E615)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E609, E610, E611, E612, E613)); {'Idris.Core.Value.NType', E641} -> (fun (V4101) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E641)); {'Idris.Core.Value.NErased', E642, E643} -> (fun (V4102, V4103) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E642, E643)); _ -> begin (V4105 = begin (V4104 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4104} end), case V4105 of {'Idris.Prelude.Types.Left', E603} -> (fun (V4106) -> {'Idris.Prelude.Types.Left', V4106} end(E603)); {'Idris.Prelude.Types.Right', E604} -> (fun (V4107) -> begin (V4108 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V4107, {'Idris.Core.Env.Nil'}, V3, V4046))), case V4108 of {'Idris.Prelude.Types.Left', E605} -> (fun (V4109) -> {'Idris.Prelude.Types.Left', V4109} end(E605)); {'Idris.Prelude.Types.Right', E606} -> (fun (V4110) -> begin (V4117 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4111) -> fun (V4112) -> fun (V4113) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4111, V4112, V4113)) end end end, fun (V4114) -> fun (V4115) -> fun (V4116) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4114, V4115, V4116)) end end end}, V4110, V4046))), case V4117 of {'Idris.Prelude.Types.Left', E607} -> (fun (V4118) -> {'Idris.Prelude.Types.Left', V4118} end(E607)); {'Idris.Prelude.Types.Right', E608} -> (fun (V4119) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4119))))}, V4046)) end(E608)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E606)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E604)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V4120) -> case V3 of {'Idris.Core.Value.NBind', E744, E745, E746, E747} -> (fun (V4121, V4122, V4123, V4124) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V4121, <<"Function types not allowed in a foreign struct"/utf8>>}, V4120)) end(E744, E745, E746, E747)); _ -> case V3 of {'Idris.Core.Value.NTCon', E709, E710, E711, E712, E713} -> (fun (V4125, V4126, V4127, V4128, V4129) -> begin (V4131 = begin (V4130 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4130} end), case V4131 of {'Idris.Prelude.Types.Left', E714} -> (fun (V4132) -> {'Idris.Prelude.Types.Left', V4132} end(E714)); {'Idris.Prelude.Types.Right', E715} -> (fun (V4133) -> begin (V4140 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4134) -> fun (V4135) -> fun (V4136) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4134, V4135, V4136)) end end end, fun (V4137) -> fun (V4138) -> fun (V4139) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4137, V4138, V4139)) end end end}, V4126, V4120))), case V4140 of {'Idris.Prelude.Types.Left', E716} -> (fun (V4141) -> {'Idris.Prelude.Types.Left', V4141} end(E716)); {'Idris.Prelude.Types.Right', E717} -> (fun (V4142) -> begin (V4144 = (('un--getNArgs'(V0, V4133, V4142, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4143) -> ('Idris.Idris2.Builtin':'un--snd'(V4143)) end, V4129))))(V4120))), case V4144 of {'Idris.Prelude.Types.Left', E718} -> (fun (V4145) -> {'Idris.Prelude.Types.Left', V4145} end(E718)); {'Idris.Prelude.Types.Right', E719} -> (fun (V4146) -> case V4146 of {'Idris.Compiler.CompileExpr.User', E720, E721} -> (fun (V4147, V4148) -> begin (V4150 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4149) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4133, V4149)) end, V4148, [], V4120))), case V4150 of {'Idris.Prelude.Types.Left', E722} -> (fun (V4151) -> {'Idris.Prelude.Types.Left', V4151} end(E722)); {'Idris.Prelude.Types.Right', E723} -> (fun (V4152) -> begin (V4154 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4153) -> ('un--nfToCFType'(V0, V4125, V2, V4153)) end, V4152, [], V4120))), case V4154 of {'Idris.Prelude.Types.Left', E724} -> (fun (V4155) -> {'Idris.Prelude.Types.Left', V4155} end(E724)); {'Idris.Prelude.Types.Right', E725} -> (fun (V4156) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4142, V4156}} end(E725)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E723)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E720, E721)); {'Idris.Compiler.CompileExpr.Struct', E726, E727} -> (fun (V4157, V4158) -> begin (V4169 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4159) -> fun (V4160) -> case V4159 of {'Idris.Builtin.MkPair', E728, E729} -> (fun (V4161, V4162) -> begin (V4163 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4133, V4162))(V4160))), case V4163 of {'Idris.Prelude.Types.Left', E730} -> (fun (V4164) -> {'Idris.Prelude.Types.Left', V4164} end(E730)); {'Idris.Prelude.Types.Right', E731} -> (fun (V4165) -> begin (V4166 = (('un--nfToCFType'(V0, V4125, 1, V4165))(V4160))), case V4166 of {'Idris.Prelude.Types.Left', E732} -> (fun (V4167) -> {'Idris.Prelude.Types.Left', V4167} end(E732)); {'Idris.Prelude.Types.Right', E733} -> (fun (V4168) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4161, V4168}} end(E733)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E731)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E728, E729)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4158, [], V4120))), case V4169 of {'Idris.Prelude.Types.Left', E734} -> (fun (V4170) -> {'Idris.Prelude.Types.Left', V4170} end(E734)); {'Idris.Prelude.Types.Right', E735} -> (fun (V4171) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4157, V4171}} end(E735)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E726, E727)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E736} -> (fun (V4172) -> begin (V4173 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4133, V4172))(V4120))), case V4173 of {'Idris.Prelude.Types.Left', E737} -> (fun (V4174) -> {'Idris.Prelude.Types.Left', V4174} end(E737)); {'Idris.Prelude.Types.Right', E738} -> (fun (V4175) -> begin (V4176 = (('un--nfToCFType'(V0, V4125, V2, V4175))(V4120))), case V4176 of {'Idris.Prelude.Types.Left', E739} -> (fun (V4177) -> {'Idris.Prelude.Types.Left', V4177} end(E739)); {'Idris.Prelude.Types.Right', E740} -> (fun (V4178) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4178}} end(E740)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E738)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E736)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E719)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E717)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E715)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E709, E710, E711, E712, E713)); {'Idris.Core.Value.NType', E741} -> (fun (V4179) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E741)); {'Idris.Core.Value.NErased', E742, E743} -> (fun (V4180, V4181) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E742, E743)); _ -> begin (V4183 = begin (V4182 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4182} end), case V4183 of {'Idris.Prelude.Types.Left', E703} -> (fun (V4184) -> {'Idris.Prelude.Types.Left', V4184} end(E703)); {'Idris.Prelude.Types.Right', E704} -> (fun (V4185) -> begin (V4186 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V4185, {'Idris.Core.Env.Nil'}, V3, V4120))), case V4186 of {'Idris.Prelude.Types.Left', E705} -> (fun (V4187) -> {'Idris.Prelude.Types.Left', V4187} end(E705)); {'Idris.Prelude.Types.Right', E706} -> (fun (V4188) -> begin (V4195 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4189) -> fun (V4190) -> fun (V4191) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4189, V4190, V4191)) end end end, fun (V4192) -> fun (V4193) -> fun (V4194) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4192, V4193, V4194)) end end end}, V4188, V4120))), case V4195 of {'Idris.Prelude.Types.Left', E707} -> (fun (V4196) -> {'Idris.Prelude.Types.Left', V4196} end(E707)); {'Idris.Prelude.Types.Right', E708} -> (fun (V4197) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4197))))}, V4120)) end(E708)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E706)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E704)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V4198) -> case V3 of {'Idris.Core.Value.NTCon', E568, E569, E570, E571, E572} -> (fun (V4199, V4200, V4201, V4202, V4203) -> begin (V4205 = begin (V4204 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4204} end), case V4205 of {'Idris.Prelude.Types.Left', E573} -> (fun (V4206) -> {'Idris.Prelude.Types.Left', V4206} end(E573)); {'Idris.Prelude.Types.Right', E574} -> (fun (V4207) -> begin (V4214 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4208) -> fun (V4209) -> fun (V4210) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4208, V4209, V4210)) end end end, fun (V4211) -> fun (V4212) -> fun (V4213) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4211, V4212, V4213)) end end end}, V4200, V4198))), case V4214 of {'Idris.Prelude.Types.Left', E575} -> (fun (V4215) -> {'Idris.Prelude.Types.Left', V4215} end(E575)); {'Idris.Prelude.Types.Right', E576} -> (fun (V4216) -> begin (V4218 = (('un--getNArgs'(V0, V4207, V4216, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4217) -> ('Idris.Idris2.Builtin':'un--snd'(V4217)) end, V4203))))(V4198))), case V4218 of {'Idris.Prelude.Types.Left', E577} -> (fun (V4219) -> {'Idris.Prelude.Types.Left', V4219} end(E577)); {'Idris.Prelude.Types.Right', E578} -> (fun (V4220) -> case V4220 of {'Idris.Compiler.CompileExpr.User', E579, E580} -> (fun (V4221, V4222) -> begin (V4224 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4223) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4207, V4223)) end, V4222, [], V4198))), case V4224 of {'Idris.Prelude.Types.Left', E581} -> (fun (V4225) -> {'Idris.Prelude.Types.Left', V4225} end(E581)); {'Idris.Prelude.Types.Right', E582} -> (fun (V4226) -> begin (V4228 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4227) -> ('un--nfToCFType'(V0, V4199, V2, V4227)) end, V4226, [], V4198))), case V4228 of {'Idris.Prelude.Types.Left', E583} -> (fun (V4229) -> {'Idris.Prelude.Types.Left', V4229} end(E583)); {'Idris.Prelude.Types.Right', E584} -> (fun (V4230) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4216, V4230}} end(E584)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E582)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E579, E580)); {'Idris.Compiler.CompileExpr.Struct', E585, E586} -> (fun (V4231, V4232) -> begin (V4243 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4233) -> fun (V4234) -> case V4233 of {'Idris.Builtin.MkPair', E587, E588} -> (fun (V4235, V4236) -> begin (V4237 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4207, V4236))(V4234))), case V4237 of {'Idris.Prelude.Types.Left', E589} -> (fun (V4238) -> {'Idris.Prelude.Types.Left', V4238} end(E589)); {'Idris.Prelude.Types.Right', E590} -> (fun (V4239) -> begin (V4240 = (('un--nfToCFType'(V0, V4199, 1, V4239))(V4234))), case V4240 of {'Idris.Prelude.Types.Left', E591} -> (fun (V4241) -> {'Idris.Prelude.Types.Left', V4241} end(E591)); {'Idris.Prelude.Types.Right', E592} -> (fun (V4242) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4235, V4242}} end(E592)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E590)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E587, E588)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4232, [], V4198))), case V4243 of {'Idris.Prelude.Types.Left', E593} -> (fun (V4244) -> {'Idris.Prelude.Types.Left', V4244} end(E593)); {'Idris.Prelude.Types.Right', E594} -> (fun (V4245) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4231, V4245}} end(E594)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E585, E586)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E595} -> (fun (V4246) -> begin (V4247 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4207, V4246))(V4198))), case V4247 of {'Idris.Prelude.Types.Left', E596} -> (fun (V4248) -> {'Idris.Prelude.Types.Left', V4248} end(E596)); {'Idris.Prelude.Types.Right', E597} -> (fun (V4249) -> begin (V4250 = (('un--nfToCFType'(V0, V4199, V2, V4249))(V4198))), case V4250 of {'Idris.Prelude.Types.Left', E598} -> (fun (V4251) -> {'Idris.Prelude.Types.Left', V4251} end(E598)); {'Idris.Prelude.Types.Right', E599} -> (fun (V4252) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4252}} end(E599)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E597)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E595)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E578)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E576)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E574)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E568, E569, E570, E571, E572)); {'Idris.Core.Value.NType', E600} -> (fun (V4253) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E600)); {'Idris.Core.Value.NErased', E601, E602} -> (fun (V4254, V4255) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E601, E602)); _ -> begin (V4257 = begin (V4256 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4256} end), case V4257 of {'Idris.Prelude.Types.Left', E562} -> (fun (V4258) -> {'Idris.Prelude.Types.Left', V4258} end(E562)); {'Idris.Prelude.Types.Right', E563} -> (fun (V4259) -> begin (V4260 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V4259, {'Idris.Core.Env.Nil'}, V3, V4198))), case V4260 of {'Idris.Prelude.Types.Left', E564} -> (fun (V4261) -> {'Idris.Prelude.Types.Left', V4261} end(E564)); {'Idris.Prelude.Types.Right', E565} -> (fun (V4262) -> begin (V4269 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4263) -> fun (V4264) -> fun (V4265) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4263, V4264, V4265)) end end end, fun (V4266) -> fun (V4267) -> fun (V4268) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4266, V4267, V4268)) end end end}, V4262, V4198))), case V4269 of {'Idris.Prelude.Types.Left', E566} -> (fun (V4270) -> {'Idris.Prelude.Types.Left', V4270} end(E566)); {'Idris.Prelude.Types.Right', E567} -> (fun (V4271) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4271))))}, V4198)) end(E567)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E565)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E563)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E560, E561)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E456, E457, E458, E459} -> (fun (V4272, V4273, V4274, V4275) -> fun (V4276) -> case V4274 of {'Idris.Core.TT.Pi', E501, E502, E503, E504} -> (fun (V4277, V4278, V4279, V4280) -> begin (V4282 = begin (V4281 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4281} end), case V4282 of {'Idris.Prelude.Types.Left', E505} -> (fun (V4283) -> {'Idris.Prelude.Types.Left', V4283} end(E505)); {'Idris.Prelude.Types.Right', E506} -> (fun (V4284) -> begin (V4288 = begin (V4285 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4284, V4280))(V4276))), case V4285 of {'Idris.Prelude.Types.Left', E507} -> (fun (V4286) -> {'Idris.Prelude.Types.Left', V4286} end(E507)); {'Idris.Prelude.Types.Right', E508} -> (fun (V4287) -> (('un--nfToCFType'(V0, V4272, 0, V4287))(V4276)) end(E508)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V4288 of {'Idris.Prelude.Types.Left', E509} -> (fun (V4289) -> {'Idris.Prelude.Types.Left', V4289} end(E509)); {'Idris.Prelude.Types.Right', E510} -> (fun (V4290) -> begin (V4291 = (((V4275(V4284))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V4272, 0}))))(V4276))), case V4291 of {'Idris.Prelude.Types.Left', E511} -> (fun (V4292) -> {'Idris.Prelude.Types.Left', V4292} end(E511)); {'Idris.Prelude.Types.Right', E512} -> (fun (V4293) -> begin (V4294 = (('un--nfToCFType'(V0, V4272, 0, V4293))(V4276))), case V4294 of {'Idris.Prelude.Types.Left', E513} -> (fun (V4295) -> {'Idris.Prelude.Types.Left', V4295} end(E513)); {'Idris.Prelude.Types.Right', E514} -> (fun (V4296) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V4290, V4296}} end(E514)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E512)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E510)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E506)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E501, E502, E503, E504)); _ -> case V3 of {'Idris.Core.Value.NTCon', E466, E467, E468, E469, E470} -> (fun (V4297, V4298, V4299, V4300, V4301) -> begin (V4303 = begin (V4302 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4302} end), case V4303 of {'Idris.Prelude.Types.Left', E471} -> (fun (V4304) -> {'Idris.Prelude.Types.Left', V4304} end(E471)); {'Idris.Prelude.Types.Right', E472} -> (fun (V4305) -> begin (V4312 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4306) -> fun (V4307) -> fun (V4308) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4306, V4307, V4308)) end end end, fun (V4309) -> fun (V4310) -> fun (V4311) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4309, V4310, V4311)) end end end}, V4298, V4276))), case V4312 of {'Idris.Prelude.Types.Left', E473} -> (fun (V4313) -> {'Idris.Prelude.Types.Left', V4313} end(E473)); {'Idris.Prelude.Types.Right', E474} -> (fun (V4314) -> begin (V4316 = (('un--getNArgs'(V0, V4305, V4314, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4315) -> ('Idris.Idris2.Builtin':'un--snd'(V4315)) end, V4301))))(V4276))), case V4316 of {'Idris.Prelude.Types.Left', E475} -> (fun (V4317) -> {'Idris.Prelude.Types.Left', V4317} end(E475)); {'Idris.Prelude.Types.Right', E476} -> (fun (V4318) -> case V4318 of {'Idris.Compiler.CompileExpr.User', E477, E478} -> (fun (V4319, V4320) -> begin (V4322 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4321) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4305, V4321)) end, V4320, [], V4276))), case V4322 of {'Idris.Prelude.Types.Left', E479} -> (fun (V4323) -> {'Idris.Prelude.Types.Left', V4323} end(E479)); {'Idris.Prelude.Types.Right', E480} -> (fun (V4324) -> begin (V4326 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4325) -> ('un--nfToCFType'(V0, V4297, V2, V4325)) end, V4324, [], V4276))), case V4326 of {'Idris.Prelude.Types.Left', E481} -> (fun (V4327) -> {'Idris.Prelude.Types.Left', V4327} end(E481)); {'Idris.Prelude.Types.Right', E482} -> (fun (V4328) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4314, V4328}} end(E482)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E480)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E477, E478)); {'Idris.Compiler.CompileExpr.Struct', E483, E484} -> (fun (V4329, V4330) -> begin (V4341 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4331) -> fun (V4332) -> case V4331 of {'Idris.Builtin.MkPair', E485, E486} -> (fun (V4333, V4334) -> begin (V4335 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4305, V4334))(V4332))), case V4335 of {'Idris.Prelude.Types.Left', E487} -> (fun (V4336) -> {'Idris.Prelude.Types.Left', V4336} end(E487)); {'Idris.Prelude.Types.Right', E488} -> (fun (V4337) -> begin (V4338 = (('un--nfToCFType'(V0, V4297, 1, V4337))(V4332))), case V4338 of {'Idris.Prelude.Types.Left', E489} -> (fun (V4339) -> {'Idris.Prelude.Types.Left', V4339} end(E489)); {'Idris.Prelude.Types.Right', E490} -> (fun (V4340) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4333, V4340}} end(E490)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E488)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E485, E486)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4330, [], V4276))), case V4341 of {'Idris.Prelude.Types.Left', E491} -> (fun (V4342) -> {'Idris.Prelude.Types.Left', V4342} end(E491)); {'Idris.Prelude.Types.Right', E492} -> (fun (V4343) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4329, V4343}} end(E492)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E483, E484)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E493} -> (fun (V4344) -> begin (V4345 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4305, V4344))(V4276))), case V4345 of {'Idris.Prelude.Types.Left', E494} -> (fun (V4346) -> {'Idris.Prelude.Types.Left', V4346} end(E494)); {'Idris.Prelude.Types.Right', E495} -> (fun (V4347) -> begin (V4348 = (('un--nfToCFType'(V0, V4297, V2, V4347))(V4276))), case V4348 of {'Idris.Prelude.Types.Left', E496} -> (fun (V4349) -> {'Idris.Prelude.Types.Left', V4349} end(E496)); {'Idris.Prelude.Types.Right', E497} -> (fun (V4350) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4350}} end(E497)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E495)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E493)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E476)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E474)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E472)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E466, E467, E468, E469, E470)); {'Idris.Core.Value.NType', E498} -> (fun (V4351) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E498)); {'Idris.Core.Value.NErased', E499, E500} -> (fun (V4352, V4353) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E499, E500)); _ -> begin (V4355 = begin (V4354 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4354} end), case V4355 of {'Idris.Prelude.Types.Left', E460} -> (fun (V4356) -> {'Idris.Prelude.Types.Left', V4356} end(E460)); {'Idris.Prelude.Types.Right', E461} -> (fun (V4357) -> begin (V4358 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V4357, {'Idris.Core.Env.Nil'}, V3, V4276))), case V4358 of {'Idris.Prelude.Types.Left', E462} -> (fun (V4359) -> {'Idris.Prelude.Types.Left', V4359} end(E462)); {'Idris.Prelude.Types.Right', E463} -> (fun (V4360) -> begin (V4367 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4361) -> fun (V4362) -> fun (V4363) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4361, V4362, V4363)) end end end, fun (V4364) -> fun (V4365) -> fun (V4366) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4364, V4365, V4366)) end end end}, V4360, V4276))), case V4367 of {'Idris.Prelude.Types.Left', E464} -> (fun (V4368) -> {'Idris.Prelude.Types.Left', V4368} end(E464)); {'Idris.Prelude.Types.Right', E465} -> (fun (V4369) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4369))))}, V4276)) end(E465)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E463)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E461)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E456, E457, E458, E459)); _ -> fun (V4370) -> case V3 of {'Idris.Core.Value.NTCon', E421, E422, E423, E424, E425} -> (fun (V4371, V4372, V4373, V4374, V4375) -> begin (V4377 = begin (V4376 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4376} end), case V4377 of {'Idris.Prelude.Types.Left', E426} -> (fun (V4378) -> {'Idris.Prelude.Types.Left', V4378} end(E426)); {'Idris.Prelude.Types.Right', E427} -> (fun (V4379) -> begin (V4386 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4380) -> fun (V4381) -> fun (V4382) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4380, V4381, V4382)) end end end, fun (V4383) -> fun (V4384) -> fun (V4385) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4383, V4384, V4385)) end end end}, V4372, V4370))), case V4386 of {'Idris.Prelude.Types.Left', E428} -> (fun (V4387) -> {'Idris.Prelude.Types.Left', V4387} end(E428)); {'Idris.Prelude.Types.Right', E429} -> (fun (V4388) -> begin (V4390 = (('un--getNArgs'(V0, V4379, V4388, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4389) -> ('Idris.Idris2.Builtin':'un--snd'(V4389)) end, V4375))))(V4370))), case V4390 of {'Idris.Prelude.Types.Left', E430} -> (fun (V4391) -> {'Idris.Prelude.Types.Left', V4391} end(E430)); {'Idris.Prelude.Types.Right', E431} -> (fun (V4392) -> case V4392 of {'Idris.Compiler.CompileExpr.User', E432, E433} -> (fun (V4393, V4394) -> begin (V4396 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4395) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4379, V4395)) end, V4394, [], V4370))), case V4396 of {'Idris.Prelude.Types.Left', E434} -> (fun (V4397) -> {'Idris.Prelude.Types.Left', V4397} end(E434)); {'Idris.Prelude.Types.Right', E435} -> (fun (V4398) -> begin (V4400 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4399) -> ('un--nfToCFType'(V0, V4371, V2, V4399)) end, V4398, [], V4370))), case V4400 of {'Idris.Prelude.Types.Left', E436} -> (fun (V4401) -> {'Idris.Prelude.Types.Left', V4401} end(E436)); {'Idris.Prelude.Types.Right', E437} -> (fun (V4402) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4388, V4402}} end(E437)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E435)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E432, E433)); {'Idris.Compiler.CompileExpr.Struct', E438, E439} -> (fun (V4403, V4404) -> begin (V4415 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4405) -> fun (V4406) -> case V4405 of {'Idris.Builtin.MkPair', E440, E441} -> (fun (V4407, V4408) -> begin (V4409 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4379, V4408))(V4406))), case V4409 of {'Idris.Prelude.Types.Left', E442} -> (fun (V4410) -> {'Idris.Prelude.Types.Left', V4410} end(E442)); {'Idris.Prelude.Types.Right', E443} -> (fun (V4411) -> begin (V4412 = (('un--nfToCFType'(V0, V4371, 1, V4411))(V4406))), case V4412 of {'Idris.Prelude.Types.Left', E444} -> (fun (V4413) -> {'Idris.Prelude.Types.Left', V4413} end(E444)); {'Idris.Prelude.Types.Right', E445} -> (fun (V4414) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4407, V4414}} end(E445)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E443)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E440, E441)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4404, [], V4370))), case V4415 of {'Idris.Prelude.Types.Left', E446} -> (fun (V4416) -> {'Idris.Prelude.Types.Left', V4416} end(E446)); {'Idris.Prelude.Types.Right', E447} -> (fun (V4417) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4403, V4417}} end(E447)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E438, E439)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E448} -> (fun (V4418) -> begin (V4419 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4379, V4418))(V4370))), case V4419 of {'Idris.Prelude.Types.Left', E449} -> (fun (V4420) -> {'Idris.Prelude.Types.Left', V4420} end(E449)); {'Idris.Prelude.Types.Right', E450} -> (fun (V4421) -> begin (V4422 = (('un--nfToCFType'(V0, V4371, V2, V4421))(V4370))), case V4422 of {'Idris.Prelude.Types.Left', E451} -> (fun (V4423) -> {'Idris.Prelude.Types.Left', V4423} end(E451)); {'Idris.Prelude.Types.Right', E452} -> (fun (V4424) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4424}} end(E452)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E450)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E448)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E431)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E429)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E427)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E421, E422, E423, E424, E425)); {'Idris.Core.Value.NType', E453} -> (fun (V4425) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E453)); {'Idris.Core.Value.NErased', E454, E455} -> (fun (V4426, V4427) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E454, E455)); _ -> begin (V4429 = begin (V4428 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4428} end), case V4429 of {'Idris.Prelude.Types.Left', E415} -> (fun (V4430) -> {'Idris.Prelude.Types.Left', V4430} end(E415)); {'Idris.Prelude.Types.Right', E416} -> (fun (V4431) -> begin (V4432 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V4431, {'Idris.Core.Env.Nil'}, V3, V4370))), case V4432 of {'Idris.Prelude.Types.Left', E417} -> (fun (V4433) -> {'Idris.Prelude.Types.Left', V4433} end(E417)); {'Idris.Prelude.Types.Right', E418} -> (fun (V4434) -> begin (V4441 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4435) -> fun (V4436) -> fun (V4437) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4435, V4436, V4437)) end end end, fun (V4438) -> fun (V4439) -> fun (V4440) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4438, V4439, V4440)) end end end}, V4434, V4370))), case V4441 of {'Idris.Prelude.Types.Left', E419} -> (fun (V4442) -> {'Idris.Prelude.Types.Left', V4442} end(E419)); {'Idris.Prelude.Types.Right', E420} -> (fun (V4443) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4443))))}, V4370)) end(E420)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E418)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E416)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V4444) -> case V3 of {'Idris.Core.Value.NBind', E556, E557, E558, E559} -> (fun (V4445, V4446, V4447, V4448) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V4445, <<"Function types not allowed in a foreign struct"/utf8>>}, V4444)) end(E556, E557, E558, E559)); _ -> case V3 of {'Idris.Core.Value.NTCon', E521, E522, E523, E524, E525} -> (fun (V4449, V4450, V4451, V4452, V4453) -> begin (V4455 = begin (V4454 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4454} end), case V4455 of {'Idris.Prelude.Types.Left', E526} -> (fun (V4456) -> {'Idris.Prelude.Types.Left', V4456} end(E526)); {'Idris.Prelude.Types.Right', E527} -> (fun (V4457) -> begin (V4464 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4458) -> fun (V4459) -> fun (V4460) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4458, V4459, V4460)) end end end, fun (V4461) -> fun (V4462) -> fun (V4463) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4461, V4462, V4463)) end end end}, V4450, V4444))), case V4464 of {'Idris.Prelude.Types.Left', E528} -> (fun (V4465) -> {'Idris.Prelude.Types.Left', V4465} end(E528)); {'Idris.Prelude.Types.Right', E529} -> (fun (V4466) -> begin (V4468 = (('un--getNArgs'(V0, V4457, V4466, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4467) -> ('Idris.Idris2.Builtin':'un--snd'(V4467)) end, V4453))))(V4444))), case V4468 of {'Idris.Prelude.Types.Left', E530} -> (fun (V4469) -> {'Idris.Prelude.Types.Left', V4469} end(E530)); {'Idris.Prelude.Types.Right', E531} -> (fun (V4470) -> case V4470 of {'Idris.Compiler.CompileExpr.User', E532, E533} -> (fun (V4471, V4472) -> begin (V4474 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4473) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4457, V4473)) end, V4472, [], V4444))), case V4474 of {'Idris.Prelude.Types.Left', E534} -> (fun (V4475) -> {'Idris.Prelude.Types.Left', V4475} end(E534)); {'Idris.Prelude.Types.Right', E535} -> (fun (V4476) -> begin (V4478 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4477) -> ('un--nfToCFType'(V0, V4449, V2, V4477)) end, V4476, [], V4444))), case V4478 of {'Idris.Prelude.Types.Left', E536} -> (fun (V4479) -> {'Idris.Prelude.Types.Left', V4479} end(E536)); {'Idris.Prelude.Types.Right', E537} -> (fun (V4480) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4466, V4480}} end(E537)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E535)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E532, E533)); {'Idris.Compiler.CompileExpr.Struct', E538, E539} -> (fun (V4481, V4482) -> begin (V4493 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4483) -> fun (V4484) -> case V4483 of {'Idris.Builtin.MkPair', E540, E541} -> (fun (V4485, V4486) -> begin (V4487 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4457, V4486))(V4484))), case V4487 of {'Idris.Prelude.Types.Left', E542} -> (fun (V4488) -> {'Idris.Prelude.Types.Left', V4488} end(E542)); {'Idris.Prelude.Types.Right', E543} -> (fun (V4489) -> begin (V4490 = (('un--nfToCFType'(V0, V4449, 1, V4489))(V4484))), case V4490 of {'Idris.Prelude.Types.Left', E544} -> (fun (V4491) -> {'Idris.Prelude.Types.Left', V4491} end(E544)); {'Idris.Prelude.Types.Right', E545} -> (fun (V4492) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4485, V4492}} end(E545)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E543)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E540, E541)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4482, [], V4444))), case V4493 of {'Idris.Prelude.Types.Left', E546} -> (fun (V4494) -> {'Idris.Prelude.Types.Left', V4494} end(E546)); {'Idris.Prelude.Types.Right', E547} -> (fun (V4495) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4481, V4495}} end(E547)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E538, E539)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E548} -> (fun (V4496) -> begin (V4497 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4457, V4496))(V4444))), case V4497 of {'Idris.Prelude.Types.Left', E549} -> (fun (V4498) -> {'Idris.Prelude.Types.Left', V4498} end(E549)); {'Idris.Prelude.Types.Right', E550} -> (fun (V4499) -> begin (V4500 = (('un--nfToCFType'(V0, V4449, V2, V4499))(V4444))), case V4500 of {'Idris.Prelude.Types.Left', E551} -> (fun (V4501) -> {'Idris.Prelude.Types.Left', V4501} end(E551)); {'Idris.Prelude.Types.Right', E552} -> (fun (V4502) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4502}} end(E552)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E550)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E548)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E531)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E529)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E527)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E521, E522, E523, E524, E525)); {'Idris.Core.Value.NType', E553} -> (fun (V4503) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E553)); {'Idris.Core.Value.NErased', E554, E555} -> (fun (V4504, V4505) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E554, E555)); _ -> begin (V4507 = begin (V4506 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4506} end), case V4507 of {'Idris.Prelude.Types.Left', E515} -> (fun (V4508) -> {'Idris.Prelude.Types.Left', V4508} end(E515)); {'Idris.Prelude.Types.Right', E516} -> (fun (V4509) -> begin (V4510 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V4509, {'Idris.Core.Env.Nil'}, V3, V4444))), case V4510 of {'Idris.Prelude.Types.Left', E517} -> (fun (V4511) -> {'Idris.Prelude.Types.Left', V4511} end(E517)); {'Idris.Prelude.Types.Right', E518} -> (fun (V4512) -> begin (V4519 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4513) -> fun (V4514) -> fun (V4515) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4513, V4514, V4515)) end end end, fun (V4516) -> fun (V4517) -> fun (V4518) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4516, V4517, V4518)) end end end}, V4512, V4444))), case V4519 of {'Idris.Prelude.Types.Left', E519} -> (fun (V4520) -> {'Idris.Prelude.Types.Left', V4520} end(E519)); {'Idris.Prelude.Types.Right', E520} -> (fun (V4521) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4521))))}, V4444)) end(E520)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E518)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E516)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V4522) -> case V3 of {'Idris.Core.Value.NTCon', E380, E381, E382, E383, E384} -> (fun (V4523, V4524, V4525, V4526, V4527) -> begin (V4529 = begin (V4528 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4528} end), case V4529 of {'Idris.Prelude.Types.Left', E385} -> (fun (V4530) -> {'Idris.Prelude.Types.Left', V4530} end(E385)); {'Idris.Prelude.Types.Right', E386} -> (fun (V4531) -> begin (V4538 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4532) -> fun (V4533) -> fun (V4534) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4532, V4533, V4534)) end end end, fun (V4535) -> fun (V4536) -> fun (V4537) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4535, V4536, V4537)) end end end}, V4524, V4522))), case V4538 of {'Idris.Prelude.Types.Left', E387} -> (fun (V4539) -> {'Idris.Prelude.Types.Left', V4539} end(E387)); {'Idris.Prelude.Types.Right', E388} -> (fun (V4540) -> begin (V4542 = (('un--getNArgs'(V0, V4531, V4540, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4541) -> ('Idris.Idris2.Builtin':'un--snd'(V4541)) end, V4527))))(V4522))), case V4542 of {'Idris.Prelude.Types.Left', E389} -> (fun (V4543) -> {'Idris.Prelude.Types.Left', V4543} end(E389)); {'Idris.Prelude.Types.Right', E390} -> (fun (V4544) -> case V4544 of {'Idris.Compiler.CompileExpr.User', E391, E392} -> (fun (V4545, V4546) -> begin (V4548 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4547) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4531, V4547)) end, V4546, [], V4522))), case V4548 of {'Idris.Prelude.Types.Left', E393} -> (fun (V4549) -> {'Idris.Prelude.Types.Left', V4549} end(E393)); {'Idris.Prelude.Types.Right', E394} -> (fun (V4550) -> begin (V4552 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4551) -> ('un--nfToCFType'(V0, V4523, V2, V4551)) end, V4550, [], V4522))), case V4552 of {'Idris.Prelude.Types.Left', E395} -> (fun (V4553) -> {'Idris.Prelude.Types.Left', V4553} end(E395)); {'Idris.Prelude.Types.Right', E396} -> (fun (V4554) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4540, V4554}} end(E396)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E394)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E391, E392)); {'Idris.Compiler.CompileExpr.Struct', E397, E398} -> (fun (V4555, V4556) -> begin (V4567 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4557) -> fun (V4558) -> case V4557 of {'Idris.Builtin.MkPair', E399, E400} -> (fun (V4559, V4560) -> begin (V4561 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4531, V4560))(V4558))), case V4561 of {'Idris.Prelude.Types.Left', E401} -> (fun (V4562) -> {'Idris.Prelude.Types.Left', V4562} end(E401)); {'Idris.Prelude.Types.Right', E402} -> (fun (V4563) -> begin (V4564 = (('un--nfToCFType'(V0, V4523, 1, V4563))(V4558))), case V4564 of {'Idris.Prelude.Types.Left', E403} -> (fun (V4565) -> {'Idris.Prelude.Types.Left', V4565} end(E403)); {'Idris.Prelude.Types.Right', E404} -> (fun (V4566) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4559, V4566}} end(E404)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E402)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E399, E400)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4556, [], V4522))), case V4567 of {'Idris.Prelude.Types.Left', E405} -> (fun (V4568) -> {'Idris.Prelude.Types.Left', V4568} end(E405)); {'Idris.Prelude.Types.Right', E406} -> (fun (V4569) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4555, V4569}} end(E406)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E397, E398)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E407} -> (fun (V4570) -> begin (V4571 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4531, V4570))(V4522))), case V4571 of {'Idris.Prelude.Types.Left', E408} -> (fun (V4572) -> {'Idris.Prelude.Types.Left', V4572} end(E408)); {'Idris.Prelude.Types.Right', E409} -> (fun (V4573) -> begin (V4574 = (('un--nfToCFType'(V0, V4523, V2, V4573))(V4522))), case V4574 of {'Idris.Prelude.Types.Left', E410} -> (fun (V4575) -> {'Idris.Prelude.Types.Left', V4575} end(E410)); {'Idris.Prelude.Types.Right', E411} -> (fun (V4576) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4576}} end(E411)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E409)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E407)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E390)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E388)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E386)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E380, E381, E382, E383, E384)); {'Idris.Core.Value.NType', E412} -> (fun (V4577) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E412)); {'Idris.Core.Value.NErased', E413, E414} -> (fun (V4578, V4579) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E413, E414)); _ -> begin (V4581 = begin (V4580 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4580} end), case V4581 of {'Idris.Prelude.Types.Left', E374} -> (fun (V4582) -> {'Idris.Prelude.Types.Left', V4582} end(E374)); {'Idris.Prelude.Types.Right', E375} -> (fun (V4583) -> begin (V4584 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V4583, {'Idris.Core.Env.Nil'}, V3, V4522))), case V4584 of {'Idris.Prelude.Types.Left', E376} -> (fun (V4585) -> {'Idris.Prelude.Types.Left', V4585} end(E376)); {'Idris.Prelude.Types.Right', E377} -> (fun (V4586) -> begin (V4593 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4587) -> fun (V4588) -> fun (V4589) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4587, V4588, V4589)) end end end, fun (V4590) -> fun (V4591) -> fun (V4592) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4590, V4591, V4592)) end end end}, V4586, V4522))), case V4593 of {'Idris.Prelude.Types.Left', E378} -> (fun (V4594) -> {'Idris.Prelude.Types.Left', V4594} end(E378)); {'Idris.Prelude.Types.Right', E379} -> (fun (V4595) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4595))))}, V4522)) end(E379)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E377)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E375)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end; 1 -> case V3 of {'Idris.Core.Value.NPrimVal', E1498, E1499} -> (fun (V4596, V4597) -> case V4597 of {'Idris.Core.TT.StringType'} -> (fun () -> fun (V4598) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V1, <<"String not allowed in a foreign struct"/utf8>>}, V4598)) end end()); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E1686, E1687} -> (fun (V4599, V4600) -> case V4600 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V4601) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V4602) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V4603) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E1770, E1771, E1772, E1773} -> (fun (V4604, V4605, V4606, V4607) -> fun (V4608) -> case V4606 of {'Idris.Core.TT.Pi', E1815, E1816, E1817, E1818} -> (fun (V4609, V4610, V4611, V4612) -> begin (V4614 = begin (V4613 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4613} end), case V4614 of {'Idris.Prelude.Types.Left', E1819} -> (fun (V4615) -> {'Idris.Prelude.Types.Left', V4615} end(E1819)); {'Idris.Prelude.Types.Right', E1820} -> (fun (V4616) -> begin (V4620 = begin (V4617 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4616, V4612))(V4608))), case V4617 of {'Idris.Prelude.Types.Left', E1821} -> (fun (V4618) -> {'Idris.Prelude.Types.Left', V4618} end(E1821)); {'Idris.Prelude.Types.Right', E1822} -> (fun (V4619) -> (('un--nfToCFType'(V0, V4604, 0, V4619))(V4608)) end(E1822)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V4620 of {'Idris.Prelude.Types.Left', E1823} -> (fun (V4621) -> {'Idris.Prelude.Types.Left', V4621} end(E1823)); {'Idris.Prelude.Types.Right', E1824} -> (fun (V4622) -> begin (V4623 = (((V4607(V4616))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V4604, 0}))))(V4608))), case V4623 of {'Idris.Prelude.Types.Left', E1825} -> (fun (V4624) -> {'Idris.Prelude.Types.Left', V4624} end(E1825)); {'Idris.Prelude.Types.Right', E1826} -> (fun (V4625) -> begin (V4626 = (('un--nfToCFType'(V0, V4604, 0, V4625))(V4608))), case V4626 of {'Idris.Prelude.Types.Left', E1827} -> (fun (V4627) -> {'Idris.Prelude.Types.Left', V4627} end(E1827)); {'Idris.Prelude.Types.Right', E1828} -> (fun (V4628) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V4622, V4628}} end(E1828)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1826)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1824)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1820)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1815, E1816, E1817, E1818)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1780, E1781, E1782, E1783, E1784} -> (fun (V4629, V4630, V4631, V4632, V4633) -> begin (V4635 = begin (V4634 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4634} end), case V4635 of {'Idris.Prelude.Types.Left', E1785} -> (fun (V4636) -> {'Idris.Prelude.Types.Left', V4636} end(E1785)); {'Idris.Prelude.Types.Right', E1786} -> (fun (V4637) -> begin (V4644 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4638) -> fun (V4639) -> fun (V4640) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4638, V4639, V4640)) end end end, fun (V4641) -> fun (V4642) -> fun (V4643) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4641, V4642, V4643)) end end end}, V4630, V4608))), case V4644 of {'Idris.Prelude.Types.Left', E1787} -> (fun (V4645) -> {'Idris.Prelude.Types.Left', V4645} end(E1787)); {'Idris.Prelude.Types.Right', E1788} -> (fun (V4646) -> begin (V4648 = (('un--getNArgs'(V0, V4637, V4646, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4647) -> ('Idris.Idris2.Builtin':'un--snd'(V4647)) end, V4633))))(V4608))), case V4648 of {'Idris.Prelude.Types.Left', E1789} -> (fun (V4649) -> {'Idris.Prelude.Types.Left', V4649} end(E1789)); {'Idris.Prelude.Types.Right', E1790} -> (fun (V4650) -> case V4650 of {'Idris.Compiler.CompileExpr.User', E1791, E1792} -> (fun (V4651, V4652) -> begin (V4654 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4653) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4637, V4653)) end, V4652, [], V4608))), case V4654 of {'Idris.Prelude.Types.Left', E1793} -> (fun (V4655) -> {'Idris.Prelude.Types.Left', V4655} end(E1793)); {'Idris.Prelude.Types.Right', E1794} -> (fun (V4656) -> begin (V4658 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4657) -> ('un--nfToCFType'(V0, V4629, V2, V4657)) end, V4656, [], V4608))), case V4658 of {'Idris.Prelude.Types.Left', E1795} -> (fun (V4659) -> {'Idris.Prelude.Types.Left', V4659} end(E1795)); {'Idris.Prelude.Types.Right', E1796} -> (fun (V4660) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4646, V4660}} end(E1796)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1794)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1791, E1792)); {'Idris.Compiler.CompileExpr.Struct', E1797, E1798} -> (fun (V4661, V4662) -> begin (V4673 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4663) -> fun (V4664) -> case V4663 of {'Idris.Builtin.MkPair', E1799, E1800} -> (fun (V4665, V4666) -> begin (V4667 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4637, V4666))(V4664))), case V4667 of {'Idris.Prelude.Types.Left', E1801} -> (fun (V4668) -> {'Idris.Prelude.Types.Left', V4668} end(E1801)); {'Idris.Prelude.Types.Right', E1802} -> (fun (V4669) -> begin (V4670 = (('un--nfToCFType'(V0, V4629, 1, V4669))(V4664))), case V4670 of {'Idris.Prelude.Types.Left', E1803} -> (fun (V4671) -> {'Idris.Prelude.Types.Left', V4671} end(E1803)); {'Idris.Prelude.Types.Right', E1804} -> (fun (V4672) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4665, V4672}} end(E1804)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1802)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1799, E1800)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4662, [], V4608))), case V4673 of {'Idris.Prelude.Types.Left', E1805} -> (fun (V4674) -> {'Idris.Prelude.Types.Left', V4674} end(E1805)); {'Idris.Prelude.Types.Right', E1806} -> (fun (V4675) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4661, V4675}} end(E1806)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1797, E1798)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1807} -> (fun (V4676) -> begin (V4677 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4637, V4676))(V4608))), case V4677 of {'Idris.Prelude.Types.Left', E1808} -> (fun (V4678) -> {'Idris.Prelude.Types.Left', V4678} end(E1808)); {'Idris.Prelude.Types.Right', E1809} -> (fun (V4679) -> begin (V4680 = (('un--nfToCFType'(V0, V4629, V2, V4679))(V4608))), case V4680 of {'Idris.Prelude.Types.Left', E1810} -> (fun (V4681) -> {'Idris.Prelude.Types.Left', V4681} end(E1810)); {'Idris.Prelude.Types.Right', E1811} -> (fun (V4682) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4682}} end(E1811)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1809)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1807)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1790)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1788)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1786)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1780, E1781, E1782, E1783, E1784)); {'Idris.Core.Value.NType', E1812} -> (fun (V4683) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E1812)); {'Idris.Core.Value.NErased', E1813, E1814} -> (fun (V4684, V4685) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E1813, E1814)); _ -> begin (V4687 = begin (V4686 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4686} end), case V4687 of {'Idris.Prelude.Types.Left', E1774} -> (fun (V4688) -> {'Idris.Prelude.Types.Left', V4688} end(E1774)); {'Idris.Prelude.Types.Right', E1775} -> (fun (V4689) -> begin (V4690 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V4689, {'Idris.Core.Env.Nil'}, V3, V4608))), case V4690 of {'Idris.Prelude.Types.Left', E1776} -> (fun (V4691) -> {'Idris.Prelude.Types.Left', V4691} end(E1776)); {'Idris.Prelude.Types.Right', E1777} -> (fun (V4692) -> begin (V4699 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4693) -> fun (V4694) -> fun (V4695) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4693, V4694, V4695)) end end end, fun (V4696) -> fun (V4697) -> fun (V4698) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4696, V4697, V4698)) end end end}, V4692, V4608))), case V4699 of {'Idris.Prelude.Types.Left', E1778} -> (fun (V4700) -> {'Idris.Prelude.Types.Left', V4700} end(E1778)); {'Idris.Prelude.Types.Right', E1779} -> (fun (V4701) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4701))))}, V4608)) end(E1779)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1777)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1775)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E1770, E1771, E1772, E1773)); _ -> fun (V4702) -> case V3 of {'Idris.Core.Value.NTCon', E1735, E1736, E1737, E1738, E1739} -> (fun (V4703, V4704, V4705, V4706, V4707) -> begin (V4709 = begin (V4708 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4708} end), case V4709 of {'Idris.Prelude.Types.Left', E1740} -> (fun (V4710) -> {'Idris.Prelude.Types.Left', V4710} end(E1740)); {'Idris.Prelude.Types.Right', E1741} -> (fun (V4711) -> begin (V4718 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4712) -> fun (V4713) -> fun (V4714) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4712, V4713, V4714)) end end end, fun (V4715) -> fun (V4716) -> fun (V4717) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4715, V4716, V4717)) end end end}, V4704, V4702))), case V4718 of {'Idris.Prelude.Types.Left', E1742} -> (fun (V4719) -> {'Idris.Prelude.Types.Left', V4719} end(E1742)); {'Idris.Prelude.Types.Right', E1743} -> (fun (V4720) -> begin (V4722 = (('un--getNArgs'(V0, V4711, V4720, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4721) -> ('Idris.Idris2.Builtin':'un--snd'(V4721)) end, V4707))))(V4702))), case V4722 of {'Idris.Prelude.Types.Left', E1744} -> (fun (V4723) -> {'Idris.Prelude.Types.Left', V4723} end(E1744)); {'Idris.Prelude.Types.Right', E1745} -> (fun (V4724) -> case V4724 of {'Idris.Compiler.CompileExpr.User', E1746, E1747} -> (fun (V4725, V4726) -> begin (V4728 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4727) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4711, V4727)) end, V4726, [], V4702))), case V4728 of {'Idris.Prelude.Types.Left', E1748} -> (fun (V4729) -> {'Idris.Prelude.Types.Left', V4729} end(E1748)); {'Idris.Prelude.Types.Right', E1749} -> (fun (V4730) -> begin (V4732 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4731) -> ('un--nfToCFType'(V0, V4703, V2, V4731)) end, V4730, [], V4702))), case V4732 of {'Idris.Prelude.Types.Left', E1750} -> (fun (V4733) -> {'Idris.Prelude.Types.Left', V4733} end(E1750)); {'Idris.Prelude.Types.Right', E1751} -> (fun (V4734) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4720, V4734}} end(E1751)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1749)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1746, E1747)); {'Idris.Compiler.CompileExpr.Struct', E1752, E1753} -> (fun (V4735, V4736) -> begin (V4747 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4737) -> fun (V4738) -> case V4737 of {'Idris.Builtin.MkPair', E1754, E1755} -> (fun (V4739, V4740) -> begin (V4741 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4711, V4740))(V4738))), case V4741 of {'Idris.Prelude.Types.Left', E1756} -> (fun (V4742) -> {'Idris.Prelude.Types.Left', V4742} end(E1756)); {'Idris.Prelude.Types.Right', E1757} -> (fun (V4743) -> begin (V4744 = (('un--nfToCFType'(V0, V4703, 1, V4743))(V4738))), case V4744 of {'Idris.Prelude.Types.Left', E1758} -> (fun (V4745) -> {'Idris.Prelude.Types.Left', V4745} end(E1758)); {'Idris.Prelude.Types.Right', E1759} -> (fun (V4746) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4739, V4746}} end(E1759)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1757)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1754, E1755)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4736, [], V4702))), case V4747 of {'Idris.Prelude.Types.Left', E1760} -> (fun (V4748) -> {'Idris.Prelude.Types.Left', V4748} end(E1760)); {'Idris.Prelude.Types.Right', E1761} -> (fun (V4749) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4735, V4749}} end(E1761)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1752, E1753)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1762} -> (fun (V4750) -> begin (V4751 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4711, V4750))(V4702))), case V4751 of {'Idris.Prelude.Types.Left', E1763} -> (fun (V4752) -> {'Idris.Prelude.Types.Left', V4752} end(E1763)); {'Idris.Prelude.Types.Right', E1764} -> (fun (V4753) -> begin (V4754 = (('un--nfToCFType'(V0, V4703, V2, V4753))(V4702))), case V4754 of {'Idris.Prelude.Types.Left', E1765} -> (fun (V4755) -> {'Idris.Prelude.Types.Left', V4755} end(E1765)); {'Idris.Prelude.Types.Right', E1766} -> (fun (V4756) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4756}} end(E1766)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1764)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1762)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1745)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1743)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1741)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1735, E1736, E1737, E1738, E1739)); {'Idris.Core.Value.NType', E1767} -> (fun (V4757) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E1767)); {'Idris.Core.Value.NErased', E1768, E1769} -> (fun (V4758, V4759) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E1768, E1769)); _ -> begin (V4761 = begin (V4760 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4760} end), case V4761 of {'Idris.Prelude.Types.Left', E1729} -> (fun (V4762) -> {'Idris.Prelude.Types.Left', V4762} end(E1729)); {'Idris.Prelude.Types.Right', E1730} -> (fun (V4763) -> begin (V4764 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V4763, {'Idris.Core.Env.Nil'}, V3, V4702))), case V4764 of {'Idris.Prelude.Types.Left', E1731} -> (fun (V4765) -> {'Idris.Prelude.Types.Left', V4765} end(E1731)); {'Idris.Prelude.Types.Right', E1732} -> (fun (V4766) -> begin (V4773 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4767) -> fun (V4768) -> fun (V4769) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4767, V4768, V4769)) end end end, fun (V4770) -> fun (V4771) -> fun (V4772) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4770, V4771, V4772)) end end end}, V4766, V4702))), case V4773 of {'Idris.Prelude.Types.Left', E1733} -> (fun (V4774) -> {'Idris.Prelude.Types.Left', V4774} end(E1733)); {'Idris.Prelude.Types.Right', E1734} -> (fun (V4775) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4775))))}, V4702)) end(E1734)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1732)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1730)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V4776) -> case V3 of {'Idris.Core.Value.NBind', E1870, E1871, E1872, E1873} -> (fun (V4777, V4778, V4779, V4780) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V4777, <<"Function types not allowed in a foreign struct"/utf8>>}, V4776)) end(E1870, E1871, E1872, E1873)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1835, E1836, E1837, E1838, E1839} -> (fun (V4781, V4782, V4783, V4784, V4785) -> begin (V4787 = begin (V4786 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4786} end), case V4787 of {'Idris.Prelude.Types.Left', E1840} -> (fun (V4788) -> {'Idris.Prelude.Types.Left', V4788} end(E1840)); {'Idris.Prelude.Types.Right', E1841} -> (fun (V4789) -> begin (V4796 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4790) -> fun (V4791) -> fun (V4792) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4790, V4791, V4792)) end end end, fun (V4793) -> fun (V4794) -> fun (V4795) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4793, V4794, V4795)) end end end}, V4782, V4776))), case V4796 of {'Idris.Prelude.Types.Left', E1842} -> (fun (V4797) -> {'Idris.Prelude.Types.Left', V4797} end(E1842)); {'Idris.Prelude.Types.Right', E1843} -> (fun (V4798) -> begin (V4800 = (('un--getNArgs'(V0, V4789, V4798, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4799) -> ('Idris.Idris2.Builtin':'un--snd'(V4799)) end, V4785))))(V4776))), case V4800 of {'Idris.Prelude.Types.Left', E1844} -> (fun (V4801) -> {'Idris.Prelude.Types.Left', V4801} end(E1844)); {'Idris.Prelude.Types.Right', E1845} -> (fun (V4802) -> case V4802 of {'Idris.Compiler.CompileExpr.User', E1846, E1847} -> (fun (V4803, V4804) -> begin (V4806 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4805) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4789, V4805)) end, V4804, [], V4776))), case V4806 of {'Idris.Prelude.Types.Left', E1848} -> (fun (V4807) -> {'Idris.Prelude.Types.Left', V4807} end(E1848)); {'Idris.Prelude.Types.Right', E1849} -> (fun (V4808) -> begin (V4810 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4809) -> ('un--nfToCFType'(V0, V4781, V2, V4809)) end, V4808, [], V4776))), case V4810 of {'Idris.Prelude.Types.Left', E1850} -> (fun (V4811) -> {'Idris.Prelude.Types.Left', V4811} end(E1850)); {'Idris.Prelude.Types.Right', E1851} -> (fun (V4812) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4798, V4812}} end(E1851)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1849)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1846, E1847)); {'Idris.Compiler.CompileExpr.Struct', E1852, E1853} -> (fun (V4813, V4814) -> begin (V4825 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4815) -> fun (V4816) -> case V4815 of {'Idris.Builtin.MkPair', E1854, E1855} -> (fun (V4817, V4818) -> begin (V4819 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4789, V4818))(V4816))), case V4819 of {'Idris.Prelude.Types.Left', E1856} -> (fun (V4820) -> {'Idris.Prelude.Types.Left', V4820} end(E1856)); {'Idris.Prelude.Types.Right', E1857} -> (fun (V4821) -> begin (V4822 = (('un--nfToCFType'(V0, V4781, 1, V4821))(V4816))), case V4822 of {'Idris.Prelude.Types.Left', E1858} -> (fun (V4823) -> {'Idris.Prelude.Types.Left', V4823} end(E1858)); {'Idris.Prelude.Types.Right', E1859} -> (fun (V4824) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4817, V4824}} end(E1859)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1857)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1854, E1855)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4814, [], V4776))), case V4825 of {'Idris.Prelude.Types.Left', E1860} -> (fun (V4826) -> {'Idris.Prelude.Types.Left', V4826} end(E1860)); {'Idris.Prelude.Types.Right', E1861} -> (fun (V4827) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4813, V4827}} end(E1861)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1852, E1853)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1862} -> (fun (V4828) -> begin (V4829 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4789, V4828))(V4776))), case V4829 of {'Idris.Prelude.Types.Left', E1863} -> (fun (V4830) -> {'Idris.Prelude.Types.Left', V4830} end(E1863)); {'Idris.Prelude.Types.Right', E1864} -> (fun (V4831) -> begin (V4832 = (('un--nfToCFType'(V0, V4781, V2, V4831))(V4776))), case V4832 of {'Idris.Prelude.Types.Left', E1865} -> (fun (V4833) -> {'Idris.Prelude.Types.Left', V4833} end(E1865)); {'Idris.Prelude.Types.Right', E1866} -> (fun (V4834) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4834}} end(E1866)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1864)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1862)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1845)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1843)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1841)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1835, E1836, E1837, E1838, E1839)); {'Idris.Core.Value.NType', E1867} -> (fun (V4835) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E1867)); {'Idris.Core.Value.NErased', E1868, E1869} -> (fun (V4836, V4837) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E1868, E1869)); _ -> begin (V4839 = begin (V4838 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4838} end), case V4839 of {'Idris.Prelude.Types.Left', E1829} -> (fun (V4840) -> {'Idris.Prelude.Types.Left', V4840} end(E1829)); {'Idris.Prelude.Types.Right', E1830} -> (fun (V4841) -> begin (V4842 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V4841, {'Idris.Core.Env.Nil'}, V3, V4776))), case V4842 of {'Idris.Prelude.Types.Left', E1831} -> (fun (V4843) -> {'Idris.Prelude.Types.Left', V4843} end(E1831)); {'Idris.Prelude.Types.Right', E1832} -> (fun (V4844) -> begin (V4851 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4845) -> fun (V4846) -> fun (V4847) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4845, V4846, V4847)) end end end, fun (V4848) -> fun (V4849) -> fun (V4850) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4848, V4849, V4850)) end end end}, V4844, V4776))), case V4851 of {'Idris.Prelude.Types.Left', E1833} -> (fun (V4852) -> {'Idris.Prelude.Types.Left', V4852} end(E1833)); {'Idris.Prelude.Types.Right', E1834} -> (fun (V4853) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4853))))}, V4776)) end(E1834)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1832)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1830)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V4854) -> case V3 of {'Idris.Core.Value.NTCon', E1694, E1695, E1696, E1697, E1698} -> (fun (V4855, V4856, V4857, V4858, V4859) -> begin (V4861 = begin (V4860 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4860} end), case V4861 of {'Idris.Prelude.Types.Left', E1699} -> (fun (V4862) -> {'Idris.Prelude.Types.Left', V4862} end(E1699)); {'Idris.Prelude.Types.Right', E1700} -> (fun (V4863) -> begin (V4870 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4864) -> fun (V4865) -> fun (V4866) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4864, V4865, V4866)) end end end, fun (V4867) -> fun (V4868) -> fun (V4869) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4867, V4868, V4869)) end end end}, V4856, V4854))), case V4870 of {'Idris.Prelude.Types.Left', E1701} -> (fun (V4871) -> {'Idris.Prelude.Types.Left', V4871} end(E1701)); {'Idris.Prelude.Types.Right', E1702} -> (fun (V4872) -> begin (V4874 = (('un--getNArgs'(V0, V4863, V4872, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4873) -> ('Idris.Idris2.Builtin':'un--snd'(V4873)) end, V4859))))(V4854))), case V4874 of {'Idris.Prelude.Types.Left', E1703} -> (fun (V4875) -> {'Idris.Prelude.Types.Left', V4875} end(E1703)); {'Idris.Prelude.Types.Right', E1704} -> (fun (V4876) -> case V4876 of {'Idris.Compiler.CompileExpr.User', E1705, E1706} -> (fun (V4877, V4878) -> begin (V4880 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4879) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4863, V4879)) end, V4878, [], V4854))), case V4880 of {'Idris.Prelude.Types.Left', E1707} -> (fun (V4881) -> {'Idris.Prelude.Types.Left', V4881} end(E1707)); {'Idris.Prelude.Types.Right', E1708} -> (fun (V4882) -> begin (V4884 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4883) -> ('un--nfToCFType'(V0, V4855, V2, V4883)) end, V4882, [], V4854))), case V4884 of {'Idris.Prelude.Types.Left', E1709} -> (fun (V4885) -> {'Idris.Prelude.Types.Left', V4885} end(E1709)); {'Idris.Prelude.Types.Right', E1710} -> (fun (V4886) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4872, V4886}} end(E1710)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1708)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1705, E1706)); {'Idris.Compiler.CompileExpr.Struct', E1711, E1712} -> (fun (V4887, V4888) -> begin (V4899 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4889) -> fun (V4890) -> case V4889 of {'Idris.Builtin.MkPair', E1713, E1714} -> (fun (V4891, V4892) -> begin (V4893 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4863, V4892))(V4890))), case V4893 of {'Idris.Prelude.Types.Left', E1715} -> (fun (V4894) -> {'Idris.Prelude.Types.Left', V4894} end(E1715)); {'Idris.Prelude.Types.Right', E1716} -> (fun (V4895) -> begin (V4896 = (('un--nfToCFType'(V0, V4855, 1, V4895))(V4890))), case V4896 of {'Idris.Prelude.Types.Left', E1717} -> (fun (V4897) -> {'Idris.Prelude.Types.Left', V4897} end(E1717)); {'Idris.Prelude.Types.Right', E1718} -> (fun (V4898) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4891, V4898}} end(E1718)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1716)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1713, E1714)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4888, [], V4854))), case V4899 of {'Idris.Prelude.Types.Left', E1719} -> (fun (V4900) -> {'Idris.Prelude.Types.Left', V4900} end(E1719)); {'Idris.Prelude.Types.Right', E1720} -> (fun (V4901) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4887, V4901}} end(E1720)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1711, E1712)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1721} -> (fun (V4902) -> begin (V4903 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4863, V4902))(V4854))), case V4903 of {'Idris.Prelude.Types.Left', E1722} -> (fun (V4904) -> {'Idris.Prelude.Types.Left', V4904} end(E1722)); {'Idris.Prelude.Types.Right', E1723} -> (fun (V4905) -> begin (V4906 = (('un--nfToCFType'(V0, V4855, V2, V4905))(V4854))), case V4906 of {'Idris.Prelude.Types.Left', E1724} -> (fun (V4907) -> {'Idris.Prelude.Types.Left', V4907} end(E1724)); {'Idris.Prelude.Types.Right', E1725} -> (fun (V4908) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V4908}} end(E1725)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1723)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1721)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1704)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1702)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1700)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1694, E1695, E1696, E1697, E1698)); {'Idris.Core.Value.NType', E1726} -> (fun (V4909) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E1726)); {'Idris.Core.Value.NErased', E1727, E1728} -> (fun (V4910, V4911) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E1727, E1728)); _ -> begin (V4913 = begin (V4912 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4912} end), case V4913 of {'Idris.Prelude.Types.Left', E1688} -> (fun (V4914) -> {'Idris.Prelude.Types.Left', V4914} end(E1688)); {'Idris.Prelude.Types.Right', E1689} -> (fun (V4915) -> begin (V4916 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V4915, {'Idris.Core.Env.Nil'}, V3, V4854))), case V4916 of {'Idris.Prelude.Types.Left', E1690} -> (fun (V4917) -> {'Idris.Prelude.Types.Left', V4917} end(E1690)); {'Idris.Prelude.Types.Right', E1691} -> (fun (V4918) -> begin (V4925 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4919) -> fun (V4920) -> fun (V4921) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V4919, V4920, V4921)) end end end, fun (V4922) -> fun (V4923) -> fun (V4924) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V4922, V4923, V4924)) end end end}, V4918, V4854))), case V4925 of {'Idris.Prelude.Types.Left', E1692} -> (fun (V4926) -> {'Idris.Prelude.Types.Left', V4926} end(E1692)); {'Idris.Prelude.Types.Right', E1693} -> (fun (V4927) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V4927))))}, V4854)) end(E1693)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1691)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1689)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E1686, E1687)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E1582, E1583, E1584, E1585} -> (fun (V4928, V4929, V4930, V4931) -> fun (V4932) -> case V4930 of {'Idris.Core.TT.Pi', E1627, E1628, E1629, E1630} -> (fun (V4933, V4934, V4935, V4936) -> begin (V4938 = begin (V4937 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4937} end), case V4938 of {'Idris.Prelude.Types.Left', E1631} -> (fun (V4939) -> {'Idris.Prelude.Types.Left', V4939} end(E1631)); {'Idris.Prelude.Types.Right', E1632} -> (fun (V4940) -> begin (V4944 = begin (V4941 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4940, V4936))(V4932))), case V4941 of {'Idris.Prelude.Types.Left', E1633} -> (fun (V4942) -> {'Idris.Prelude.Types.Left', V4942} end(E1633)); {'Idris.Prelude.Types.Right', E1634} -> (fun (V4943) -> (('un--nfToCFType'(V0, V4928, 0, V4943))(V4932)) end(E1634)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V4944 of {'Idris.Prelude.Types.Left', E1635} -> (fun (V4945) -> {'Idris.Prelude.Types.Left', V4945} end(E1635)); {'Idris.Prelude.Types.Right', E1636} -> (fun (V4946) -> begin (V4947 = (((V4931(V4940))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V4928, 0}))))(V4932))), case V4947 of {'Idris.Prelude.Types.Left', E1637} -> (fun (V4948) -> {'Idris.Prelude.Types.Left', V4948} end(E1637)); {'Idris.Prelude.Types.Right', E1638} -> (fun (V4949) -> begin (V4950 = (('un--nfToCFType'(V0, V4928, 0, V4949))(V4932))), case V4950 of {'Idris.Prelude.Types.Left', E1639} -> (fun (V4951) -> {'Idris.Prelude.Types.Left', V4951} end(E1639)); {'Idris.Prelude.Types.Right', E1640} -> (fun (V4952) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V4946, V4952}} end(E1640)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1638)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1636)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1632)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1627, E1628, E1629, E1630)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1592, E1593, E1594, E1595, E1596} -> (fun (V4953, V4954, V4955, V4956, V4957) -> begin (V4959 = begin (V4958 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4958} end), case V4959 of {'Idris.Prelude.Types.Left', E1597} -> (fun (V4960) -> {'Idris.Prelude.Types.Left', V4960} end(E1597)); {'Idris.Prelude.Types.Right', E1598} -> (fun (V4961) -> begin (V4968 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V4962) -> fun (V4963) -> fun (V4964) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V4962, V4963, V4964)) end end end, fun (V4965) -> fun (V4966) -> fun (V4967) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V4965, V4966, V4967)) end end end}, V4954, V4932))), case V4968 of {'Idris.Prelude.Types.Left', E1599} -> (fun (V4969) -> {'Idris.Prelude.Types.Left', V4969} end(E1599)); {'Idris.Prelude.Types.Right', E1600} -> (fun (V4970) -> begin (V4972 = (('un--getNArgs'(V0, V4961, V4970, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4971) -> ('Idris.Idris2.Builtin':'un--snd'(V4971)) end, V4957))))(V4932))), case V4972 of {'Idris.Prelude.Types.Left', E1601} -> (fun (V4973) -> {'Idris.Prelude.Types.Left', V4973} end(E1601)); {'Idris.Prelude.Types.Right', E1602} -> (fun (V4974) -> case V4974 of {'Idris.Compiler.CompileExpr.User', E1603, E1604} -> (fun (V4975, V4976) -> begin (V4978 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4977) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4961, V4977)) end, V4976, [], V4932))), case V4978 of {'Idris.Prelude.Types.Left', E1605} -> (fun (V4979) -> {'Idris.Prelude.Types.Left', V4979} end(E1605)); {'Idris.Prelude.Types.Right', E1606} -> (fun (V4980) -> begin (V4982 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4981) -> ('un--nfToCFType'(V0, V4953, V2, V4981)) end, V4980, [], V4932))), case V4982 of {'Idris.Prelude.Types.Left', E1607} -> (fun (V4983) -> {'Idris.Prelude.Types.Left', V4983} end(E1607)); {'Idris.Prelude.Types.Right', E1608} -> (fun (V4984) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V4970, V4984}} end(E1608)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1606)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1603, E1604)); {'Idris.Compiler.CompileExpr.Struct', E1609, E1610} -> (fun (V4985, V4986) -> begin (V4997 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4987) -> fun (V4988) -> case V4987 of {'Idris.Builtin.MkPair', E1611, E1612} -> (fun (V4989, V4990) -> begin (V4991 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4961, V4990))(V4988))), case V4991 of {'Idris.Prelude.Types.Left', E1613} -> (fun (V4992) -> {'Idris.Prelude.Types.Left', V4992} end(E1613)); {'Idris.Prelude.Types.Right', E1614} -> (fun (V4993) -> begin (V4994 = (('un--nfToCFType'(V0, V4953, 1, V4993))(V4988))), case V4994 of {'Idris.Prelude.Types.Left', E1615} -> (fun (V4995) -> {'Idris.Prelude.Types.Left', V4995} end(E1615)); {'Idris.Prelude.Types.Right', E1616} -> (fun (V4996) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V4989, V4996}} end(E1616)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1614)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1611, E1612)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4986, [], V4932))), case V4997 of {'Idris.Prelude.Types.Left', E1617} -> (fun (V4998) -> {'Idris.Prelude.Types.Left', V4998} end(E1617)); {'Idris.Prelude.Types.Right', E1618} -> (fun (V4999) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V4985, V4999}} end(E1618)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1609, E1610)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1619} -> (fun (V5000) -> begin (V5001 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V4961, V5000))(V4932))), case V5001 of {'Idris.Prelude.Types.Left', E1620} -> (fun (V5002) -> {'Idris.Prelude.Types.Left', V5002} end(E1620)); {'Idris.Prelude.Types.Right', E1621} -> (fun (V5003) -> begin (V5004 = (('un--nfToCFType'(V0, V4953, V2, V5003))(V4932))), case V5004 of {'Idris.Prelude.Types.Left', E1622} -> (fun (V5005) -> {'Idris.Prelude.Types.Left', V5005} end(E1622)); {'Idris.Prelude.Types.Right', E1623} -> (fun (V5006) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5006}} end(E1623)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1621)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1619)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1602)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1600)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1598)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1592, E1593, E1594, E1595, E1596)); {'Idris.Core.Value.NType', E1624} -> (fun (V5007) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E1624)); {'Idris.Core.Value.NErased', E1625, E1626} -> (fun (V5008, V5009) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E1625, E1626)); _ -> begin (V5011 = begin (V5010 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5010} end), case V5011 of {'Idris.Prelude.Types.Left', E1586} -> (fun (V5012) -> {'Idris.Prelude.Types.Left', V5012} end(E1586)); {'Idris.Prelude.Types.Right', E1587} -> (fun (V5013) -> begin (V5014 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V5013, {'Idris.Core.Env.Nil'}, V3, V4932))), case V5014 of {'Idris.Prelude.Types.Left', E1588} -> (fun (V5015) -> {'Idris.Prelude.Types.Left', V5015} end(E1588)); {'Idris.Prelude.Types.Right', E1589} -> (fun (V5016) -> begin (V5023 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5017) -> fun (V5018) -> fun (V5019) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5017, V5018, V5019)) end end end, fun (V5020) -> fun (V5021) -> fun (V5022) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5020, V5021, V5022)) end end end}, V5016, V4932))), case V5023 of {'Idris.Prelude.Types.Left', E1590} -> (fun (V5024) -> {'Idris.Prelude.Types.Left', V5024} end(E1590)); {'Idris.Prelude.Types.Right', E1591} -> (fun (V5025) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5025))))}, V4932)) end(E1591)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1589)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1587)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E1582, E1583, E1584, E1585)); _ -> fun (V5026) -> case V3 of {'Idris.Core.Value.NTCon', E1547, E1548, E1549, E1550, E1551} -> (fun (V5027, V5028, V5029, V5030, V5031) -> begin (V5033 = begin (V5032 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5032} end), case V5033 of {'Idris.Prelude.Types.Left', E1552} -> (fun (V5034) -> {'Idris.Prelude.Types.Left', V5034} end(E1552)); {'Idris.Prelude.Types.Right', E1553} -> (fun (V5035) -> begin (V5042 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5036) -> fun (V5037) -> fun (V5038) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5036, V5037, V5038)) end end end, fun (V5039) -> fun (V5040) -> fun (V5041) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5039, V5040, V5041)) end end end}, V5028, V5026))), case V5042 of {'Idris.Prelude.Types.Left', E1554} -> (fun (V5043) -> {'Idris.Prelude.Types.Left', V5043} end(E1554)); {'Idris.Prelude.Types.Right', E1555} -> (fun (V5044) -> begin (V5046 = (('un--getNArgs'(V0, V5035, V5044, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5045) -> ('Idris.Idris2.Builtin':'un--snd'(V5045)) end, V5031))))(V5026))), case V5046 of {'Idris.Prelude.Types.Left', E1556} -> (fun (V5047) -> {'Idris.Prelude.Types.Left', V5047} end(E1556)); {'Idris.Prelude.Types.Right', E1557} -> (fun (V5048) -> case V5048 of {'Idris.Compiler.CompileExpr.User', E1558, E1559} -> (fun (V5049, V5050) -> begin (V5052 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5051) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5035, V5051)) end, V5050, [], V5026))), case V5052 of {'Idris.Prelude.Types.Left', E1560} -> (fun (V5053) -> {'Idris.Prelude.Types.Left', V5053} end(E1560)); {'Idris.Prelude.Types.Right', E1561} -> (fun (V5054) -> begin (V5056 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5055) -> ('un--nfToCFType'(V0, V5027, V2, V5055)) end, V5054, [], V5026))), case V5056 of {'Idris.Prelude.Types.Left', E1562} -> (fun (V5057) -> {'Idris.Prelude.Types.Left', V5057} end(E1562)); {'Idris.Prelude.Types.Right', E1563} -> (fun (V5058) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5044, V5058}} end(E1563)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1561)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1558, E1559)); {'Idris.Compiler.CompileExpr.Struct', E1564, E1565} -> (fun (V5059, V5060) -> begin (V5071 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5061) -> fun (V5062) -> case V5061 of {'Idris.Builtin.MkPair', E1566, E1567} -> (fun (V5063, V5064) -> begin (V5065 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5035, V5064))(V5062))), case V5065 of {'Idris.Prelude.Types.Left', E1568} -> (fun (V5066) -> {'Idris.Prelude.Types.Left', V5066} end(E1568)); {'Idris.Prelude.Types.Right', E1569} -> (fun (V5067) -> begin (V5068 = (('un--nfToCFType'(V0, V5027, 1, V5067))(V5062))), case V5068 of {'Idris.Prelude.Types.Left', E1570} -> (fun (V5069) -> {'Idris.Prelude.Types.Left', V5069} end(E1570)); {'Idris.Prelude.Types.Right', E1571} -> (fun (V5070) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5063, V5070}} end(E1571)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1569)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1566, E1567)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5060, [], V5026))), case V5071 of {'Idris.Prelude.Types.Left', E1572} -> (fun (V5072) -> {'Idris.Prelude.Types.Left', V5072} end(E1572)); {'Idris.Prelude.Types.Right', E1573} -> (fun (V5073) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5059, V5073}} end(E1573)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1564, E1565)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1574} -> (fun (V5074) -> begin (V5075 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5035, V5074))(V5026))), case V5075 of {'Idris.Prelude.Types.Left', E1575} -> (fun (V5076) -> {'Idris.Prelude.Types.Left', V5076} end(E1575)); {'Idris.Prelude.Types.Right', E1576} -> (fun (V5077) -> begin (V5078 = (('un--nfToCFType'(V0, V5027, V2, V5077))(V5026))), case V5078 of {'Idris.Prelude.Types.Left', E1577} -> (fun (V5079) -> {'Idris.Prelude.Types.Left', V5079} end(E1577)); {'Idris.Prelude.Types.Right', E1578} -> (fun (V5080) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5080}} end(E1578)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1576)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1574)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1557)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1555)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1553)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1547, E1548, E1549, E1550, E1551)); {'Idris.Core.Value.NType', E1579} -> (fun (V5081) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E1579)); {'Idris.Core.Value.NErased', E1580, E1581} -> (fun (V5082, V5083) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E1580, E1581)); _ -> begin (V5085 = begin (V5084 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5084} end), case V5085 of {'Idris.Prelude.Types.Left', E1541} -> (fun (V5086) -> {'Idris.Prelude.Types.Left', V5086} end(E1541)); {'Idris.Prelude.Types.Right', E1542} -> (fun (V5087) -> begin (V5088 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V5087, {'Idris.Core.Env.Nil'}, V3, V5026))), case V5088 of {'Idris.Prelude.Types.Left', E1543} -> (fun (V5089) -> {'Idris.Prelude.Types.Left', V5089} end(E1543)); {'Idris.Prelude.Types.Right', E1544} -> (fun (V5090) -> begin (V5097 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5091) -> fun (V5092) -> fun (V5093) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5091, V5092, V5093)) end end end, fun (V5094) -> fun (V5095) -> fun (V5096) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5094, V5095, V5096)) end end end}, V5090, V5026))), case V5097 of {'Idris.Prelude.Types.Left', E1545} -> (fun (V5098) -> {'Idris.Prelude.Types.Left', V5098} end(E1545)); {'Idris.Prelude.Types.Right', E1546} -> (fun (V5099) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5099))))}, V5026)) end(E1546)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1544)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1542)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V5100) -> case V3 of {'Idris.Core.Value.NBind', E1682, E1683, E1684, E1685} -> (fun (V5101, V5102, V5103, V5104) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V5101, <<"Function types not allowed in a foreign struct"/utf8>>}, V5100)) end(E1682, E1683, E1684, E1685)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1647, E1648, E1649, E1650, E1651} -> (fun (V5105, V5106, V5107, V5108, V5109) -> begin (V5111 = begin (V5110 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5110} end), case V5111 of {'Idris.Prelude.Types.Left', E1652} -> (fun (V5112) -> {'Idris.Prelude.Types.Left', V5112} end(E1652)); {'Idris.Prelude.Types.Right', E1653} -> (fun (V5113) -> begin (V5120 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5114) -> fun (V5115) -> fun (V5116) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5114, V5115, V5116)) end end end, fun (V5117) -> fun (V5118) -> fun (V5119) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5117, V5118, V5119)) end end end}, V5106, V5100))), case V5120 of {'Idris.Prelude.Types.Left', E1654} -> (fun (V5121) -> {'Idris.Prelude.Types.Left', V5121} end(E1654)); {'Idris.Prelude.Types.Right', E1655} -> (fun (V5122) -> begin (V5124 = (('un--getNArgs'(V0, V5113, V5122, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5123) -> ('Idris.Idris2.Builtin':'un--snd'(V5123)) end, V5109))))(V5100))), case V5124 of {'Idris.Prelude.Types.Left', E1656} -> (fun (V5125) -> {'Idris.Prelude.Types.Left', V5125} end(E1656)); {'Idris.Prelude.Types.Right', E1657} -> (fun (V5126) -> case V5126 of {'Idris.Compiler.CompileExpr.User', E1658, E1659} -> (fun (V5127, V5128) -> begin (V5130 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5129) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5113, V5129)) end, V5128, [], V5100))), case V5130 of {'Idris.Prelude.Types.Left', E1660} -> (fun (V5131) -> {'Idris.Prelude.Types.Left', V5131} end(E1660)); {'Idris.Prelude.Types.Right', E1661} -> (fun (V5132) -> begin (V5134 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5133) -> ('un--nfToCFType'(V0, V5105, V2, V5133)) end, V5132, [], V5100))), case V5134 of {'Idris.Prelude.Types.Left', E1662} -> (fun (V5135) -> {'Idris.Prelude.Types.Left', V5135} end(E1662)); {'Idris.Prelude.Types.Right', E1663} -> (fun (V5136) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5122, V5136}} end(E1663)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1661)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1658, E1659)); {'Idris.Compiler.CompileExpr.Struct', E1664, E1665} -> (fun (V5137, V5138) -> begin (V5149 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5139) -> fun (V5140) -> case V5139 of {'Idris.Builtin.MkPair', E1666, E1667} -> (fun (V5141, V5142) -> begin (V5143 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5113, V5142))(V5140))), case V5143 of {'Idris.Prelude.Types.Left', E1668} -> (fun (V5144) -> {'Idris.Prelude.Types.Left', V5144} end(E1668)); {'Idris.Prelude.Types.Right', E1669} -> (fun (V5145) -> begin (V5146 = (('un--nfToCFType'(V0, V5105, 1, V5145))(V5140))), case V5146 of {'Idris.Prelude.Types.Left', E1670} -> (fun (V5147) -> {'Idris.Prelude.Types.Left', V5147} end(E1670)); {'Idris.Prelude.Types.Right', E1671} -> (fun (V5148) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5141, V5148}} end(E1671)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1669)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1666, E1667)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5138, [], V5100))), case V5149 of {'Idris.Prelude.Types.Left', E1672} -> (fun (V5150) -> {'Idris.Prelude.Types.Left', V5150} end(E1672)); {'Idris.Prelude.Types.Right', E1673} -> (fun (V5151) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5137, V5151}} end(E1673)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1664, E1665)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1674} -> (fun (V5152) -> begin (V5153 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5113, V5152))(V5100))), case V5153 of {'Idris.Prelude.Types.Left', E1675} -> (fun (V5154) -> {'Idris.Prelude.Types.Left', V5154} end(E1675)); {'Idris.Prelude.Types.Right', E1676} -> (fun (V5155) -> begin (V5156 = (('un--nfToCFType'(V0, V5105, V2, V5155))(V5100))), case V5156 of {'Idris.Prelude.Types.Left', E1677} -> (fun (V5157) -> {'Idris.Prelude.Types.Left', V5157} end(E1677)); {'Idris.Prelude.Types.Right', E1678} -> (fun (V5158) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5158}} end(E1678)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1676)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1674)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1657)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1655)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1653)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1647, E1648, E1649, E1650, E1651)); {'Idris.Core.Value.NType', E1679} -> (fun (V5159) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E1679)); {'Idris.Core.Value.NErased', E1680, E1681} -> (fun (V5160, V5161) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E1680, E1681)); _ -> begin (V5163 = begin (V5162 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5162} end), case V5163 of {'Idris.Prelude.Types.Left', E1641} -> (fun (V5164) -> {'Idris.Prelude.Types.Left', V5164} end(E1641)); {'Idris.Prelude.Types.Right', E1642} -> (fun (V5165) -> begin (V5166 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V5165, {'Idris.Core.Env.Nil'}, V3, V5100))), case V5166 of {'Idris.Prelude.Types.Left', E1643} -> (fun (V5167) -> {'Idris.Prelude.Types.Left', V5167} end(E1643)); {'Idris.Prelude.Types.Right', E1644} -> (fun (V5168) -> begin (V5175 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5169) -> fun (V5170) -> fun (V5171) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5169, V5170, V5171)) end end end, fun (V5172) -> fun (V5173) -> fun (V5174) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5172, V5173, V5174)) end end end}, V5168, V5100))), case V5175 of {'Idris.Prelude.Types.Left', E1645} -> (fun (V5176) -> {'Idris.Prelude.Types.Left', V5176} end(E1645)); {'Idris.Prelude.Types.Right', E1646} -> (fun (V5177) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5177))))}, V5100)) end(E1646)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1644)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1642)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V5178) -> case V3 of {'Idris.Core.Value.NTCon', E1506, E1507, E1508, E1509, E1510} -> (fun (V5179, V5180, V5181, V5182, V5183) -> begin (V5185 = begin (V5184 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5184} end), case V5185 of {'Idris.Prelude.Types.Left', E1511} -> (fun (V5186) -> {'Idris.Prelude.Types.Left', V5186} end(E1511)); {'Idris.Prelude.Types.Right', E1512} -> (fun (V5187) -> begin (V5194 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5188) -> fun (V5189) -> fun (V5190) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5188, V5189, V5190)) end end end, fun (V5191) -> fun (V5192) -> fun (V5193) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5191, V5192, V5193)) end end end}, V5180, V5178))), case V5194 of {'Idris.Prelude.Types.Left', E1513} -> (fun (V5195) -> {'Idris.Prelude.Types.Left', V5195} end(E1513)); {'Idris.Prelude.Types.Right', E1514} -> (fun (V5196) -> begin (V5198 = (('un--getNArgs'(V0, V5187, V5196, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5197) -> ('Idris.Idris2.Builtin':'un--snd'(V5197)) end, V5183))))(V5178))), case V5198 of {'Idris.Prelude.Types.Left', E1515} -> (fun (V5199) -> {'Idris.Prelude.Types.Left', V5199} end(E1515)); {'Idris.Prelude.Types.Right', E1516} -> (fun (V5200) -> case V5200 of {'Idris.Compiler.CompileExpr.User', E1517, E1518} -> (fun (V5201, V5202) -> begin (V5204 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5203) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5187, V5203)) end, V5202, [], V5178))), case V5204 of {'Idris.Prelude.Types.Left', E1519} -> (fun (V5205) -> {'Idris.Prelude.Types.Left', V5205} end(E1519)); {'Idris.Prelude.Types.Right', E1520} -> (fun (V5206) -> begin (V5208 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5207) -> ('un--nfToCFType'(V0, V5179, V2, V5207)) end, V5206, [], V5178))), case V5208 of {'Idris.Prelude.Types.Left', E1521} -> (fun (V5209) -> {'Idris.Prelude.Types.Left', V5209} end(E1521)); {'Idris.Prelude.Types.Right', E1522} -> (fun (V5210) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5196, V5210}} end(E1522)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1520)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1517, E1518)); {'Idris.Compiler.CompileExpr.Struct', E1523, E1524} -> (fun (V5211, V5212) -> begin (V5223 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5213) -> fun (V5214) -> case V5213 of {'Idris.Builtin.MkPair', E1525, E1526} -> (fun (V5215, V5216) -> begin (V5217 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5187, V5216))(V5214))), case V5217 of {'Idris.Prelude.Types.Left', E1527} -> (fun (V5218) -> {'Idris.Prelude.Types.Left', V5218} end(E1527)); {'Idris.Prelude.Types.Right', E1528} -> (fun (V5219) -> begin (V5220 = (('un--nfToCFType'(V0, V5179, 1, V5219))(V5214))), case V5220 of {'Idris.Prelude.Types.Left', E1529} -> (fun (V5221) -> {'Idris.Prelude.Types.Left', V5221} end(E1529)); {'Idris.Prelude.Types.Right', E1530} -> (fun (V5222) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5215, V5222}} end(E1530)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1528)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1525, E1526)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5212, [], V5178))), case V5223 of {'Idris.Prelude.Types.Left', E1531} -> (fun (V5224) -> {'Idris.Prelude.Types.Left', V5224} end(E1531)); {'Idris.Prelude.Types.Right', E1532} -> (fun (V5225) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5211, V5225}} end(E1532)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1523, E1524)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1533} -> (fun (V5226) -> begin (V5227 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5187, V5226))(V5178))), case V5227 of {'Idris.Prelude.Types.Left', E1534} -> (fun (V5228) -> {'Idris.Prelude.Types.Left', V5228} end(E1534)); {'Idris.Prelude.Types.Right', E1535} -> (fun (V5229) -> begin (V5230 = (('un--nfToCFType'(V0, V5179, V2, V5229))(V5178))), case V5230 of {'Idris.Prelude.Types.Left', E1536} -> (fun (V5231) -> {'Idris.Prelude.Types.Left', V5231} end(E1536)); {'Idris.Prelude.Types.Right', E1537} -> (fun (V5232) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5232}} end(E1537)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1535)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1533)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1516)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1514)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1512)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1506, E1507, E1508, E1509, E1510)); {'Idris.Core.Value.NType', E1538} -> (fun (V5233) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E1538)); {'Idris.Core.Value.NErased', E1539, E1540} -> (fun (V5234, V5235) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E1539, E1540)); _ -> begin (V5237 = begin (V5236 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5236} end), case V5237 of {'Idris.Prelude.Types.Left', E1500} -> (fun (V5238) -> {'Idris.Prelude.Types.Left', V5238} end(E1500)); {'Idris.Prelude.Types.Right', E1501} -> (fun (V5239) -> begin (V5240 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V5239, {'Idris.Core.Env.Nil'}, V3, V5178))), case V5240 of {'Idris.Prelude.Types.Left', E1502} -> (fun (V5241) -> {'Idris.Prelude.Types.Left', V5241} end(E1502)); {'Idris.Prelude.Types.Right', E1503} -> (fun (V5242) -> begin (V5249 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5243) -> fun (V5244) -> fun (V5245) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5243, V5244, V5245)) end end end, fun (V5246) -> fun (V5247) -> fun (V5248) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5246, V5247, V5248)) end end end}, V5242, V5178))), case V5249 of {'Idris.Prelude.Types.Left', E1504} -> (fun (V5250) -> {'Idris.Prelude.Types.Left', V5250} end(E1504)); {'Idris.Prelude.Types.Right', E1505} -> (fun (V5251) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5251))))}, V5178)) end(E1505)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1503)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1501)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end(E1498, E1499)); _ -> case V3 of {'Idris.Core.Value.NPrimVal', E1310, E1311} -> (fun (V5252, V5253) -> case V5253 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V5254) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V5255) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V5256) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E1394, E1395, E1396, E1397} -> (fun (V5257, V5258, V5259, V5260) -> fun (V5261) -> case V5259 of {'Idris.Core.TT.Pi', E1439, E1440, E1441, E1442} -> (fun (V5262, V5263, V5264, V5265) -> begin (V5267 = begin (V5266 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5266} end), case V5267 of {'Idris.Prelude.Types.Left', E1443} -> (fun (V5268) -> {'Idris.Prelude.Types.Left', V5268} end(E1443)); {'Idris.Prelude.Types.Right', E1444} -> (fun (V5269) -> begin (V5273 = begin (V5270 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5269, V5265))(V5261))), case V5270 of {'Idris.Prelude.Types.Left', E1445} -> (fun (V5271) -> {'Idris.Prelude.Types.Left', V5271} end(E1445)); {'Idris.Prelude.Types.Right', E1446} -> (fun (V5272) -> (('un--nfToCFType'(V0, V5257, 0, V5272))(V5261)) end(E1446)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V5273 of {'Idris.Prelude.Types.Left', E1447} -> (fun (V5274) -> {'Idris.Prelude.Types.Left', V5274} end(E1447)); {'Idris.Prelude.Types.Right', E1448} -> (fun (V5275) -> begin (V5276 = (((V5260(V5269))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V5257, 0}))))(V5261))), case V5276 of {'Idris.Prelude.Types.Left', E1449} -> (fun (V5277) -> {'Idris.Prelude.Types.Left', V5277} end(E1449)); {'Idris.Prelude.Types.Right', E1450} -> (fun (V5278) -> begin (V5279 = (('un--nfToCFType'(V0, V5257, 0, V5278))(V5261))), case V5279 of {'Idris.Prelude.Types.Left', E1451} -> (fun (V5280) -> {'Idris.Prelude.Types.Left', V5280} end(E1451)); {'Idris.Prelude.Types.Right', E1452} -> (fun (V5281) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V5275, V5281}} end(E1452)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1450)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1448)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1444)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1439, E1440, E1441, E1442)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1404, E1405, E1406, E1407, E1408} -> (fun (V5282, V5283, V5284, V5285, V5286) -> begin (V5288 = begin (V5287 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5287} end), case V5288 of {'Idris.Prelude.Types.Left', E1409} -> (fun (V5289) -> {'Idris.Prelude.Types.Left', V5289} end(E1409)); {'Idris.Prelude.Types.Right', E1410} -> (fun (V5290) -> begin (V5297 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5291) -> fun (V5292) -> fun (V5293) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5291, V5292, V5293)) end end end, fun (V5294) -> fun (V5295) -> fun (V5296) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5294, V5295, V5296)) end end end}, V5283, V5261))), case V5297 of {'Idris.Prelude.Types.Left', E1411} -> (fun (V5298) -> {'Idris.Prelude.Types.Left', V5298} end(E1411)); {'Idris.Prelude.Types.Right', E1412} -> (fun (V5299) -> begin (V5301 = (('un--getNArgs'(V0, V5290, V5299, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5300) -> ('Idris.Idris2.Builtin':'un--snd'(V5300)) end, V5286))))(V5261))), case V5301 of {'Idris.Prelude.Types.Left', E1413} -> (fun (V5302) -> {'Idris.Prelude.Types.Left', V5302} end(E1413)); {'Idris.Prelude.Types.Right', E1414} -> (fun (V5303) -> case V5303 of {'Idris.Compiler.CompileExpr.User', E1415, E1416} -> (fun (V5304, V5305) -> begin (V5307 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5306) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5290, V5306)) end, V5305, [], V5261))), case V5307 of {'Idris.Prelude.Types.Left', E1417} -> (fun (V5308) -> {'Idris.Prelude.Types.Left', V5308} end(E1417)); {'Idris.Prelude.Types.Right', E1418} -> (fun (V5309) -> begin (V5311 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5310) -> ('un--nfToCFType'(V0, V5282, V2, V5310)) end, V5309, [], V5261))), case V5311 of {'Idris.Prelude.Types.Left', E1419} -> (fun (V5312) -> {'Idris.Prelude.Types.Left', V5312} end(E1419)); {'Idris.Prelude.Types.Right', E1420} -> (fun (V5313) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5299, V5313}} end(E1420)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1418)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1415, E1416)); {'Idris.Compiler.CompileExpr.Struct', E1421, E1422} -> (fun (V5314, V5315) -> begin (V5326 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5316) -> fun (V5317) -> case V5316 of {'Idris.Builtin.MkPair', E1423, E1424} -> (fun (V5318, V5319) -> begin (V5320 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5290, V5319))(V5317))), case V5320 of {'Idris.Prelude.Types.Left', E1425} -> (fun (V5321) -> {'Idris.Prelude.Types.Left', V5321} end(E1425)); {'Idris.Prelude.Types.Right', E1426} -> (fun (V5322) -> begin (V5323 = (('un--nfToCFType'(V0, V5282, 1, V5322))(V5317))), case V5323 of {'Idris.Prelude.Types.Left', E1427} -> (fun (V5324) -> {'Idris.Prelude.Types.Left', V5324} end(E1427)); {'Idris.Prelude.Types.Right', E1428} -> (fun (V5325) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5318, V5325}} end(E1428)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1426)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1423, E1424)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5315, [], V5261))), case V5326 of {'Idris.Prelude.Types.Left', E1429} -> (fun (V5327) -> {'Idris.Prelude.Types.Left', V5327} end(E1429)); {'Idris.Prelude.Types.Right', E1430} -> (fun (V5328) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5314, V5328}} end(E1430)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1421, E1422)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1431} -> (fun (V5329) -> begin (V5330 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5290, V5329))(V5261))), case V5330 of {'Idris.Prelude.Types.Left', E1432} -> (fun (V5331) -> {'Idris.Prelude.Types.Left', V5331} end(E1432)); {'Idris.Prelude.Types.Right', E1433} -> (fun (V5332) -> begin (V5333 = (('un--nfToCFType'(V0, V5282, V2, V5332))(V5261))), case V5333 of {'Idris.Prelude.Types.Left', E1434} -> (fun (V5334) -> {'Idris.Prelude.Types.Left', V5334} end(E1434)); {'Idris.Prelude.Types.Right', E1435} -> (fun (V5335) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5335}} end(E1435)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1433)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1431)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1414)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1412)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1410)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1404, E1405, E1406, E1407, E1408)); {'Idris.Core.Value.NType', E1436} -> (fun (V5336) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E1436)); {'Idris.Core.Value.NErased', E1437, E1438} -> (fun (V5337, V5338) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E1437, E1438)); _ -> begin (V5340 = begin (V5339 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5339} end), case V5340 of {'Idris.Prelude.Types.Left', E1398} -> (fun (V5341) -> {'Idris.Prelude.Types.Left', V5341} end(E1398)); {'Idris.Prelude.Types.Right', E1399} -> (fun (V5342) -> begin (V5343 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V5342, {'Idris.Core.Env.Nil'}, V3, V5261))), case V5343 of {'Idris.Prelude.Types.Left', E1400} -> (fun (V5344) -> {'Idris.Prelude.Types.Left', V5344} end(E1400)); {'Idris.Prelude.Types.Right', E1401} -> (fun (V5345) -> begin (V5352 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5346) -> fun (V5347) -> fun (V5348) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5346, V5347, V5348)) end end end, fun (V5349) -> fun (V5350) -> fun (V5351) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5349, V5350, V5351)) end end end}, V5345, V5261))), case V5352 of {'Idris.Prelude.Types.Left', E1402} -> (fun (V5353) -> {'Idris.Prelude.Types.Left', V5353} end(E1402)); {'Idris.Prelude.Types.Right', E1403} -> (fun (V5354) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5354))))}, V5261)) end(E1403)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1401)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1399)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E1394, E1395, E1396, E1397)); _ -> fun (V5355) -> case V3 of {'Idris.Core.Value.NTCon', E1359, E1360, E1361, E1362, E1363} -> (fun (V5356, V5357, V5358, V5359, V5360) -> begin (V5362 = begin (V5361 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5361} end), case V5362 of {'Idris.Prelude.Types.Left', E1364} -> (fun (V5363) -> {'Idris.Prelude.Types.Left', V5363} end(E1364)); {'Idris.Prelude.Types.Right', E1365} -> (fun (V5364) -> begin (V5371 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5365) -> fun (V5366) -> fun (V5367) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5365, V5366, V5367)) end end end, fun (V5368) -> fun (V5369) -> fun (V5370) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5368, V5369, V5370)) end end end}, V5357, V5355))), case V5371 of {'Idris.Prelude.Types.Left', E1366} -> (fun (V5372) -> {'Idris.Prelude.Types.Left', V5372} end(E1366)); {'Idris.Prelude.Types.Right', E1367} -> (fun (V5373) -> begin (V5375 = (('un--getNArgs'(V0, V5364, V5373, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5374) -> ('Idris.Idris2.Builtin':'un--snd'(V5374)) end, V5360))))(V5355))), case V5375 of {'Idris.Prelude.Types.Left', E1368} -> (fun (V5376) -> {'Idris.Prelude.Types.Left', V5376} end(E1368)); {'Idris.Prelude.Types.Right', E1369} -> (fun (V5377) -> case V5377 of {'Idris.Compiler.CompileExpr.User', E1370, E1371} -> (fun (V5378, V5379) -> begin (V5381 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5380) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5364, V5380)) end, V5379, [], V5355))), case V5381 of {'Idris.Prelude.Types.Left', E1372} -> (fun (V5382) -> {'Idris.Prelude.Types.Left', V5382} end(E1372)); {'Idris.Prelude.Types.Right', E1373} -> (fun (V5383) -> begin (V5385 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5384) -> ('un--nfToCFType'(V0, V5356, V2, V5384)) end, V5383, [], V5355))), case V5385 of {'Idris.Prelude.Types.Left', E1374} -> (fun (V5386) -> {'Idris.Prelude.Types.Left', V5386} end(E1374)); {'Idris.Prelude.Types.Right', E1375} -> (fun (V5387) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5373, V5387}} end(E1375)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1373)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1370, E1371)); {'Idris.Compiler.CompileExpr.Struct', E1376, E1377} -> (fun (V5388, V5389) -> begin (V5400 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5390) -> fun (V5391) -> case V5390 of {'Idris.Builtin.MkPair', E1378, E1379} -> (fun (V5392, V5393) -> begin (V5394 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5364, V5393))(V5391))), case V5394 of {'Idris.Prelude.Types.Left', E1380} -> (fun (V5395) -> {'Idris.Prelude.Types.Left', V5395} end(E1380)); {'Idris.Prelude.Types.Right', E1381} -> (fun (V5396) -> begin (V5397 = (('un--nfToCFType'(V0, V5356, 1, V5396))(V5391))), case V5397 of {'Idris.Prelude.Types.Left', E1382} -> (fun (V5398) -> {'Idris.Prelude.Types.Left', V5398} end(E1382)); {'Idris.Prelude.Types.Right', E1383} -> (fun (V5399) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5392, V5399}} end(E1383)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1381)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1378, E1379)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5389, [], V5355))), case V5400 of {'Idris.Prelude.Types.Left', E1384} -> (fun (V5401) -> {'Idris.Prelude.Types.Left', V5401} end(E1384)); {'Idris.Prelude.Types.Right', E1385} -> (fun (V5402) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5388, V5402}} end(E1385)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1376, E1377)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1386} -> (fun (V5403) -> begin (V5404 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5364, V5403))(V5355))), case V5404 of {'Idris.Prelude.Types.Left', E1387} -> (fun (V5405) -> {'Idris.Prelude.Types.Left', V5405} end(E1387)); {'Idris.Prelude.Types.Right', E1388} -> (fun (V5406) -> begin (V5407 = (('un--nfToCFType'(V0, V5356, V2, V5406))(V5355))), case V5407 of {'Idris.Prelude.Types.Left', E1389} -> (fun (V5408) -> {'Idris.Prelude.Types.Left', V5408} end(E1389)); {'Idris.Prelude.Types.Right', E1390} -> (fun (V5409) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5409}} end(E1390)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1388)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1386)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1369)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1367)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1365)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1359, E1360, E1361, E1362, E1363)); {'Idris.Core.Value.NType', E1391} -> (fun (V5410) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E1391)); {'Idris.Core.Value.NErased', E1392, E1393} -> (fun (V5411, V5412) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E1392, E1393)); _ -> begin (V5414 = begin (V5413 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5413} end), case V5414 of {'Idris.Prelude.Types.Left', E1353} -> (fun (V5415) -> {'Idris.Prelude.Types.Left', V5415} end(E1353)); {'Idris.Prelude.Types.Right', E1354} -> (fun (V5416) -> begin (V5417 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V5416, {'Idris.Core.Env.Nil'}, V3, V5355))), case V5417 of {'Idris.Prelude.Types.Left', E1355} -> (fun (V5418) -> {'Idris.Prelude.Types.Left', V5418} end(E1355)); {'Idris.Prelude.Types.Right', E1356} -> (fun (V5419) -> begin (V5426 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5420) -> fun (V5421) -> fun (V5422) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5420, V5421, V5422)) end end end, fun (V5423) -> fun (V5424) -> fun (V5425) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5423, V5424, V5425)) end end end}, V5419, V5355))), case V5426 of {'Idris.Prelude.Types.Left', E1357} -> (fun (V5427) -> {'Idris.Prelude.Types.Left', V5427} end(E1357)); {'Idris.Prelude.Types.Right', E1358} -> (fun (V5428) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5428))))}, V5355)) end(E1358)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1356)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1354)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V5429) -> case V3 of {'Idris.Core.Value.NBind', E1494, E1495, E1496, E1497} -> (fun (V5430, V5431, V5432, V5433) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V5430, <<"Function types not allowed in a foreign struct"/utf8>>}, V5429)) end(E1494, E1495, E1496, E1497)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1459, E1460, E1461, E1462, E1463} -> (fun (V5434, V5435, V5436, V5437, V5438) -> begin (V5440 = begin (V5439 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5439} end), case V5440 of {'Idris.Prelude.Types.Left', E1464} -> (fun (V5441) -> {'Idris.Prelude.Types.Left', V5441} end(E1464)); {'Idris.Prelude.Types.Right', E1465} -> (fun (V5442) -> begin (V5449 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5443) -> fun (V5444) -> fun (V5445) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5443, V5444, V5445)) end end end, fun (V5446) -> fun (V5447) -> fun (V5448) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5446, V5447, V5448)) end end end}, V5435, V5429))), case V5449 of {'Idris.Prelude.Types.Left', E1466} -> (fun (V5450) -> {'Idris.Prelude.Types.Left', V5450} end(E1466)); {'Idris.Prelude.Types.Right', E1467} -> (fun (V5451) -> begin (V5453 = (('un--getNArgs'(V0, V5442, V5451, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5452) -> ('Idris.Idris2.Builtin':'un--snd'(V5452)) end, V5438))))(V5429))), case V5453 of {'Idris.Prelude.Types.Left', E1468} -> (fun (V5454) -> {'Idris.Prelude.Types.Left', V5454} end(E1468)); {'Idris.Prelude.Types.Right', E1469} -> (fun (V5455) -> case V5455 of {'Idris.Compiler.CompileExpr.User', E1470, E1471} -> (fun (V5456, V5457) -> begin (V5459 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5458) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5442, V5458)) end, V5457, [], V5429))), case V5459 of {'Idris.Prelude.Types.Left', E1472} -> (fun (V5460) -> {'Idris.Prelude.Types.Left', V5460} end(E1472)); {'Idris.Prelude.Types.Right', E1473} -> (fun (V5461) -> begin (V5463 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5462) -> ('un--nfToCFType'(V0, V5434, V2, V5462)) end, V5461, [], V5429))), case V5463 of {'Idris.Prelude.Types.Left', E1474} -> (fun (V5464) -> {'Idris.Prelude.Types.Left', V5464} end(E1474)); {'Idris.Prelude.Types.Right', E1475} -> (fun (V5465) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5451, V5465}} end(E1475)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1473)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1470, E1471)); {'Idris.Compiler.CompileExpr.Struct', E1476, E1477} -> (fun (V5466, V5467) -> begin (V5478 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5468) -> fun (V5469) -> case V5468 of {'Idris.Builtin.MkPair', E1478, E1479} -> (fun (V5470, V5471) -> begin (V5472 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5442, V5471))(V5469))), case V5472 of {'Idris.Prelude.Types.Left', E1480} -> (fun (V5473) -> {'Idris.Prelude.Types.Left', V5473} end(E1480)); {'Idris.Prelude.Types.Right', E1481} -> (fun (V5474) -> begin (V5475 = (('un--nfToCFType'(V0, V5434, 1, V5474))(V5469))), case V5475 of {'Idris.Prelude.Types.Left', E1482} -> (fun (V5476) -> {'Idris.Prelude.Types.Left', V5476} end(E1482)); {'Idris.Prelude.Types.Right', E1483} -> (fun (V5477) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5470, V5477}} end(E1483)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1481)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1478, E1479)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5467, [], V5429))), case V5478 of {'Idris.Prelude.Types.Left', E1484} -> (fun (V5479) -> {'Idris.Prelude.Types.Left', V5479} end(E1484)); {'Idris.Prelude.Types.Right', E1485} -> (fun (V5480) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5466, V5480}} end(E1485)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1476, E1477)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1486} -> (fun (V5481) -> begin (V5482 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5442, V5481))(V5429))), case V5482 of {'Idris.Prelude.Types.Left', E1487} -> (fun (V5483) -> {'Idris.Prelude.Types.Left', V5483} end(E1487)); {'Idris.Prelude.Types.Right', E1488} -> (fun (V5484) -> begin (V5485 = (('un--nfToCFType'(V0, V5434, V2, V5484))(V5429))), case V5485 of {'Idris.Prelude.Types.Left', E1489} -> (fun (V5486) -> {'Idris.Prelude.Types.Left', V5486} end(E1489)); {'Idris.Prelude.Types.Right', E1490} -> (fun (V5487) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5487}} end(E1490)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1488)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1486)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1469)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1467)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1465)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1459, E1460, E1461, E1462, E1463)); {'Idris.Core.Value.NType', E1491} -> (fun (V5488) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E1491)); {'Idris.Core.Value.NErased', E1492, E1493} -> (fun (V5489, V5490) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E1492, E1493)); _ -> begin (V5492 = begin (V5491 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5491} end), case V5492 of {'Idris.Prelude.Types.Left', E1453} -> (fun (V5493) -> {'Idris.Prelude.Types.Left', V5493} end(E1453)); {'Idris.Prelude.Types.Right', E1454} -> (fun (V5494) -> begin (V5495 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V5494, {'Idris.Core.Env.Nil'}, V3, V5429))), case V5495 of {'Idris.Prelude.Types.Left', E1455} -> (fun (V5496) -> {'Idris.Prelude.Types.Left', V5496} end(E1455)); {'Idris.Prelude.Types.Right', E1456} -> (fun (V5497) -> begin (V5504 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5498) -> fun (V5499) -> fun (V5500) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5498, V5499, V5500)) end end end, fun (V5501) -> fun (V5502) -> fun (V5503) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5501, V5502, V5503)) end end end}, V5497, V5429))), case V5504 of {'Idris.Prelude.Types.Left', E1457} -> (fun (V5505) -> {'Idris.Prelude.Types.Left', V5505} end(E1457)); {'Idris.Prelude.Types.Right', E1458} -> (fun (V5506) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5506))))}, V5429)) end(E1458)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1456)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1454)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V5507) -> case V3 of {'Idris.Core.Value.NTCon', E1318, E1319, E1320, E1321, E1322} -> (fun (V5508, V5509, V5510, V5511, V5512) -> begin (V5514 = begin (V5513 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5513} end), case V5514 of {'Idris.Prelude.Types.Left', E1323} -> (fun (V5515) -> {'Idris.Prelude.Types.Left', V5515} end(E1323)); {'Idris.Prelude.Types.Right', E1324} -> (fun (V5516) -> begin (V5523 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5517) -> fun (V5518) -> fun (V5519) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5517, V5518, V5519)) end end end, fun (V5520) -> fun (V5521) -> fun (V5522) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5520, V5521, V5522)) end end end}, V5509, V5507))), case V5523 of {'Idris.Prelude.Types.Left', E1325} -> (fun (V5524) -> {'Idris.Prelude.Types.Left', V5524} end(E1325)); {'Idris.Prelude.Types.Right', E1326} -> (fun (V5525) -> begin (V5527 = (('un--getNArgs'(V0, V5516, V5525, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5526) -> ('Idris.Idris2.Builtin':'un--snd'(V5526)) end, V5512))))(V5507))), case V5527 of {'Idris.Prelude.Types.Left', E1327} -> (fun (V5528) -> {'Idris.Prelude.Types.Left', V5528} end(E1327)); {'Idris.Prelude.Types.Right', E1328} -> (fun (V5529) -> case V5529 of {'Idris.Compiler.CompileExpr.User', E1329, E1330} -> (fun (V5530, V5531) -> begin (V5533 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5532) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5516, V5532)) end, V5531, [], V5507))), case V5533 of {'Idris.Prelude.Types.Left', E1331} -> (fun (V5534) -> {'Idris.Prelude.Types.Left', V5534} end(E1331)); {'Idris.Prelude.Types.Right', E1332} -> (fun (V5535) -> begin (V5537 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5536) -> ('un--nfToCFType'(V0, V5508, V2, V5536)) end, V5535, [], V5507))), case V5537 of {'Idris.Prelude.Types.Left', E1333} -> (fun (V5538) -> {'Idris.Prelude.Types.Left', V5538} end(E1333)); {'Idris.Prelude.Types.Right', E1334} -> (fun (V5539) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5525, V5539}} end(E1334)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1332)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1329, E1330)); {'Idris.Compiler.CompileExpr.Struct', E1335, E1336} -> (fun (V5540, V5541) -> begin (V5552 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5542) -> fun (V5543) -> case V5542 of {'Idris.Builtin.MkPair', E1337, E1338} -> (fun (V5544, V5545) -> begin (V5546 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5516, V5545))(V5543))), case V5546 of {'Idris.Prelude.Types.Left', E1339} -> (fun (V5547) -> {'Idris.Prelude.Types.Left', V5547} end(E1339)); {'Idris.Prelude.Types.Right', E1340} -> (fun (V5548) -> begin (V5549 = (('un--nfToCFType'(V0, V5508, 1, V5548))(V5543))), case V5549 of {'Idris.Prelude.Types.Left', E1341} -> (fun (V5550) -> {'Idris.Prelude.Types.Left', V5550} end(E1341)); {'Idris.Prelude.Types.Right', E1342} -> (fun (V5551) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5544, V5551}} end(E1342)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1340)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1337, E1338)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5541, [], V5507))), case V5552 of {'Idris.Prelude.Types.Left', E1343} -> (fun (V5553) -> {'Idris.Prelude.Types.Left', V5553} end(E1343)); {'Idris.Prelude.Types.Right', E1344} -> (fun (V5554) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5540, V5554}} end(E1344)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1335, E1336)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1345} -> (fun (V5555) -> begin (V5556 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5516, V5555))(V5507))), case V5556 of {'Idris.Prelude.Types.Left', E1346} -> (fun (V5557) -> {'Idris.Prelude.Types.Left', V5557} end(E1346)); {'Idris.Prelude.Types.Right', E1347} -> (fun (V5558) -> begin (V5559 = (('un--nfToCFType'(V0, V5508, V2, V5558))(V5507))), case V5559 of {'Idris.Prelude.Types.Left', E1348} -> (fun (V5560) -> {'Idris.Prelude.Types.Left', V5560} end(E1348)); {'Idris.Prelude.Types.Right', E1349} -> (fun (V5561) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5561}} end(E1349)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1347)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1345)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1328)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1326)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1324)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1318, E1319, E1320, E1321, E1322)); {'Idris.Core.Value.NType', E1350} -> (fun (V5562) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E1350)); {'Idris.Core.Value.NErased', E1351, E1352} -> (fun (V5563, V5564) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E1351, E1352)); _ -> begin (V5566 = begin (V5565 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5565} end), case V5566 of {'Idris.Prelude.Types.Left', E1312} -> (fun (V5567) -> {'Idris.Prelude.Types.Left', V5567} end(E1312)); {'Idris.Prelude.Types.Right', E1313} -> (fun (V5568) -> begin (V5569 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V5568, {'Idris.Core.Env.Nil'}, V3, V5507))), case V5569 of {'Idris.Prelude.Types.Left', E1314} -> (fun (V5570) -> {'Idris.Prelude.Types.Left', V5570} end(E1314)); {'Idris.Prelude.Types.Right', E1315} -> (fun (V5571) -> begin (V5578 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5572) -> fun (V5573) -> fun (V5574) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5572, V5573, V5574)) end end end, fun (V5575) -> fun (V5576) -> fun (V5577) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5575, V5576, V5577)) end end end}, V5571, V5507))), case V5578 of {'Idris.Prelude.Types.Left', E1316} -> (fun (V5579) -> {'Idris.Prelude.Types.Left', V5579} end(E1316)); {'Idris.Prelude.Types.Right', E1317} -> (fun (V5580) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5580))))}, V5507)) end(E1317)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1315)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1313)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E1310, E1311)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E1206, E1207, E1208, E1209} -> (fun (V5581, V5582, V5583, V5584) -> fun (V5585) -> case V5583 of {'Idris.Core.TT.Pi', E1251, E1252, E1253, E1254} -> (fun (V5586, V5587, V5588, V5589) -> begin (V5591 = begin (V5590 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5590} end), case V5591 of {'Idris.Prelude.Types.Left', E1255} -> (fun (V5592) -> {'Idris.Prelude.Types.Left', V5592} end(E1255)); {'Idris.Prelude.Types.Right', E1256} -> (fun (V5593) -> begin (V5597 = begin (V5594 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5593, V5589))(V5585))), case V5594 of {'Idris.Prelude.Types.Left', E1257} -> (fun (V5595) -> {'Idris.Prelude.Types.Left', V5595} end(E1257)); {'Idris.Prelude.Types.Right', E1258} -> (fun (V5596) -> (('un--nfToCFType'(V0, V5581, 0, V5596))(V5585)) end(E1258)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V5597 of {'Idris.Prelude.Types.Left', E1259} -> (fun (V5598) -> {'Idris.Prelude.Types.Left', V5598} end(E1259)); {'Idris.Prelude.Types.Right', E1260} -> (fun (V5599) -> begin (V5600 = (((V5584(V5593))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V5581, 0}))))(V5585))), case V5600 of {'Idris.Prelude.Types.Left', E1261} -> (fun (V5601) -> {'Idris.Prelude.Types.Left', V5601} end(E1261)); {'Idris.Prelude.Types.Right', E1262} -> (fun (V5602) -> begin (V5603 = (('un--nfToCFType'(V0, V5581, 0, V5602))(V5585))), case V5603 of {'Idris.Prelude.Types.Left', E1263} -> (fun (V5604) -> {'Idris.Prelude.Types.Left', V5604} end(E1263)); {'Idris.Prelude.Types.Right', E1264} -> (fun (V5605) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V5599, V5605}} end(E1264)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1262)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1260)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1256)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1251, E1252, E1253, E1254)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1216, E1217, E1218, E1219, E1220} -> (fun (V5606, V5607, V5608, V5609, V5610) -> begin (V5612 = begin (V5611 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5611} end), case V5612 of {'Idris.Prelude.Types.Left', E1221} -> (fun (V5613) -> {'Idris.Prelude.Types.Left', V5613} end(E1221)); {'Idris.Prelude.Types.Right', E1222} -> (fun (V5614) -> begin (V5621 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5615) -> fun (V5616) -> fun (V5617) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5615, V5616, V5617)) end end end, fun (V5618) -> fun (V5619) -> fun (V5620) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5618, V5619, V5620)) end end end}, V5607, V5585))), case V5621 of {'Idris.Prelude.Types.Left', E1223} -> (fun (V5622) -> {'Idris.Prelude.Types.Left', V5622} end(E1223)); {'Idris.Prelude.Types.Right', E1224} -> (fun (V5623) -> begin (V5625 = (('un--getNArgs'(V0, V5614, V5623, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5624) -> ('Idris.Idris2.Builtin':'un--snd'(V5624)) end, V5610))))(V5585))), case V5625 of {'Idris.Prelude.Types.Left', E1225} -> (fun (V5626) -> {'Idris.Prelude.Types.Left', V5626} end(E1225)); {'Idris.Prelude.Types.Right', E1226} -> (fun (V5627) -> case V5627 of {'Idris.Compiler.CompileExpr.User', E1227, E1228} -> (fun (V5628, V5629) -> begin (V5631 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5630) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5614, V5630)) end, V5629, [], V5585))), case V5631 of {'Idris.Prelude.Types.Left', E1229} -> (fun (V5632) -> {'Idris.Prelude.Types.Left', V5632} end(E1229)); {'Idris.Prelude.Types.Right', E1230} -> (fun (V5633) -> begin (V5635 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5634) -> ('un--nfToCFType'(V0, V5606, V2, V5634)) end, V5633, [], V5585))), case V5635 of {'Idris.Prelude.Types.Left', E1231} -> (fun (V5636) -> {'Idris.Prelude.Types.Left', V5636} end(E1231)); {'Idris.Prelude.Types.Right', E1232} -> (fun (V5637) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5623, V5637}} end(E1232)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1227, E1228)); {'Idris.Compiler.CompileExpr.Struct', E1233, E1234} -> (fun (V5638, V5639) -> begin (V5650 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5640) -> fun (V5641) -> case V5640 of {'Idris.Builtin.MkPair', E1235, E1236} -> (fun (V5642, V5643) -> begin (V5644 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5614, V5643))(V5641))), case V5644 of {'Idris.Prelude.Types.Left', E1237} -> (fun (V5645) -> {'Idris.Prelude.Types.Left', V5645} end(E1237)); {'Idris.Prelude.Types.Right', E1238} -> (fun (V5646) -> begin (V5647 = (('un--nfToCFType'(V0, V5606, 1, V5646))(V5641))), case V5647 of {'Idris.Prelude.Types.Left', E1239} -> (fun (V5648) -> {'Idris.Prelude.Types.Left', V5648} end(E1239)); {'Idris.Prelude.Types.Right', E1240} -> (fun (V5649) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5642, V5649}} end(E1240)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1238)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1235, E1236)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5639, [], V5585))), case V5650 of {'Idris.Prelude.Types.Left', E1241} -> (fun (V5651) -> {'Idris.Prelude.Types.Left', V5651} end(E1241)); {'Idris.Prelude.Types.Right', E1242} -> (fun (V5652) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5638, V5652}} end(E1242)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1233, E1234)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1243} -> (fun (V5653) -> begin (V5654 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5614, V5653))(V5585))), case V5654 of {'Idris.Prelude.Types.Left', E1244} -> (fun (V5655) -> {'Idris.Prelude.Types.Left', V5655} end(E1244)); {'Idris.Prelude.Types.Right', E1245} -> (fun (V5656) -> begin (V5657 = (('un--nfToCFType'(V0, V5606, V2, V5656))(V5585))), case V5657 of {'Idris.Prelude.Types.Left', E1246} -> (fun (V5658) -> {'Idris.Prelude.Types.Left', V5658} end(E1246)); {'Idris.Prelude.Types.Right', E1247} -> (fun (V5659) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5659}} end(E1247)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1245)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1243)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1226)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1224)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1222)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1216, E1217, E1218, E1219, E1220)); {'Idris.Core.Value.NType', E1248} -> (fun (V5660) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E1248)); {'Idris.Core.Value.NErased', E1249, E1250} -> (fun (V5661, V5662) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E1249, E1250)); _ -> begin (V5664 = begin (V5663 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5663} end), case V5664 of {'Idris.Prelude.Types.Left', E1210} -> (fun (V5665) -> {'Idris.Prelude.Types.Left', V5665} end(E1210)); {'Idris.Prelude.Types.Right', E1211} -> (fun (V5666) -> begin (V5667 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V5666, {'Idris.Core.Env.Nil'}, V3, V5585))), case V5667 of {'Idris.Prelude.Types.Left', E1212} -> (fun (V5668) -> {'Idris.Prelude.Types.Left', V5668} end(E1212)); {'Idris.Prelude.Types.Right', E1213} -> (fun (V5669) -> begin (V5676 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5670) -> fun (V5671) -> fun (V5672) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5670, V5671, V5672)) end end end, fun (V5673) -> fun (V5674) -> fun (V5675) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5673, V5674, V5675)) end end end}, V5669, V5585))), case V5676 of {'Idris.Prelude.Types.Left', E1214} -> (fun (V5677) -> {'Idris.Prelude.Types.Left', V5677} end(E1214)); {'Idris.Prelude.Types.Right', E1215} -> (fun (V5678) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5678))))}, V5585)) end(E1215)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1213)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1211)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E1206, E1207, E1208, E1209)); _ -> fun (V5679) -> case V3 of {'Idris.Core.Value.NTCon', E1171, E1172, E1173, E1174, E1175} -> (fun (V5680, V5681, V5682, V5683, V5684) -> begin (V5686 = begin (V5685 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5685} end), case V5686 of {'Idris.Prelude.Types.Left', E1176} -> (fun (V5687) -> {'Idris.Prelude.Types.Left', V5687} end(E1176)); {'Idris.Prelude.Types.Right', E1177} -> (fun (V5688) -> begin (V5695 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5689) -> fun (V5690) -> fun (V5691) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5689, V5690, V5691)) end end end, fun (V5692) -> fun (V5693) -> fun (V5694) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5692, V5693, V5694)) end end end}, V5681, V5679))), case V5695 of {'Idris.Prelude.Types.Left', E1178} -> (fun (V5696) -> {'Idris.Prelude.Types.Left', V5696} end(E1178)); {'Idris.Prelude.Types.Right', E1179} -> (fun (V5697) -> begin (V5699 = (('un--getNArgs'(V0, V5688, V5697, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5698) -> ('Idris.Idris2.Builtin':'un--snd'(V5698)) end, V5684))))(V5679))), case V5699 of {'Idris.Prelude.Types.Left', E1180} -> (fun (V5700) -> {'Idris.Prelude.Types.Left', V5700} end(E1180)); {'Idris.Prelude.Types.Right', E1181} -> (fun (V5701) -> case V5701 of {'Idris.Compiler.CompileExpr.User', E1182, E1183} -> (fun (V5702, V5703) -> begin (V5705 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5704) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5688, V5704)) end, V5703, [], V5679))), case V5705 of {'Idris.Prelude.Types.Left', E1184} -> (fun (V5706) -> {'Idris.Prelude.Types.Left', V5706} end(E1184)); {'Idris.Prelude.Types.Right', E1185} -> (fun (V5707) -> begin (V5709 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5708) -> ('un--nfToCFType'(V0, V5680, V2, V5708)) end, V5707, [], V5679))), case V5709 of {'Idris.Prelude.Types.Left', E1186} -> (fun (V5710) -> {'Idris.Prelude.Types.Left', V5710} end(E1186)); {'Idris.Prelude.Types.Right', E1187} -> (fun (V5711) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5697, V5711}} end(E1187)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1185)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1182, E1183)); {'Idris.Compiler.CompileExpr.Struct', E1188, E1189} -> (fun (V5712, V5713) -> begin (V5724 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5714) -> fun (V5715) -> case V5714 of {'Idris.Builtin.MkPair', E1190, E1191} -> (fun (V5716, V5717) -> begin (V5718 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5688, V5717))(V5715))), case V5718 of {'Idris.Prelude.Types.Left', E1192} -> (fun (V5719) -> {'Idris.Prelude.Types.Left', V5719} end(E1192)); {'Idris.Prelude.Types.Right', E1193} -> (fun (V5720) -> begin (V5721 = (('un--nfToCFType'(V0, V5680, 1, V5720))(V5715))), case V5721 of {'Idris.Prelude.Types.Left', E1194} -> (fun (V5722) -> {'Idris.Prelude.Types.Left', V5722} end(E1194)); {'Idris.Prelude.Types.Right', E1195} -> (fun (V5723) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5716, V5723}} end(E1195)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1193)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1190, E1191)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5713, [], V5679))), case V5724 of {'Idris.Prelude.Types.Left', E1196} -> (fun (V5725) -> {'Idris.Prelude.Types.Left', V5725} end(E1196)); {'Idris.Prelude.Types.Right', E1197} -> (fun (V5726) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5712, V5726}} end(E1197)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1188, E1189)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1198} -> (fun (V5727) -> begin (V5728 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5688, V5727))(V5679))), case V5728 of {'Idris.Prelude.Types.Left', E1199} -> (fun (V5729) -> {'Idris.Prelude.Types.Left', V5729} end(E1199)); {'Idris.Prelude.Types.Right', E1200} -> (fun (V5730) -> begin (V5731 = (('un--nfToCFType'(V0, V5680, V2, V5730))(V5679))), case V5731 of {'Idris.Prelude.Types.Left', E1201} -> (fun (V5732) -> {'Idris.Prelude.Types.Left', V5732} end(E1201)); {'Idris.Prelude.Types.Right', E1202} -> (fun (V5733) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5733}} end(E1202)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1200)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1198)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1181)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1179)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1177)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1171, E1172, E1173, E1174, E1175)); {'Idris.Core.Value.NType', E1203} -> (fun (V5734) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E1203)); {'Idris.Core.Value.NErased', E1204, E1205} -> (fun (V5735, V5736) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E1204, E1205)); _ -> begin (V5738 = begin (V5737 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5737} end), case V5738 of {'Idris.Prelude.Types.Left', E1165} -> (fun (V5739) -> {'Idris.Prelude.Types.Left', V5739} end(E1165)); {'Idris.Prelude.Types.Right', E1166} -> (fun (V5740) -> begin (V5741 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V5740, {'Idris.Core.Env.Nil'}, V3, V5679))), case V5741 of {'Idris.Prelude.Types.Left', E1167} -> (fun (V5742) -> {'Idris.Prelude.Types.Left', V5742} end(E1167)); {'Idris.Prelude.Types.Right', E1168} -> (fun (V5743) -> begin (V5750 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5744) -> fun (V5745) -> fun (V5746) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5744, V5745, V5746)) end end end, fun (V5747) -> fun (V5748) -> fun (V5749) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5747, V5748, V5749)) end end end}, V5743, V5679))), case V5750 of {'Idris.Prelude.Types.Left', E1169} -> (fun (V5751) -> {'Idris.Prelude.Types.Left', V5751} end(E1169)); {'Idris.Prelude.Types.Right', E1170} -> (fun (V5752) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5752))))}, V5679)) end(E1170)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1168)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V5753) -> case V3 of {'Idris.Core.Value.NBind', E1306, E1307, E1308, E1309} -> (fun (V5754, V5755, V5756, V5757) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V5754, <<"Function types not allowed in a foreign struct"/utf8>>}, V5753)) end(E1306, E1307, E1308, E1309)); _ -> case V3 of {'Idris.Core.Value.NTCon', E1271, E1272, E1273, E1274, E1275} -> (fun (V5758, V5759, V5760, V5761, V5762) -> begin (V5764 = begin (V5763 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5763} end), case V5764 of {'Idris.Prelude.Types.Left', E1276} -> (fun (V5765) -> {'Idris.Prelude.Types.Left', V5765} end(E1276)); {'Idris.Prelude.Types.Right', E1277} -> (fun (V5766) -> begin (V5773 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5767) -> fun (V5768) -> fun (V5769) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5767, V5768, V5769)) end end end, fun (V5770) -> fun (V5771) -> fun (V5772) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5770, V5771, V5772)) end end end}, V5759, V5753))), case V5773 of {'Idris.Prelude.Types.Left', E1278} -> (fun (V5774) -> {'Idris.Prelude.Types.Left', V5774} end(E1278)); {'Idris.Prelude.Types.Right', E1279} -> (fun (V5775) -> begin (V5777 = (('un--getNArgs'(V0, V5766, V5775, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5776) -> ('Idris.Idris2.Builtin':'un--snd'(V5776)) end, V5762))))(V5753))), case V5777 of {'Idris.Prelude.Types.Left', E1280} -> (fun (V5778) -> {'Idris.Prelude.Types.Left', V5778} end(E1280)); {'Idris.Prelude.Types.Right', E1281} -> (fun (V5779) -> case V5779 of {'Idris.Compiler.CompileExpr.User', E1282, E1283} -> (fun (V5780, V5781) -> begin (V5783 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5782) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5766, V5782)) end, V5781, [], V5753))), case V5783 of {'Idris.Prelude.Types.Left', E1284} -> (fun (V5784) -> {'Idris.Prelude.Types.Left', V5784} end(E1284)); {'Idris.Prelude.Types.Right', E1285} -> (fun (V5785) -> begin (V5787 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5786) -> ('un--nfToCFType'(V0, V5758, V2, V5786)) end, V5785, [], V5753))), case V5787 of {'Idris.Prelude.Types.Left', E1286} -> (fun (V5788) -> {'Idris.Prelude.Types.Left', V5788} end(E1286)); {'Idris.Prelude.Types.Right', E1287} -> (fun (V5789) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5775, V5789}} end(E1287)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1285)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1282, E1283)); {'Idris.Compiler.CompileExpr.Struct', E1288, E1289} -> (fun (V5790, V5791) -> begin (V5802 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5792) -> fun (V5793) -> case V5792 of {'Idris.Builtin.MkPair', E1290, E1291} -> (fun (V5794, V5795) -> begin (V5796 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5766, V5795))(V5793))), case V5796 of {'Idris.Prelude.Types.Left', E1292} -> (fun (V5797) -> {'Idris.Prelude.Types.Left', V5797} end(E1292)); {'Idris.Prelude.Types.Right', E1293} -> (fun (V5798) -> begin (V5799 = (('un--nfToCFType'(V0, V5758, 1, V5798))(V5793))), case V5799 of {'Idris.Prelude.Types.Left', E1294} -> (fun (V5800) -> {'Idris.Prelude.Types.Left', V5800} end(E1294)); {'Idris.Prelude.Types.Right', E1295} -> (fun (V5801) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5794, V5801}} end(E1295)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1293)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1290, E1291)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5791, [], V5753))), case V5802 of {'Idris.Prelude.Types.Left', E1296} -> (fun (V5803) -> {'Idris.Prelude.Types.Left', V5803} end(E1296)); {'Idris.Prelude.Types.Right', E1297} -> (fun (V5804) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5790, V5804}} end(E1297)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1288, E1289)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1298} -> (fun (V5805) -> begin (V5806 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5766, V5805))(V5753))), case V5806 of {'Idris.Prelude.Types.Left', E1299} -> (fun (V5807) -> {'Idris.Prelude.Types.Left', V5807} end(E1299)); {'Idris.Prelude.Types.Right', E1300} -> (fun (V5808) -> begin (V5809 = (('un--nfToCFType'(V0, V5758, V2, V5808))(V5753))), case V5809 of {'Idris.Prelude.Types.Left', E1301} -> (fun (V5810) -> {'Idris.Prelude.Types.Left', V5810} end(E1301)); {'Idris.Prelude.Types.Right', E1302} -> (fun (V5811) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5811}} end(E1302)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1300)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1298)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1281)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1279)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1277)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1271, E1272, E1273, E1274, E1275)); {'Idris.Core.Value.NType', E1303} -> (fun (V5812) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E1303)); {'Idris.Core.Value.NErased', E1304, E1305} -> (fun (V5813, V5814) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E1304, E1305)); _ -> begin (V5816 = begin (V5815 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5815} end), case V5816 of {'Idris.Prelude.Types.Left', E1265} -> (fun (V5817) -> {'Idris.Prelude.Types.Left', V5817} end(E1265)); {'Idris.Prelude.Types.Right', E1266} -> (fun (V5818) -> begin (V5819 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V5818, {'Idris.Core.Env.Nil'}, V3, V5753))), case V5819 of {'Idris.Prelude.Types.Left', E1267} -> (fun (V5820) -> {'Idris.Prelude.Types.Left', V5820} end(E1267)); {'Idris.Prelude.Types.Right', E1268} -> (fun (V5821) -> begin (V5828 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5822) -> fun (V5823) -> fun (V5824) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5822, V5823, V5824)) end end end, fun (V5825) -> fun (V5826) -> fun (V5827) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5825, V5826, V5827)) end end end}, V5821, V5753))), case V5828 of {'Idris.Prelude.Types.Left', E1269} -> (fun (V5829) -> {'Idris.Prelude.Types.Left', V5829} end(E1269)); {'Idris.Prelude.Types.Right', E1270} -> (fun (V5830) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5830))))}, V5753)) end(E1270)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1268)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1266)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V5831) -> case V3 of {'Idris.Core.Value.NTCon', E1130, E1131, E1132, E1133, E1134} -> (fun (V5832, V5833, V5834, V5835, V5836) -> begin (V5838 = begin (V5837 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5837} end), case V5838 of {'Idris.Prelude.Types.Left', E1135} -> (fun (V5839) -> {'Idris.Prelude.Types.Left', V5839} end(E1135)); {'Idris.Prelude.Types.Right', E1136} -> (fun (V5840) -> begin (V5847 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5841) -> fun (V5842) -> fun (V5843) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5841, V5842, V5843)) end end end, fun (V5844) -> fun (V5845) -> fun (V5846) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5844, V5845, V5846)) end end end}, V5833, V5831))), case V5847 of {'Idris.Prelude.Types.Left', E1137} -> (fun (V5848) -> {'Idris.Prelude.Types.Left', V5848} end(E1137)); {'Idris.Prelude.Types.Right', E1138} -> (fun (V5849) -> begin (V5851 = (('un--getNArgs'(V0, V5840, V5849, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5850) -> ('Idris.Idris2.Builtin':'un--snd'(V5850)) end, V5836))))(V5831))), case V5851 of {'Idris.Prelude.Types.Left', E1139} -> (fun (V5852) -> {'Idris.Prelude.Types.Left', V5852} end(E1139)); {'Idris.Prelude.Types.Right', E1140} -> (fun (V5853) -> case V5853 of {'Idris.Compiler.CompileExpr.User', E1141, E1142} -> (fun (V5854, V5855) -> begin (V5857 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5856) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5840, V5856)) end, V5855, [], V5831))), case V5857 of {'Idris.Prelude.Types.Left', E1143} -> (fun (V5858) -> {'Idris.Prelude.Types.Left', V5858} end(E1143)); {'Idris.Prelude.Types.Right', E1144} -> (fun (V5859) -> begin (V5861 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5860) -> ('un--nfToCFType'(V0, V5832, V2, V5860)) end, V5859, [], V5831))), case V5861 of {'Idris.Prelude.Types.Left', E1145} -> (fun (V5862) -> {'Idris.Prelude.Types.Left', V5862} end(E1145)); {'Idris.Prelude.Types.Right', E1146} -> (fun (V5863) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5849, V5863}} end(E1146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1141, E1142)); {'Idris.Compiler.CompileExpr.Struct', E1147, E1148} -> (fun (V5864, V5865) -> begin (V5876 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5866) -> fun (V5867) -> case V5866 of {'Idris.Builtin.MkPair', E1149, E1150} -> (fun (V5868, V5869) -> begin (V5870 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5840, V5869))(V5867))), case V5870 of {'Idris.Prelude.Types.Left', E1151} -> (fun (V5871) -> {'Idris.Prelude.Types.Left', V5871} end(E1151)); {'Idris.Prelude.Types.Right', E1152} -> (fun (V5872) -> begin (V5873 = (('un--nfToCFType'(V0, V5832, 1, V5872))(V5867))), case V5873 of {'Idris.Prelude.Types.Left', E1153} -> (fun (V5874) -> {'Idris.Prelude.Types.Left', V5874} end(E1153)); {'Idris.Prelude.Types.Right', E1154} -> (fun (V5875) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5868, V5875}} end(E1154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1152)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1149, E1150)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5865, [], V5831))), case V5876 of {'Idris.Prelude.Types.Left', E1155} -> (fun (V5877) -> {'Idris.Prelude.Types.Left', V5877} end(E1155)); {'Idris.Prelude.Types.Right', E1156} -> (fun (V5878) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5864, V5878}} end(E1156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1147, E1148)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E1157} -> (fun (V5879) -> begin (V5880 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5840, V5879))(V5831))), case V5880 of {'Idris.Prelude.Types.Left', E1158} -> (fun (V5881) -> {'Idris.Prelude.Types.Left', V5881} end(E1158)); {'Idris.Prelude.Types.Right', E1159} -> (fun (V5882) -> begin (V5883 = (('un--nfToCFType'(V0, V5832, V2, V5882))(V5831))), case V5883 of {'Idris.Prelude.Types.Left', E1160} -> (fun (V5884) -> {'Idris.Prelude.Types.Left', V5884} end(E1160)); {'Idris.Prelude.Types.Right', E1161} -> (fun (V5885) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5885}} end(E1161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1136)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1130, E1131, E1132, E1133, E1134)); {'Idris.Core.Value.NType', E1162} -> (fun (V5886) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E1162)); {'Idris.Core.Value.NErased', E1163, E1164} -> (fun (V5887, V5888) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E1163, E1164)); _ -> begin (V5890 = begin (V5889 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5889} end), case V5890 of {'Idris.Prelude.Types.Left', E1124} -> (fun (V5891) -> {'Idris.Prelude.Types.Left', V5891} end(E1124)); {'Idris.Prelude.Types.Right', E1125} -> (fun (V5892) -> begin (V5893 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V5892, {'Idris.Core.Env.Nil'}, V3, V5831))), case V5893 of {'Idris.Prelude.Types.Left', E1126} -> (fun (V5894) -> {'Idris.Prelude.Types.Left', V5894} end(E1126)); {'Idris.Prelude.Types.Right', E1127} -> (fun (V5895) -> begin (V5902 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5896) -> fun (V5897) -> fun (V5898) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5896, V5897, V5898)) end end end, fun (V5899) -> fun (V5900) -> fun (V5901) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V5899, V5900, V5901)) end end end}, V5895, V5831))), case V5902 of {'Idris.Prelude.Types.Left', E1128} -> (fun (V5903) -> {'Idris.Prelude.Types.Left', V5903} end(E1128)); {'Idris.Prelude.Types.Right', E1129} -> (fun (V5904) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V5904))))}, V5831)) end(E1129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end; _ -> case V3 of {'Idris.Core.Value.NPrimVal', E186, E187} -> (fun (V5905, V5906) -> case V5906 of {'Idris.Core.TT.DoubleType'} -> (fun () -> fun (V5907) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFDouble'}} end end()); {'Idris.Core.TT.CharType'} -> (fun () -> fun (V5908) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFChar'}} end end()); {'Idris.Core.TT.WorldType'} -> (fun () -> fun (V5909) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFWorld'}} end end()); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E270, E271, E272, E273} -> (fun (V5910, V5911, V5912, V5913) -> fun (V5914) -> case V5912 of {'Idris.Core.TT.Pi', E315, E316, E317, E318} -> (fun (V5915, V5916, V5917, V5918) -> begin (V5920 = begin (V5919 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5919} end), case V5920 of {'Idris.Prelude.Types.Left', E319} -> (fun (V5921) -> {'Idris.Prelude.Types.Left', V5921} end(E319)); {'Idris.Prelude.Types.Right', E320} -> (fun (V5922) -> begin (V5926 = begin (V5923 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5922, V5918))(V5914))), case V5923 of {'Idris.Prelude.Types.Left', E321} -> (fun (V5924) -> {'Idris.Prelude.Types.Left', V5924} end(E321)); {'Idris.Prelude.Types.Right', E322} -> (fun (V5925) -> (('un--nfToCFType'(V0, V5910, 0, V5925))(V5914)) end(E322)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V5926 of {'Idris.Prelude.Types.Left', E323} -> (fun (V5927) -> {'Idris.Prelude.Types.Left', V5927} end(E323)); {'Idris.Prelude.Types.Right', E324} -> (fun (V5928) -> begin (V5929 = (((V5913(V5922))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V5910, 0}))))(V5914))), case V5929 of {'Idris.Prelude.Types.Left', E325} -> (fun (V5930) -> {'Idris.Prelude.Types.Left', V5930} end(E325)); {'Idris.Prelude.Types.Right', E326} -> (fun (V5931) -> begin (V5932 = (('un--nfToCFType'(V0, V5910, 0, V5931))(V5914))), case V5932 of {'Idris.Prelude.Types.Left', E327} -> (fun (V5933) -> {'Idris.Prelude.Types.Left', V5933} end(E327)); {'Idris.Prelude.Types.Right', E328} -> (fun (V5934) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V5928, V5934}} end(E328)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E326)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E324)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E320)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E315, E316, E317, E318)); _ -> case V3 of {'Idris.Core.Value.NTCon', E280, E281, E282, E283, E284} -> (fun (V5935, V5936, V5937, V5938, V5939) -> begin (V5941 = begin (V5940 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5940} end), case V5941 of {'Idris.Prelude.Types.Left', E285} -> (fun (V5942) -> {'Idris.Prelude.Types.Left', V5942} end(E285)); {'Idris.Prelude.Types.Right', E286} -> (fun (V5943) -> begin (V5950 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5944) -> fun (V5945) -> fun (V5946) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V5944, V5945, V5946)) end end end, fun (V5947) -> fun (V5948) -> fun (V5949) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V5947, V5948, V5949)) end end end}, V5936, V5914))), case V5950 of {'Idris.Prelude.Types.Left', E287} -> (fun (V5951) -> {'Idris.Prelude.Types.Left', V5951} end(E287)); {'Idris.Prelude.Types.Right', E288} -> (fun (V5952) -> begin (V5954 = (('un--getNArgs'(V0, V5943, V5952, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5953) -> ('Idris.Idris2.Builtin':'un--snd'(V5953)) end, V5939))))(V5914))), case V5954 of {'Idris.Prelude.Types.Left', E289} -> (fun (V5955) -> {'Idris.Prelude.Types.Left', V5955} end(E289)); {'Idris.Prelude.Types.Right', E290} -> (fun (V5956) -> case V5956 of {'Idris.Compiler.CompileExpr.User', E291, E292} -> (fun (V5957, V5958) -> begin (V5960 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5959) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5943, V5959)) end, V5958, [], V5914))), case V5960 of {'Idris.Prelude.Types.Left', E293} -> (fun (V5961) -> {'Idris.Prelude.Types.Left', V5961} end(E293)); {'Idris.Prelude.Types.Right', E294} -> (fun (V5962) -> begin (V5964 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5963) -> ('un--nfToCFType'(V0, V5935, V2, V5963)) end, V5962, [], V5914))), case V5964 of {'Idris.Prelude.Types.Left', E295} -> (fun (V5965) -> {'Idris.Prelude.Types.Left', V5965} end(E295)); {'Idris.Prelude.Types.Right', E296} -> (fun (V5966) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V5952, V5966}} end(E296)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E294)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E291, E292)); {'Idris.Compiler.CompileExpr.Struct', E297, E298} -> (fun (V5967, V5968) -> begin (V5979 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5969) -> fun (V5970) -> case V5969 of {'Idris.Builtin.MkPair', E299, E300} -> (fun (V5971, V5972) -> begin (V5973 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5943, V5972))(V5970))), case V5973 of {'Idris.Prelude.Types.Left', E301} -> (fun (V5974) -> {'Idris.Prelude.Types.Left', V5974} end(E301)); {'Idris.Prelude.Types.Right', E302} -> (fun (V5975) -> begin (V5976 = (('un--nfToCFType'(V0, V5935, 1, V5975))(V5970))), case V5976 of {'Idris.Prelude.Types.Left', E303} -> (fun (V5977) -> {'Idris.Prelude.Types.Left', V5977} end(E303)); {'Idris.Prelude.Types.Right', E304} -> (fun (V5978) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V5971, V5978}} end(E304)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E302)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E299, E300)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5968, [], V5914))), case V5979 of {'Idris.Prelude.Types.Left', E305} -> (fun (V5980) -> {'Idris.Prelude.Types.Left', V5980} end(E305)); {'Idris.Prelude.Types.Right', E306} -> (fun (V5981) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V5967, V5981}} end(E306)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E297, E298)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E307} -> (fun (V5982) -> begin (V5983 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V5943, V5982))(V5914))), case V5983 of {'Idris.Prelude.Types.Left', E308} -> (fun (V5984) -> {'Idris.Prelude.Types.Left', V5984} end(E308)); {'Idris.Prelude.Types.Right', E309} -> (fun (V5985) -> begin (V5986 = (('un--nfToCFType'(V0, V5935, V2, V5985))(V5914))), case V5986 of {'Idris.Prelude.Types.Left', E310} -> (fun (V5987) -> {'Idris.Prelude.Types.Left', V5987} end(E310)); {'Idris.Prelude.Types.Right', E311} -> (fun (V5988) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V5988}} end(E311)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E309)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E307)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E290)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E288)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E286)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E280, E281, E282, E283, E284)); {'Idris.Core.Value.NType', E312} -> (fun (V5989) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E312)); {'Idris.Core.Value.NErased', E313, E314} -> (fun (V5990, V5991) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E313, E314)); _ -> begin (V5993 = begin (V5992 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5992} end), case V5993 of {'Idris.Prelude.Types.Left', E274} -> (fun (V5994) -> {'Idris.Prelude.Types.Left', V5994} end(E274)); {'Idris.Prelude.Types.Right', E275} -> (fun (V5995) -> begin (V5996 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V5995, {'Idris.Core.Env.Nil'}, V3, V5914))), case V5996 of {'Idris.Prelude.Types.Left', E276} -> (fun (V5997) -> {'Idris.Prelude.Types.Left', V5997} end(E276)); {'Idris.Prelude.Types.Right', E277} -> (fun (V5998) -> begin (V6005 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V5999) -> fun (V6000) -> fun (V6001) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V5999, V6000, V6001)) end end end, fun (V6002) -> fun (V6003) -> fun (V6004) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V6002, V6003, V6004)) end end end}, V5998, V5914))), case V6005 of {'Idris.Prelude.Types.Left', E278} -> (fun (V6006) -> {'Idris.Prelude.Types.Left', V6006} end(E278)); {'Idris.Prelude.Types.Right', E279} -> (fun (V6007) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V6007))))}, V5914)) end(E279)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E277)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E275)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E270, E271, E272, E273)); _ -> fun (V6008) -> case V3 of {'Idris.Core.Value.NTCon', E235, E236, E237, E238, E239} -> (fun (V6009, V6010, V6011, V6012, V6013) -> begin (V6015 = begin (V6014 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6014} end), case V6015 of {'Idris.Prelude.Types.Left', E240} -> (fun (V6016) -> {'Idris.Prelude.Types.Left', V6016} end(E240)); {'Idris.Prelude.Types.Right', E241} -> (fun (V6017) -> begin (V6024 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6018) -> fun (V6019) -> fun (V6020) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V6018, V6019, V6020)) end end end, fun (V6021) -> fun (V6022) -> fun (V6023) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V6021, V6022, V6023)) end end end}, V6010, V6008))), case V6024 of {'Idris.Prelude.Types.Left', E242} -> (fun (V6025) -> {'Idris.Prelude.Types.Left', V6025} end(E242)); {'Idris.Prelude.Types.Right', E243} -> (fun (V6026) -> begin (V6028 = (('un--getNArgs'(V0, V6017, V6026, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V6027) -> ('Idris.Idris2.Builtin':'un--snd'(V6027)) end, V6013))))(V6008))), case V6028 of {'Idris.Prelude.Types.Left', E244} -> (fun (V6029) -> {'Idris.Prelude.Types.Left', V6029} end(E244)); {'Idris.Prelude.Types.Right', E245} -> (fun (V6030) -> case V6030 of {'Idris.Compiler.CompileExpr.User', E246, E247} -> (fun (V6031, V6032) -> begin (V6034 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6033) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6017, V6033)) end, V6032, [], V6008))), case V6034 of {'Idris.Prelude.Types.Left', E248} -> (fun (V6035) -> {'Idris.Prelude.Types.Left', V6035} end(E248)); {'Idris.Prelude.Types.Right', E249} -> (fun (V6036) -> begin (V6038 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6037) -> ('un--nfToCFType'(V0, V6009, V2, V6037)) end, V6036, [], V6008))), case V6038 of {'Idris.Prelude.Types.Left', E250} -> (fun (V6039) -> {'Idris.Prelude.Types.Left', V6039} end(E250)); {'Idris.Prelude.Types.Right', E251} -> (fun (V6040) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V6026, V6040}} end(E251)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E249)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E246, E247)); {'Idris.Compiler.CompileExpr.Struct', E252, E253} -> (fun (V6041, V6042) -> begin (V6053 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6043) -> fun (V6044) -> case V6043 of {'Idris.Builtin.MkPair', E254, E255} -> (fun (V6045, V6046) -> begin (V6047 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6017, V6046))(V6044))), case V6047 of {'Idris.Prelude.Types.Left', E256} -> (fun (V6048) -> {'Idris.Prelude.Types.Left', V6048} end(E256)); {'Idris.Prelude.Types.Right', E257} -> (fun (V6049) -> begin (V6050 = (('un--nfToCFType'(V0, V6009, 1, V6049))(V6044))), case V6050 of {'Idris.Prelude.Types.Left', E258} -> (fun (V6051) -> {'Idris.Prelude.Types.Left', V6051} end(E258)); {'Idris.Prelude.Types.Right', E259} -> (fun (V6052) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6045, V6052}} end(E259)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E257)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E254, E255)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V6042, [], V6008))), case V6053 of {'Idris.Prelude.Types.Left', E260} -> (fun (V6054) -> {'Idris.Prelude.Types.Left', V6054} end(E260)); {'Idris.Prelude.Types.Right', E261} -> (fun (V6055) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V6041, V6055}} end(E261)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E252, E253)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E262} -> (fun (V6056) -> begin (V6057 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6017, V6056))(V6008))), case V6057 of {'Idris.Prelude.Types.Left', E263} -> (fun (V6058) -> {'Idris.Prelude.Types.Left', V6058} end(E263)); {'Idris.Prelude.Types.Right', E264} -> (fun (V6059) -> begin (V6060 = (('un--nfToCFType'(V0, V6009, V2, V6059))(V6008))), case V6060 of {'Idris.Prelude.Types.Left', E265} -> (fun (V6061) -> {'Idris.Prelude.Types.Left', V6061} end(E265)); {'Idris.Prelude.Types.Right', E266} -> (fun (V6062) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V6062}} end(E266)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E264)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E262)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E245)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E243)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E241)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E235, E236, E237, E238, E239)); {'Idris.Core.Value.NType', E267} -> (fun (V6063) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E267)); {'Idris.Core.Value.NErased', E268, E269} -> (fun (V6064, V6065) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E268, E269)); _ -> begin (V6067 = begin (V6066 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6066} end), case V6067 of {'Idris.Prelude.Types.Left', E229} -> (fun (V6068) -> {'Idris.Prelude.Types.Left', V6068} end(E229)); {'Idris.Prelude.Types.Right', E230} -> (fun (V6069) -> begin (V6070 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V6069, {'Idris.Core.Env.Nil'}, V3, V6008))), case V6070 of {'Idris.Prelude.Types.Left', E231} -> (fun (V6071) -> {'Idris.Prelude.Types.Left', V6071} end(E231)); {'Idris.Prelude.Types.Right', E232} -> (fun (V6072) -> begin (V6079 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6073) -> fun (V6074) -> fun (V6075) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V6073, V6074, V6075)) end end end, fun (V6076) -> fun (V6077) -> fun (V6078) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V6076, V6077, V6078)) end end end}, V6072, V6008))), case V6079 of {'Idris.Prelude.Types.Left', E233} -> (fun (V6080) -> {'Idris.Prelude.Types.Left', V6080} end(E233)); {'Idris.Prelude.Types.Right', E234} -> (fun (V6081) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V6081))))}, V6008)) end(E234)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E232)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V6082) -> case V3 of {'Idris.Core.Value.NBind', E370, E371, E372, E373} -> (fun (V6083, V6084, V6085, V6086) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V6083, <<"Function types not allowed in a foreign struct"/utf8>>}, V6082)) end(E370, E371, E372, E373)); _ -> case V3 of {'Idris.Core.Value.NTCon', E335, E336, E337, E338, E339} -> (fun (V6087, V6088, V6089, V6090, V6091) -> begin (V6093 = begin (V6092 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6092} end), case V6093 of {'Idris.Prelude.Types.Left', E340} -> (fun (V6094) -> {'Idris.Prelude.Types.Left', V6094} end(E340)); {'Idris.Prelude.Types.Right', E341} -> (fun (V6095) -> begin (V6102 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6096) -> fun (V6097) -> fun (V6098) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V6096, V6097, V6098)) end end end, fun (V6099) -> fun (V6100) -> fun (V6101) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V6099, V6100, V6101)) end end end}, V6088, V6082))), case V6102 of {'Idris.Prelude.Types.Left', E342} -> (fun (V6103) -> {'Idris.Prelude.Types.Left', V6103} end(E342)); {'Idris.Prelude.Types.Right', E343} -> (fun (V6104) -> begin (V6106 = (('un--getNArgs'(V0, V6095, V6104, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V6105) -> ('Idris.Idris2.Builtin':'un--snd'(V6105)) end, V6091))))(V6082))), case V6106 of {'Idris.Prelude.Types.Left', E344} -> (fun (V6107) -> {'Idris.Prelude.Types.Left', V6107} end(E344)); {'Idris.Prelude.Types.Right', E345} -> (fun (V6108) -> case V6108 of {'Idris.Compiler.CompileExpr.User', E346, E347} -> (fun (V6109, V6110) -> begin (V6112 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6111) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6095, V6111)) end, V6110, [], V6082))), case V6112 of {'Idris.Prelude.Types.Left', E348} -> (fun (V6113) -> {'Idris.Prelude.Types.Left', V6113} end(E348)); {'Idris.Prelude.Types.Right', E349} -> (fun (V6114) -> begin (V6116 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6115) -> ('un--nfToCFType'(V0, V6087, V2, V6115)) end, V6114, [], V6082))), case V6116 of {'Idris.Prelude.Types.Left', E350} -> (fun (V6117) -> {'Idris.Prelude.Types.Left', V6117} end(E350)); {'Idris.Prelude.Types.Right', E351} -> (fun (V6118) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V6104, V6118}} end(E351)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E349)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E346, E347)); {'Idris.Compiler.CompileExpr.Struct', E352, E353} -> (fun (V6119, V6120) -> begin (V6131 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6121) -> fun (V6122) -> case V6121 of {'Idris.Builtin.MkPair', E354, E355} -> (fun (V6123, V6124) -> begin (V6125 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6095, V6124))(V6122))), case V6125 of {'Idris.Prelude.Types.Left', E356} -> (fun (V6126) -> {'Idris.Prelude.Types.Left', V6126} end(E356)); {'Idris.Prelude.Types.Right', E357} -> (fun (V6127) -> begin (V6128 = (('un--nfToCFType'(V0, V6087, 1, V6127))(V6122))), case V6128 of {'Idris.Prelude.Types.Left', E358} -> (fun (V6129) -> {'Idris.Prelude.Types.Left', V6129} end(E358)); {'Idris.Prelude.Types.Right', E359} -> (fun (V6130) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6123, V6130}} end(E359)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E357)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E354, E355)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V6120, [], V6082))), case V6131 of {'Idris.Prelude.Types.Left', E360} -> (fun (V6132) -> {'Idris.Prelude.Types.Left', V6132} end(E360)); {'Idris.Prelude.Types.Right', E361} -> (fun (V6133) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V6119, V6133}} end(E361)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E352, E353)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E362} -> (fun (V6134) -> begin (V6135 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6095, V6134))(V6082))), case V6135 of {'Idris.Prelude.Types.Left', E363} -> (fun (V6136) -> {'Idris.Prelude.Types.Left', V6136} end(E363)); {'Idris.Prelude.Types.Right', E364} -> (fun (V6137) -> begin (V6138 = (('un--nfToCFType'(V0, V6087, V2, V6137))(V6082))), case V6138 of {'Idris.Prelude.Types.Left', E365} -> (fun (V6139) -> {'Idris.Prelude.Types.Left', V6139} end(E365)); {'Idris.Prelude.Types.Right', E366} -> (fun (V6140) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V6140}} end(E366)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E364)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E362)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E345)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E343)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E341)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E335, E336, E337, E338, E339)); {'Idris.Core.Value.NType', E367} -> (fun (V6141) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E367)); {'Idris.Core.Value.NErased', E368, E369} -> (fun (V6142, V6143) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E368, E369)); _ -> begin (V6145 = begin (V6144 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6144} end), case V6145 of {'Idris.Prelude.Types.Left', E329} -> (fun (V6146) -> {'Idris.Prelude.Types.Left', V6146} end(E329)); {'Idris.Prelude.Types.Right', E330} -> (fun (V6147) -> begin (V6148 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V6147, {'Idris.Core.Env.Nil'}, V3, V6082))), case V6148 of {'Idris.Prelude.Types.Left', E331} -> (fun (V6149) -> {'Idris.Prelude.Types.Left', V6149} end(E331)); {'Idris.Prelude.Types.Right', E332} -> (fun (V6150) -> begin (V6157 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6151) -> fun (V6152) -> fun (V6153) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V6151, V6152, V6153)) end end end, fun (V6154) -> fun (V6155) -> fun (V6156) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V6154, V6155, V6156)) end end end}, V6150, V6082))), case V6157 of {'Idris.Prelude.Types.Left', E333} -> (fun (V6158) -> {'Idris.Prelude.Types.Left', V6158} end(E333)); {'Idris.Prelude.Types.Right', E334} -> (fun (V6159) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V6159))))}, V6082)) end(E334)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E332)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E330)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V6160) -> case V3 of {'Idris.Core.Value.NTCon', E194, E195, E196, E197, E198} -> (fun (V6161, V6162, V6163, V6164, V6165) -> begin (V6167 = begin (V6166 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6166} end), case V6167 of {'Idris.Prelude.Types.Left', E199} -> (fun (V6168) -> {'Idris.Prelude.Types.Left', V6168} end(E199)); {'Idris.Prelude.Types.Right', E200} -> (fun (V6169) -> begin (V6176 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6170) -> fun (V6171) -> fun (V6172) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V6170, V6171, V6172)) end end end, fun (V6173) -> fun (V6174) -> fun (V6175) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V6173, V6174, V6175)) end end end}, V6162, V6160))), case V6176 of {'Idris.Prelude.Types.Left', E201} -> (fun (V6177) -> {'Idris.Prelude.Types.Left', V6177} end(E201)); {'Idris.Prelude.Types.Right', E202} -> (fun (V6178) -> begin (V6180 = (('un--getNArgs'(V0, V6169, V6178, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V6179) -> ('Idris.Idris2.Builtin':'un--snd'(V6179)) end, V6165))))(V6160))), case V6180 of {'Idris.Prelude.Types.Left', E203} -> (fun (V6181) -> {'Idris.Prelude.Types.Left', V6181} end(E203)); {'Idris.Prelude.Types.Right', E204} -> (fun (V6182) -> case V6182 of {'Idris.Compiler.CompileExpr.User', E205, E206} -> (fun (V6183, V6184) -> begin (V6186 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6185) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6169, V6185)) end, V6184, [], V6160))), case V6186 of {'Idris.Prelude.Types.Left', E207} -> (fun (V6187) -> {'Idris.Prelude.Types.Left', V6187} end(E207)); {'Idris.Prelude.Types.Right', E208} -> (fun (V6188) -> begin (V6190 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6189) -> ('un--nfToCFType'(V0, V6161, V2, V6189)) end, V6188, [], V6160))), case V6190 of {'Idris.Prelude.Types.Left', E209} -> (fun (V6191) -> {'Idris.Prelude.Types.Left', V6191} end(E209)); {'Idris.Prelude.Types.Right', E210} -> (fun (V6192) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V6178, V6192}} end(E210)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E208)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E205, E206)); {'Idris.Compiler.CompileExpr.Struct', E211, E212} -> (fun (V6193, V6194) -> begin (V6205 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6195) -> fun (V6196) -> case V6195 of {'Idris.Builtin.MkPair', E213, E214} -> (fun (V6197, V6198) -> begin (V6199 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6169, V6198))(V6196))), case V6199 of {'Idris.Prelude.Types.Left', E215} -> (fun (V6200) -> {'Idris.Prelude.Types.Left', V6200} end(E215)); {'Idris.Prelude.Types.Right', E216} -> (fun (V6201) -> begin (V6202 = (('un--nfToCFType'(V0, V6161, 1, V6201))(V6196))), case V6202 of {'Idris.Prelude.Types.Left', E217} -> (fun (V6203) -> {'Idris.Prelude.Types.Left', V6203} end(E217)); {'Idris.Prelude.Types.Right', E218} -> (fun (V6204) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6197, V6204}} end(E218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E213, E214)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V6194, [], V6160))), case V6205 of {'Idris.Prelude.Types.Left', E219} -> (fun (V6206) -> {'Idris.Prelude.Types.Left', V6206} end(E219)); {'Idris.Prelude.Types.Right', E220} -> (fun (V6207) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V6193, V6207}} end(E220)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E211, E212)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E221} -> (fun (V6208) -> begin (V6209 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6169, V6208))(V6160))), case V6209 of {'Idris.Prelude.Types.Left', E222} -> (fun (V6210) -> {'Idris.Prelude.Types.Left', V6210} end(E222)); {'Idris.Prelude.Types.Right', E223} -> (fun (V6211) -> begin (V6212 = (('un--nfToCFType'(V0, V6161, V2, V6211))(V6160))), case V6212 of {'Idris.Prelude.Types.Left', E224} -> (fun (V6213) -> {'Idris.Prelude.Types.Left', V6213} end(E224)); {'Idris.Prelude.Types.Right', E225} -> (fun (V6214) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V6214}} end(E225)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E223)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E204)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E202)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E200)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E194, E195, E196, E197, E198)); {'Idris.Core.Value.NType', E226} -> (fun (V6215) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E226)); {'Idris.Core.Value.NErased', E227, E228} -> (fun (V6216, V6217) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E227, E228)); _ -> begin (V6219 = begin (V6218 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6218} end), case V6219 of {'Idris.Prelude.Types.Left', E188} -> (fun (V6220) -> {'Idris.Prelude.Types.Left', V6220} end(E188)); {'Idris.Prelude.Types.Right', E189} -> (fun (V6221) -> begin (V6222 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V6221, {'Idris.Core.Env.Nil'}, V3, V6160))), case V6222 of {'Idris.Prelude.Types.Left', E190} -> (fun (V6223) -> {'Idris.Prelude.Types.Left', V6223} end(E190)); {'Idris.Prelude.Types.Right', E191} -> (fun (V6224) -> begin (V6231 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6225) -> fun (V6226) -> fun (V6227) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V6225, V6226, V6227)) end end end, fun (V6228) -> fun (V6229) -> fun (V6230) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V6228, V6229, V6230)) end end end}, V6224, V6160))), case V6231 of {'Idris.Prelude.Types.Left', E192} -> (fun (V6232) -> {'Idris.Prelude.Types.Left', V6232} end(E192)); {'Idris.Prelude.Types.Right', E193} -> (fun (V6233) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V6233))))}, V6160)) end(E193)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E191)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E189)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E186, E187)); _ -> case V2 of 0 -> case V3 of {'Idris.Core.Value.NBind', E82, E83, E84, E85} -> (fun (V6234, V6235, V6236, V6237) -> fun (V6238) -> case V6236 of {'Idris.Core.TT.Pi', E127, E128, E129, E130} -> (fun (V6239, V6240, V6241, V6242) -> begin (V6244 = begin (V6243 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6243} end), case V6244 of {'Idris.Prelude.Types.Left', E131} -> (fun (V6245) -> {'Idris.Prelude.Types.Left', V6245} end(E131)); {'Idris.Prelude.Types.Right', E132} -> (fun (V6246) -> begin (V6250 = begin (V6247 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6246, V6242))(V6238))), case V6247 of {'Idris.Prelude.Types.Left', E133} -> (fun (V6248) -> {'Idris.Prelude.Types.Left', V6248} end(E133)); {'Idris.Prelude.Types.Right', E134} -> (fun (V6249) -> (('un--nfToCFType'(V0, V6234, 0, V6249))(V6238)) end(E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V6250 of {'Idris.Prelude.Types.Left', E135} -> (fun (V6251) -> {'Idris.Prelude.Types.Left', V6251} end(E135)); {'Idris.Prelude.Types.Right', E136} -> (fun (V6252) -> begin (V6253 = (((V6237(V6246))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V6234, 0}))))(V6238))), case V6253 of {'Idris.Prelude.Types.Left', E137} -> (fun (V6254) -> {'Idris.Prelude.Types.Left', V6254} end(E137)); {'Idris.Prelude.Types.Right', E138} -> (fun (V6255) -> begin (V6256 = (('un--nfToCFType'(V0, V6234, 0, V6255))(V6238))), case V6256 of {'Idris.Prelude.Types.Left', E139} -> (fun (V6257) -> {'Idris.Prelude.Types.Left', V6257} end(E139)); {'Idris.Prelude.Types.Right', E140} -> (fun (V6258) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFFun', V6252, V6258}} end(E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E136)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E132)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E127, E128, E129, E130)); _ -> case V3 of {'Idris.Core.Value.NTCon', E92, E93, E94, E95, E96} -> (fun (V6259, V6260, V6261, V6262, V6263) -> begin (V6265 = begin (V6264 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6264} end), case V6265 of {'Idris.Prelude.Types.Left', E97} -> (fun (V6266) -> {'Idris.Prelude.Types.Left', V6266} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V6267) -> begin (V6274 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6268) -> fun (V6269) -> fun (V6270) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V6268, V6269, V6270)) end end end, fun (V6271) -> fun (V6272) -> fun (V6273) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V6271, V6272, V6273)) end end end}, V6260, V6238))), case V6274 of {'Idris.Prelude.Types.Left', E99} -> (fun (V6275) -> {'Idris.Prelude.Types.Left', V6275} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V6276) -> begin (V6278 = (('un--getNArgs'(V0, V6267, V6276, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V6277) -> ('Idris.Idris2.Builtin':'un--snd'(V6277)) end, V6263))))(V6238))), case V6278 of {'Idris.Prelude.Types.Left', E101} -> (fun (V6279) -> {'Idris.Prelude.Types.Left', V6279} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V6280) -> case V6280 of {'Idris.Compiler.CompileExpr.User', E103, E104} -> (fun (V6281, V6282) -> begin (V6284 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6283) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6267, V6283)) end, V6282, [], V6238))), case V6284 of {'Idris.Prelude.Types.Left', E105} -> (fun (V6285) -> {'Idris.Prelude.Types.Left', V6285} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V6286) -> begin (V6288 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6287) -> ('un--nfToCFType'(V0, V6259, V2, V6287)) end, V6286, [], V6238))), case V6288 of {'Idris.Prelude.Types.Left', E107} -> (fun (V6289) -> {'Idris.Prelude.Types.Left', V6289} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V6290) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V6276, V6290}} end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E103, E104)); {'Idris.Compiler.CompileExpr.Struct', E109, E110} -> (fun (V6291, V6292) -> begin (V6303 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6293) -> fun (V6294) -> case V6293 of {'Idris.Builtin.MkPair', E111, E112} -> (fun (V6295, V6296) -> begin (V6297 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6267, V6296))(V6294))), case V6297 of {'Idris.Prelude.Types.Left', E113} -> (fun (V6298) -> {'Idris.Prelude.Types.Left', V6298} end(E113)); {'Idris.Prelude.Types.Right', E114} -> (fun (V6299) -> begin (V6300 = (('un--nfToCFType'(V0, V6259, 1, V6299))(V6294))), case V6300 of {'Idris.Prelude.Types.Left', E115} -> (fun (V6301) -> {'Idris.Prelude.Types.Left', V6301} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V6302) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6295, V6302}} end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E111, E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V6292, [], V6238))), case V6303 of {'Idris.Prelude.Types.Left', E117} -> (fun (V6304) -> {'Idris.Prelude.Types.Left', V6304} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V6305) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V6291, V6305}} end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E109, E110)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E119} -> (fun (V6306) -> begin (V6307 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6267, V6306))(V6238))), case V6307 of {'Idris.Prelude.Types.Left', E120} -> (fun (V6308) -> {'Idris.Prelude.Types.Left', V6308} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V6309) -> begin (V6310 = (('un--nfToCFType'(V0, V6259, V2, V6309))(V6238))), case V6310 of {'Idris.Prelude.Types.Left', E122} -> (fun (V6311) -> {'Idris.Prelude.Types.Left', V6311} end(E122)); {'Idris.Prelude.Types.Right', E123} -> (fun (V6312) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V6312}} end(E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E92, E93, E94, E95, E96)); {'Idris.Core.Value.NType', E124} -> (fun (V6313) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E124)); {'Idris.Core.Value.NErased', E125, E126} -> (fun (V6314, V6315) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E125, E126)); _ -> begin (V6317 = begin (V6316 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6316} end), case V6317 of {'Idris.Prelude.Types.Left', E86} -> (fun (V6318) -> {'Idris.Prelude.Types.Left', V6318} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V6319) -> begin (V6320 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V6319, {'Idris.Core.Env.Nil'}, V3, V6238))), case V6320 of {'Idris.Prelude.Types.Left', E88} -> (fun (V6321) -> {'Idris.Prelude.Types.Left', V6321} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V6322) -> begin (V6329 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6323) -> fun (V6324) -> fun (V6325) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V6323, V6324, V6325)) end end end, fun (V6326) -> fun (V6327) -> fun (V6328) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V6326, V6327, V6328)) end end end}, V6322, V6238))), case V6329 of {'Idris.Prelude.Types.Left', E90} -> (fun (V6330) -> {'Idris.Prelude.Types.Left', V6330} end(E90)); {'Idris.Prelude.Types.Right', E91} -> (fun (V6331) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V6331))))}, V6238)) end(E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E82, E83, E84, E85)); _ -> fun (V6332) -> case V3 of {'Idris.Core.Value.NTCon', E47, E48, E49, E50, E51} -> (fun (V6333, V6334, V6335, V6336, V6337) -> begin (V6339 = begin (V6338 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6338} end), case V6339 of {'Idris.Prelude.Types.Left', E52} -> (fun (V6340) -> {'Idris.Prelude.Types.Left', V6340} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V6341) -> begin (V6348 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6342) -> fun (V6343) -> fun (V6344) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V6342, V6343, V6344)) end end end, fun (V6345) -> fun (V6346) -> fun (V6347) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V6345, V6346, V6347)) end end end}, V6334, V6332))), case V6348 of {'Idris.Prelude.Types.Left', E54} -> (fun (V6349) -> {'Idris.Prelude.Types.Left', V6349} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V6350) -> begin (V6352 = (('un--getNArgs'(V0, V6341, V6350, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V6351) -> ('Idris.Idris2.Builtin':'un--snd'(V6351)) end, V6337))))(V6332))), case V6352 of {'Idris.Prelude.Types.Left', E56} -> (fun (V6353) -> {'Idris.Prelude.Types.Left', V6353} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V6354) -> case V6354 of {'Idris.Compiler.CompileExpr.User', E58, E59} -> (fun (V6355, V6356) -> begin (V6358 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6357) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6341, V6357)) end, V6356, [], V6332))), case V6358 of {'Idris.Prelude.Types.Left', E60} -> (fun (V6359) -> {'Idris.Prelude.Types.Left', V6359} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V6360) -> begin (V6362 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6361) -> ('un--nfToCFType'(V0, V6333, V2, V6361)) end, V6360, [], V6332))), case V6362 of {'Idris.Prelude.Types.Left', E62} -> (fun (V6363) -> {'Idris.Prelude.Types.Left', V6363} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V6364) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V6350, V6364}} end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E58, E59)); {'Idris.Compiler.CompileExpr.Struct', E64, E65} -> (fun (V6365, V6366) -> begin (V6377 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6367) -> fun (V6368) -> case V6367 of {'Idris.Builtin.MkPair', E66, E67} -> (fun (V6369, V6370) -> begin (V6371 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6341, V6370))(V6368))), case V6371 of {'Idris.Prelude.Types.Left', E68} -> (fun (V6372) -> {'Idris.Prelude.Types.Left', V6372} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V6373) -> begin (V6374 = (('un--nfToCFType'(V0, V6333, 1, V6373))(V6368))), case V6374 of {'Idris.Prelude.Types.Left', E70} -> (fun (V6375) -> {'Idris.Prelude.Types.Left', V6375} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V6376) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6369, V6376}} end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E66, E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V6366, [], V6332))), case V6377 of {'Idris.Prelude.Types.Left', E72} -> (fun (V6378) -> {'Idris.Prelude.Types.Left', V6378} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V6379) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V6365, V6379}} end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64, E65)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E74} -> (fun (V6380) -> begin (V6381 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6341, V6380))(V6332))), case V6381 of {'Idris.Prelude.Types.Left', E75} -> (fun (V6382) -> {'Idris.Prelude.Types.Left', V6382} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V6383) -> begin (V6384 = (('un--nfToCFType'(V0, V6333, V2, V6383))(V6332))), case V6384 of {'Idris.Prelude.Types.Left', E77} -> (fun (V6385) -> {'Idris.Prelude.Types.Left', V6385} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V6386) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V6386}} end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47, E48, E49, E50, E51)); {'Idris.Core.Value.NType', E79} -> (fun (V6387) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E79)); {'Idris.Core.Value.NErased', E80, E81} -> (fun (V6388, V6389) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E80, E81)); _ -> begin (V6391 = begin (V6390 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6390} end), case V6391 of {'Idris.Prelude.Types.Left', E41} -> (fun (V6392) -> {'Idris.Prelude.Types.Left', V6392} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V6393) -> begin (V6394 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V6393, {'Idris.Core.Env.Nil'}, V3, V6332))), case V6394 of {'Idris.Prelude.Types.Left', E43} -> (fun (V6395) -> {'Idris.Prelude.Types.Left', V6395} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V6396) -> begin (V6403 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6397) -> fun (V6398) -> fun (V6399) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V6397, V6398, V6399)) end end end, fun (V6400) -> fun (V6401) -> fun (V6402) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V6400, V6401, V6402)) end end end}, V6396, V6332))), case V6403 of {'Idris.Prelude.Types.Left', E45} -> (fun (V6404) -> {'Idris.Prelude.Types.Left', V6404} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V6405) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V6405))))}, V6332)) end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; 1 -> fun (V6406) -> case V3 of {'Idris.Core.Value.NBind', E182, E183, E184, E185} -> (fun (V6407, V6408, V6409, V6410) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V6407, <<"Function types not allowed in a foreign struct"/utf8>>}, V6406)) end(E182, E183, E184, E185)); _ -> case V3 of {'Idris.Core.Value.NTCon', E147, E148, E149, E150, E151} -> (fun (V6411, V6412, V6413, V6414, V6415) -> begin (V6417 = begin (V6416 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6416} end), case V6417 of {'Idris.Prelude.Types.Left', E152} -> (fun (V6418) -> {'Idris.Prelude.Types.Left', V6418} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V6419) -> begin (V6426 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6420) -> fun (V6421) -> fun (V6422) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V6420, V6421, V6422)) end end end, fun (V6423) -> fun (V6424) -> fun (V6425) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V6423, V6424, V6425)) end end end}, V6412, V6406))), case V6426 of {'Idris.Prelude.Types.Left', E154} -> (fun (V6427) -> {'Idris.Prelude.Types.Left', V6427} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V6428) -> begin (V6430 = (('un--getNArgs'(V0, V6419, V6428, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V6429) -> ('Idris.Idris2.Builtin':'un--snd'(V6429)) end, V6415))))(V6406))), case V6430 of {'Idris.Prelude.Types.Left', E156} -> (fun (V6431) -> {'Idris.Prelude.Types.Left', V6431} end(E156)); {'Idris.Prelude.Types.Right', E157} -> (fun (V6432) -> case V6432 of {'Idris.Compiler.CompileExpr.User', E158, E159} -> (fun (V6433, V6434) -> begin (V6436 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6435) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6419, V6435)) end, V6434, [], V6406))), case V6436 of {'Idris.Prelude.Types.Left', E160} -> (fun (V6437) -> {'Idris.Prelude.Types.Left', V6437} end(E160)); {'Idris.Prelude.Types.Right', E161} -> (fun (V6438) -> begin (V6440 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6439) -> ('un--nfToCFType'(V0, V6411, V2, V6439)) end, V6438, [], V6406))), case V6440 of {'Idris.Prelude.Types.Left', E162} -> (fun (V6441) -> {'Idris.Prelude.Types.Left', V6441} end(E162)); {'Idris.Prelude.Types.Right', E163} -> (fun (V6442) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V6428, V6442}} end(E163)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E158, E159)); {'Idris.Compiler.CompileExpr.Struct', E164, E165} -> (fun (V6443, V6444) -> begin (V6455 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6445) -> fun (V6446) -> case V6445 of {'Idris.Builtin.MkPair', E166, E167} -> (fun (V6447, V6448) -> begin (V6449 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6419, V6448))(V6446))), case V6449 of {'Idris.Prelude.Types.Left', E168} -> (fun (V6450) -> {'Idris.Prelude.Types.Left', V6450} end(E168)); {'Idris.Prelude.Types.Right', E169} -> (fun (V6451) -> begin (V6452 = (('un--nfToCFType'(V0, V6411, 1, V6451))(V6446))), case V6452 of {'Idris.Prelude.Types.Left', E170} -> (fun (V6453) -> {'Idris.Prelude.Types.Left', V6453} end(E170)); {'Idris.Prelude.Types.Right', E171} -> (fun (V6454) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6447, V6454}} end(E171)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E166, E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V6444, [], V6406))), case V6455 of {'Idris.Prelude.Types.Left', E172} -> (fun (V6456) -> {'Idris.Prelude.Types.Left', V6456} end(E172)); {'Idris.Prelude.Types.Right', E173} -> (fun (V6457) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V6443, V6457}} end(E173)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E164, E165)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E174} -> (fun (V6458) -> begin (V6459 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6419, V6458))(V6406))), case V6459 of {'Idris.Prelude.Types.Left', E175} -> (fun (V6460) -> {'Idris.Prelude.Types.Left', V6460} end(E175)); {'Idris.Prelude.Types.Right', E176} -> (fun (V6461) -> begin (V6462 = (('un--nfToCFType'(V0, V6411, V2, V6461))(V6406))), case V6462 of {'Idris.Prelude.Types.Left', E177} -> (fun (V6463) -> {'Idris.Prelude.Types.Left', V6463} end(E177)); {'Idris.Prelude.Types.Right', E178} -> (fun (V6464) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V6464}} end(E178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E147, E148, E149, E150, E151)); {'Idris.Core.Value.NType', E179} -> (fun (V6465) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E179)); {'Idris.Core.Value.NErased', E180, E181} -> (fun (V6466, V6467) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E180, E181)); _ -> begin (V6469 = begin (V6468 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6468} end), case V6469 of {'Idris.Prelude.Types.Left', E141} -> (fun (V6470) -> {'Idris.Prelude.Types.Left', V6470} end(E141)); {'Idris.Prelude.Types.Right', E142} -> (fun (V6471) -> begin (V6472 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V6471, {'Idris.Core.Env.Nil'}, V3, V6406))), case V6472 of {'Idris.Prelude.Types.Left', E143} -> (fun (V6473) -> {'Idris.Prelude.Types.Left', V6473} end(E143)); {'Idris.Prelude.Types.Right', E144} -> (fun (V6474) -> begin (V6481 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6475) -> fun (V6476) -> fun (V6477) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V6475, V6476, V6477)) end end end, fun (V6478) -> fun (V6479) -> fun (V6480) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V6478, V6479, V6480)) end end end}, V6474, V6406))), case V6481 of {'Idris.Prelude.Types.Left', E145} -> (fun (V6482) -> {'Idris.Prelude.Types.Left', V6482} end(E145)); {'Idris.Prelude.Types.Right', E146} -> (fun (V6483) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V6483))))}, V6406)) end(E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E142)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end; _ -> fun (V6484) -> case V3 of {'Idris.Core.Value.NTCon', E6, E7, E8, E9, E10} -> (fun (V6485, V6486, V6487, V6488, V6489) -> begin (V6491 = begin (V6490 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6490} end), case V6491 of {'Idris.Prelude.Types.Left', E11} -> (fun (V6492) -> {'Idris.Prelude.Types.Left', V6492} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V6493) -> begin (V6500 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6494) -> fun (V6495) -> fun (V6496) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V6494, V6495, V6496)) end end end, fun (V6497) -> fun (V6498) -> fun (V6499) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V6497, V6498, V6499)) end end end}, V6486, V6484))), case V6500 of {'Idris.Prelude.Types.Left', E13} -> (fun (V6501) -> {'Idris.Prelude.Types.Left', V6501} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V6502) -> begin (V6504 = (('un--getNArgs'(V0, V6493, V6502, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V6503) -> ('Idris.Idris2.Builtin':'un--snd'(V6503)) end, V6489))))(V6484))), case V6504 of {'Idris.Prelude.Types.Left', E15} -> (fun (V6505) -> {'Idris.Prelude.Types.Left', V6505} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V6506) -> case V6506 of {'Idris.Compiler.CompileExpr.User', E17, E18} -> (fun (V6507, V6508) -> begin (V6510 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6509) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6493, V6509)) end, V6508, [], V6484))), case V6510 of {'Idris.Prelude.Types.Left', E19} -> (fun (V6511) -> {'Idris.Prelude.Types.Left', V6511} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V6512) -> begin (V6514 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6513) -> ('un--nfToCFType'(V0, V6485, V2, V6513)) end, V6512, [], V6484))), case V6514 of {'Idris.Prelude.Types.Left', E21} -> (fun (V6515) -> {'Idris.Prelude.Types.Left', V6515} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V6516) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', V6502, V6516}} end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17, E18)); {'Idris.Compiler.CompileExpr.Struct', E23, E24} -> (fun (V6517, V6518) -> begin (V6529 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V6519) -> fun (V6520) -> case V6519 of {'Idris.Builtin.MkPair', E25, E26} -> (fun (V6521, V6522) -> begin (V6523 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6493, V6522))(V6520))), case V6523 of {'Idris.Prelude.Types.Left', E27} -> (fun (V6524) -> {'Idris.Prelude.Types.Left', V6524} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V6525) -> begin (V6526 = (('un--nfToCFType'(V0, V6485, 1, V6525))(V6520))), case V6526 of {'Idris.Prelude.Types.Left', E29} -> (fun (V6527) -> {'Idris.Prelude.Types.Left', V6527} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V6528) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V6521, V6528}} end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V6518, [], V6484))), case V6529 of {'Idris.Prelude.Types.Left', E31} -> (fun (V6530) -> {'Idris.Prelude.Types.Left', V6530} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V6531) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFStruct', V6517, V6531}} end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23, E24)); {'Idris.Compiler.CompileExpr.NUnit'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUnit'}} end()); {'Idris.Compiler.CompileExpr.NPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFPtr'}} end()); {'Idris.Compiler.CompileExpr.NGCPtr'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFGCPtr'}} end()); {'Idris.Compiler.CompileExpr.NBuffer'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFBuffer'}} end()); {'Idris.Compiler.CompileExpr.NForeignObj'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFForeignObj'}} end()); {'Idris.Compiler.CompileExpr.NIORes', E33} -> (fun (V6532) -> begin (V6533 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V6493, V6532))(V6484))), case V6533 of {'Idris.Prelude.Types.Left', E34} -> (fun (V6534) -> {'Idris.Prelude.Types.Left', V6534} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V6535) -> begin (V6536 = (('un--nfToCFType'(V0, V6485, V2, V6535))(V6484))), case V6536 of {'Idris.Prelude.Types.Left', E36} -> (fun (V6537) -> {'Idris.Prelude.Types.Left', V6537} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V6538) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFIORes', V6538}} end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7, E8, E9, E10)); {'Idris.Core.Value.NType', E38} -> (fun (V6539) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Type"/utf8>>}}, []}} end(E38)); {'Idris.Core.Value.NErased', E39, E40} -> (fun (V6540, V6541) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CFUser', {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"__"/utf8>>}}, []}} end(E39, E40)); _ -> begin (V6543 = begin (V6542 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6542} end), case V6543 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6544) -> {'Idris.Prelude.Types.Left', V6544} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6545) -> begin (V6546 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, [], V6545, {'Idris.Core.Env.Nil'}, V3, V6484))), case V6546 of {'Idris.Prelude.Types.Left', E2} -> (fun (V6547) -> {'Idris.Prelude.Types.Left', V6547} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V6548) -> begin (V6555 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V6549) -> fun (V6550) -> fun (V6551) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V6549, V6550, V6551)) end end end, fun (V6552) -> fun (V6553) -> fun (V6554) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V6552, V6553, V6554)) end end end}, V6548, V6484))), case V6555 of {'Idris.Prelude.Types.Left', E4} -> (fun (V6556) -> {'Idris.Prelude.Types.Left', V6556} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V6557) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V3)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t marshal type for foreign call "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'([], V6557))))}, V6484)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end end.
'un--newSuccName'(V0, V1) -> begin (V3 = begin (V2 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2} end), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> begin (V7 = begin (V6 = ('erlang':'put'(V0, ((V5 + 1) rem 9223372036854775808)))), {'Idris.Prelude.Types.Right', V6} end), case V7 of {'Idris.Prelude.Types.Left', E2} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> {'Idris.Prelude.Types.Right', {'Idris.Core.Name.MN', <<"succ"/utf8>>, V5}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--natHack'() -> [{'Idris.Compiler.CompileExpr.MagicCRef', {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"natToInteger"/utf8>>}}}, (1 + 0), fun (V0) -> fun (V1) -> fun (V2) -> fun (V3) -> case V3 of {'Idris.Data.Vect.::', E0, E1} -> (fun (V4, V5) -> case V5 of {'Idris.Data.Vect.Nil'} -> (fun () -> V4 end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end} | [{'Idris.Compiler.CompileExpr.MagicCRef', {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"integerToNat"/utf8>>}}}, (1 + 0), fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> case V9 of {'Idris.Data.Vect.::', E2, E3} -> (fun (V10, V11) -> case V11 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CApp', V6, {'Idris.Core.CompileExpr.CRef', V7, {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"prim__integerToNat"/utf8>>}}}}, [V10 | []]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end} | [{'Idris.Compiler.CompileExpr.MagicCRef', {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"plus"/utf8>>}}}, (1 + (1 + 0)), fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> case V15 of {'Idris.Data.Vect.::', E4, E5} -> (fun (V16, V17) -> case V17 of {'Idris.Data.Vect.::', E6, E7} -> (fun (V18, V19) -> case V19 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CApp', V12, {'Idris.Core.CompileExpr.CRef', V13, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"prim__add_Integer"/utf8>>}}}, [V16 | [V18 | []]]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end} | [{'Idris.Compiler.CompileExpr.MagicCRef', {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"mult"/utf8>>}}}, (1 + (1 + 0)), fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> case V23 of {'Idris.Data.Vect.::', E8, E9} -> (fun (V24, V25) -> case V25 of {'Idris.Data.Vect.::', E10, E11} -> (fun (V26, V27) -> case V27 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CApp', V20, {'Idris.Core.CompileExpr.CRef', V21, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"prim__mul_Integer"/utf8>>}}}, [V24 | [V26 | []]]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end} | [{'Idris.Compiler.CompileExpr.MagicCRef', {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"minus"/utf8>>}}}, (1 + (1 + 0)), fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> ('un--magic__natMinus'(V28, V29, V31)) end end end end} | [{'Idris.Compiler.CompileExpr.MagicCRef', {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"equalNat"/utf8>>}}}, (1 + (1 + 0)), fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> case V35 of {'Idris.Data.Vect.::', E12, E13} -> (fun (V36, V37) -> case V37 of {'Idris.Data.Vect.::', E14, E15} -> (fun (V38, V39) -> case V39 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CApp', V32, {'Idris.Core.CompileExpr.CRef', V33, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"prim__eq_Integer"/utf8>>}}}, [V36 | [V38 | []]]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end} | [{'Idris.Compiler.CompileExpr.MagicCRef', {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"compareNat"/utf8>>}}}, (1 + (1 + 0)), fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> case V43 of {'Idris.Data.Vect.::', E16, E17} -> (fun (V44, V45) -> case V45 of {'Idris.Data.Vect.::', E18, E19} -> (fun (V46, V47) -> case V47 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CApp', V40, {'Idris.Core.CompileExpr.CRef', V41, {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--eqOrdNS'()), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"compareInteger"/utf8>>}}}}, [V44 | [V46 | []]]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end} | []]]]]]]].
'un--natBranch'(V0) -> case V0 of {'Idris.Core.CompileExpr.MkConAlt', E0, E1, E2, E3, E4} -> (fun (V1, V2, V3, V4, V5) -> case V2 of 8 -> 1; 9 -> 1; _ -> 0 end end(E0, E1, E2, E3, E4)); _ -> 0 end.
'un--mkSub'(V0, V1, V2) -> case V2 of [] -> {'Idris.Builtin.DPair.MkDPair', V1, {'Idris.Core.TT.SubRefl'}}; _ -> case V1 of [] -> {'Idris.Builtin.DPair.MkDPair', [], {'Idris.Core.TT.SubRefl'}}; [E0 | E1] -> (fun (V3, V4) -> case ('un--mkSub'((1 + V0), V4, V2)) of {'Idris.Builtin.DPair.MkDPair', E2, E3} -> (fun (V5, V6) -> case ('Idris.Idris2.Prelude.Types':'un--elem'({'Idris.Prelude.EqOrd.MkEq', fun (V7) -> fun (V8) -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V7, V8)) end end, fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.Types':'dn--un--/=_Eq_Nat'(V9, V10)) end end}, V0, V2)) of 1 -> {'Idris.Builtin.DPair.MkDPair', V5, {'Idris.Core.TT.DropCons', V6}}; 0 -> {'Idris.Builtin.DPair.MkDPair', [V3 | V5], {'Idris.Core.TT.KeepCons', V6}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--mkDropSubst'(V0, V1, V2, V3) -> case V3 of [] -> {'Idris.Builtin.DPair.MkDPair', [], {'Idris.Core.TT.SubRefl'}}; [E0 | E1] -> (fun (V4, V5) -> case ('un--mkDropSubst'(('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'((1 + 0), V0)), V1, V2, V5)) of {'Idris.Builtin.DPair.MkDPair', E2, E3} -> (fun (V6, V7) -> case ('Idris.Idris2.Prelude.Types':'un--elem'({'Idris.Prelude.EqOrd.MkEq', fun (V8) -> fun (V9) -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V8, V9)) end end, fun (V10) -> fun (V11) -> ('Idris.Idris2.Prelude.Types':'dn--un--/=_Eq_Nat'(V10, V11)) end end}, V0, V1)) of 1 -> {'Idris.Builtin.DPair.MkDPair', V6, {'Idris.Core.TT.DropCons', V7}}; 0 -> {'Idris.Builtin.DPair.MkDPair', [V4 | V6], {'Idris.Core.TT.KeepCons', V7}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--mkBounds'(V0) -> case V0 of [] -> {'Idris.Core.TT.Bounds.None'}; [E0 | E1] -> (fun (V1, V2) -> {'Idris.Core.TT.Bounds.Add', V1, V1, ('un--mkBounds'(V2))} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--mkArgList'(V0, V1) -> case V1 of 0 -> {'Idris.Builtin.DPair.MkDPair', [], {'Idris.Compiler.CompileExpr.NoArgs'}}; _ -> begin (V2 = (V1 - 1)), case ('un--mkArgList'(((V0 + 1) rem 9223372036854775808), V2)) of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V3, V4) -> {'Idris.Builtin.DPair.MkDPair', [{'Idris.Core.Name.MN', <<"arg"/utf8>>, V0} | V3], {'Idris.Compiler.CompileExpr.ConsArg', {'Idris.Core.Name.MN', <<"arg"/utf8>>, V0}, V4}} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--magic__natUnsuc'(V0, V1, V2) -> case V2 of {'Idris.Data.Vect.::', E0, E1} -> (fun (V3, V4) -> case V4 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CApp', V0, {'Idris.Core.CompileExpr.CRef', V1, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"prim__sub_Integer"/utf8>>}}}, [V3 | [{'Idris.Core.CompileExpr.CPrimVal', V0, {'Idris.Core.TT.BI', 1}} | []]]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--magic__natMinus'(V0, V1, V2) -> case V2 of {'Idris.Data.Vect.::', E0, E1} -> (fun (V3, V4) -> case V4 of {'Idris.Data.Vect.::', E2, E3} -> (fun (V5, V6) -> case V6 of {'Idris.Data.Vect.Nil'} -> (fun () -> {'Idris.Core.CompileExpr.CApp', V0, {'Idris.Core.CompileExpr.CRef', V1, {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--typesNS'()), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"prim__integerToNat"/utf8>>}}}}, [{'Idris.Core.CompileExpr.CApp', V0, {'Idris.Core.CompileExpr.CRef', V1, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"prim__sub_Integer"/utf8>>}}}, [V3 | [V5 | []]]} | []]} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--magic'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.CLam', E0, E1, E2} -> (fun (V2, V3, V4) -> {'Idris.Core.CompileExpr.CLam', V2, V3, ('un--magic'(V0, V4))} end(E0, E1, E2)); _ -> ('nested--8564-2750--in--un--go'(V1, V0, V0, V1)) end.
'un--lamRHSenv'(V0, V1, V2) -> case V2 of [] -> {'Idris.Core.CompileExpr.SubstCEnv.Nil'}; [E0 | E1] -> (fun (V3, V4) -> {'Idris.Core.CompileExpr.SubstCEnv.::', {'Idris.Core.CompileExpr.CRef', V1, {'Idris.Core.Name.MN', <<"x"/utf8>>, V0}}, ('un--lamRHSenv'(((V0 + 1) rem 9223372036854775808), V1, V4))} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--lamRHS'(V0, V1) -> begin (V2 = ('un--lamRHSenv'(0, ('Idris.Idris2.Core.CompileExpr':'un--getFC'(V1)), V0))), begin (V3 = ('Idris.Idris2.Core.CompileExpr':'un--substs'(V0, [], V2, V1))), begin (V4 = ('Idris.Idris2.Prelude.Types.List':'un--reverse'(('un--getNewArgs'(V0, V2))))), begin (V5 = ('un--mkBounds'(V4))), begin (V6 = ('Idris.Idris2.Core.CompileExpr':'un--mkLocals'(('Idris.Idris2.Core.TT.SizeOf':'un--zero'()), V5, V3))), ('nested--13146-6924--in--un--lamBind'(V0, V1, ('Idris.Idris2.Core.CompileExpr':'un--getFC'(V1)), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'([], ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V4, [])))), V6)) end end end end end.
'un--getZBranch'(V0) -> case V0 of [] -> {'Idris.Prelude.Types.Nothing'}; [E0 | E1] -> (fun (V1, V2) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(Maybe $a)'(('un--tryZBranch'(V1)), ('un--getZBranch'(V2)))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getSBranch'(V0, V1) -> case V1 of [] -> {'Idris.Prelude.Types.Nothing'}; [E0 | E1] -> (fun (V2, V3) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(Maybe $a)'(('un--trySBranch'(V0, V2)), ('un--getSBranch'(V0, V3)))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getPArgs'(V0, V1, V2, V3) -> begin (V4 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1, V2))(V3))), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> case V6 of {'Idris.Core.Value.NDCon', E2, E3, E4, E5, E6} -> (fun (V7, V8, V9, V10, V11) -> begin (V12 = {'Idris.Core.Value.NDCon', V7, V8, V9, V10, V11}), ('case--case block in getPArgs-5669'(V2, V1, V0, V8, V9, V10, V11, V7, V12, ('Idris.Idris2.Prelude.Types.List':'un--reverse'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V13) -> ('Idris.Idris2.Builtin':'un--snd'(V13)) end, V11)))), V3)) end end(E2, E3, E4, E5, E6)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V6)), <<"Badly formed struct type"/utf8>>}, V3)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--getNewType'(V0, V1, V2, V3, V4, V5, V6) -> case V6 of [] -> fun (V7) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end; [E0 | E1] -> (fun (V8, V9) -> case V8 of {'Idris.Core.CaseTree.DefaultCase', E2} -> (fun (V10) -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E2)); {'Idris.Core.CaseTree.ConCase', E3, E4, E5, E6} -> (fun (V12, V13, V14, V15) -> fun (V16) -> begin (V18 = begin (V17 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V17} end), case V18 of {'Idris.Prelude.Types.Left', E7} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V20) -> begin (V51 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V12, case V20 of {'Idris.Core.Context.MkDefs', E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38} -> (fun (V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50) -> V21 end(E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V16))), case V51 of {'Idris.Prelude.Types.Left', E39} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V53) -> case V53 of {'Idris.Prelude.Types.Just', E41} -> (fun (V54) -> case V54 of {'Idris.Core.Context.Context.DCon', E42, E43, E44} -> (fun (V55, V56, V57) -> case V57 of {'Idris.Prelude.Types.Just', E45} -> (fun (V58) -> case V58 of {'Idris.Builtin.MkPair', E46, E47} -> (fun (V59, V60) -> begin (V61 = ('nested--10267-4806--in--un--mkSubst'(V14, V0, V15, V13, V12, V9, V5, V4, V3, V2, V1, 0, V4, V60, V14))), begin (V62 = (('un--toCExpTree'(('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V14, V0)), V1, V2, V5, V15))(V16))), case V62 of {'Idris.Prelude.Types.Left', E48} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V64) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.CompileExpr':'un--substs'(V14, V0, V61, V64))}} end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E46, E47)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E45)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E42, E43, E44)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E41)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3, E4, E5, E6)); _ -> ('un--getNewType'(V0, V1, V2, V3, V4, V5, V9)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getNewArgs'(V0, V1) -> case V0 of [] -> case V1 of {'Idris.Core.CompileExpr.SubstCEnv.Nil'} -> (fun () -> [] end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; [E0 | E1] -> (fun (V2, V3) -> case V1 of {'Idris.Core.CompileExpr.SubstCEnv.::', E2, E3} -> (fun (V4, V5) -> case V4 of {'Idris.Core.CompileExpr.CRef', E4, E5} -> (fun (V6, V7) -> [V7 | ('un--getNewArgs'(V3, V5))] end(E4, E5)); _ -> [V2 | ('un--getNewArgs'(V3, V5))] end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getNArgs'(V0, V1, V2, V3) -> case V2 of {'Idris.Core.Name.NS', E0, E1} -> (fun (V4, V5) -> case V5 of {'Idris.Core.Name.UN', E2} -> (fun (V6) -> case V6 of {'Idris.Core.Name.Basic', E3} -> (fun (V7) -> case V7 of <<"IORes"/utf8>> -> fun (V8) -> case V3 of [E4 | E5] -> (fun (V9, V10) -> case V10 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NIORes', V9}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end(E4, E5)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"Ptr"/utf8>> -> fun (V11) -> case V3 of [E6 | E7] -> (fun (V12, V13) -> case V13 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NPtr'}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end(E6, E7)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"AnyPtr"/utf8>> -> fun (V14) -> case V3 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NPtr'}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"GCPtr"/utf8>> -> fun (V15) -> case V3 of [E8 | E9] -> (fun (V16, V17) -> case V17 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NGCPtr'}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end(E8, E9)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"GCAnyPtr"/utf8>> -> fun (V18) -> case V3 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NGCPtr'}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"Buffer"/utf8>> -> fun (V19) -> case V3 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NBuffer'}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"ForeignObj"/utf8>> -> fun (V20) -> case V3 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NForeignObj'}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"Unit"/utf8>> -> fun (V21) -> case V3 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.NUnit'}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; <<"Struct"/utf8>> -> case V3 of [E10 | E11] -> (fun (V22, V23) -> fun (V24) -> case V23 of [E12 | E13] -> (fun (V25, V26) -> case V26 of [] -> begin (V27 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1, V22))(V24))), case V27 of {'Idris.Prelude.Types.Left', E14} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V29) -> case V29 of {'Idris.Core.Value.NPrimVal', E16, E17} -> (fun (V30, V31) -> case V31 of {'Idris.Core.TT.Str', E18} -> (fun (V32) -> begin (V33 = ('un--getFieldArgs'(V0, V1, V25, V24))), case V33 of {'Idris.Prelude.Types.Left', E19} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V35) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.Struct', V32, V35}} end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V29)), <<"Unknown name for struct"/utf8>>}, V24)) end end(E16, E17)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V29)), <<"Unknown name for struct"/utf8>>}, V24)) end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end(E12, E13)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end end(E10, E11)); _ -> fun (V36) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end; _ -> fun (V37) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end end(E3)); _ -> fun (V38) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end end(E2)); _ -> fun (V39) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end end(E0, E1)); _ -> fun (V40) -> {'Idris.Prelude.Types.Right', {'Idris.Compiler.CompileExpr.User', V2, V3}} end end.
'un--getFieldArgs'(V0, V1, V2, V3) -> begin (V4 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V1, V2))(V3))), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> case V6 of {'Idris.Core.Value.NDCon', E2, E3, E4, E5, E6} -> (fun (V7, V8, V9, V10, V11) -> begin (V12 = {'Idris.Core.Value.NDCon', V7, V8, V9, V10, V11}), (('case--case block in getFieldArgs-5858'(V2, V1, V0, V8, V9, V10, V11, V7, V12, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V13) -> ('Idris.Idris2.Builtin':'un--snd'(V13)) end, V11))))(V3)) end end(E2, E3, E4, E5, E6)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Core.Value':'un--getLoc'(V6)), <<"Badly formed struct type"/utf8>>}, V3)) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--getDef'(V0, V1, V2, V3, V4) -> case V4 of [] -> fun (V5) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end; [E0 | E1] -> (fun (V6, V7) -> case V6 of {'Idris.Core.CaseTree.DefaultCase', E2} -> (fun (V8) -> fun (V9) -> begin (V10 = (('un--toCExpTree'(V0, V1, V2, V3, V8))(V9))), case V10 of {'Idris.Prelude.Types.Left', E3} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V12}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2)); {'Idris.Core.CaseTree.ConstCase', E5, E6} -> (fun (V13, V14) -> case V13 of {'Idris.Core.TT.WorldVal'} -> (fun () -> fun (V15) -> begin (V16 = (('un--toCExpTree'(V0, V1, V2, V3, V14))(V15))), case V16 of {'Idris.Prelude.Types.Left', E7} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V18}} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end()); _ -> ('un--getDef'(V0, V1, V2, V3, V7)) end end(E5, E6)); _ -> ('un--getDef'(V0, V1, V2, V3, V7)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getCFTypes'(V0, V1, V2, V3) -> case V2 of {'Idris.Core.Value.NBind', E2, E3, E4, E5} -> (fun (V4, V5, V6, V7) -> case V6 of {'Idris.Core.TT.Pi', E8, E9, E10, E11} -> (fun (V8, V9, V10, V11) -> begin (V13 = begin (V12 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V12} end), case V13 of {'Idris.Prelude.Types.Left', E12} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V15) -> begin (V19 = begin (V16 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V0, [], V15, V11))(V3))), case V16 of {'Idris.Prelude.Types.Left', E14} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V18) -> (('un--nfToCFType'(V0, V4, 0, V18))(V3)) end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V19 of {'Idris.Prelude.Types.Left', E16} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V21) -> begin (V22 = (((V7(V15))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), {'Idris.Core.Env.Nil'}, {'Idris.Core.TT.Erased', V4, 0}))))(V3))), case V22 of {'Idris.Prelude.Types.Left', E18} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V24) -> ('un--getCFTypes'(V0, [V21 | V1], V24, V3)) end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8, E9, E10, E11)); _ -> begin (V25 = (('un--nfToCFType'(V0, ('Idris.Idris2.Core.Value':'un--getLoc'(V2)), 0, V2))(V3))), case V25 of {'Idris.Prelude.Types.Left', E6} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Prelude.Types.List':'un--reverse'(V1)), V27}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2, E3, E4, E5)); _ -> begin (V28 = (('un--nfToCFType'(V0, ('Idris.Idris2.Core.Value':'un--getLoc'(V2)), 0, V2))(V3))), case V28 of {'Idris.Prelude.Types.Left', E0} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V30) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Prelude.Types.List':'un--reverse'(V1)), V30}} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--expandToArity'(V0, V1, V2, V3) -> case V2 of {'Idris.Core.CompileExpr.CErased', E2} -> (fun (V4) -> {'Idris.Core.CompileExpr.CErased', V4} end(E2)); _ -> case V1 of 0 -> ('nested--8053-2310--in--un--applyAll'(V0, V3, V2, V2, V3)); _ -> begin (V5 = (V1 - 1)), case V3 of [E0 | E1] -> (fun (V6, V7) -> ('un--expandToArity'(V0, V5, ('nested--8053-2332--in--un--addArg'(V0, V5, V6, V7, V2, V2, V6)), V7)) end(E0, E1)); _ -> case V3 of [] -> ('un--etaExpand'(V0, 0, V1, V2, [])); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end.
'un--etaExpand'(V0, V1, V2, V3, V4) -> case V2 of 0 -> ('nested--7953-2210--in--un--mkApp'(V0, V4, V3, V1, V3, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5) -> ('nested--7953-2209--in--un--mkLocal'(V0, V4, V3, V1, ('Idris.Idris2.Core.CompileExpr':'un--getFC'(V3)), V5)) end, ('Idris.Idris2.Prelude.Types.List':'un--reverse'(V4)))))); _ -> begin (V6 = (V2 - 1)), {'Idris.Core.CompileExpr.CLam', ('Idris.Idris2.Core.CompileExpr':'un--getFC'(V3)), {'Idris.Core.Name.MN', <<"eta"/utf8>>, V1}, ('un--etaExpand'([{'Idris.Core.Name.MN', <<"eta"/utf8>>, V1} | V0], ((V1 + 1) rem 9223372036854775808), V6, ('Idris.Idris2.Core.CompileExpr':'dn--un--weaken_Weaken_CExp'(V3)), [0 | ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V7) -> ('un--weakenVar'(V7)) end, V4))]))} end end.
'un--eraseConArgs'(V0, V1, V2, V3, V4) -> begin (V5 = ('un--expandToArity'(V0, V1, V3, V4))), case ('Idris.Idris2.Data.List':'un--isNil'(V2)) of 1 -> V5; 0 -> ('un--dropPos'(V2, V5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--enumTree'(V0) -> case V0 of {'Idris.Core.CompileExpr.CConCase', E0, E1, E2, E3} -> (fun (V1, V2, V3, V4) -> begin (V16 = ('Idris.Idris2.Prelude.Types':'dn--un--traverse_Traversable_List'({'Idris.Prelude.Interfaces.MkApplicative', fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V7, V8)) end end end end, fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V10)) end end, fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V13, V14)) end end end end}, fun (V15) -> ('nested--9371-3495--in--un--toEnum'(V4, V3, V2, V1, V15)) end, V3))), case V16 of {'Idris.Prelude.Types.Just', E4} -> (fun (V17) -> {'Idris.Core.CompileExpr.CConstCase', V1, V2, V17, V4} end(E4)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Core.CompileExpr.CConCase', V1, V2, V3, V4} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3)); _ -> V0 end.
'un--dropPos'(V0, V1) -> case V1 of {'Idris.Core.CompileExpr.CLam', E0, E1, E2} -> (fun (V2, V3, V4) -> {'Idris.Core.CompileExpr.CLam', V2, V3, ('un--dropPos'(V0, V4))} end(E0, E1, E2)); {'Idris.Core.CompileExpr.CApp', E3, E4, E5} -> (fun (V5, V6, V7) -> case V6 of {'Idris.Core.CompileExpr.CApp', E6, E7, E8} -> (fun (V8, V9, V10) -> {'Idris.Core.CompileExpr.CApp', V5, ('un--dropPos'(V0, V6)), V7} end(E6, E7, E8)); _ -> {'Idris.Core.CompileExpr.CApp', V5, V6, ('un--dropFrom'(V0, 0, V7))} end end(E3, E4, E5)); {'Idris.Core.CompileExpr.CCon', E9, E10, E11, E12, E13} -> (fun (V11, V12, V13, V14, V15) -> {'Idris.Core.CompileExpr.CCon', V11, V12, V13, V14, ('un--dropFrom'(V0, 0, V15))} end(E9, E10, E11, E12, E13)); _ -> V1 end.
'un--dropFrom'(V0, V1, V2) -> case V2 of [] -> []; [E0 | E1] -> (fun (V3, V4) -> case ('Idris.Idris2.Prelude.Types':'un--elem'({'Idris.Prelude.EqOrd.MkEq', fun (V5) -> fun (V6) -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V5, V6)) end end, fun (V7) -> fun (V8) -> ('Idris.Idris2.Prelude.Types':'dn--un--/=_Eq_Nat'(V7, V8)) end end}, V1, V0)) of 1 -> ('un--dropFrom'(V0, ('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'((1 + 0), V1)), V4)); 0 -> [V3 | ('un--dropFrom'(V0, ('Idris.Idris2.Prelude.Types':'dn--un--+_Num_Nat'((1 + 0), V1)), V4))]; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--dconFlag'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V37 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V7 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> case V39 of {'Idris.Prelude.Types.Just', E34} -> (fun (V40) -> {'Idris.Prelude.Types.Right', ('nested--9449-3558--in--un--ciFlags'(V1, V0, case V40 of {'Idris.Core.Context.Context.MkGlobalDef', E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54} -> (fun (V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60) -> V52 end(E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))} end(E34)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t find "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V1))))}, V2)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--constCases'(V0, V1, V2, V3, V4) -> case V4 of [] -> fun (V5) -> {'Idris.Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V6, V7) -> case V6 of {'Idris.Core.CaseTree.ConstCase', E2, E3} -> (fun (V8, V9) -> case V8 of {'Idris.Core.TT.WorldVal'} -> (fun () -> ('un--constCases'(V0, V1, V2, V3, V7)) end()); _ -> fun (V10) -> begin (V11 = (('un--toCExpTree'(V0, V1, V2, V3, V9))(V10))), case V11 of {'Idris.Prelude.Types.Left', E4} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V13) -> begin (V14 = (('un--constCases'(V0, V1, V2, V3, V7))(V10))), case V14 of {'Idris.Prelude.Types.Left', E6} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Right', [{'Idris.Core.CompileExpr.MkConstAlt', V8, V13} | V16]} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E2, E3)); _ -> ('un--constCases'(V0, V1, V2, V3, V7)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--conCases'(V0, V1, V2, V3, V4) -> case V4 of [] -> fun (V5) -> {'Idris.Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V6, V7) -> case V6 of {'Idris.Core.CaseTree.ConCase', E2, E3, E4, E5} -> (fun (V8, V9, V10, V11) -> fun (V12) -> begin (V14 = begin (V13 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V13} end), case V14 of {'Idris.Prelude.Types.Left', E6} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V16) -> begin (V47 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V8, case V16 of {'Idris.Core.Context.MkDefs', E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37} -> (fun (V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46) -> V17 end(E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V12))), case V47 of {'Idris.Prelude.Types.Left', E38} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V49) -> case V49 of {'Idris.Prelude.Types.Just', E40} -> (fun (V50) -> begin (V51 = {'Idris.Prelude.Types.Just', V50}), (('case--case block in conCases-4451'(V10, V0, V11, V9, V8, V7, V3, V2, V1, V16, V50, V51, case V50 of {'Idris.Core.Context.Context.MkGlobalDef', E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60} -> (fun (V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71) -> V69 end(E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V12)) end end(E40)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V72 = ('Idris.Idris2.Core.Context':'un--getFullName'(V1, V8, V12))), case V72 of {'Idris.Prelude.Types.Left', E61} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V74) -> begin (V75 = (('un--toCExpTree'(('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V10, V0)), V1, V2, V3, V11))(V12))), case V75 of {'Idris.Prelude.Types.Left', E63} -> (fun (V76) -> {'Idris.Prelude.Types.Left', V76} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V77) -> begin (V78 = (('un--conCases'(V0, V1, V2, V3, V7))(V12))), case V78 of {'Idris.Prelude.Types.Left', E65} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V80) -> {'Idris.Prelude.Types.Right', [{'Idris.Core.CompileExpr.MkConAlt', V74, 1, {'Idris.Prelude.Types.Nothing'}, V10, V77} | V80]} end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E2, E3, E4, E5)); _ -> ('un--conCases'(V0, V1, V2, V3, V7)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--compileExp'(V0, V1, V2) -> begin (V3 = ('un--builtinMagic'(V0, V2))), case V3 of {'Idris.Prelude.Types.Left', E0} -> (fun (V4) -> {'Idris.Prelude.Types.Left', V4} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V5) -> begin (V6 = ('Idris.Idris2.Core.Core':'un--newRef'({'Idris.Compiler.CompileExpr.NextSucc'}, 0, V2))), case V6 of {'Idris.Prelude.Types.Left', E2} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V8) -> begin (V10 = ('un--toCExp'([], V0, V8, fun (V9) -> (V5('erased')) end, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"main"/utf8>>}}, V1, V2))), case V10 of {'Idris.Prelude.Types.Left', E4} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V12) -> {'Idris.Prelude.Types.Right', V12} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--compileDef'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V37 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V1, case V6 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V7 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V2))), case V37 of {'Idris.Prelude.Types.Left', E32} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V39) -> case V39 of {'Idris.Prelude.Types.Just', E34} -> (fun (V40) -> begin (V41 = ('Idris.Idris2.Core.Context':'un--getSession'(V0, V2))), case V41 of {'Idris.Prelude.Types.Left', E35} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V43) -> case ('nested--13890-7600--in--un--noDefYet'(V1, V0, case V40 of {'Idris.Core.Context.Context.MkGlobalDef', E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120} -> (fun (V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63) -> V61 end(E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case V43 of {'Idris.Core.Options.MkSessionOpts', E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146} -> (fun (V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89) -> V87 end(E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of 1 -> ('Idris.Idris2.Core.Context':'un--recordWarning'(V0, {'Idris.Core.Core.GenericWarn', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Compiling hole "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V1))))}, V2)); 0 -> begin (V159 = begin (V116 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V90) -> fun (V91) -> fun (V92) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Def'(V90, V91, V92)) end end end, fun (V93) -> fun (V94) -> fun (V95) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Def'(V93, V94, V95)) end end end}, case V40 of {'Idris.Core.Context.Context.MkGlobalDef', E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56} -> (fun (V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115) -> V113 end(E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V2))), case V116 of {'Idris.Prelude.Types.Left', E57} -> (fun (V117) -> {'Idris.Prelude.Types.Left', V117} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V118) -> (('un--toCDef'(V0, V1, case V40 of {'Idris.Core.Context.Context.MkGlobalDef', E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78} -> (fun (V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138) -> V121 end(E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case V40 of {'Idris.Core.Context.Context.MkGlobalDef', E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98} -> (fun (V139, V140, V141, V142, V143, V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158) -> V142 end(E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V118))(V2)) end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V159 of {'Idris.Prelude.Types.Left', E99} -> (fun (V160) -> {'Idris.Prelude.Types.Left', V160} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V161) -> ('Idris.Idris2.Core.Context':'un--setCompiled'(V0, V1, V161, V2)) end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E34)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Trying to compile unknown name "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V1))))}, V2)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--builtinNatTree'(V0, V1, V2) -> case V1 of {'Idris.Core.CompileExpr.CConCase', E0, E1, E2, E3} -> (fun (V3, V4, V5, V6) -> case V4 of {'Idris.Core.CompileExpr.CLocal', E8, E9} -> (fun (V7, V8) -> {'Idris.Prelude.Types.Right', begin (V9 = {'Idris.Core.CompileExpr.CLocal', V7, V8}), case ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V12, V13, V14)) end end end end end, fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V17, V18, V19)) end end end end end, fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V21)) end end, fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V25, V26, V27, V28)) end end end end end end end, fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V30)) end end, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V33, V34, V35)) end end end end end}, fun (V36) -> ('un--natBranch'(V36)) end, V5)) of 1 -> begin (V37 = ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> {'Idris.Core.CompileExpr.CCrash', V3, <<"Nat case not covered"/utf8>>} end, V6))), begin (V39 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> V37 end, fun () -> fun (V38) -> V38 end end, ('un--getSBranch'(V9, V5))))), begin (V41 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> V37 end, fun () -> fun (V40) -> V40 end end, ('un--getZBranch'(V5))))), {'Idris.Core.CompileExpr.CConstCase', V3, V9, [{'Idris.Core.CompileExpr.MkConstAlt', {'Idris.Core.TT.BI', 0}, V41} | []], {'Idris.Prelude.Types.Just', V39}} end end end; 0 -> {'Idris.Core.CompileExpr.CConCase', V3, V9, V5, V6}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end} end(E8, E9)); _ -> begin (V42 = ('un--newSuccName'(V0, V2))), case V42 of {'Idris.Prelude.Types.Left', E4} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V44) -> begin (V47 = ('un--builtinNatTree'(V0, {'Idris.Core.CompileExpr.CConCase', V3, {'Idris.Core.CompileExpr.CLocal', 0, V3}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V45) -> ('Idris.Idris2.Core.CompileExpr':'dn--un--weaken_Weaken_CConAlt'(V45)) end, V5)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(fun (V46) -> ('Idris.Idris2.Core.CompileExpr':'dn--un--weaken_Weaken_CExp'(V46)) end, V6))}, V2))), case V47 of {'Idris.Prelude.Types.Left', E6} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V49) -> {'Idris.Prelude.Types.Right', {'Idris.Core.CompileExpr.CLet', V3, V44, 1, V4, V49}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3)); _ -> {'Idris.Prelude.Types.Right', V1} end.
'un--builtinMagic'(V0, V1) -> {'Idris.Prelude.Types.Right', fun (V2) -> fun (V3) -> ('un--magic'(('un--natHack'()), V3)) end end}.
'un--applyNewType'(V0, V1, V2, V3, V4) -> begin (V5 = ('un--expandToArity'(V0, V1, V3, V4))), ('nested--8157-2392--in--un--keepArg'(V0, V4, V3, V2, V1, V5)) end.
