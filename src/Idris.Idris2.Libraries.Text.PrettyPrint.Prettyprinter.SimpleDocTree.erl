-module('Idris.Idris2.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--fromStream,flatten-1120'/4,
  'case--sdocToTreeParser-912'/3,
  'nested--4106-1092--in--un--internalError'/1,
  'nested--4106-1091--in--un--flatten'/2,
  'un--unAnnotateST'/1,
  'un--traverse'/3,
  'un--sdocToTreeParser'/1,
  'un--reAnnotateST'/2,
  'un--fromStream'/1,
  'un--collectAnnotations'/3,
  'un--alterAnnotationsST'/2
]).
'case--fromStream,flatten-1120'(V0, V1, V2, V3) -> case V3 of {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', E0} -> (fun (V4) -> {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', [V1 | V4]} end(E0)); _ -> {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', [V1 | [V3 | []]]} end.
'case--sdocToTreeParser-912'(V0, V1, V2) -> case V2 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V3, V4) -> case V4 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Builtin.MkPair', {'Idris.Prelude.Types.Nothing'}, {'Idris.Prelude.Types.Nothing'}} end()); _ -> case V3 of {'Idris.Prelude.Types.Just', E2} -> (fun (V5) -> case V4 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Builtin.MkPair', {'Idris.Prelude.Types.Just', {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', V0, V5}}, {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E3} -> (fun (V6) -> case ('un--sdocToTreeParser'(V6)) of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V7, V8) -> case V7 of {'Idris.Prelude.Types.Just', E6} -> (fun (V9) -> {'Idris.Builtin.MkPair', {'Idris.Prelude.Types.Just', {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', [{'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', V0, V5} | [V9 | []]]}}, V8} end(E6)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Builtin.MkPair', {'Idris.Prelude.Types.Just', {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', V0, V5}}, V8} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> case V4 of {'Idris.Prelude.Types.Just', E7} -> (fun (V10) -> ('un--sdocToTreeParser'(V10)) end(E7)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Builtin.MkPair', {'Idris.Prelude.Types.Nothing'}, {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--4106-1092--in--un--internalError'(V0) -> begin (V1 = <<"<internal pretty printing error>"/utf8>>), {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STText', ('Idris.Idris2.Prelude.Cast':'dn--un--cast_Cast_Nat_Int'(('Idris.Idris2.Prelude.Types.String':'un--length'(V1)))), V1} end.
'nested--4106-1091--in--un--flatten'(V0, V1) -> case V1 of {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', E0} -> (fun (V2) -> case V2 of [E1 | E2] -> (fun (V3, V4) -> case V4 of [E3 | E4] -> (fun (V5, V6) -> case V5 of {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STEmpty'} -> (fun () -> case V6 of [] -> ('nested--4106-1091--in--un--flatten'(V0, V3)); _ -> V1 end end()); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', E5} -> (fun (V7) -> case V6 of [] -> ('case--fromStream,flatten-1120'(V0, V3, V7, ('nested--4106-1091--in--un--flatten'(V0, {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', V7})))); _ -> V1 end end(E5)); _ -> V1 end end(E3, E4)); _ -> V1 end end(E1, E2)); _ -> V1 end end(E0)); _ -> V1 end.
'un--unAnnotateST'(V0) -> ('un--alterAnnotationsST'(fun (V1) -> [] end, V0)).
'un--traverse'(V0, V1, V2) -> case V2 of {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STEmpty'} -> (fun () -> case V0 of {'Idris.Prelude.Interfaces.MkApplicative', E0, E1, E2} -> (fun (V3, V4, V5) -> ((V4('erased'))({'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STEmpty'})) end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STChar', E3} -> (fun (V6) -> case V0 of {'Idris.Prelude.Interfaces.MkApplicative', E4, E5, E6} -> (fun (V7, V8, V9) -> ((V8('erased'))({'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STChar', V6})) end(E4, E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STText', E7, E8} -> (fun (V10, V11) -> case V0 of {'Idris.Prelude.Interfaces.MkApplicative', E9, E10, E11} -> (fun (V12, V13, V14) -> ((V13('erased'))({'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STText', V10, V11})) end(E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E7, E8)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STLine', E12} -> (fun (V15) -> case V0 of {'Idris.Prelude.Interfaces.MkApplicative', E13, E14, E15} -> (fun (V16, V17, V18) -> ((V17('erased'))({'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STLine', V15})) end(E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E12)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', E16, E17} -> (fun (V19, V20) -> case V0 of {'Idris.Prelude.Interfaces.MkApplicative', E18, E19, E20} -> (fun (V21, V22, V23) -> ((((V23('erased'))('erased'))(('Idris.Idris2.Prelude.Interfaces':'un--<$>'(case V0 of {'Idris.Prelude.Interfaces.MkApplicative', E21, E22, E23} -> (fun (V24, V25, V26) -> V24 end(E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, fun (V27) -> fun (V28) -> {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', V27, V28} end end, (V1(V19))))))(('un--traverse'(V0, V1, V20)))) end(E18, E19, E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E16, E17)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', E24} -> (fun (V29) -> ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(case V0 of {'Idris.Prelude.Interfaces.MkApplicative', E25, E26, E27} -> (fun (V30, V31, V32) -> V30 end(E25, E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, fun (V33) -> {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', V33} end, ('Idris.Idris2.Prelude.Types':'dn--un--traverse_Traversable_List'(V0, fun (V34) -> ('un--traverse'(V0, V1, V34)) end, V29)))) end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--sdocToTreeParser'(V0) -> case V0 of {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.Doc.SEmpty'} -> (fun () -> {'Idris.Builtin.MkPair', {'Idris.Prelude.Types.Just', {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STEmpty'}}, {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.Doc.SChar', E0, E1} -> (fun (V1, V2) -> case ('un--sdocToTreeParser'((V2()))) of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V3, V4) -> case V3 of {'Idris.Prelude.Types.Just', E4} -> (fun (V5) -> {'Idris.Builtin.MkPair', {'Idris.Prelude.Types.Just', {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', [{'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STChar', V1} | [V5 | []]]}}, V4} end(E4)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Builtin.MkPair', {'Idris.Prelude.Types.Just', {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STChar', V1}}, V4} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.Doc.SText', E5, E6, E7} -> (fun (V6, V7, V8) -> case ('un--sdocToTreeParser'((V8()))) of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V9, V10) -> case V9 of {'Idris.Prelude.Types.Just', E10} -> (fun (V11) -> {'Idris.Builtin.MkPair', {'Idris.Prelude.Types.Just', {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', [{'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STText', V6, V7} | [V11 | []]]}}, V10} end(E10)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Builtin.MkPair', {'Idris.Prelude.Types.Just', {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STText', V6, V7}}, V10} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5, E6, E7)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.Doc.SLine', E11, E12} -> (fun (V12, V13) -> case ('un--sdocToTreeParser'(V13)) of {'Idris.Builtin.MkPair', E13, E14} -> (fun (V14, V15) -> case V14 of {'Idris.Prelude.Types.Just', E15} -> (fun (V16) -> {'Idris.Builtin.MkPair', {'Idris.Prelude.Types.Just', {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', [{'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STLine', V12} | [V16 | []]]}}, V15} end(E15)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Builtin.MkPair', {'Idris.Prelude.Types.Just', {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STLine', V12}}, V15} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E11, E12)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.Doc.SAnnPush', E16, E17} -> (fun (V17, V18) -> ('case--sdocToTreeParser-912'(V17, V18, ('un--sdocToTreeParser'(V18)))) end(E16, E17)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.Doc.SAnnPop', E18} -> (fun (V19) -> {'Idris.Builtin.MkPair', {'Idris.Prelude.Types.Nothing'}, {'Idris.Prelude.Types.Just', V19}} end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--reAnnotateST'(V0, V1) -> ('un--alterAnnotationsST'(fun (V2) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_List'((V0(V2)))) end, V1)).
'un--fromStream'(V0) -> case ('un--sdocToTreeParser'(V0)) of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V1, V2) -> case V1 of {'Idris.Prelude.Types.Just', E2} -> (fun (V3) -> case V2 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('nested--4106-1091--in--un--flatten'(V0, V3)) end()); _ -> ('nested--4106-1092--in--un--internalError'(V0)) end end(E2)); _ -> ('nested--4106-1092--in--un--internalError'(V0)) end end(E0, E1)); _ -> ('nested--4106-1092--in--un--internalError'(V0)) end.
'un--collectAnnotations'(V0, V1, V2) -> case V2 of {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STEmpty'} -> (fun () -> case V0 of {'Idris.Prelude.Interfaces.MkMonoid', E0, E1} -> (fun (V3, V4) -> V4 end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STChar', E2} -> (fun (V5) -> case V0 of {'Idris.Prelude.Interfaces.MkMonoid', E3, E4} -> (fun (V6, V7) -> V7 end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STText', E5, E6} -> (fun (V8, V9) -> case V0 of {'Idris.Prelude.Interfaces.MkMonoid', E7, E8} -> (fun (V10, V11) -> V11 end(E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5, E6)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STLine', E9} -> (fun (V12) -> case V0 of {'Idris.Prelude.Interfaces.MkMonoid', E10, E11} -> (fun (V13, V14) -> V14 end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E9)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', E12, E13} -> (fun (V15, V16) -> case V0 of {'Idris.Prelude.Interfaces.MkMonoid', E14, E15} -> (fun (V17, V18) -> ((V17((V1(V15))))(('un--collectAnnotations'(V0, V1, V16)))) end(E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E12, E13)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', E16} -> (fun (V19) -> ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V20) -> fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V22, V23, V24)) end end end end end, fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V27, V28, V29)) end end end end end, fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V31)) end end, fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V35, V36, V37, V38)) end end end end end end end, fun (V39) -> fun (V40) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V40)) end end, fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V43, V44, V45)) end end end end end}, V0}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V46) -> ('un--collectAnnotations'(V0, V1, V46)) end, V19)))) end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--alterAnnotationsST'(V0, V1) -> case V1 of {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STEmpty'} -> (fun () -> {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STEmpty'} end()); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STChar', E0} -> (fun (V2) -> {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STChar', V2} end(E0)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STText', E1, E2} -> (fun (V3, V4) -> {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STText', V3, V4} end(E1, E2)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STLine', E3} -> (fun (V5) -> {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STLine', V5} end(E3)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', E4, E5} -> (fun (V6, V7) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(fun (V8) -> fun (V9) -> {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STAnn', V8, V9} end end, ('un--alterAnnotationsST'(V0, V7)), (V0(V6)))) end(E4, E5)); {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', E6} -> (fun (V10) -> {'Idris.Libraries.Text.PrettyPrint.Prettyprinter.SimpleDocTree.STConcat', ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V11) -> ('un--alterAnnotationsST'(V0, V11)) end, V10))} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
