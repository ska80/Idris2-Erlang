-module('Idris.Idris2.TTImp.WithClause').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'case--case block in case block in case block in getNewLHS-15819'/22,
  'nested--8161-16060--in--un--wrhsC'/10,
  'nested--8161-16059--in--un--wrhs'/9,
  'nested--8161-16057--in--un--withApply'/11,
  'nested--8161-16058--in--un--updateWith'/11,
  'nested--7565-15556--in--un--dropWithArgs'/11,
  'un--withRHS'/8,
  'un--mergeMatches'/5,
  'un--matchFail'/2,
  'un--matchAny'/6,
  'un--matchAll'/5,
  'un--getNewLHS'/9,
  'un--getMatch'/5,
  'un--getHeadLoc'/1,
  'un--getArgMatch'/6,
  'un--addAlias'/5
]).
'case--case block in case block in case block in getNewLHS-15819'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21) -> case V20 of [E0 | E1] -> (fun (V22, V23) -> begin (V39 = ('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V24) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V24)) end, fun (V25) -> fun (V26) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V25, V26)) end end}, V15)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" against "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V27) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V27)) end, fun (V28) -> fun (V29) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V28, V29)) end end}, V18)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" dropping "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V30) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V31) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V31)) end, fun (V32) -> fun (V33) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V32, V33)) end end}, V30)) end, fun (V34) -> fun (V35) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V36) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V36)) end, fun (V37) -> fun (V38) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V37, V38)) end end}, V34, V35)) end end}, [V22 | V23])))))))))) end, V21))), case V39 of {'Idris.Prelude.Types.Left', E2} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V41) -> begin (V42 = (('un--getMatch'(V7, V8, 1, V15, V18))(V21))), case V42 of {'Idris.Prelude.Types.Left', E4} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V44) -> begin (V72 = ('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matches: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V45) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V46) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V46)) end, fun (V47) -> fun (V48) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V47, V48)) end end}, {'Idris.Prelude.Show.MkShow', fun (V49) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V50) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V50)) end, fun (V51) -> fun (V52) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V51, V52)) end end}, V49)) end, fun (V53) -> fun (V54) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V55) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V55)) end, fun (V56) -> fun (V57) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V56, V57)) end end}, V53, V54)) end end}}, V45)) end, fun (V58) -> fun (V59) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V60) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V60)) end, fun (V61) -> fun (V62) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V61, V62)) end end}, {'Idris.Prelude.Show.MkShow', fun (V63) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V64) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V64)) end, fun (V65) -> fun (V66) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V65, V66)) end end}, V63)) end, fun (V67) -> fun (V68) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V69) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V69)) end, fun (V70) -> fun (V71) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V70, V71)) end end}, V67, V68)) end end}}, V58, V59)) end end}, V44)))) end, V21))), case V72 of {'Idris.Prelude.Types.Left', E6} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V74) -> begin (V76 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V75) -> ('un--getArgMatch'(V9, {'Idris.TTImp.Elab.Check.InLHS', ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'())}, 0, V22, V44, V75)) end, V2))), begin (V86 = ('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Parameters: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V77) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V78) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V78)) end, fun (V79) -> fun (V80) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V79, V80)) end end}, V77)) end, fun (V81) -> fun (V82) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V83) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V83)) end, fun (V84) -> fun (V85) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V84, V85)) end end}, V81, V82)) end end}, V76)))) end, V21))), case V86 of {'Idris.Prelude.Types.Left', E8} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V88) -> begin (V89 = (('un--getHeadLoc'(V0))(V21))), case V89 of {'Idris.Prelude.Types.Left', E10} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V91) -> begin (V92 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V91, V3}, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V76, V23))))), begin (V96 = ('Idris.Idris2.Core.Context.Log':'un--log'(V8, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"New LHS: "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V93) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V93)) end, fun (V94) -> fun (V95) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V94, V95)) end end}, V92)))) end, V21))), case V96 of {'Idris.Prelude.Types.Left', E12} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V98) -> {'Idris.Prelude.Types.Right', V92} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V6, <<"Badly formed \x{27}with\x{27} clause"/utf8>>}, V21)) end.
'nested--8161-16060--in--un--wrhsC'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V8 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V10, V11, V12) -> begin (V13 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V12))(V9))), case V13 of {'Idris.Prelude.Types.Left', E3} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.PatClause', V10, V11, V15}} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2)); _ -> {'Idris.Prelude.Types.Right', V8} end.
'nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.TTImp.TTImp.IPi', E0, E1, E2, E3, E4, E5} -> (fun (V9, V10, V11, V12, V13, V14) -> fun (V15) -> begin (V16 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V13))(V15))), case V16 of {'Idris.Prelude.Types.Left', E6} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V18) -> begin (V19 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V14))(V15))), case V19 of {'Idris.Prelude.Types.Left', E8} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPi', V9, V10, V11, V12, V18, V21}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4, E5)); {'Idris.TTImp.TTImp.ILam', E10, E11, E12, E13, E14, E15} -> (fun (V22, V23, V24, V25, V26, V27) -> fun (V28) -> begin (V29 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V26))(V28))), case V29 of {'Idris.Prelude.Types.Left', E16} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V31) -> begin (V32 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V27))(V28))), case V32 of {'Idris.Prelude.Types.Left', E18} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V34) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V22, V23, V24, V25, V31, V34}} end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E10, E11, E12, E13, E14, E15)); {'Idris.TTImp.TTImp.ILet', E20, E21, E22, E23, E24, E25, E26} -> (fun (V35, V36, V37, V38, V39, V40, V41) -> fun (V42) -> begin (V43 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V39))(V42))), case V43 of {'Idris.Prelude.Types.Left', E27} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V45) -> begin (V46 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V40))(V42))), case V46 of {'Idris.Prelude.Types.Left', E29} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V48) -> begin (V49 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V41))(V42))), case V49 of {'Idris.Prelude.Types.Left', E31} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V51) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILet', V35, V36, V37, V38, V45, V48, V51}} end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E20, E21, E22, E23, E24, E25, E26)); {'Idris.TTImp.TTImp.ICase', E33, E34, E35, E36} -> (fun (V52, V53, V54, V55) -> fun (V56) -> begin (V57 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V53))(V56))), case V57 of {'Idris.Prelude.Types.Left', E37} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V59) -> begin (V60 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V54))(V56))), case V60 of {'Idris.Prelude.Types.Left', E39} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V62) -> begin (V65 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V63) -> fun (V64) -> ('nested--8161-16060--in--un--wrhsC'(V0, V1, V2, V3, V4, V5, V6, V7, V63, V64)) end end, V55, [], V56))), case V65 of {'Idris.Prelude.Types.Left', E41} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V67) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V52, V59, V62, V67}} end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E33, E34, E35, E36)); {'Idris.TTImp.TTImp.ILocal', E43, E44, E45} -> (fun (V68, V69, V70) -> fun (V71) -> begin (V72 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V70))(V71))), case V72 of {'Idris.Prelude.Types.Left', E46} -> (fun (V73) -> {'Idris.Prelude.Types.Left', V73} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V74) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V68, V69, V74}} end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E43, E44, E45)); {'Idris.TTImp.TTImp.IUpdate', E48, E49, E50} -> (fun (V75, V76, V77) -> fun (V78) -> begin (V79 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V77))(V78))), case V79 of {'Idris.Prelude.Types.Left', E51} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V81) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUpdate', V75, V76, V81}} end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E48, E49, E50)); {'Idris.TTImp.TTImp.IApp', E53, E54, E55} -> (fun (V82, V83, V84) -> fun (V85) -> begin (V86 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V83))(V85))), case V86 of {'Idris.Prelude.Types.Left', E56} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V88) -> begin (V89 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V84))(V85))), case V89 of {'Idris.Prelude.Types.Left', E58} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V91) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V82, V88, V91}} end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E53, E54, E55)); {'Idris.TTImp.TTImp.IAutoApp', E60, E61, E62} -> (fun (V92, V93, V94) -> fun (V95) -> begin (V96 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V93))(V95))), case V96 of {'Idris.Prelude.Types.Left', E63} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V98) -> begin (V99 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V94))(V95))), case V99 of {'Idris.Prelude.Types.Left', E65} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V101) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAutoApp', V92, V98, V101}} end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E60, E61, E62)); {'Idris.TTImp.TTImp.INamedApp', E67, E68, E69, E70} -> (fun (V102, V103, V104, V105) -> fun (V106) -> begin (V107 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V103))(V106))), case V107 of {'Idris.Prelude.Types.Left', E71} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V109) -> begin (V110 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V105))(V106))), case V110 of {'Idris.Prelude.Types.Left', E73} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V112) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamedApp', V102, V109, V104, V112}} end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E67, E68, E69, E70)); {'Idris.TTImp.TTImp.IWithApp', E75, E76, E77} -> (fun (V113, V114, V115) -> ('nested--8161-16058--in--un--updateWith'(V0, V1, V2, V3, V4, V5, V6, V7, V113, V114, [V115 | []])) end(E75, E76, E77)); {'Idris.TTImp.TTImp.IRewrite', E78, E79, E80} -> (fun (V116, V117, V118) -> fun (V119) -> begin (V120 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V117))(V119))), case V120 of {'Idris.Prelude.Types.Left', E81} -> (fun (V121) -> {'Idris.Prelude.Types.Left', V121} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V122) -> begin (V123 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V118))(V119))), case V123 of {'Idris.Prelude.Types.Left', E83} -> (fun (V124) -> {'Idris.Prelude.Types.Left', V124} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V125) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V116, V122, V125}} end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E78, E79, E80)); {'Idris.TTImp.TTImp.IDelayed', E85, E86, E87} -> (fun (V126, V127, V128) -> fun (V129) -> begin (V130 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V128))(V129))), case V130 of {'Idris.Prelude.Types.Left', E88} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V132) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelayed', V126, V127, V132}} end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E85, E86, E87)); {'Idris.TTImp.TTImp.IDelay', E90, E91} -> (fun (V133, V134) -> fun (V135) -> begin (V136 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V134))(V135))), case V136 of {'Idris.Prelude.Types.Left', E92} -> (fun (V137) -> {'Idris.Prelude.Types.Left', V137} end(E92)); {'Idris.Prelude.Types.Right', E93} -> (fun (V138) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelay', V133, V138}} end(E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E90, E91)); {'Idris.TTImp.TTImp.IForce', E94, E95} -> (fun (V139, V140) -> fun (V141) -> begin (V142 = (('nested--8161-16059--in--un--wrhs'(V0, V1, V2, V3, V4, V5, V6, V7, V140))(V141))), case V142 of {'Idris.Prelude.Types.Left', E96} -> (fun (V143) -> {'Idris.Prelude.Types.Left', V143} end(E96)); {'Idris.Prelude.Types.Right', E97} -> (fun (V144) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IForce', V139, V144}} end(E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E94, E95)); _ -> fun (V145) -> {'Idris.Prelude.Types.Right', V8} end end.
'nested--8161-16057--in--un--withApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of [] -> V9; [E0 | E1] -> (fun (V11, V12) -> ('nested--8161-16057--in--un--withApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, {'Idris.TTImp.TTImp.IWithApp', V8, V9, V11}, V12)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--8161-16058--in--un--updateWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V9 of {'Idris.TTImp.TTImp.IWithApp', E14, E15, E16} -> (fun (V11, V12, V13) -> ('nested--8161-16058--in--un--updateWith'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V12, [V13 | V10])) end(E14, E15, E16)); _ -> fun (V14) -> case V10 of [] -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V8, <<"Badly formed \x{27}with\x{27} application"/utf8>>}, V14)); [E0 | E1] -> (fun (V15, V16) -> begin (V23 = ('Idris.Idris2.Core.Context.Log':'un--log'(V7, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"With-app: Matching "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V17) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V17)) end, fun (V18) -> fun (V19) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V18, V19)) end end}, V0)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" against "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V20) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V20)) end, fun (V21) -> fun (V22) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V21, V22)) end end}, V9)))))))) end, V14))), case V23 of {'Idris.Prelude.Types.Left', E2} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V25) -> begin (V26 = (('un--getMatch'(V6, V7, 0, V0, V9))(V14))), case V26 of {'Idris.Prelude.Types.Left', E4} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V28) -> begin (V29 = (('un--getHeadLoc'(V9))(V14))), case V29 of {'Idris.Prelude.Types.Left', E6} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V31) -> begin (V59 = ('Idris.Idris2.Core.Context.Log':'un--log'(V7, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Result: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V32) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V33) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V33)) end, fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V34, V35)) end end}, {'Idris.Prelude.Show.MkShow', fun (V36) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V37) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V37)) end, fun (V38) -> fun (V39) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V38, V39)) end end}, V36)) end, fun (V40) -> fun (V41) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V42) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V42)) end, fun (V43) -> fun (V44) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V43, V44)) end end}, V40, V41)) end end}}, V32)) end, fun (V45) -> fun (V46) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V47) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V47)) end, fun (V48) -> fun (V49) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V48, V49)) end end}, {'Idris.Prelude.Show.MkShow', fun (V50) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V51) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V51)) end, fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V52, V53)) end end}, V50)) end, fun (V54) -> fun (V55) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V56) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V56)) end, fun (V57) -> fun (V58) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V57, V58)) end end}, V54, V55)) end end}}, V45, V46)) end end}, V28)))) end, V14))), case V59 of {'Idris.Prelude.Types.Left', E8} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V61) -> begin (V63 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V31, V3}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V62) -> ('un--getArgMatch'(V8, {'Idris.TTImp.Elab.Check.InExpr'}, 1, V15, V28, V62)) end, V2))))), begin (V169 = ('Idris.Idris2.Core.Context.Log':'un--log'(V7, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"With args for RHS: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V64) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V65) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V66) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V67) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V68) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V68)) end, fun (V69) -> fun (V70) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V69, V70)) end end}, V67)) end, fun (V71) -> fun (V72) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V73) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V73)) end, fun (V74) -> fun (V75) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V74, V75)) end end}, V71, V72)) end end}, V66)) end, fun (V76) -> fun (V77) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V78) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V79) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V79)) end, fun (V80) -> fun (V81) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V80, V81)) end end}, V78)) end, fun (V82) -> fun (V83) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V84) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V84)) end, fun (V85) -> fun (V86) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V85, V86)) end end}, V82, V83)) end end}, V76, V77)) end end}, {'Idris.Prelude.Show.MkShow', fun (V87) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V87)) end, fun (V88) -> fun (V89) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V88, V89)) end end}}, V65)) end, fun (V90) -> fun (V91) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V92) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V93) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V94) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V94)) end, fun (V95) -> fun (V96) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V95, V96)) end end}, V93)) end, fun (V97) -> fun (V98) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V99) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V99)) end, fun (V100) -> fun (V101) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V100, V101)) end end}, V97, V98)) end end}, V92)) end, fun (V102) -> fun (V103) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V104) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V105) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V105)) end, fun (V106) -> fun (V107) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V106, V107)) end end}, V104)) end, fun (V108) -> fun (V109) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V110) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V110)) end, fun (V111) -> fun (V112) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V111, V112)) end end}, V108, V109)) end end}, V102, V103)) end end}, {'Idris.Prelude.Show.MkShow', fun (V113) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V113)) end, fun (V114) -> fun (V115) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V114, V115)) end end}}, V90, V91)) end end}, V64)) end, fun (V116) -> fun (V117) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V118) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V119) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V120) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V121) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V121)) end, fun (V122) -> fun (V123) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V122, V123)) end end}, V120)) end, fun (V124) -> fun (V125) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V126) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V126)) end, fun (V127) -> fun (V128) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V127, V128)) end end}, V124, V125)) end end}, V119)) end, fun (V129) -> fun (V130) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V131) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V132) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V132)) end, fun (V133) -> fun (V134) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V133, V134)) end end}, V131)) end, fun (V135) -> fun (V136) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V137) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V137)) end, fun (V138) -> fun (V139) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V138, V139)) end end}, V135, V136)) end end}, V129, V130)) end end}, {'Idris.Prelude.Show.MkShow', fun (V140) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V140)) end, fun (V141) -> fun (V142) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V141, V142)) end end}}, V118)) end, fun (V143) -> fun (V144) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V145) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V146) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V147) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V147)) end, fun (V148) -> fun (V149) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V148, V149)) end end}, V146)) end, fun (V150) -> fun (V151) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V152) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V152)) end, fun (V153) -> fun (V154) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V153, V154)) end end}, V150, V151)) end end}, V145)) end, fun (V155) -> fun (V156) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(PiInfo $t)'({'Idris.Prelude.Show.MkShow', fun (V157) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V158) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V158)) end, fun (V159) -> fun (V160) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V159, V160)) end end}, V157)) end, fun (V161) -> fun (V162) -> ('Idris.Idris2.TTImp.TTImp':'dn--un--showPrec_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V163) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V163)) end, fun (V164) -> fun (V165) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V164, V165)) end end}, V161, V162)) end end}, V155, V156)) end end}, {'Idris.Prelude.Show.MkShow', fun (V166) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V166)) end, fun (V167) -> fun (V168) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V167, V168)) end end}}, V143, V144)) end end}, V116, V117)) end end}, V2)))) end, V14))), case V169 of {'Idris.Prelude.Types.Left', E10} -> (fun (V170) -> {'Idris.Prelude.Types.Left', V170} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V171) -> begin (V175 = ('Idris.Idris2.Core.Context.Log':'un--log'(V7, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"New RHS: "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V172) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V172)) end, fun (V173) -> fun (V174) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V173, V174)) end end}, V63)))) end, V14))), case V175 of {'Idris.Prelude.Types.Left', E12} -> (fun (V176) -> {'Idris.Prelude.Types.Left', V176} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V177) -> {'Idris.Prelude.Types.Right', ('nested--8161-16057--in--un--withApply'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V63, V16))} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'nested--7565-15556--in--un--dropWithArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V9 of 0 -> fun (V11) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V10, []}} end; _ -> begin (V12 = (V9 - 1)), fun (V13) -> case V10 of {'Idris.TTImp.TTImp.IApp', E0, E1, E2} -> (fun (V14, V15, V16) -> begin (V17 = (('nested--7565-15556--in--un--dropWithArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V12, V15))(V13))), case V17 of {'Idris.Prelude.Types.Left', E3} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V19) -> case V19 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V20, V21) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V20, [V16 | V21]}} end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V6, <<"Badly formed \x{27}with\x{27} clause"/utf8>>}, V13)) end end end end.
'un--withRHS'(V0, V1, V2, V3, V4, V5, V6, V7) -> ('nested--8161-16059--in--un--wrhs'(V7, V6, V5, V4, V3, V2, V1, V0, V6)).
'un--mergeMatches'(V0, V1, V2, V3, V4) -> case V3 of [] -> {'Idris.Prelude.Types.Right', []}; [E0 | E1] -> (fun (V5, V6) -> case V5 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V7, V8) -> begin (V9 = ('un--mergeMatches'(V0, V1, V2, V6, V4))), case V9 of {'Idris.Prelude.Types.Left', E4} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V11) -> case ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V12) -> fun (V13) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V12, V13)) end end, fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V14, V15)) end end}, V7, V11)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', [{'Idris.Builtin.MkPair', V7, V8} | V11]} end()); {'Idris.Prelude.Types.Just', E6} -> (fun (V16) -> begin (V20 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V17) -> case V17 of {'Idris.Prelude.Types.Left', E7} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Right', 0} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--getMatch'(V0, V1, V2, V8, V16)), V4))), case V20 of {'Idris.Prelude.Types.Left', E9} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V22) -> {'Idris.Prelude.Types.Right', V11} end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--matchFail'(V0, V1) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V0, <<"With clause does not match parent"/utf8>>}, V1)).
'un--matchAny'(V0, V1, V2, V3, V4, V5) -> case V4 of [] -> ('un--matchFail'(V2, V5)); [E0 | E1] -> (fun (V6, V7) -> case V6 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V8, V9) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(('un--getMatch'(V0, V1, V3, V8, V9)), fun (V10) -> fun (V11) -> ('un--matchAny'(V0, V1, V2, V3, V7, V11)) end end, V5)) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--matchAll'(V0, V1, V2, V3, V4) -> case V3 of [] -> {'Idris.Prelude.Types.Right', []}; [E0 | E1] -> (fun (V5, V6) -> case V5 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V7, V8) -> begin (V9 = ('un--matchAll'(V0, V1, V2, V6, V4))), case V9 of {'Idris.Prelude.Types.Left', E4} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V11) -> begin (V12 = (('un--getMatch'(V0, V1, V2, V7, V8))(V4))), case V12 of {'Idris.Prelude.Types.Left', E6} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V14) -> ('un--mergeMatches'(V0, V1, V2, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V14, V11)), V4)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getNewLHS'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> begin (V9 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V2))), fun (V10) -> begin (V11 = (('nested--7565-15556--in--un--dropWithArgs'(V8, V7, V6, V5, V4, V3, V2, V1, V0, V3, V8))(V10))), case V11 of {'Idris.Prelude.Types.Left', E0} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V13) -> case V13 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V14, V15) -> begin (V16 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V0, V10))), case V16 of {'Idris.Prelude.Types.Left', E4} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V18) -> begin (V19 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V0, 1, V10))), case V19 of {'Idris.Prelude.Types.Left', E6} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V21) -> begin (V22 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V0, 0, V7, V10))), case V22 of {'Idris.Prelude.Types.Left', E8} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V24) -> begin (V25 = {'Idris.Builtin.MkPair', V14, V15}), case V24 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V26, V27) -> begin (V28 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V0, 0, V14, V10))), case V28 of {'Idris.Prelude.Types.Left', E12} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V30) -> begin (V31 = {'Idris.Builtin.MkPair', V26, V27}), case V30 of {'Idris.Builtin.MkPair', E14, E15} -> (fun (V32, V33) -> begin (V34 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V0, V18, V10))), case V34 of {'Idris.Prelude.Types.Left', E16} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V36) -> begin (V40 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Parent LHS (with implicits): "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V37) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V37)) end, fun (V38) -> fun (V39) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V38, V39)) end end}, V27)))) end, V10))), case V40 of {'Idris.Prelude.Types.Left', E18} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V42) -> begin (V46 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"declare.def.clause.with"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Modified LHS (with implicits): "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V43) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V43)) end, fun (V44) -> fun (V45) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V44, V45)) end end}, V33)))) end, V10))), case V46 of {'Idris.Prelude.Types.Left', E20} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V48) -> begin (V49 = {'Idris.Builtin.MkPair', V32, V33}), ('case--case block in case block in case block in getNewLHS-15819'(V8, V7, V6, V5, V4, V3, V2, V1, V0, V9, V14, V15, V25, V18, V26, V27, V31, V32, V33, V49, ('Idris.Idris2.Prelude.Types.List':'un--reverse'(V15)), V10)) end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--getMatch'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.TTImp.TTImp.IBindVar', E185, E186} -> (fun (V5, V6) -> fun (V7) -> case V4 of {'Idris.TTImp.TTImp.IBindVar', E187, E188} -> (fun (V8, V9) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V10) -> case V10 of {'Idris.Prelude.Types.Left', E189} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E189)); {'Idris.Prelude.Types.Right', E190} -> (fun (V12) -> {'Idris.Prelude.Types.Right', [{'Idris.Builtin.MkPair', V6, V4} | []]} end(E190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V13) -> ('un--addAlias'(V0, V1, V8, V5, V13)) end, V7)) end(E187, E188)); _ -> {'Idris.Prelude.Types.Right', [{'Idris.Builtin.MkPair', V6, V4} | []]} end end end(E185, E186)); {'Idris.TTImp.TTImp.Implicit', E191, E192} -> (fun (V14, V15) -> fun (V16) -> {'Idris.Prelude.Types.Right', []} end end(E191, E192)); {'Idris.TTImp.TTImp.IVar', E193, E194} -> (fun (V17, V18) -> case V18 of {'Idris.Core.Name.NS', E384, E385} -> (fun (V19, V20) -> case V4 of {'Idris.TTImp.TTImp.IVar', E575, E576} -> (fun (V21, V22) -> case V22 of {'Idris.Core.Name.NS', E579, E580} -> (fun (V23, V24) -> fun (V25) -> case case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V20, V24)) of 1 -> ('Idris.Idris2.Core.Name.Namespace':'un--isParentOf'(V23, V19)); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V26) -> case V26 of {'Idris.Prelude.Types.Left', E581} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E581)); {'Idris.Prelude.Types.Right', E582} -> (fun (V28) -> {'Idris.Prelude.Types.Right', []} end(E582)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V29) -> ('un--addAlias'(V0, V1, V21, V17, V29)) end, V25)); 0 -> ('un--matchFail'(V21, V25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E579, E580)); _ -> fun (V30) -> case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V20, V22)) of 1 -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V31) -> case V31 of {'Idris.Prelude.Types.Left', E577} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E577)); {'Idris.Prelude.Types.Right', E578} -> (fun (V33) -> {'Idris.Prelude.Types.Right', []} end(E578)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V34) -> ('un--addAlias'(V0, V1, V21, V17, V34)) end, V30)); 0 -> ('un--matchFail'(V21, V30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E575, E576)); _ -> case V4 of {'Idris.TTImp.TTImp.IVar', E571, E572} -> (fun (V35, V36) -> fun (V37) -> case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V18, V36)) of 1 -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V38) -> case V38 of {'Idris.Prelude.Types.Left', E573} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E573)); {'Idris.Prelude.Types.Right', E574} -> (fun (V40) -> {'Idris.Prelude.Types.Right', []} end(E574)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V41) -> ('un--addAlias'(V0, V1, V35, V17, V41)) end, V37)); 0 -> ('un--matchFail'(V35, V37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E571, E572)); _ -> case V2 of 1 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E500, E501, E502, E503} -> (fun (V42, V43, V44, V45) -> fun (V46) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V43, V4} | [{'Idris.Builtin.MkPair', V45, V45} | []]], V46)) end end(E500, E501, E502, E503)); {'Idris.TTImp.TTImp.IAutoApp', E504, E505, E506} -> (fun (V47, V48, V49) -> fun (V50) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V48, V4} | [{'Idris.Builtin.MkPair', V49, V49} | []]], V50)) end end(E504, E505, E506)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E493, E494, E495, E496} -> (fun (V51, V52, V53, V54) -> fun (V55) -> ('un--matchFail'(V51, V55)) end end(E493, E494, E495, E496)); {'Idris.TTImp.TTImp.IAutoApp', E497, E498, E499} -> (fun (V56, V57, V58) -> fun (V59) -> ('un--matchFail'(V56, V59)) end end(E497, E498, E499)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E454, E455, E456} -> (fun (V60, V61, V62) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E468, E469, E470} -> (fun (V63, V64, V65) -> fun (V66) -> ('un--matchAny'(V0, V1, V60, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V62, V65)), V66)) end end(E468, E469, E470)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E463, E464, E465, E466, E467} -> (fun (V67, V68, V69, V70, V71) -> ('un--getMatch'(V0, V1, V2, V3, V71)) end(E463, E464, E465, E466, E467)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E457} -> (fun (V72) -> fun (V73) -> case V4 of {'Idris.TTImp.TTImp.IType', E458} -> (fun (V74) -> {'Idris.Prelude.Types.Right', []} end(E458)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V73)) end end end(E457)); {'Idris.TTImp.TTImp.IPrimVal', E459, E460} -> (fun (V75, V76) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E461, E462} -> (fun (V77, V78) -> fun (V79) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V76, V78)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V75, V79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E461, E462)); _ -> fun (V80) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V80)) end end end(E459, E460)); _ -> fun (V81) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V81)) end end end end end(E454, E455, E456)); {'Idris.TTImp.TTImp.IAs', E471, E472, E473, E474, E475} -> (fun (V82, V83, V84, V85, V86) -> case V85 of {'Idris.Core.Name.UN', E476} -> (fun (V87) -> case V87 of {'Idris.Core.Name.Basic', E477} -> (fun (V88) -> case V4 of {'Idris.TTImp.TTImp.IAs', E480, E481, E482, E483, E484} -> (fun (V89, V90, V91, V92, V93) -> fun (V94) -> case V92 of {'Idris.Core.Name.UN', E487} -> (fun (V95) -> case V95 of {'Idris.Core.Name.Basic', E490} -> (fun (V96) -> begin (V97 = (('un--getMatch'(V0, V1, V2, V86, V93))(V94))), case V97 of {'Idris.Prelude.Types.Left', E491} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E491)); {'Idris.Prelude.Types.Right', E492} -> (fun (V99) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V88, {'Idris.TTImp.TTImp.IBindVar', V90, V96}} | V99], V94)) end(E492)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E490)); _ -> begin (V100 = (('un--getMatch'(V0, V1, V2, V86, V4))(V94))), case V100 of {'Idris.Prelude.Types.Left', E488} -> (fun (V101) -> {'Idris.Prelude.Types.Left', V101} end(E488)); {'Idris.Prelude.Types.Right', E489} -> (fun (V102) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V88, V4} | V102], V94)) end(E489)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E487)); _ -> begin (V103 = (('un--getMatch'(V0, V1, V2, V86, V4))(V94))), case V103 of {'Idris.Prelude.Types.Left', E485} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E485)); {'Idris.Prelude.Types.Right', E486} -> (fun (V105) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V88, V4} | V105], V94)) end(E486)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E480, E481, E482, E483, E484)); _ -> fun (V106) -> begin (V107 = (('un--getMatch'(V0, V1, V2, V86, V4))(V106))), case V107 of {'Idris.Prelude.Types.Left', E478} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E478)); {'Idris.Prelude.Types.Right', E479} -> (fun (V109) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V88, V4} | V109], V106)) end(E479)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E477)); _ -> ('un--getMatch'(V0, V1, V2, V86, V4)) end end(E476)); _ -> ('un--getMatch'(V0, V1, V2, V86, V4)) end end(E471, E472, E473, E474, E475)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E449, E450, E451, E452, E453} -> (fun (V110, V111, V112, V113, V114) -> ('un--getMatch'(V0, V1, V2, V3, V114)) end(E449, E450, E451, E452, E453)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E443} -> (fun (V115) -> fun (V116) -> case V4 of {'Idris.TTImp.TTImp.IType', E444} -> (fun (V117) -> {'Idris.Prelude.Types.Right', []} end(E444)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V116)) end end end(E443)); {'Idris.TTImp.TTImp.IPrimVal', E445, E446} -> (fun (V118, V119) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E447, E448} -> (fun (V120, V121) -> fun (V122) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V119, V121)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V118, V122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E447, E448)); _ -> fun (V123) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V123)) end end end(E445, E446)); _ -> fun (V124) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V124)) end end end end end end; 0 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E564, E565, E566, E567} -> (fun (V125, V126, V127, V128) -> ('un--getMatch'(V0, V1, 0, V126, V126)) end(E564, E565, E566, E567)); {'Idris.TTImp.TTImp.IAutoApp', E568, E569, E570} -> (fun (V129, V130, V131) -> ('un--getMatch'(V0, V1, 0, V130, V130)) end(E568, E569, E570)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E557, E558, E559, E560} -> (fun (V132, V133, V134, V135) -> fun (V136) -> ('un--matchFail'(V132, V136)) end end(E557, E558, E559, E560)); {'Idris.TTImp.TTImp.IAutoApp', E561, E562, E563} -> (fun (V137, V138, V139) -> fun (V140) -> ('un--matchFail'(V137, V140)) end end(E561, E562, E563)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E518, E519, E520} -> (fun (V141, V142, V143) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E532, E533, E534} -> (fun (V144, V145, V146) -> fun (V147) -> ('un--matchAny'(V0, V1, V141, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V143, V146)), V147)) end end(E532, E533, E534)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E527, E528, E529, E530, E531} -> (fun (V148, V149, V150, V151, V152) -> ('un--getMatch'(V0, V1, V2, V3, V152)) end(E527, E528, E529, E530, E531)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E521} -> (fun (V153) -> fun (V154) -> case V4 of {'Idris.TTImp.TTImp.IType', E522} -> (fun (V155) -> {'Idris.Prelude.Types.Right', []} end(E522)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V154)) end end end(E521)); {'Idris.TTImp.TTImp.IPrimVal', E523, E524} -> (fun (V156, V157) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E525, E526} -> (fun (V158, V159) -> fun (V160) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V157, V159)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V156, V160)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E525, E526)); _ -> fun (V161) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V161)) end end end(E523, E524)); _ -> fun (V162) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V162)) end end end end end(E518, E519, E520)); {'Idris.TTImp.TTImp.IAs', E535, E536, E537, E538, E539} -> (fun (V163, V164, V165, V166, V167) -> case V166 of {'Idris.Core.Name.UN', E540} -> (fun (V168) -> case V168 of {'Idris.Core.Name.Basic', E541} -> (fun (V169) -> case V4 of {'Idris.TTImp.TTImp.IAs', E544, E545, E546, E547, E548} -> (fun (V170, V171, V172, V173, V174) -> fun (V175) -> case V173 of {'Idris.Core.Name.UN', E551} -> (fun (V176) -> case V176 of {'Idris.Core.Name.Basic', E554} -> (fun (V177) -> begin (V178 = (('un--getMatch'(V0, V1, V2, V167, V174))(V175))), case V178 of {'Idris.Prelude.Types.Left', E555} -> (fun (V179) -> {'Idris.Prelude.Types.Left', V179} end(E555)); {'Idris.Prelude.Types.Right', E556} -> (fun (V180) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V169, {'Idris.TTImp.TTImp.IBindVar', V171, V177}} | V180], V175)) end(E556)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E554)); _ -> begin (V181 = (('un--getMatch'(V0, V1, V2, V167, V4))(V175))), case V181 of {'Idris.Prelude.Types.Left', E552} -> (fun (V182) -> {'Idris.Prelude.Types.Left', V182} end(E552)); {'Idris.Prelude.Types.Right', E553} -> (fun (V183) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V169, V4} | V183], V175)) end(E553)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E551)); _ -> begin (V184 = (('un--getMatch'(V0, V1, V2, V167, V4))(V175))), case V184 of {'Idris.Prelude.Types.Left', E549} -> (fun (V185) -> {'Idris.Prelude.Types.Left', V185} end(E549)); {'Idris.Prelude.Types.Right', E550} -> (fun (V186) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V169, V4} | V186], V175)) end(E550)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E544, E545, E546, E547, E548)); _ -> fun (V187) -> begin (V188 = (('un--getMatch'(V0, V1, V2, V167, V4))(V187))), case V188 of {'Idris.Prelude.Types.Left', E542} -> (fun (V189) -> {'Idris.Prelude.Types.Left', V189} end(E542)); {'Idris.Prelude.Types.Right', E543} -> (fun (V190) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V169, V4} | V190], V187)) end(E543)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E541)); _ -> ('un--getMatch'(V0, V1, V2, V167, V4)) end end(E540)); _ -> ('un--getMatch'(V0, V1, V2, V167, V4)) end end(E535, E536, E537, E538, E539)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E513, E514, E515, E516, E517} -> (fun (V191, V192, V193, V194, V195) -> ('un--getMatch'(V0, V1, V2, V3, V195)) end(E513, E514, E515, E516, E517)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E507} -> (fun (V196) -> fun (V197) -> case V4 of {'Idris.TTImp.TTImp.IType', E508} -> (fun (V198) -> {'Idris.Prelude.Types.Right', []} end(E508)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V197)) end end end(E507)); {'Idris.TTImp.TTImp.IPrimVal', E509, E510} -> (fun (V199, V200) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E511, E512} -> (fun (V201, V202) -> fun (V203) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V200, V202)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V199, V203)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E511, E512)); _ -> fun (V204) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V204)) end end end(E509, E510)); _ -> fun (V205) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V205)) end end end end end end; _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E436, E437, E438, E439} -> (fun (V206, V207, V208, V209) -> fun (V210) -> ('un--matchFail'(V206, V210)) end end(E436, E437, E438, E439)); {'Idris.TTImp.TTImp.IAutoApp', E440, E441, E442} -> (fun (V211, V212, V213) -> fun (V214) -> ('un--matchFail'(V211, V214)) end end(E440, E441, E442)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E397, E398, E399} -> (fun (V215, V216, V217) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E411, E412, E413} -> (fun (V218, V219, V220) -> fun (V221) -> ('un--matchAny'(V0, V1, V215, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V217, V220)), V221)) end end(E411, E412, E413)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E406, E407, E408, E409, E410} -> (fun (V222, V223, V224, V225, V226) -> ('un--getMatch'(V0, V1, V2, V3, V226)) end(E406, E407, E408, E409, E410)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E400} -> (fun (V227) -> fun (V228) -> case V4 of {'Idris.TTImp.TTImp.IType', E401} -> (fun (V229) -> {'Idris.Prelude.Types.Right', []} end(E401)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V228)) end end end(E400)); {'Idris.TTImp.TTImp.IPrimVal', E402, E403} -> (fun (V230, V231) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E404, E405} -> (fun (V232, V233) -> fun (V234) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V231, V233)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V230, V234)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E404, E405)); _ -> fun (V235) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V235)) end end end(E402, E403)); _ -> fun (V236) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V236)) end end end end end(E397, E398, E399)); {'Idris.TTImp.TTImp.IAs', E414, E415, E416, E417, E418} -> (fun (V237, V238, V239, V240, V241) -> case V240 of {'Idris.Core.Name.UN', E419} -> (fun (V242) -> case V242 of {'Idris.Core.Name.Basic', E420} -> (fun (V243) -> case V4 of {'Idris.TTImp.TTImp.IAs', E423, E424, E425, E426, E427} -> (fun (V244, V245, V246, V247, V248) -> fun (V249) -> case V247 of {'Idris.Core.Name.UN', E430} -> (fun (V250) -> case V250 of {'Idris.Core.Name.Basic', E433} -> (fun (V251) -> begin (V252 = (('un--getMatch'(V0, V1, V2, V241, V248))(V249))), case V252 of {'Idris.Prelude.Types.Left', E434} -> (fun (V253) -> {'Idris.Prelude.Types.Left', V253} end(E434)); {'Idris.Prelude.Types.Right', E435} -> (fun (V254) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V243, {'Idris.TTImp.TTImp.IBindVar', V245, V251}} | V254], V249)) end(E435)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E433)); _ -> begin (V255 = (('un--getMatch'(V0, V1, V2, V241, V4))(V249))), case V255 of {'Idris.Prelude.Types.Left', E431} -> (fun (V256) -> {'Idris.Prelude.Types.Left', V256} end(E431)); {'Idris.Prelude.Types.Right', E432} -> (fun (V257) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V243, V4} | V257], V249)) end(E432)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E430)); _ -> begin (V258 = (('un--getMatch'(V0, V1, V2, V241, V4))(V249))), case V258 of {'Idris.Prelude.Types.Left', E428} -> (fun (V259) -> {'Idris.Prelude.Types.Left', V259} end(E428)); {'Idris.Prelude.Types.Right', E429} -> (fun (V260) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V243, V4} | V260], V249)) end(E429)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E423, E424, E425, E426, E427)); _ -> fun (V261) -> begin (V262 = (('un--getMatch'(V0, V1, V2, V241, V4))(V261))), case V262 of {'Idris.Prelude.Types.Left', E421} -> (fun (V263) -> {'Idris.Prelude.Types.Left', V263} end(E421)); {'Idris.Prelude.Types.Right', E422} -> (fun (V264) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V243, V4} | V264], V261)) end(E422)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E420)); _ -> ('un--getMatch'(V0, V1, V2, V241, V4)) end end(E419)); _ -> ('un--getMatch'(V0, V1, V2, V241, V4)) end end(E414, E415, E416, E417, E418)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E392, E393, E394, E395, E396} -> (fun (V265, V266, V267, V268, V269) -> ('un--getMatch'(V0, V1, V2, V3, V269)) end(E392, E393, E394, E395, E396)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E386} -> (fun (V270) -> fun (V271) -> case V4 of {'Idris.TTImp.TTImp.IType', E387} -> (fun (V272) -> {'Idris.Prelude.Types.Right', []} end(E387)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V271)) end end end(E386)); {'Idris.TTImp.TTImp.IPrimVal', E388, E389} -> (fun (V273, V274) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E390, E391} -> (fun (V275, V276) -> fun (V277) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V274, V276)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V273, V277)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E390, E391)); _ -> fun (V278) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V278)) end end end(E388, E389)); _ -> fun (V279) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V279)) end end end end end end end end end(E384, E385)); _ -> case V4 of {'Idris.TTImp.TTImp.IVar', E380, E381} -> (fun (V280, V281) -> fun (V282) -> case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V18, V281)) of 1 -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V283) -> case V283 of {'Idris.Prelude.Types.Left', E382} -> (fun (V284) -> {'Idris.Prelude.Types.Left', V284} end(E382)); {'Idris.Prelude.Types.Right', E383} -> (fun (V285) -> {'Idris.Prelude.Types.Right', []} end(E383)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V286) -> ('un--addAlias'(V0, V1, V280, V17, V286)) end, V282)); 0 -> ('un--matchFail'(V280, V282)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E380, E381)); _ -> case V2 of 1 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E309, E310, E311, E312} -> (fun (V287, V288, V289, V290) -> fun (V291) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V288, V4} | [{'Idris.Builtin.MkPair', V290, V290} | []]], V291)) end end(E309, E310, E311, E312)); {'Idris.TTImp.TTImp.IAutoApp', E313, E314, E315} -> (fun (V292, V293, V294) -> fun (V295) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V293, V4} | [{'Idris.Builtin.MkPair', V294, V294} | []]], V295)) end end(E313, E314, E315)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E302, E303, E304, E305} -> (fun (V296, V297, V298, V299) -> fun (V300) -> ('un--matchFail'(V296, V300)) end end(E302, E303, E304, E305)); {'Idris.TTImp.TTImp.IAutoApp', E306, E307, E308} -> (fun (V301, V302, V303) -> fun (V304) -> ('un--matchFail'(V301, V304)) end end(E306, E307, E308)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E263, E264, E265} -> (fun (V305, V306, V307) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E277, E278, E279} -> (fun (V308, V309, V310) -> fun (V311) -> ('un--matchAny'(V0, V1, V305, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V307, V310)), V311)) end end(E277, E278, E279)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E272, E273, E274, E275, E276} -> (fun (V312, V313, V314, V315, V316) -> ('un--getMatch'(V0, V1, V2, V3, V316)) end(E272, E273, E274, E275, E276)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E266} -> (fun (V317) -> fun (V318) -> case V4 of {'Idris.TTImp.TTImp.IType', E267} -> (fun (V319) -> {'Idris.Prelude.Types.Right', []} end(E267)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V318)) end end end(E266)); {'Idris.TTImp.TTImp.IPrimVal', E268, E269} -> (fun (V320, V321) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E270, E271} -> (fun (V322, V323) -> fun (V324) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V321, V323)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V320, V324)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E270, E271)); _ -> fun (V325) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V325)) end end end(E268, E269)); _ -> fun (V326) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V326)) end end end end end(E263, E264, E265)); {'Idris.TTImp.TTImp.IAs', E280, E281, E282, E283, E284} -> (fun (V327, V328, V329, V330, V331) -> case V330 of {'Idris.Core.Name.UN', E285} -> (fun (V332) -> case V332 of {'Idris.Core.Name.Basic', E286} -> (fun (V333) -> case V4 of {'Idris.TTImp.TTImp.IAs', E289, E290, E291, E292, E293} -> (fun (V334, V335, V336, V337, V338) -> fun (V339) -> case V337 of {'Idris.Core.Name.UN', E296} -> (fun (V340) -> case V340 of {'Idris.Core.Name.Basic', E299} -> (fun (V341) -> begin (V342 = (('un--getMatch'(V0, V1, V2, V331, V338))(V339))), case V342 of {'Idris.Prelude.Types.Left', E300} -> (fun (V343) -> {'Idris.Prelude.Types.Left', V343} end(E300)); {'Idris.Prelude.Types.Right', E301} -> (fun (V344) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V333, {'Idris.TTImp.TTImp.IBindVar', V335, V341}} | V344], V339)) end(E301)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E299)); _ -> begin (V345 = (('un--getMatch'(V0, V1, V2, V331, V4))(V339))), case V345 of {'Idris.Prelude.Types.Left', E297} -> (fun (V346) -> {'Idris.Prelude.Types.Left', V346} end(E297)); {'Idris.Prelude.Types.Right', E298} -> (fun (V347) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V333, V4} | V347], V339)) end(E298)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E296)); _ -> begin (V348 = (('un--getMatch'(V0, V1, V2, V331, V4))(V339))), case V348 of {'Idris.Prelude.Types.Left', E294} -> (fun (V349) -> {'Idris.Prelude.Types.Left', V349} end(E294)); {'Idris.Prelude.Types.Right', E295} -> (fun (V350) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V333, V4} | V350], V339)) end(E295)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E289, E290, E291, E292, E293)); _ -> fun (V351) -> begin (V352 = (('un--getMatch'(V0, V1, V2, V331, V4))(V351))), case V352 of {'Idris.Prelude.Types.Left', E287} -> (fun (V353) -> {'Idris.Prelude.Types.Left', V353} end(E287)); {'Idris.Prelude.Types.Right', E288} -> (fun (V354) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V333, V4} | V354], V351)) end(E288)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E286)); _ -> ('un--getMatch'(V0, V1, V2, V331, V4)) end end(E285)); _ -> ('un--getMatch'(V0, V1, V2, V331, V4)) end end(E280, E281, E282, E283, E284)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E258, E259, E260, E261, E262} -> (fun (V355, V356, V357, V358, V359) -> ('un--getMatch'(V0, V1, V2, V3, V359)) end(E258, E259, E260, E261, E262)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E252} -> (fun (V360) -> fun (V361) -> case V4 of {'Idris.TTImp.TTImp.IType', E253} -> (fun (V362) -> {'Idris.Prelude.Types.Right', []} end(E253)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V361)) end end end(E252)); {'Idris.TTImp.TTImp.IPrimVal', E254, E255} -> (fun (V363, V364) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E256, E257} -> (fun (V365, V366) -> fun (V367) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V364, V366)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V363, V367)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E256, E257)); _ -> fun (V368) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V368)) end end end(E254, E255)); _ -> fun (V369) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V369)) end end end end end end; 0 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E373, E374, E375, E376} -> (fun (V370, V371, V372, V373) -> ('un--getMatch'(V0, V1, 0, V371, V371)) end(E373, E374, E375, E376)); {'Idris.TTImp.TTImp.IAutoApp', E377, E378, E379} -> (fun (V374, V375, V376) -> ('un--getMatch'(V0, V1, 0, V375, V375)) end(E377, E378, E379)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E366, E367, E368, E369} -> (fun (V377, V378, V379, V380) -> fun (V381) -> ('un--matchFail'(V377, V381)) end end(E366, E367, E368, E369)); {'Idris.TTImp.TTImp.IAutoApp', E370, E371, E372} -> (fun (V382, V383, V384) -> fun (V385) -> ('un--matchFail'(V382, V385)) end end(E370, E371, E372)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E327, E328, E329} -> (fun (V386, V387, V388) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E341, E342, E343} -> (fun (V389, V390, V391) -> fun (V392) -> ('un--matchAny'(V0, V1, V386, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V388, V391)), V392)) end end(E341, E342, E343)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E336, E337, E338, E339, E340} -> (fun (V393, V394, V395, V396, V397) -> ('un--getMatch'(V0, V1, V2, V3, V397)) end(E336, E337, E338, E339, E340)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E330} -> (fun (V398) -> fun (V399) -> case V4 of {'Idris.TTImp.TTImp.IType', E331} -> (fun (V400) -> {'Idris.Prelude.Types.Right', []} end(E331)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V399)) end end end(E330)); {'Idris.TTImp.TTImp.IPrimVal', E332, E333} -> (fun (V401, V402) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E334, E335} -> (fun (V403, V404) -> fun (V405) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V402, V404)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V401, V405)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E334, E335)); _ -> fun (V406) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V406)) end end end(E332, E333)); _ -> fun (V407) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V407)) end end end end end(E327, E328, E329)); {'Idris.TTImp.TTImp.IAs', E344, E345, E346, E347, E348} -> (fun (V408, V409, V410, V411, V412) -> case V411 of {'Idris.Core.Name.UN', E349} -> (fun (V413) -> case V413 of {'Idris.Core.Name.Basic', E350} -> (fun (V414) -> case V4 of {'Idris.TTImp.TTImp.IAs', E353, E354, E355, E356, E357} -> (fun (V415, V416, V417, V418, V419) -> fun (V420) -> case V418 of {'Idris.Core.Name.UN', E360} -> (fun (V421) -> case V421 of {'Idris.Core.Name.Basic', E363} -> (fun (V422) -> begin (V423 = (('un--getMatch'(V0, V1, V2, V412, V419))(V420))), case V423 of {'Idris.Prelude.Types.Left', E364} -> (fun (V424) -> {'Idris.Prelude.Types.Left', V424} end(E364)); {'Idris.Prelude.Types.Right', E365} -> (fun (V425) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V414, {'Idris.TTImp.TTImp.IBindVar', V416, V422}} | V425], V420)) end(E365)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E363)); _ -> begin (V426 = (('un--getMatch'(V0, V1, V2, V412, V4))(V420))), case V426 of {'Idris.Prelude.Types.Left', E361} -> (fun (V427) -> {'Idris.Prelude.Types.Left', V427} end(E361)); {'Idris.Prelude.Types.Right', E362} -> (fun (V428) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V414, V4} | V428], V420)) end(E362)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E360)); _ -> begin (V429 = (('un--getMatch'(V0, V1, V2, V412, V4))(V420))), case V429 of {'Idris.Prelude.Types.Left', E358} -> (fun (V430) -> {'Idris.Prelude.Types.Left', V430} end(E358)); {'Idris.Prelude.Types.Right', E359} -> (fun (V431) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V414, V4} | V431], V420)) end(E359)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E353, E354, E355, E356, E357)); _ -> fun (V432) -> begin (V433 = (('un--getMatch'(V0, V1, V2, V412, V4))(V432))), case V433 of {'Idris.Prelude.Types.Left', E351} -> (fun (V434) -> {'Idris.Prelude.Types.Left', V434} end(E351)); {'Idris.Prelude.Types.Right', E352} -> (fun (V435) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V414, V4} | V435], V432)) end(E352)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E350)); _ -> ('un--getMatch'(V0, V1, V2, V412, V4)) end end(E349)); _ -> ('un--getMatch'(V0, V1, V2, V412, V4)) end end(E344, E345, E346, E347, E348)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E322, E323, E324, E325, E326} -> (fun (V436, V437, V438, V439, V440) -> ('un--getMatch'(V0, V1, V2, V3, V440)) end(E322, E323, E324, E325, E326)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E316} -> (fun (V441) -> fun (V442) -> case V4 of {'Idris.TTImp.TTImp.IType', E317} -> (fun (V443) -> {'Idris.Prelude.Types.Right', []} end(E317)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V442)) end end end(E316)); {'Idris.TTImp.TTImp.IPrimVal', E318, E319} -> (fun (V444, V445) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E320, E321} -> (fun (V446, V447) -> fun (V448) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V445, V447)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V444, V448)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E320, E321)); _ -> fun (V449) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V449)) end end end(E318, E319)); _ -> fun (V450) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V450)) end end end end end end; _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E245, E246, E247, E248} -> (fun (V451, V452, V453, V454) -> fun (V455) -> ('un--matchFail'(V451, V455)) end end(E245, E246, E247, E248)); {'Idris.TTImp.TTImp.IAutoApp', E249, E250, E251} -> (fun (V456, V457, V458) -> fun (V459) -> ('un--matchFail'(V456, V459)) end end(E249, E250, E251)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E206, E207, E208} -> (fun (V460, V461, V462) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E220, E221, E222} -> (fun (V463, V464, V465) -> fun (V466) -> ('un--matchAny'(V0, V1, V460, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V462, V465)), V466)) end end(E220, E221, E222)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E215, E216, E217, E218, E219} -> (fun (V467, V468, V469, V470, V471) -> ('un--getMatch'(V0, V1, V2, V3, V471)) end(E215, E216, E217, E218, E219)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E209} -> (fun (V472) -> fun (V473) -> case V4 of {'Idris.TTImp.TTImp.IType', E210} -> (fun (V474) -> {'Idris.Prelude.Types.Right', []} end(E210)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V473)) end end end(E209)); {'Idris.TTImp.TTImp.IPrimVal', E211, E212} -> (fun (V475, V476) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E213, E214} -> (fun (V477, V478) -> fun (V479) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V476, V478)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V475, V479)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E213, E214)); _ -> fun (V480) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V480)) end end end(E211, E212)); _ -> fun (V481) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V481)) end end end end end(E206, E207, E208)); {'Idris.TTImp.TTImp.IAs', E223, E224, E225, E226, E227} -> (fun (V482, V483, V484, V485, V486) -> case V485 of {'Idris.Core.Name.UN', E228} -> (fun (V487) -> case V487 of {'Idris.Core.Name.Basic', E229} -> (fun (V488) -> case V4 of {'Idris.TTImp.TTImp.IAs', E232, E233, E234, E235, E236} -> (fun (V489, V490, V491, V492, V493) -> fun (V494) -> case V492 of {'Idris.Core.Name.UN', E239} -> (fun (V495) -> case V495 of {'Idris.Core.Name.Basic', E242} -> (fun (V496) -> begin (V497 = (('un--getMatch'(V0, V1, V2, V486, V493))(V494))), case V497 of {'Idris.Prelude.Types.Left', E243} -> (fun (V498) -> {'Idris.Prelude.Types.Left', V498} end(E243)); {'Idris.Prelude.Types.Right', E244} -> (fun (V499) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V488, {'Idris.TTImp.TTImp.IBindVar', V490, V496}} | V499], V494)) end(E244)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E242)); _ -> begin (V500 = (('un--getMatch'(V0, V1, V2, V486, V4))(V494))), case V500 of {'Idris.Prelude.Types.Left', E240} -> (fun (V501) -> {'Idris.Prelude.Types.Left', V501} end(E240)); {'Idris.Prelude.Types.Right', E241} -> (fun (V502) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V488, V4} | V502], V494)) end(E241)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E239)); _ -> begin (V503 = (('un--getMatch'(V0, V1, V2, V486, V4))(V494))), case V503 of {'Idris.Prelude.Types.Left', E237} -> (fun (V504) -> {'Idris.Prelude.Types.Left', V504} end(E237)); {'Idris.Prelude.Types.Right', E238} -> (fun (V505) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V488, V4} | V505], V494)) end(E238)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E232, E233, E234, E235, E236)); _ -> fun (V506) -> begin (V507 = (('un--getMatch'(V0, V1, V2, V486, V4))(V506))), case V507 of {'Idris.Prelude.Types.Left', E230} -> (fun (V508) -> {'Idris.Prelude.Types.Left', V508} end(E230)); {'Idris.Prelude.Types.Right', E231} -> (fun (V509) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V488, V4} | V509], V506)) end(E231)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E229)); _ -> ('un--getMatch'(V0, V1, V2, V486, V4)) end end(E228)); _ -> ('un--getMatch'(V0, V1, V2, V486, V4)) end end(E223, E224, E225, E226, E227)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E201, E202, E203, E204, E205} -> (fun (V510, V511, V512, V513, V514) -> ('un--getMatch'(V0, V1, V2, V3, V514)) end(E201, E202, E203, E204, E205)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E195} -> (fun (V515) -> fun (V516) -> case V4 of {'Idris.TTImp.TTImp.IType', E196} -> (fun (V517) -> {'Idris.Prelude.Types.Right', []} end(E196)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V516)) end end end(E195)); {'Idris.TTImp.TTImp.IPrimVal', E197, E198} -> (fun (V518, V519) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E199, E200} -> (fun (V520, V521) -> fun (V522) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V519, V521)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V518, V522)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E199, E200)); _ -> fun (V523) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V523)) end end end(E197, E198)); _ -> fun (V524) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V524)) end end end end end end end end end(E193, E194)); {'Idris.TTImp.TTImp.IPi', E583, E584, E585, E586, E587, E588} -> (fun (V525, V526, V527, V528, V529, V530) -> case V4 of {'Idris.TTImp.TTImp.IPi', E774, E775, E776, E777, E778, E779} -> (fun (V531, V532, V533, V534, V535, V536) -> case case ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--==_Eq_ZeroOneOmega'(V526, V532)) of 1 -> case ('Idris.Idris2.Core.TT':'un--eqPiInfoBy'(fun (V537) -> fun (V538) -> 1 end end, V527, V533)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_(Maybe $a)'({'Idris.Prelude.EqOrd.MkEq', fun (V539) -> fun (V540) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V539, V540)) end end, fun (V541) -> fun (V542) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V541, V542)) end end}, V528, V534)); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> fun (V543) -> ('un--matchAll'(V0, V1, V2, [{'Idris.Builtin.MkPair', V529, V535} | [{'Idris.Builtin.MkPair', V530, V536} | []]], V543)) end; 0 -> fun (V544) -> ('un--matchFail'(V531, V544)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E774, E775, E776, E777, E778, E779)); _ -> case V2 of 1 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E703, E704, E705, E706} -> (fun (V545, V546, V547, V548) -> fun (V549) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V546, V4} | [{'Idris.Builtin.MkPair', V548, V548} | []]], V549)) end end(E703, E704, E705, E706)); {'Idris.TTImp.TTImp.IAutoApp', E707, E708, E709} -> (fun (V550, V551, V552) -> fun (V553) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V551, V4} | [{'Idris.Builtin.MkPair', V552, V552} | []]], V553)) end end(E707, E708, E709)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E696, E697, E698, E699} -> (fun (V554, V555, V556, V557) -> fun (V558) -> ('un--matchFail'(V554, V558)) end end(E696, E697, E698, E699)); {'Idris.TTImp.TTImp.IAutoApp', E700, E701, E702} -> (fun (V559, V560, V561) -> fun (V562) -> ('un--matchFail'(V559, V562)) end end(E700, E701, E702)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E657, E658, E659} -> (fun (V563, V564, V565) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E671, E672, E673} -> (fun (V566, V567, V568) -> fun (V569) -> ('un--matchAny'(V0, V1, V563, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V565, V568)), V569)) end end(E671, E672, E673)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E666, E667, E668, E669, E670} -> (fun (V570, V571, V572, V573, V574) -> ('un--getMatch'(V0, V1, V2, V3, V574)) end(E666, E667, E668, E669, E670)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E660} -> (fun (V575) -> fun (V576) -> case V4 of {'Idris.TTImp.TTImp.IType', E661} -> (fun (V577) -> {'Idris.Prelude.Types.Right', []} end(E661)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V576)) end end end(E660)); {'Idris.TTImp.TTImp.IPrimVal', E662, E663} -> (fun (V578, V579) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E664, E665} -> (fun (V580, V581) -> fun (V582) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V579, V581)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V578, V582)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E664, E665)); _ -> fun (V583) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V583)) end end end(E662, E663)); _ -> fun (V584) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V584)) end end end end end(E657, E658, E659)); {'Idris.TTImp.TTImp.IAs', E674, E675, E676, E677, E678} -> (fun (V585, V586, V587, V588, V589) -> case V588 of {'Idris.Core.Name.UN', E679} -> (fun (V590) -> case V590 of {'Idris.Core.Name.Basic', E680} -> (fun (V591) -> case V4 of {'Idris.TTImp.TTImp.IAs', E683, E684, E685, E686, E687} -> (fun (V592, V593, V594, V595, V596) -> fun (V597) -> case V595 of {'Idris.Core.Name.UN', E690} -> (fun (V598) -> case V598 of {'Idris.Core.Name.Basic', E693} -> (fun (V599) -> begin (V600 = (('un--getMatch'(V0, V1, V2, V589, V596))(V597))), case V600 of {'Idris.Prelude.Types.Left', E694} -> (fun (V601) -> {'Idris.Prelude.Types.Left', V601} end(E694)); {'Idris.Prelude.Types.Right', E695} -> (fun (V602) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V591, {'Idris.TTImp.TTImp.IBindVar', V593, V599}} | V602], V597)) end(E695)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E693)); _ -> begin (V603 = (('un--getMatch'(V0, V1, V2, V589, V4))(V597))), case V603 of {'Idris.Prelude.Types.Left', E691} -> (fun (V604) -> {'Idris.Prelude.Types.Left', V604} end(E691)); {'Idris.Prelude.Types.Right', E692} -> (fun (V605) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V591, V4} | V605], V597)) end(E692)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E690)); _ -> begin (V606 = (('un--getMatch'(V0, V1, V2, V589, V4))(V597))), case V606 of {'Idris.Prelude.Types.Left', E688} -> (fun (V607) -> {'Idris.Prelude.Types.Left', V607} end(E688)); {'Idris.Prelude.Types.Right', E689} -> (fun (V608) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V591, V4} | V608], V597)) end(E689)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E683, E684, E685, E686, E687)); _ -> fun (V609) -> begin (V610 = (('un--getMatch'(V0, V1, V2, V589, V4))(V609))), case V610 of {'Idris.Prelude.Types.Left', E681} -> (fun (V611) -> {'Idris.Prelude.Types.Left', V611} end(E681)); {'Idris.Prelude.Types.Right', E682} -> (fun (V612) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V591, V4} | V612], V609)) end(E682)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E680)); _ -> ('un--getMatch'(V0, V1, V2, V589, V4)) end end(E679)); _ -> ('un--getMatch'(V0, V1, V2, V589, V4)) end end(E674, E675, E676, E677, E678)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E652, E653, E654, E655, E656} -> (fun (V613, V614, V615, V616, V617) -> ('un--getMatch'(V0, V1, V2, V3, V617)) end(E652, E653, E654, E655, E656)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E646} -> (fun (V618) -> fun (V619) -> case V4 of {'Idris.TTImp.TTImp.IType', E647} -> (fun (V620) -> {'Idris.Prelude.Types.Right', []} end(E647)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V619)) end end end(E646)); {'Idris.TTImp.TTImp.IPrimVal', E648, E649} -> (fun (V621, V622) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E650, E651} -> (fun (V623, V624) -> fun (V625) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V622, V624)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V621, V625)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E650, E651)); _ -> fun (V626) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V626)) end end end(E648, E649)); _ -> fun (V627) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V627)) end end end end end end; 0 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E767, E768, E769, E770} -> (fun (V628, V629, V630, V631) -> ('un--getMatch'(V0, V1, 0, V629, V629)) end(E767, E768, E769, E770)); {'Idris.TTImp.TTImp.IAutoApp', E771, E772, E773} -> (fun (V632, V633, V634) -> ('un--getMatch'(V0, V1, 0, V633, V633)) end(E771, E772, E773)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E760, E761, E762, E763} -> (fun (V635, V636, V637, V638) -> fun (V639) -> ('un--matchFail'(V635, V639)) end end(E760, E761, E762, E763)); {'Idris.TTImp.TTImp.IAutoApp', E764, E765, E766} -> (fun (V640, V641, V642) -> fun (V643) -> ('un--matchFail'(V640, V643)) end end(E764, E765, E766)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E721, E722, E723} -> (fun (V644, V645, V646) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E735, E736, E737} -> (fun (V647, V648, V649) -> fun (V650) -> ('un--matchAny'(V0, V1, V644, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V646, V649)), V650)) end end(E735, E736, E737)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E730, E731, E732, E733, E734} -> (fun (V651, V652, V653, V654, V655) -> ('un--getMatch'(V0, V1, V2, V3, V655)) end(E730, E731, E732, E733, E734)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E724} -> (fun (V656) -> fun (V657) -> case V4 of {'Idris.TTImp.TTImp.IType', E725} -> (fun (V658) -> {'Idris.Prelude.Types.Right', []} end(E725)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V657)) end end end(E724)); {'Idris.TTImp.TTImp.IPrimVal', E726, E727} -> (fun (V659, V660) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E728, E729} -> (fun (V661, V662) -> fun (V663) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V660, V662)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V659, V663)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E728, E729)); _ -> fun (V664) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V664)) end end end(E726, E727)); _ -> fun (V665) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V665)) end end end end end(E721, E722, E723)); {'Idris.TTImp.TTImp.IAs', E738, E739, E740, E741, E742} -> (fun (V666, V667, V668, V669, V670) -> case V669 of {'Idris.Core.Name.UN', E743} -> (fun (V671) -> case V671 of {'Idris.Core.Name.Basic', E744} -> (fun (V672) -> case V4 of {'Idris.TTImp.TTImp.IAs', E747, E748, E749, E750, E751} -> (fun (V673, V674, V675, V676, V677) -> fun (V678) -> case V676 of {'Idris.Core.Name.UN', E754} -> (fun (V679) -> case V679 of {'Idris.Core.Name.Basic', E757} -> (fun (V680) -> begin (V681 = (('un--getMatch'(V0, V1, V2, V670, V677))(V678))), case V681 of {'Idris.Prelude.Types.Left', E758} -> (fun (V682) -> {'Idris.Prelude.Types.Left', V682} end(E758)); {'Idris.Prelude.Types.Right', E759} -> (fun (V683) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V672, {'Idris.TTImp.TTImp.IBindVar', V674, V680}} | V683], V678)) end(E759)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E757)); _ -> begin (V684 = (('un--getMatch'(V0, V1, V2, V670, V4))(V678))), case V684 of {'Idris.Prelude.Types.Left', E755} -> (fun (V685) -> {'Idris.Prelude.Types.Left', V685} end(E755)); {'Idris.Prelude.Types.Right', E756} -> (fun (V686) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V672, V4} | V686], V678)) end(E756)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E754)); _ -> begin (V687 = (('un--getMatch'(V0, V1, V2, V670, V4))(V678))), case V687 of {'Idris.Prelude.Types.Left', E752} -> (fun (V688) -> {'Idris.Prelude.Types.Left', V688} end(E752)); {'Idris.Prelude.Types.Right', E753} -> (fun (V689) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V672, V4} | V689], V678)) end(E753)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E747, E748, E749, E750, E751)); _ -> fun (V690) -> begin (V691 = (('un--getMatch'(V0, V1, V2, V670, V4))(V690))), case V691 of {'Idris.Prelude.Types.Left', E745} -> (fun (V692) -> {'Idris.Prelude.Types.Left', V692} end(E745)); {'Idris.Prelude.Types.Right', E746} -> (fun (V693) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V672, V4} | V693], V690)) end(E746)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E744)); _ -> ('un--getMatch'(V0, V1, V2, V670, V4)) end end(E743)); _ -> ('un--getMatch'(V0, V1, V2, V670, V4)) end end(E738, E739, E740, E741, E742)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E716, E717, E718, E719, E720} -> (fun (V694, V695, V696, V697, V698) -> ('un--getMatch'(V0, V1, V2, V3, V698)) end(E716, E717, E718, E719, E720)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E710} -> (fun (V699) -> fun (V700) -> case V4 of {'Idris.TTImp.TTImp.IType', E711} -> (fun (V701) -> {'Idris.Prelude.Types.Right', []} end(E711)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V700)) end end end(E710)); {'Idris.TTImp.TTImp.IPrimVal', E712, E713} -> (fun (V702, V703) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E714, E715} -> (fun (V704, V705) -> fun (V706) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V703, V705)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V702, V706)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E714, E715)); _ -> fun (V707) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V707)) end end end(E712, E713)); _ -> fun (V708) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V708)) end end end end end end; _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E639, E640, E641, E642} -> (fun (V709, V710, V711, V712) -> fun (V713) -> ('un--matchFail'(V709, V713)) end end(E639, E640, E641, E642)); {'Idris.TTImp.TTImp.IAutoApp', E643, E644, E645} -> (fun (V714, V715, V716) -> fun (V717) -> ('un--matchFail'(V714, V717)) end end(E643, E644, E645)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E600, E601, E602} -> (fun (V718, V719, V720) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E614, E615, E616} -> (fun (V721, V722, V723) -> fun (V724) -> ('un--matchAny'(V0, V1, V718, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V720, V723)), V724)) end end(E614, E615, E616)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E609, E610, E611, E612, E613} -> (fun (V725, V726, V727, V728, V729) -> ('un--getMatch'(V0, V1, V2, V3, V729)) end(E609, E610, E611, E612, E613)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E603} -> (fun (V730) -> fun (V731) -> case V4 of {'Idris.TTImp.TTImp.IType', E604} -> (fun (V732) -> {'Idris.Prelude.Types.Right', []} end(E604)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V731)) end end end(E603)); {'Idris.TTImp.TTImp.IPrimVal', E605, E606} -> (fun (V733, V734) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E607, E608} -> (fun (V735, V736) -> fun (V737) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V734, V736)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V733, V737)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E607, E608)); _ -> fun (V738) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V738)) end end end(E605, E606)); _ -> fun (V739) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V739)) end end end end end(E600, E601, E602)); {'Idris.TTImp.TTImp.IAs', E617, E618, E619, E620, E621} -> (fun (V740, V741, V742, V743, V744) -> case V743 of {'Idris.Core.Name.UN', E622} -> (fun (V745) -> case V745 of {'Idris.Core.Name.Basic', E623} -> (fun (V746) -> case V4 of {'Idris.TTImp.TTImp.IAs', E626, E627, E628, E629, E630} -> (fun (V747, V748, V749, V750, V751) -> fun (V752) -> case V750 of {'Idris.Core.Name.UN', E633} -> (fun (V753) -> case V753 of {'Idris.Core.Name.Basic', E636} -> (fun (V754) -> begin (V755 = (('un--getMatch'(V0, V1, V2, V744, V751))(V752))), case V755 of {'Idris.Prelude.Types.Left', E637} -> (fun (V756) -> {'Idris.Prelude.Types.Left', V756} end(E637)); {'Idris.Prelude.Types.Right', E638} -> (fun (V757) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V746, {'Idris.TTImp.TTImp.IBindVar', V748, V754}} | V757], V752)) end(E638)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E636)); _ -> begin (V758 = (('un--getMatch'(V0, V1, V2, V744, V4))(V752))), case V758 of {'Idris.Prelude.Types.Left', E634} -> (fun (V759) -> {'Idris.Prelude.Types.Left', V759} end(E634)); {'Idris.Prelude.Types.Right', E635} -> (fun (V760) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V746, V4} | V760], V752)) end(E635)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E633)); _ -> begin (V761 = (('un--getMatch'(V0, V1, V2, V744, V4))(V752))), case V761 of {'Idris.Prelude.Types.Left', E631} -> (fun (V762) -> {'Idris.Prelude.Types.Left', V762} end(E631)); {'Idris.Prelude.Types.Right', E632} -> (fun (V763) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V746, V4} | V763], V752)) end(E632)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E626, E627, E628, E629, E630)); _ -> fun (V764) -> begin (V765 = (('un--getMatch'(V0, V1, V2, V744, V4))(V764))), case V765 of {'Idris.Prelude.Types.Left', E624} -> (fun (V766) -> {'Idris.Prelude.Types.Left', V766} end(E624)); {'Idris.Prelude.Types.Right', E625} -> (fun (V767) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V746, V4} | V767], V764)) end(E625)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E623)); _ -> ('un--getMatch'(V0, V1, V2, V744, V4)) end end(E622)); _ -> ('un--getMatch'(V0, V1, V2, V744, V4)) end end(E617, E618, E619, E620, E621)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E595, E596, E597, E598, E599} -> (fun (V768, V769, V770, V771, V772) -> ('un--getMatch'(V0, V1, V2, V3, V772)) end(E595, E596, E597, E598, E599)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E589} -> (fun (V773) -> fun (V774) -> case V4 of {'Idris.TTImp.TTImp.IType', E590} -> (fun (V775) -> {'Idris.Prelude.Types.Right', []} end(E590)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V774)) end end end(E589)); {'Idris.TTImp.TTImp.IPrimVal', E591, E592} -> (fun (V776, V777) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E593, E594} -> (fun (V778, V779) -> fun (V780) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V777, V779)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V776, V780)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E593, E594)); _ -> fun (V781) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V781)) end end end(E591, E592)); _ -> fun (V782) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V782)) end end end end end end end end(E583, E584, E585, E586, E587, E588)); {'Idris.TTImp.TTImp.IApp', E780, E781, E782} -> (fun (V783, V784, V785) -> case V4 of {'Idris.TTImp.TTImp.IApp', E968, E969, E970} -> (fun (V786, V787, V788) -> fun (V789) -> ('un--matchAll'(V0, V1, V2, [{'Idris.Builtin.MkPair', V784, V787} | [{'Idris.Builtin.MkPair', V785, V788} | []]], V789)) end end(E968, E969, E970)); _ -> case V2 of 1 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E897, E898, E899, E900} -> (fun (V790, V791, V792, V793) -> fun (V794) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V791, V4} | [{'Idris.Builtin.MkPair', V793, V793} | []]], V794)) end end(E897, E898, E899, E900)); {'Idris.TTImp.TTImp.IAutoApp', E901, E902, E903} -> (fun (V795, V796, V797) -> fun (V798) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V796, V4} | [{'Idris.Builtin.MkPair', V797, V797} | []]], V798)) end end(E901, E902, E903)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E890, E891, E892, E893} -> (fun (V799, V800, V801, V802) -> fun (V803) -> ('un--matchFail'(V799, V803)) end end(E890, E891, E892, E893)); {'Idris.TTImp.TTImp.IAutoApp', E894, E895, E896} -> (fun (V804, V805, V806) -> fun (V807) -> ('un--matchFail'(V804, V807)) end end(E894, E895, E896)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E851, E852, E853} -> (fun (V808, V809, V810) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E865, E866, E867} -> (fun (V811, V812, V813) -> fun (V814) -> ('un--matchAny'(V0, V1, V808, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V810, V813)), V814)) end end(E865, E866, E867)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E860, E861, E862, E863, E864} -> (fun (V815, V816, V817, V818, V819) -> ('un--getMatch'(V0, V1, V2, V3, V819)) end(E860, E861, E862, E863, E864)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E854} -> (fun (V820) -> fun (V821) -> case V4 of {'Idris.TTImp.TTImp.IType', E855} -> (fun (V822) -> {'Idris.Prelude.Types.Right', []} end(E855)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V821)) end end end(E854)); {'Idris.TTImp.TTImp.IPrimVal', E856, E857} -> (fun (V823, V824) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E858, E859} -> (fun (V825, V826) -> fun (V827) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V824, V826)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V823, V827)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E858, E859)); _ -> fun (V828) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V828)) end end end(E856, E857)); _ -> fun (V829) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V829)) end end end end end(E851, E852, E853)); {'Idris.TTImp.TTImp.IAs', E868, E869, E870, E871, E872} -> (fun (V830, V831, V832, V833, V834) -> case V833 of {'Idris.Core.Name.UN', E873} -> (fun (V835) -> case V835 of {'Idris.Core.Name.Basic', E874} -> (fun (V836) -> case V4 of {'Idris.TTImp.TTImp.IAs', E877, E878, E879, E880, E881} -> (fun (V837, V838, V839, V840, V841) -> fun (V842) -> case V840 of {'Idris.Core.Name.UN', E884} -> (fun (V843) -> case V843 of {'Idris.Core.Name.Basic', E887} -> (fun (V844) -> begin (V845 = (('un--getMatch'(V0, V1, V2, V834, V841))(V842))), case V845 of {'Idris.Prelude.Types.Left', E888} -> (fun (V846) -> {'Idris.Prelude.Types.Left', V846} end(E888)); {'Idris.Prelude.Types.Right', E889} -> (fun (V847) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V836, {'Idris.TTImp.TTImp.IBindVar', V838, V844}} | V847], V842)) end(E889)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E887)); _ -> begin (V848 = (('un--getMatch'(V0, V1, V2, V834, V4))(V842))), case V848 of {'Idris.Prelude.Types.Left', E885} -> (fun (V849) -> {'Idris.Prelude.Types.Left', V849} end(E885)); {'Idris.Prelude.Types.Right', E886} -> (fun (V850) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V836, V4} | V850], V842)) end(E886)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E884)); _ -> begin (V851 = (('un--getMatch'(V0, V1, V2, V834, V4))(V842))), case V851 of {'Idris.Prelude.Types.Left', E882} -> (fun (V852) -> {'Idris.Prelude.Types.Left', V852} end(E882)); {'Idris.Prelude.Types.Right', E883} -> (fun (V853) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V836, V4} | V853], V842)) end(E883)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E877, E878, E879, E880, E881)); _ -> fun (V854) -> begin (V855 = (('un--getMatch'(V0, V1, V2, V834, V4))(V854))), case V855 of {'Idris.Prelude.Types.Left', E875} -> (fun (V856) -> {'Idris.Prelude.Types.Left', V856} end(E875)); {'Idris.Prelude.Types.Right', E876} -> (fun (V857) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V836, V4} | V857], V854)) end(E876)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E874)); _ -> ('un--getMatch'(V0, V1, V2, V834, V4)) end end(E873)); _ -> ('un--getMatch'(V0, V1, V2, V834, V4)) end end(E868, E869, E870, E871, E872)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E846, E847, E848, E849, E850} -> (fun (V858, V859, V860, V861, V862) -> ('un--getMatch'(V0, V1, V2, V3, V862)) end(E846, E847, E848, E849, E850)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E840} -> (fun (V863) -> fun (V864) -> case V4 of {'Idris.TTImp.TTImp.IType', E841} -> (fun (V865) -> {'Idris.Prelude.Types.Right', []} end(E841)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V864)) end end end(E840)); {'Idris.TTImp.TTImp.IPrimVal', E842, E843} -> (fun (V866, V867) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E844, E845} -> (fun (V868, V869) -> fun (V870) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V867, V869)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V866, V870)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E844, E845)); _ -> fun (V871) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V871)) end end end(E842, E843)); _ -> fun (V872) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V872)) end end end end end end; 0 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E961, E962, E963, E964} -> (fun (V873, V874, V875, V876) -> ('un--getMatch'(V0, V1, 0, V874, V874)) end(E961, E962, E963, E964)); {'Idris.TTImp.TTImp.IAutoApp', E965, E966, E967} -> (fun (V877, V878, V879) -> ('un--getMatch'(V0, V1, 0, V878, V878)) end(E965, E966, E967)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E954, E955, E956, E957} -> (fun (V880, V881, V882, V883) -> fun (V884) -> ('un--matchFail'(V880, V884)) end end(E954, E955, E956, E957)); {'Idris.TTImp.TTImp.IAutoApp', E958, E959, E960} -> (fun (V885, V886, V887) -> fun (V888) -> ('un--matchFail'(V885, V888)) end end(E958, E959, E960)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E915, E916, E917} -> (fun (V889, V890, V891) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E929, E930, E931} -> (fun (V892, V893, V894) -> fun (V895) -> ('un--matchAny'(V0, V1, V889, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V891, V894)), V895)) end end(E929, E930, E931)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E924, E925, E926, E927, E928} -> (fun (V896, V897, V898, V899, V900) -> ('un--getMatch'(V0, V1, V2, V3, V900)) end(E924, E925, E926, E927, E928)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E918} -> (fun (V901) -> fun (V902) -> case V4 of {'Idris.TTImp.TTImp.IType', E919} -> (fun (V903) -> {'Idris.Prelude.Types.Right', []} end(E919)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V902)) end end end(E918)); {'Idris.TTImp.TTImp.IPrimVal', E920, E921} -> (fun (V904, V905) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E922, E923} -> (fun (V906, V907) -> fun (V908) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V905, V907)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V904, V908)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E922, E923)); _ -> fun (V909) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V909)) end end end(E920, E921)); _ -> fun (V910) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V910)) end end end end end(E915, E916, E917)); {'Idris.TTImp.TTImp.IAs', E932, E933, E934, E935, E936} -> (fun (V911, V912, V913, V914, V915) -> case V914 of {'Idris.Core.Name.UN', E937} -> (fun (V916) -> case V916 of {'Idris.Core.Name.Basic', E938} -> (fun (V917) -> case V4 of {'Idris.TTImp.TTImp.IAs', E941, E942, E943, E944, E945} -> (fun (V918, V919, V920, V921, V922) -> fun (V923) -> case V921 of {'Idris.Core.Name.UN', E948} -> (fun (V924) -> case V924 of {'Idris.Core.Name.Basic', E951} -> (fun (V925) -> begin (V926 = (('un--getMatch'(V0, V1, V2, V915, V922))(V923))), case V926 of {'Idris.Prelude.Types.Left', E952} -> (fun (V927) -> {'Idris.Prelude.Types.Left', V927} end(E952)); {'Idris.Prelude.Types.Right', E953} -> (fun (V928) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V917, {'Idris.TTImp.TTImp.IBindVar', V919, V925}} | V928], V923)) end(E953)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E951)); _ -> begin (V929 = (('un--getMatch'(V0, V1, V2, V915, V4))(V923))), case V929 of {'Idris.Prelude.Types.Left', E949} -> (fun (V930) -> {'Idris.Prelude.Types.Left', V930} end(E949)); {'Idris.Prelude.Types.Right', E950} -> (fun (V931) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V917, V4} | V931], V923)) end(E950)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E948)); _ -> begin (V932 = (('un--getMatch'(V0, V1, V2, V915, V4))(V923))), case V932 of {'Idris.Prelude.Types.Left', E946} -> (fun (V933) -> {'Idris.Prelude.Types.Left', V933} end(E946)); {'Idris.Prelude.Types.Right', E947} -> (fun (V934) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V917, V4} | V934], V923)) end(E947)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E941, E942, E943, E944, E945)); _ -> fun (V935) -> begin (V936 = (('un--getMatch'(V0, V1, V2, V915, V4))(V935))), case V936 of {'Idris.Prelude.Types.Left', E939} -> (fun (V937) -> {'Idris.Prelude.Types.Left', V937} end(E939)); {'Idris.Prelude.Types.Right', E940} -> (fun (V938) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V917, V4} | V938], V935)) end(E940)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E938)); _ -> ('un--getMatch'(V0, V1, V2, V915, V4)) end end(E937)); _ -> ('un--getMatch'(V0, V1, V2, V915, V4)) end end(E932, E933, E934, E935, E936)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E910, E911, E912, E913, E914} -> (fun (V939, V940, V941, V942, V943) -> ('un--getMatch'(V0, V1, V2, V3, V943)) end(E910, E911, E912, E913, E914)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E904} -> (fun (V944) -> fun (V945) -> case V4 of {'Idris.TTImp.TTImp.IType', E905} -> (fun (V946) -> {'Idris.Prelude.Types.Right', []} end(E905)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V945)) end end end(E904)); {'Idris.TTImp.TTImp.IPrimVal', E906, E907} -> (fun (V947, V948) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E908, E909} -> (fun (V949, V950) -> fun (V951) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V948, V950)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V947, V951)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E908, E909)); _ -> fun (V952) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V952)) end end end(E906, E907)); _ -> fun (V953) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V953)) end end end end end end; _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E833, E834, E835, E836} -> (fun (V954, V955, V956, V957) -> fun (V958) -> ('un--matchFail'(V954, V958)) end end(E833, E834, E835, E836)); {'Idris.TTImp.TTImp.IAutoApp', E837, E838, E839} -> (fun (V959, V960, V961) -> fun (V962) -> ('un--matchFail'(V959, V962)) end end(E837, E838, E839)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E794, E795, E796} -> (fun (V963, V964, V965) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E808, E809, E810} -> (fun (V966, V967, V968) -> fun (V969) -> ('un--matchAny'(V0, V1, V963, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V965, V968)), V969)) end end(E808, E809, E810)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E803, E804, E805, E806, E807} -> (fun (V970, V971, V972, V973, V974) -> ('un--getMatch'(V0, V1, V2, V3, V974)) end(E803, E804, E805, E806, E807)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E797} -> (fun (V975) -> fun (V976) -> case V4 of {'Idris.TTImp.TTImp.IType', E798} -> (fun (V977) -> {'Idris.Prelude.Types.Right', []} end(E798)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V976)) end end end(E797)); {'Idris.TTImp.TTImp.IPrimVal', E799, E800} -> (fun (V978, V979) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E801, E802} -> (fun (V980, V981) -> fun (V982) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V979, V981)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V978, V982)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E801, E802)); _ -> fun (V983) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V983)) end end end(E799, E800)); _ -> fun (V984) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V984)) end end end end end(E794, E795, E796)); {'Idris.TTImp.TTImp.IAs', E811, E812, E813, E814, E815} -> (fun (V985, V986, V987, V988, V989) -> case V988 of {'Idris.Core.Name.UN', E816} -> (fun (V990) -> case V990 of {'Idris.Core.Name.Basic', E817} -> (fun (V991) -> case V4 of {'Idris.TTImp.TTImp.IAs', E820, E821, E822, E823, E824} -> (fun (V992, V993, V994, V995, V996) -> fun (V997) -> case V995 of {'Idris.Core.Name.UN', E827} -> (fun (V998) -> case V998 of {'Idris.Core.Name.Basic', E830} -> (fun (V999) -> begin (V1000 = (('un--getMatch'(V0, V1, V2, V989, V996))(V997))), case V1000 of {'Idris.Prelude.Types.Left', E831} -> (fun (V1001) -> {'Idris.Prelude.Types.Left', V1001} end(E831)); {'Idris.Prelude.Types.Right', E832} -> (fun (V1002) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V991, {'Idris.TTImp.TTImp.IBindVar', V993, V999}} | V1002], V997)) end(E832)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E830)); _ -> begin (V1003 = (('un--getMatch'(V0, V1, V2, V989, V4))(V997))), case V1003 of {'Idris.Prelude.Types.Left', E828} -> (fun (V1004) -> {'Idris.Prelude.Types.Left', V1004} end(E828)); {'Idris.Prelude.Types.Right', E829} -> (fun (V1005) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V991, V4} | V1005], V997)) end(E829)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E827)); _ -> begin (V1006 = (('un--getMatch'(V0, V1, V2, V989, V4))(V997))), case V1006 of {'Idris.Prelude.Types.Left', E825} -> (fun (V1007) -> {'Idris.Prelude.Types.Left', V1007} end(E825)); {'Idris.Prelude.Types.Right', E826} -> (fun (V1008) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V991, V4} | V1008], V997)) end(E826)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E820, E821, E822, E823, E824)); _ -> fun (V1009) -> begin (V1010 = (('un--getMatch'(V0, V1, V2, V989, V4))(V1009))), case V1010 of {'Idris.Prelude.Types.Left', E818} -> (fun (V1011) -> {'Idris.Prelude.Types.Left', V1011} end(E818)); {'Idris.Prelude.Types.Right', E819} -> (fun (V1012) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V991, V4} | V1012], V1009)) end(E819)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E817)); _ -> ('un--getMatch'(V0, V1, V2, V989, V4)) end end(E816)); _ -> ('un--getMatch'(V0, V1, V2, V989, V4)) end end(E811, E812, E813, E814, E815)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E789, E790, E791, E792, E793} -> (fun (V1013, V1014, V1015, V1016, V1017) -> ('un--getMatch'(V0, V1, V2, V3, V1017)) end(E789, E790, E791, E792, E793)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E783} -> (fun (V1018) -> fun (V1019) -> case V4 of {'Idris.TTImp.TTImp.IType', E784} -> (fun (V1020) -> {'Idris.Prelude.Types.Right', []} end(E784)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1019)) end end end(E783)); {'Idris.TTImp.TTImp.IPrimVal', E785, E786} -> (fun (V1021, V1022) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E787, E788} -> (fun (V1023, V1024) -> fun (V1025) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1022, V1024)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1021, V1025)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E787, E788)); _ -> fun (V1026) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1026)) end end end(E785, E786)); _ -> fun (V1027) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1027)) end end end end end end end end(E780, E781, E782)); {'Idris.TTImp.TTImp.IAutoApp', E971, E972, E973} -> (fun (V1028, V1029, V1030) -> case V4 of {'Idris.TTImp.TTImp.IAutoApp', E1159, E1160, E1161} -> (fun (V1031, V1032, V1033) -> fun (V1034) -> ('un--matchAll'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1029, V1032} | [{'Idris.Builtin.MkPair', V1030, V1033} | []]], V1034)) end end(E1159, E1160, E1161)); _ -> case V2 of 1 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E1088, E1089, E1090, E1091} -> (fun (V1035, V1036, V1037, V1038) -> fun (V1039) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V1036, V4} | [{'Idris.Builtin.MkPair', V1038, V1038} | []]], V1039)) end end(E1088, E1089, E1090, E1091)); {'Idris.TTImp.TTImp.IAutoApp', E1092, E1093, E1094} -> (fun (V1040, V1041, V1042) -> fun (V1043) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V1041, V4} | [{'Idris.Builtin.MkPair', V1042, V1042} | []]], V1043)) end end(E1092, E1093, E1094)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E1081, E1082, E1083, E1084} -> (fun (V1044, V1045, V1046, V1047) -> fun (V1048) -> ('un--matchFail'(V1044, V1048)) end end(E1081, E1082, E1083, E1084)); {'Idris.TTImp.TTImp.IAutoApp', E1085, E1086, E1087} -> (fun (V1049, V1050, V1051) -> fun (V1052) -> ('un--matchFail'(V1049, V1052)) end end(E1085, E1086, E1087)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E1042, E1043, E1044} -> (fun (V1053, V1054, V1055) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E1056, E1057, E1058} -> (fun (V1056, V1057, V1058) -> fun (V1059) -> ('un--matchAny'(V0, V1, V1053, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1055, V1058)), V1059)) end end(E1056, E1057, E1058)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1051, E1052, E1053, E1054, E1055} -> (fun (V1060, V1061, V1062, V1063, V1064) -> ('un--getMatch'(V0, V1, V2, V3, V1064)) end(E1051, E1052, E1053, E1054, E1055)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1045} -> (fun (V1065) -> fun (V1066) -> case V4 of {'Idris.TTImp.TTImp.IType', E1046} -> (fun (V1067) -> {'Idris.Prelude.Types.Right', []} end(E1046)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1066)) end end end(E1045)); {'Idris.TTImp.TTImp.IPrimVal', E1047, E1048} -> (fun (V1068, V1069) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1049, E1050} -> (fun (V1070, V1071) -> fun (V1072) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1069, V1071)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1068, V1072)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1049, E1050)); _ -> fun (V1073) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1073)) end end end(E1047, E1048)); _ -> fun (V1074) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1074)) end end end end end(E1042, E1043, E1044)); {'Idris.TTImp.TTImp.IAs', E1059, E1060, E1061, E1062, E1063} -> (fun (V1075, V1076, V1077, V1078, V1079) -> case V1078 of {'Idris.Core.Name.UN', E1064} -> (fun (V1080) -> case V1080 of {'Idris.Core.Name.Basic', E1065} -> (fun (V1081) -> case V4 of {'Idris.TTImp.TTImp.IAs', E1068, E1069, E1070, E1071, E1072} -> (fun (V1082, V1083, V1084, V1085, V1086) -> fun (V1087) -> case V1085 of {'Idris.Core.Name.UN', E1075} -> (fun (V1088) -> case V1088 of {'Idris.Core.Name.Basic', E1078} -> (fun (V1089) -> begin (V1090 = (('un--getMatch'(V0, V1, V2, V1079, V1086))(V1087))), case V1090 of {'Idris.Prelude.Types.Left', E1079} -> (fun (V1091) -> {'Idris.Prelude.Types.Left', V1091} end(E1079)); {'Idris.Prelude.Types.Right', E1080} -> (fun (V1092) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1081, {'Idris.TTImp.TTImp.IBindVar', V1083, V1089}} | V1092], V1087)) end(E1080)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1078)); _ -> begin (V1093 = (('un--getMatch'(V0, V1, V2, V1079, V4))(V1087))), case V1093 of {'Idris.Prelude.Types.Left', E1076} -> (fun (V1094) -> {'Idris.Prelude.Types.Left', V1094} end(E1076)); {'Idris.Prelude.Types.Right', E1077} -> (fun (V1095) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1081, V4} | V1095], V1087)) end(E1077)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1075)); _ -> begin (V1096 = (('un--getMatch'(V0, V1, V2, V1079, V4))(V1087))), case V1096 of {'Idris.Prelude.Types.Left', E1073} -> (fun (V1097) -> {'Idris.Prelude.Types.Left', V1097} end(E1073)); {'Idris.Prelude.Types.Right', E1074} -> (fun (V1098) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1081, V4} | V1098], V1087)) end(E1074)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1068, E1069, E1070, E1071, E1072)); _ -> fun (V1099) -> begin (V1100 = (('un--getMatch'(V0, V1, V2, V1079, V4))(V1099))), case V1100 of {'Idris.Prelude.Types.Left', E1066} -> (fun (V1101) -> {'Idris.Prelude.Types.Left', V1101} end(E1066)); {'Idris.Prelude.Types.Right', E1067} -> (fun (V1102) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1081, V4} | V1102], V1099)) end(E1067)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1065)); _ -> ('un--getMatch'(V0, V1, V2, V1079, V4)) end end(E1064)); _ -> ('un--getMatch'(V0, V1, V2, V1079, V4)) end end(E1059, E1060, E1061, E1062, E1063)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1037, E1038, E1039, E1040, E1041} -> (fun (V1103, V1104, V1105, V1106, V1107) -> ('un--getMatch'(V0, V1, V2, V3, V1107)) end(E1037, E1038, E1039, E1040, E1041)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1031} -> (fun (V1108) -> fun (V1109) -> case V4 of {'Idris.TTImp.TTImp.IType', E1032} -> (fun (V1110) -> {'Idris.Prelude.Types.Right', []} end(E1032)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1109)) end end end(E1031)); {'Idris.TTImp.TTImp.IPrimVal', E1033, E1034} -> (fun (V1111, V1112) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1035, E1036} -> (fun (V1113, V1114) -> fun (V1115) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1112, V1114)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1111, V1115)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1035, E1036)); _ -> fun (V1116) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1116)) end end end(E1033, E1034)); _ -> fun (V1117) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1117)) end end end end end end; 0 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E1152, E1153, E1154, E1155} -> (fun (V1118, V1119, V1120, V1121) -> ('un--getMatch'(V0, V1, 0, V1119, V1119)) end(E1152, E1153, E1154, E1155)); {'Idris.TTImp.TTImp.IAutoApp', E1156, E1157, E1158} -> (fun (V1122, V1123, V1124) -> ('un--getMatch'(V0, V1, 0, V1123, V1123)) end(E1156, E1157, E1158)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E1145, E1146, E1147, E1148} -> (fun (V1125, V1126, V1127, V1128) -> fun (V1129) -> ('un--matchFail'(V1125, V1129)) end end(E1145, E1146, E1147, E1148)); {'Idris.TTImp.TTImp.IAutoApp', E1149, E1150, E1151} -> (fun (V1130, V1131, V1132) -> fun (V1133) -> ('un--matchFail'(V1130, V1133)) end end(E1149, E1150, E1151)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E1106, E1107, E1108} -> (fun (V1134, V1135, V1136) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E1120, E1121, E1122} -> (fun (V1137, V1138, V1139) -> fun (V1140) -> ('un--matchAny'(V0, V1, V1134, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1136, V1139)), V1140)) end end(E1120, E1121, E1122)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1115, E1116, E1117, E1118, E1119} -> (fun (V1141, V1142, V1143, V1144, V1145) -> ('un--getMatch'(V0, V1, V2, V3, V1145)) end(E1115, E1116, E1117, E1118, E1119)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1109} -> (fun (V1146) -> fun (V1147) -> case V4 of {'Idris.TTImp.TTImp.IType', E1110} -> (fun (V1148) -> {'Idris.Prelude.Types.Right', []} end(E1110)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1147)) end end end(E1109)); {'Idris.TTImp.TTImp.IPrimVal', E1111, E1112} -> (fun (V1149, V1150) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1113, E1114} -> (fun (V1151, V1152) -> fun (V1153) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1150, V1152)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1149, V1153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1113, E1114)); _ -> fun (V1154) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1154)) end end end(E1111, E1112)); _ -> fun (V1155) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1155)) end end end end end(E1106, E1107, E1108)); {'Idris.TTImp.TTImp.IAs', E1123, E1124, E1125, E1126, E1127} -> (fun (V1156, V1157, V1158, V1159, V1160) -> case V1159 of {'Idris.Core.Name.UN', E1128} -> (fun (V1161) -> case V1161 of {'Idris.Core.Name.Basic', E1129} -> (fun (V1162) -> case V4 of {'Idris.TTImp.TTImp.IAs', E1132, E1133, E1134, E1135, E1136} -> (fun (V1163, V1164, V1165, V1166, V1167) -> fun (V1168) -> case V1166 of {'Idris.Core.Name.UN', E1139} -> (fun (V1169) -> case V1169 of {'Idris.Core.Name.Basic', E1142} -> (fun (V1170) -> begin (V1171 = (('un--getMatch'(V0, V1, V2, V1160, V1167))(V1168))), case V1171 of {'Idris.Prelude.Types.Left', E1143} -> (fun (V1172) -> {'Idris.Prelude.Types.Left', V1172} end(E1143)); {'Idris.Prelude.Types.Right', E1144} -> (fun (V1173) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1162, {'Idris.TTImp.TTImp.IBindVar', V1164, V1170}} | V1173], V1168)) end(E1144)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1142)); _ -> begin (V1174 = (('un--getMatch'(V0, V1, V2, V1160, V4))(V1168))), case V1174 of {'Idris.Prelude.Types.Left', E1140} -> (fun (V1175) -> {'Idris.Prelude.Types.Left', V1175} end(E1140)); {'Idris.Prelude.Types.Right', E1141} -> (fun (V1176) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1162, V4} | V1176], V1168)) end(E1141)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1139)); _ -> begin (V1177 = (('un--getMatch'(V0, V1, V2, V1160, V4))(V1168))), case V1177 of {'Idris.Prelude.Types.Left', E1137} -> (fun (V1178) -> {'Idris.Prelude.Types.Left', V1178} end(E1137)); {'Idris.Prelude.Types.Right', E1138} -> (fun (V1179) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1162, V4} | V1179], V1168)) end(E1138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1132, E1133, E1134, E1135, E1136)); _ -> fun (V1180) -> begin (V1181 = (('un--getMatch'(V0, V1, V2, V1160, V4))(V1180))), case V1181 of {'Idris.Prelude.Types.Left', E1130} -> (fun (V1182) -> {'Idris.Prelude.Types.Left', V1182} end(E1130)); {'Idris.Prelude.Types.Right', E1131} -> (fun (V1183) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1162, V4} | V1183], V1180)) end(E1131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1129)); _ -> ('un--getMatch'(V0, V1, V2, V1160, V4)) end end(E1128)); _ -> ('un--getMatch'(V0, V1, V2, V1160, V4)) end end(E1123, E1124, E1125, E1126, E1127)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1101, E1102, E1103, E1104, E1105} -> (fun (V1184, V1185, V1186, V1187, V1188) -> ('un--getMatch'(V0, V1, V2, V3, V1188)) end(E1101, E1102, E1103, E1104, E1105)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1095} -> (fun (V1189) -> fun (V1190) -> case V4 of {'Idris.TTImp.TTImp.IType', E1096} -> (fun (V1191) -> {'Idris.Prelude.Types.Right', []} end(E1096)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1190)) end end end(E1095)); {'Idris.TTImp.TTImp.IPrimVal', E1097, E1098} -> (fun (V1192, V1193) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1099, E1100} -> (fun (V1194, V1195) -> fun (V1196) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1193, V1195)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1192, V1196)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1099, E1100)); _ -> fun (V1197) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1197)) end end end(E1097, E1098)); _ -> fun (V1198) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1198)) end end end end end end; _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E1024, E1025, E1026, E1027} -> (fun (V1199, V1200, V1201, V1202) -> fun (V1203) -> ('un--matchFail'(V1199, V1203)) end end(E1024, E1025, E1026, E1027)); {'Idris.TTImp.TTImp.IAutoApp', E1028, E1029, E1030} -> (fun (V1204, V1205, V1206) -> fun (V1207) -> ('un--matchFail'(V1204, V1207)) end end(E1028, E1029, E1030)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E985, E986, E987} -> (fun (V1208, V1209, V1210) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E999, E1000, E1001} -> (fun (V1211, V1212, V1213) -> fun (V1214) -> ('un--matchAny'(V0, V1, V1208, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1210, V1213)), V1214)) end end(E999, E1000, E1001)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E994, E995, E996, E997, E998} -> (fun (V1215, V1216, V1217, V1218, V1219) -> ('un--getMatch'(V0, V1, V2, V3, V1219)) end(E994, E995, E996, E997, E998)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E988} -> (fun (V1220) -> fun (V1221) -> case V4 of {'Idris.TTImp.TTImp.IType', E989} -> (fun (V1222) -> {'Idris.Prelude.Types.Right', []} end(E989)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1221)) end end end(E988)); {'Idris.TTImp.TTImp.IPrimVal', E990, E991} -> (fun (V1223, V1224) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E992, E993} -> (fun (V1225, V1226) -> fun (V1227) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1224, V1226)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1223, V1227)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E992, E993)); _ -> fun (V1228) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1228)) end end end(E990, E991)); _ -> fun (V1229) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1229)) end end end end end(E985, E986, E987)); {'Idris.TTImp.TTImp.IAs', E1002, E1003, E1004, E1005, E1006} -> (fun (V1230, V1231, V1232, V1233, V1234) -> case V1233 of {'Idris.Core.Name.UN', E1007} -> (fun (V1235) -> case V1235 of {'Idris.Core.Name.Basic', E1008} -> (fun (V1236) -> case V4 of {'Idris.TTImp.TTImp.IAs', E1011, E1012, E1013, E1014, E1015} -> (fun (V1237, V1238, V1239, V1240, V1241) -> fun (V1242) -> case V1240 of {'Idris.Core.Name.UN', E1018} -> (fun (V1243) -> case V1243 of {'Idris.Core.Name.Basic', E1021} -> (fun (V1244) -> begin (V1245 = (('un--getMatch'(V0, V1, V2, V1234, V1241))(V1242))), case V1245 of {'Idris.Prelude.Types.Left', E1022} -> (fun (V1246) -> {'Idris.Prelude.Types.Left', V1246} end(E1022)); {'Idris.Prelude.Types.Right', E1023} -> (fun (V1247) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1236, {'Idris.TTImp.TTImp.IBindVar', V1238, V1244}} | V1247], V1242)) end(E1023)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1021)); _ -> begin (V1248 = (('un--getMatch'(V0, V1, V2, V1234, V4))(V1242))), case V1248 of {'Idris.Prelude.Types.Left', E1019} -> (fun (V1249) -> {'Idris.Prelude.Types.Left', V1249} end(E1019)); {'Idris.Prelude.Types.Right', E1020} -> (fun (V1250) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1236, V4} | V1250], V1242)) end(E1020)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1018)); _ -> begin (V1251 = (('un--getMatch'(V0, V1, V2, V1234, V4))(V1242))), case V1251 of {'Idris.Prelude.Types.Left', E1016} -> (fun (V1252) -> {'Idris.Prelude.Types.Left', V1252} end(E1016)); {'Idris.Prelude.Types.Right', E1017} -> (fun (V1253) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1236, V4} | V1253], V1242)) end(E1017)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1011, E1012, E1013, E1014, E1015)); _ -> fun (V1254) -> begin (V1255 = (('un--getMatch'(V0, V1, V2, V1234, V4))(V1254))), case V1255 of {'Idris.Prelude.Types.Left', E1009} -> (fun (V1256) -> {'Idris.Prelude.Types.Left', V1256} end(E1009)); {'Idris.Prelude.Types.Right', E1010} -> (fun (V1257) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1236, V4} | V1257], V1254)) end(E1010)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1008)); _ -> ('un--getMatch'(V0, V1, V2, V1234, V4)) end end(E1007)); _ -> ('un--getMatch'(V0, V1, V2, V1234, V4)) end end(E1002, E1003, E1004, E1005, E1006)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E980, E981, E982, E983, E984} -> (fun (V1258, V1259, V1260, V1261, V1262) -> ('un--getMatch'(V0, V1, V2, V3, V1262)) end(E980, E981, E982, E983, E984)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E974} -> (fun (V1263) -> fun (V1264) -> case V4 of {'Idris.TTImp.TTImp.IType', E975} -> (fun (V1265) -> {'Idris.Prelude.Types.Right', []} end(E975)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1264)) end end end(E974)); {'Idris.TTImp.TTImp.IPrimVal', E976, E977} -> (fun (V1266, V1267) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E978, E979} -> (fun (V1268, V1269) -> fun (V1270) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1267, V1269)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1266, V1270)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E978, E979)); _ -> fun (V1271) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1271)) end end end(E976, E977)); _ -> fun (V1272) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1272)) end end end end end end end end(E971, E972, E973)); {'Idris.TTImp.TTImp.INamedApp', E1162, E1163, E1164, E1165} -> (fun (V1273, V1274, V1275, V1276) -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E1351, E1352, E1353, E1354} -> (fun (V1277, V1278, V1279, V1280) -> case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1275, V1279)) of 1 -> fun (V1281) -> ('un--matchAll'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1274, V1278} | [{'Idris.Builtin.MkPair', V1276, V1280} | []]], V1281)) end; 0 -> fun (V1282) -> ('un--matchFail'(V1277, V1282)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1351, E1352, E1353, E1354)); _ -> case V2 of 1 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E1280, E1281, E1282, E1283} -> (fun (V1283, V1284, V1285, V1286) -> fun (V1287) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V1284, V4} | [{'Idris.Builtin.MkPair', V1286, V1286} | []]], V1287)) end end(E1280, E1281, E1282, E1283)); {'Idris.TTImp.TTImp.IAutoApp', E1284, E1285, E1286} -> (fun (V1288, V1289, V1290) -> fun (V1291) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V1289, V4} | [{'Idris.Builtin.MkPair', V1290, V1290} | []]], V1291)) end end(E1284, E1285, E1286)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E1273, E1274, E1275, E1276} -> (fun (V1292, V1293, V1294, V1295) -> fun (V1296) -> ('un--matchFail'(V1292, V1296)) end end(E1273, E1274, E1275, E1276)); {'Idris.TTImp.TTImp.IAutoApp', E1277, E1278, E1279} -> (fun (V1297, V1298, V1299) -> fun (V1300) -> ('un--matchFail'(V1297, V1300)) end end(E1277, E1278, E1279)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E1234, E1235, E1236} -> (fun (V1301, V1302, V1303) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E1248, E1249, E1250} -> (fun (V1304, V1305, V1306) -> fun (V1307) -> ('un--matchAny'(V0, V1, V1301, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1303, V1306)), V1307)) end end(E1248, E1249, E1250)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1243, E1244, E1245, E1246, E1247} -> (fun (V1308, V1309, V1310, V1311, V1312) -> ('un--getMatch'(V0, V1, V2, V3, V1312)) end(E1243, E1244, E1245, E1246, E1247)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1237} -> (fun (V1313) -> fun (V1314) -> case V4 of {'Idris.TTImp.TTImp.IType', E1238} -> (fun (V1315) -> {'Idris.Prelude.Types.Right', []} end(E1238)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1314)) end end end(E1237)); {'Idris.TTImp.TTImp.IPrimVal', E1239, E1240} -> (fun (V1316, V1317) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1241, E1242} -> (fun (V1318, V1319) -> fun (V1320) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1317, V1319)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1316, V1320)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1241, E1242)); _ -> fun (V1321) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1321)) end end end(E1239, E1240)); _ -> fun (V1322) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1322)) end end end end end(E1234, E1235, E1236)); {'Idris.TTImp.TTImp.IAs', E1251, E1252, E1253, E1254, E1255} -> (fun (V1323, V1324, V1325, V1326, V1327) -> case V1326 of {'Idris.Core.Name.UN', E1256} -> (fun (V1328) -> case V1328 of {'Idris.Core.Name.Basic', E1257} -> (fun (V1329) -> case V4 of {'Idris.TTImp.TTImp.IAs', E1260, E1261, E1262, E1263, E1264} -> (fun (V1330, V1331, V1332, V1333, V1334) -> fun (V1335) -> case V1333 of {'Idris.Core.Name.UN', E1267} -> (fun (V1336) -> case V1336 of {'Idris.Core.Name.Basic', E1270} -> (fun (V1337) -> begin (V1338 = (('un--getMatch'(V0, V1, V2, V1327, V1334))(V1335))), case V1338 of {'Idris.Prelude.Types.Left', E1271} -> (fun (V1339) -> {'Idris.Prelude.Types.Left', V1339} end(E1271)); {'Idris.Prelude.Types.Right', E1272} -> (fun (V1340) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1329, {'Idris.TTImp.TTImp.IBindVar', V1331, V1337}} | V1340], V1335)) end(E1272)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1270)); _ -> begin (V1341 = (('un--getMatch'(V0, V1, V2, V1327, V4))(V1335))), case V1341 of {'Idris.Prelude.Types.Left', E1268} -> (fun (V1342) -> {'Idris.Prelude.Types.Left', V1342} end(E1268)); {'Idris.Prelude.Types.Right', E1269} -> (fun (V1343) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1329, V4} | V1343], V1335)) end(E1269)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1267)); _ -> begin (V1344 = (('un--getMatch'(V0, V1, V2, V1327, V4))(V1335))), case V1344 of {'Idris.Prelude.Types.Left', E1265} -> (fun (V1345) -> {'Idris.Prelude.Types.Left', V1345} end(E1265)); {'Idris.Prelude.Types.Right', E1266} -> (fun (V1346) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1329, V4} | V1346], V1335)) end(E1266)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1260, E1261, E1262, E1263, E1264)); _ -> fun (V1347) -> begin (V1348 = (('un--getMatch'(V0, V1, V2, V1327, V4))(V1347))), case V1348 of {'Idris.Prelude.Types.Left', E1258} -> (fun (V1349) -> {'Idris.Prelude.Types.Left', V1349} end(E1258)); {'Idris.Prelude.Types.Right', E1259} -> (fun (V1350) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1329, V4} | V1350], V1347)) end(E1259)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1257)); _ -> ('un--getMatch'(V0, V1, V2, V1327, V4)) end end(E1256)); _ -> ('un--getMatch'(V0, V1, V2, V1327, V4)) end end(E1251, E1252, E1253, E1254, E1255)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1229, E1230, E1231, E1232, E1233} -> (fun (V1351, V1352, V1353, V1354, V1355) -> ('un--getMatch'(V0, V1, V2, V3, V1355)) end(E1229, E1230, E1231, E1232, E1233)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1223} -> (fun (V1356) -> fun (V1357) -> case V4 of {'Idris.TTImp.TTImp.IType', E1224} -> (fun (V1358) -> {'Idris.Prelude.Types.Right', []} end(E1224)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1357)) end end end(E1223)); {'Idris.TTImp.TTImp.IPrimVal', E1225, E1226} -> (fun (V1359, V1360) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1227, E1228} -> (fun (V1361, V1362) -> fun (V1363) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1360, V1362)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1359, V1363)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1227, E1228)); _ -> fun (V1364) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1364)) end end end(E1225, E1226)); _ -> fun (V1365) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1365)) end end end end end end; 0 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E1344, E1345, E1346, E1347} -> (fun (V1366, V1367, V1368, V1369) -> ('un--getMatch'(V0, V1, 0, V1367, V1367)) end(E1344, E1345, E1346, E1347)); {'Idris.TTImp.TTImp.IAutoApp', E1348, E1349, E1350} -> (fun (V1370, V1371, V1372) -> ('un--getMatch'(V0, V1, 0, V1371, V1371)) end(E1348, E1349, E1350)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E1337, E1338, E1339, E1340} -> (fun (V1373, V1374, V1375, V1376) -> fun (V1377) -> ('un--matchFail'(V1373, V1377)) end end(E1337, E1338, E1339, E1340)); {'Idris.TTImp.TTImp.IAutoApp', E1341, E1342, E1343} -> (fun (V1378, V1379, V1380) -> fun (V1381) -> ('un--matchFail'(V1378, V1381)) end end(E1341, E1342, E1343)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E1298, E1299, E1300} -> (fun (V1382, V1383, V1384) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E1312, E1313, E1314} -> (fun (V1385, V1386, V1387) -> fun (V1388) -> ('un--matchAny'(V0, V1, V1382, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1384, V1387)), V1388)) end end(E1312, E1313, E1314)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1307, E1308, E1309, E1310, E1311} -> (fun (V1389, V1390, V1391, V1392, V1393) -> ('un--getMatch'(V0, V1, V2, V3, V1393)) end(E1307, E1308, E1309, E1310, E1311)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1301} -> (fun (V1394) -> fun (V1395) -> case V4 of {'Idris.TTImp.TTImp.IType', E1302} -> (fun (V1396) -> {'Idris.Prelude.Types.Right', []} end(E1302)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1395)) end end end(E1301)); {'Idris.TTImp.TTImp.IPrimVal', E1303, E1304} -> (fun (V1397, V1398) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1305, E1306} -> (fun (V1399, V1400) -> fun (V1401) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1398, V1400)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1397, V1401)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1305, E1306)); _ -> fun (V1402) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1402)) end end end(E1303, E1304)); _ -> fun (V1403) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1403)) end end end end end(E1298, E1299, E1300)); {'Idris.TTImp.TTImp.IAs', E1315, E1316, E1317, E1318, E1319} -> (fun (V1404, V1405, V1406, V1407, V1408) -> case V1407 of {'Idris.Core.Name.UN', E1320} -> (fun (V1409) -> case V1409 of {'Idris.Core.Name.Basic', E1321} -> (fun (V1410) -> case V4 of {'Idris.TTImp.TTImp.IAs', E1324, E1325, E1326, E1327, E1328} -> (fun (V1411, V1412, V1413, V1414, V1415) -> fun (V1416) -> case V1414 of {'Idris.Core.Name.UN', E1331} -> (fun (V1417) -> case V1417 of {'Idris.Core.Name.Basic', E1334} -> (fun (V1418) -> begin (V1419 = (('un--getMatch'(V0, V1, V2, V1408, V1415))(V1416))), case V1419 of {'Idris.Prelude.Types.Left', E1335} -> (fun (V1420) -> {'Idris.Prelude.Types.Left', V1420} end(E1335)); {'Idris.Prelude.Types.Right', E1336} -> (fun (V1421) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1410, {'Idris.TTImp.TTImp.IBindVar', V1412, V1418}} | V1421], V1416)) end(E1336)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1334)); _ -> begin (V1422 = (('un--getMatch'(V0, V1, V2, V1408, V4))(V1416))), case V1422 of {'Idris.Prelude.Types.Left', E1332} -> (fun (V1423) -> {'Idris.Prelude.Types.Left', V1423} end(E1332)); {'Idris.Prelude.Types.Right', E1333} -> (fun (V1424) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1410, V4} | V1424], V1416)) end(E1333)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1331)); _ -> begin (V1425 = (('un--getMatch'(V0, V1, V2, V1408, V4))(V1416))), case V1425 of {'Idris.Prelude.Types.Left', E1329} -> (fun (V1426) -> {'Idris.Prelude.Types.Left', V1426} end(E1329)); {'Idris.Prelude.Types.Right', E1330} -> (fun (V1427) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1410, V4} | V1427], V1416)) end(E1330)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1324, E1325, E1326, E1327, E1328)); _ -> fun (V1428) -> begin (V1429 = (('un--getMatch'(V0, V1, V2, V1408, V4))(V1428))), case V1429 of {'Idris.Prelude.Types.Left', E1322} -> (fun (V1430) -> {'Idris.Prelude.Types.Left', V1430} end(E1322)); {'Idris.Prelude.Types.Right', E1323} -> (fun (V1431) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1410, V4} | V1431], V1428)) end(E1323)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1321)); _ -> ('un--getMatch'(V0, V1, V2, V1408, V4)) end end(E1320)); _ -> ('un--getMatch'(V0, V1, V2, V1408, V4)) end end(E1315, E1316, E1317, E1318, E1319)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1293, E1294, E1295, E1296, E1297} -> (fun (V1432, V1433, V1434, V1435, V1436) -> ('un--getMatch'(V0, V1, V2, V3, V1436)) end(E1293, E1294, E1295, E1296, E1297)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1287} -> (fun (V1437) -> fun (V1438) -> case V4 of {'Idris.TTImp.TTImp.IType', E1288} -> (fun (V1439) -> {'Idris.Prelude.Types.Right', []} end(E1288)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1438)) end end end(E1287)); {'Idris.TTImp.TTImp.IPrimVal', E1289, E1290} -> (fun (V1440, V1441) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1291, E1292} -> (fun (V1442, V1443) -> fun (V1444) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1441, V1443)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1440, V1444)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1291, E1292)); _ -> fun (V1445) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1445)) end end end(E1289, E1290)); _ -> fun (V1446) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1446)) end end end end end end; _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E1216, E1217, E1218, E1219} -> (fun (V1447, V1448, V1449, V1450) -> fun (V1451) -> ('un--matchFail'(V1447, V1451)) end end(E1216, E1217, E1218, E1219)); {'Idris.TTImp.TTImp.IAutoApp', E1220, E1221, E1222} -> (fun (V1452, V1453, V1454) -> fun (V1455) -> ('un--matchFail'(V1452, V1455)) end end(E1220, E1221, E1222)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E1177, E1178, E1179} -> (fun (V1456, V1457, V1458) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E1191, E1192, E1193} -> (fun (V1459, V1460, V1461) -> fun (V1462) -> ('un--matchAny'(V0, V1, V1456, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1458, V1461)), V1462)) end end(E1191, E1192, E1193)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1186, E1187, E1188, E1189, E1190} -> (fun (V1463, V1464, V1465, V1466, V1467) -> ('un--getMatch'(V0, V1, V2, V3, V1467)) end(E1186, E1187, E1188, E1189, E1190)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1180} -> (fun (V1468) -> fun (V1469) -> case V4 of {'Idris.TTImp.TTImp.IType', E1181} -> (fun (V1470) -> {'Idris.Prelude.Types.Right', []} end(E1181)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1469)) end end end(E1180)); {'Idris.TTImp.TTImp.IPrimVal', E1182, E1183} -> (fun (V1471, V1472) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1184, E1185} -> (fun (V1473, V1474) -> fun (V1475) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1472, V1474)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1471, V1475)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1184, E1185)); _ -> fun (V1476) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1476)) end end end(E1182, E1183)); _ -> fun (V1477) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1477)) end end end end end(E1177, E1178, E1179)); {'Idris.TTImp.TTImp.IAs', E1194, E1195, E1196, E1197, E1198} -> (fun (V1478, V1479, V1480, V1481, V1482) -> case V1481 of {'Idris.Core.Name.UN', E1199} -> (fun (V1483) -> case V1483 of {'Idris.Core.Name.Basic', E1200} -> (fun (V1484) -> case V4 of {'Idris.TTImp.TTImp.IAs', E1203, E1204, E1205, E1206, E1207} -> (fun (V1485, V1486, V1487, V1488, V1489) -> fun (V1490) -> case V1488 of {'Idris.Core.Name.UN', E1210} -> (fun (V1491) -> case V1491 of {'Idris.Core.Name.Basic', E1213} -> (fun (V1492) -> begin (V1493 = (('un--getMatch'(V0, V1, V2, V1482, V1489))(V1490))), case V1493 of {'Idris.Prelude.Types.Left', E1214} -> (fun (V1494) -> {'Idris.Prelude.Types.Left', V1494} end(E1214)); {'Idris.Prelude.Types.Right', E1215} -> (fun (V1495) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1484, {'Idris.TTImp.TTImp.IBindVar', V1486, V1492}} | V1495], V1490)) end(E1215)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1213)); _ -> begin (V1496 = (('un--getMatch'(V0, V1, V2, V1482, V4))(V1490))), case V1496 of {'Idris.Prelude.Types.Left', E1211} -> (fun (V1497) -> {'Idris.Prelude.Types.Left', V1497} end(E1211)); {'Idris.Prelude.Types.Right', E1212} -> (fun (V1498) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1484, V4} | V1498], V1490)) end(E1212)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1210)); _ -> begin (V1499 = (('un--getMatch'(V0, V1, V2, V1482, V4))(V1490))), case V1499 of {'Idris.Prelude.Types.Left', E1208} -> (fun (V1500) -> {'Idris.Prelude.Types.Left', V1500} end(E1208)); {'Idris.Prelude.Types.Right', E1209} -> (fun (V1501) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1484, V4} | V1501], V1490)) end(E1209)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1203, E1204, E1205, E1206, E1207)); _ -> fun (V1502) -> begin (V1503 = (('un--getMatch'(V0, V1, V2, V1482, V4))(V1502))), case V1503 of {'Idris.Prelude.Types.Left', E1201} -> (fun (V1504) -> {'Idris.Prelude.Types.Left', V1504} end(E1201)); {'Idris.Prelude.Types.Right', E1202} -> (fun (V1505) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1484, V4} | V1505], V1502)) end(E1202)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1200)); _ -> ('un--getMatch'(V0, V1, V2, V1482, V4)) end end(E1199)); _ -> ('un--getMatch'(V0, V1, V2, V1482, V4)) end end(E1194, E1195, E1196, E1197, E1198)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1172, E1173, E1174, E1175, E1176} -> (fun (V1506, V1507, V1508, V1509, V1510) -> ('un--getMatch'(V0, V1, V2, V3, V1510)) end(E1172, E1173, E1174, E1175, E1176)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1166} -> (fun (V1511) -> fun (V1512) -> case V4 of {'Idris.TTImp.TTImp.IType', E1167} -> (fun (V1513) -> {'Idris.Prelude.Types.Right', []} end(E1167)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1512)) end end end(E1166)); {'Idris.TTImp.TTImp.IPrimVal', E1168, E1169} -> (fun (V1514, V1515) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1170, E1171} -> (fun (V1516, V1517) -> fun (V1518) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1515, V1517)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1514, V1518)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1170, E1171)); _ -> fun (V1519) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1519)) end end end(E1168, E1169)); _ -> fun (V1520) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1520)) end end end end end end end end(E1162, E1163, E1164, E1165)); {'Idris.TTImp.TTImp.IWithApp', E1355, E1356, E1357} -> (fun (V1521, V1522, V1523) -> case V4 of {'Idris.TTImp.TTImp.IWithApp', E1543, E1544, E1545} -> (fun (V1524, V1525, V1526) -> fun (V1527) -> ('un--matchAll'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1522, V1525} | [{'Idris.Builtin.MkPair', V1523, V1526} | []]], V1527)) end end(E1543, E1544, E1545)); _ -> case V2 of 1 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E1472, E1473, E1474, E1475} -> (fun (V1528, V1529, V1530, V1531) -> fun (V1532) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V1529, V4} | [{'Idris.Builtin.MkPair', V1531, V1531} | []]], V1532)) end end(E1472, E1473, E1474, E1475)); {'Idris.TTImp.TTImp.IAutoApp', E1476, E1477, E1478} -> (fun (V1533, V1534, V1535) -> fun (V1536) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V1534, V4} | [{'Idris.Builtin.MkPair', V1535, V1535} | []]], V1536)) end end(E1476, E1477, E1478)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E1465, E1466, E1467, E1468} -> (fun (V1537, V1538, V1539, V1540) -> fun (V1541) -> ('un--matchFail'(V1537, V1541)) end end(E1465, E1466, E1467, E1468)); {'Idris.TTImp.TTImp.IAutoApp', E1469, E1470, E1471} -> (fun (V1542, V1543, V1544) -> fun (V1545) -> ('un--matchFail'(V1542, V1545)) end end(E1469, E1470, E1471)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E1426, E1427, E1428} -> (fun (V1546, V1547, V1548) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E1440, E1441, E1442} -> (fun (V1549, V1550, V1551) -> fun (V1552) -> ('un--matchAny'(V0, V1, V1546, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1548, V1551)), V1552)) end end(E1440, E1441, E1442)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1435, E1436, E1437, E1438, E1439} -> (fun (V1553, V1554, V1555, V1556, V1557) -> ('un--getMatch'(V0, V1, V2, V3, V1557)) end(E1435, E1436, E1437, E1438, E1439)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1429} -> (fun (V1558) -> fun (V1559) -> case V4 of {'Idris.TTImp.TTImp.IType', E1430} -> (fun (V1560) -> {'Idris.Prelude.Types.Right', []} end(E1430)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1559)) end end end(E1429)); {'Idris.TTImp.TTImp.IPrimVal', E1431, E1432} -> (fun (V1561, V1562) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1433, E1434} -> (fun (V1563, V1564) -> fun (V1565) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1562, V1564)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1561, V1565)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1433, E1434)); _ -> fun (V1566) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1566)) end end end(E1431, E1432)); _ -> fun (V1567) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1567)) end end end end end(E1426, E1427, E1428)); {'Idris.TTImp.TTImp.IAs', E1443, E1444, E1445, E1446, E1447} -> (fun (V1568, V1569, V1570, V1571, V1572) -> case V1571 of {'Idris.Core.Name.UN', E1448} -> (fun (V1573) -> case V1573 of {'Idris.Core.Name.Basic', E1449} -> (fun (V1574) -> case V4 of {'Idris.TTImp.TTImp.IAs', E1452, E1453, E1454, E1455, E1456} -> (fun (V1575, V1576, V1577, V1578, V1579) -> fun (V1580) -> case V1578 of {'Idris.Core.Name.UN', E1459} -> (fun (V1581) -> case V1581 of {'Idris.Core.Name.Basic', E1462} -> (fun (V1582) -> begin (V1583 = (('un--getMatch'(V0, V1, V2, V1572, V1579))(V1580))), case V1583 of {'Idris.Prelude.Types.Left', E1463} -> (fun (V1584) -> {'Idris.Prelude.Types.Left', V1584} end(E1463)); {'Idris.Prelude.Types.Right', E1464} -> (fun (V1585) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1574, {'Idris.TTImp.TTImp.IBindVar', V1576, V1582}} | V1585], V1580)) end(E1464)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1462)); _ -> begin (V1586 = (('un--getMatch'(V0, V1, V2, V1572, V4))(V1580))), case V1586 of {'Idris.Prelude.Types.Left', E1460} -> (fun (V1587) -> {'Idris.Prelude.Types.Left', V1587} end(E1460)); {'Idris.Prelude.Types.Right', E1461} -> (fun (V1588) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1574, V4} | V1588], V1580)) end(E1461)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1459)); _ -> begin (V1589 = (('un--getMatch'(V0, V1, V2, V1572, V4))(V1580))), case V1589 of {'Idris.Prelude.Types.Left', E1457} -> (fun (V1590) -> {'Idris.Prelude.Types.Left', V1590} end(E1457)); {'Idris.Prelude.Types.Right', E1458} -> (fun (V1591) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1574, V4} | V1591], V1580)) end(E1458)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1452, E1453, E1454, E1455, E1456)); _ -> fun (V1592) -> begin (V1593 = (('un--getMatch'(V0, V1, V2, V1572, V4))(V1592))), case V1593 of {'Idris.Prelude.Types.Left', E1450} -> (fun (V1594) -> {'Idris.Prelude.Types.Left', V1594} end(E1450)); {'Idris.Prelude.Types.Right', E1451} -> (fun (V1595) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1574, V4} | V1595], V1592)) end(E1451)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1449)); _ -> ('un--getMatch'(V0, V1, V2, V1572, V4)) end end(E1448)); _ -> ('un--getMatch'(V0, V1, V2, V1572, V4)) end end(E1443, E1444, E1445, E1446, E1447)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1421, E1422, E1423, E1424, E1425} -> (fun (V1596, V1597, V1598, V1599, V1600) -> ('un--getMatch'(V0, V1, V2, V3, V1600)) end(E1421, E1422, E1423, E1424, E1425)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1415} -> (fun (V1601) -> fun (V1602) -> case V4 of {'Idris.TTImp.TTImp.IType', E1416} -> (fun (V1603) -> {'Idris.Prelude.Types.Right', []} end(E1416)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1602)) end end end(E1415)); {'Idris.TTImp.TTImp.IPrimVal', E1417, E1418} -> (fun (V1604, V1605) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1419, E1420} -> (fun (V1606, V1607) -> fun (V1608) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1605, V1607)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1604, V1608)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1419, E1420)); _ -> fun (V1609) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1609)) end end end(E1417, E1418)); _ -> fun (V1610) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1610)) end end end end end end; 0 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E1536, E1537, E1538, E1539} -> (fun (V1611, V1612, V1613, V1614) -> ('un--getMatch'(V0, V1, 0, V1612, V1612)) end(E1536, E1537, E1538, E1539)); {'Idris.TTImp.TTImp.IAutoApp', E1540, E1541, E1542} -> (fun (V1615, V1616, V1617) -> ('un--getMatch'(V0, V1, 0, V1616, V1616)) end(E1540, E1541, E1542)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E1529, E1530, E1531, E1532} -> (fun (V1618, V1619, V1620, V1621) -> fun (V1622) -> ('un--matchFail'(V1618, V1622)) end end(E1529, E1530, E1531, E1532)); {'Idris.TTImp.TTImp.IAutoApp', E1533, E1534, E1535} -> (fun (V1623, V1624, V1625) -> fun (V1626) -> ('un--matchFail'(V1623, V1626)) end end(E1533, E1534, E1535)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E1490, E1491, E1492} -> (fun (V1627, V1628, V1629) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E1504, E1505, E1506} -> (fun (V1630, V1631, V1632) -> fun (V1633) -> ('un--matchAny'(V0, V1, V1627, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1629, V1632)), V1633)) end end(E1504, E1505, E1506)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1499, E1500, E1501, E1502, E1503} -> (fun (V1634, V1635, V1636, V1637, V1638) -> ('un--getMatch'(V0, V1, V2, V3, V1638)) end(E1499, E1500, E1501, E1502, E1503)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1493} -> (fun (V1639) -> fun (V1640) -> case V4 of {'Idris.TTImp.TTImp.IType', E1494} -> (fun (V1641) -> {'Idris.Prelude.Types.Right', []} end(E1494)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1640)) end end end(E1493)); {'Idris.TTImp.TTImp.IPrimVal', E1495, E1496} -> (fun (V1642, V1643) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1497, E1498} -> (fun (V1644, V1645) -> fun (V1646) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1643, V1645)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1642, V1646)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1497, E1498)); _ -> fun (V1647) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1647)) end end end(E1495, E1496)); _ -> fun (V1648) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1648)) end end end end end(E1490, E1491, E1492)); {'Idris.TTImp.TTImp.IAs', E1507, E1508, E1509, E1510, E1511} -> (fun (V1649, V1650, V1651, V1652, V1653) -> case V1652 of {'Idris.Core.Name.UN', E1512} -> (fun (V1654) -> case V1654 of {'Idris.Core.Name.Basic', E1513} -> (fun (V1655) -> case V4 of {'Idris.TTImp.TTImp.IAs', E1516, E1517, E1518, E1519, E1520} -> (fun (V1656, V1657, V1658, V1659, V1660) -> fun (V1661) -> case V1659 of {'Idris.Core.Name.UN', E1523} -> (fun (V1662) -> case V1662 of {'Idris.Core.Name.Basic', E1526} -> (fun (V1663) -> begin (V1664 = (('un--getMatch'(V0, V1, V2, V1653, V1660))(V1661))), case V1664 of {'Idris.Prelude.Types.Left', E1527} -> (fun (V1665) -> {'Idris.Prelude.Types.Left', V1665} end(E1527)); {'Idris.Prelude.Types.Right', E1528} -> (fun (V1666) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1655, {'Idris.TTImp.TTImp.IBindVar', V1657, V1663}} | V1666], V1661)) end(E1528)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1526)); _ -> begin (V1667 = (('un--getMatch'(V0, V1, V2, V1653, V4))(V1661))), case V1667 of {'Idris.Prelude.Types.Left', E1524} -> (fun (V1668) -> {'Idris.Prelude.Types.Left', V1668} end(E1524)); {'Idris.Prelude.Types.Right', E1525} -> (fun (V1669) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1655, V4} | V1669], V1661)) end(E1525)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1523)); _ -> begin (V1670 = (('un--getMatch'(V0, V1, V2, V1653, V4))(V1661))), case V1670 of {'Idris.Prelude.Types.Left', E1521} -> (fun (V1671) -> {'Idris.Prelude.Types.Left', V1671} end(E1521)); {'Idris.Prelude.Types.Right', E1522} -> (fun (V1672) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1655, V4} | V1672], V1661)) end(E1522)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1516, E1517, E1518, E1519, E1520)); _ -> fun (V1673) -> begin (V1674 = (('un--getMatch'(V0, V1, V2, V1653, V4))(V1673))), case V1674 of {'Idris.Prelude.Types.Left', E1514} -> (fun (V1675) -> {'Idris.Prelude.Types.Left', V1675} end(E1514)); {'Idris.Prelude.Types.Right', E1515} -> (fun (V1676) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1655, V4} | V1676], V1673)) end(E1515)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1513)); _ -> ('un--getMatch'(V0, V1, V2, V1653, V4)) end end(E1512)); _ -> ('un--getMatch'(V0, V1, V2, V1653, V4)) end end(E1507, E1508, E1509, E1510, E1511)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1485, E1486, E1487, E1488, E1489} -> (fun (V1677, V1678, V1679, V1680, V1681) -> ('un--getMatch'(V0, V1, V2, V3, V1681)) end(E1485, E1486, E1487, E1488, E1489)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1479} -> (fun (V1682) -> fun (V1683) -> case V4 of {'Idris.TTImp.TTImp.IType', E1480} -> (fun (V1684) -> {'Idris.Prelude.Types.Right', []} end(E1480)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1683)) end end end(E1479)); {'Idris.TTImp.TTImp.IPrimVal', E1481, E1482} -> (fun (V1685, V1686) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1483, E1484} -> (fun (V1687, V1688) -> fun (V1689) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1686, V1688)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1685, V1689)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1483, E1484)); _ -> fun (V1690) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1690)) end end end(E1481, E1482)); _ -> fun (V1691) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1691)) end end end end end end; _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E1408, E1409, E1410, E1411} -> (fun (V1692, V1693, V1694, V1695) -> fun (V1696) -> ('un--matchFail'(V1692, V1696)) end end(E1408, E1409, E1410, E1411)); {'Idris.TTImp.TTImp.IAutoApp', E1412, E1413, E1414} -> (fun (V1697, V1698, V1699) -> fun (V1700) -> ('un--matchFail'(V1697, V1700)) end end(E1412, E1413, E1414)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E1369, E1370, E1371} -> (fun (V1701, V1702, V1703) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E1383, E1384, E1385} -> (fun (V1704, V1705, V1706) -> fun (V1707) -> ('un--matchAny'(V0, V1, V1701, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1703, V1706)), V1707)) end end(E1383, E1384, E1385)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1378, E1379, E1380, E1381, E1382} -> (fun (V1708, V1709, V1710, V1711, V1712) -> ('un--getMatch'(V0, V1, V2, V3, V1712)) end(E1378, E1379, E1380, E1381, E1382)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1372} -> (fun (V1713) -> fun (V1714) -> case V4 of {'Idris.TTImp.TTImp.IType', E1373} -> (fun (V1715) -> {'Idris.Prelude.Types.Right', []} end(E1373)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1714)) end end end(E1372)); {'Idris.TTImp.TTImp.IPrimVal', E1374, E1375} -> (fun (V1716, V1717) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1376, E1377} -> (fun (V1718, V1719) -> fun (V1720) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1717, V1719)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1716, V1720)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1376, E1377)); _ -> fun (V1721) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1721)) end end end(E1374, E1375)); _ -> fun (V1722) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1722)) end end end end end(E1369, E1370, E1371)); {'Idris.TTImp.TTImp.IAs', E1386, E1387, E1388, E1389, E1390} -> (fun (V1723, V1724, V1725, V1726, V1727) -> case V1726 of {'Idris.Core.Name.UN', E1391} -> (fun (V1728) -> case V1728 of {'Idris.Core.Name.Basic', E1392} -> (fun (V1729) -> case V4 of {'Idris.TTImp.TTImp.IAs', E1395, E1396, E1397, E1398, E1399} -> (fun (V1730, V1731, V1732, V1733, V1734) -> fun (V1735) -> case V1733 of {'Idris.Core.Name.UN', E1402} -> (fun (V1736) -> case V1736 of {'Idris.Core.Name.Basic', E1405} -> (fun (V1737) -> begin (V1738 = (('un--getMatch'(V0, V1, V2, V1727, V1734))(V1735))), case V1738 of {'Idris.Prelude.Types.Left', E1406} -> (fun (V1739) -> {'Idris.Prelude.Types.Left', V1739} end(E1406)); {'Idris.Prelude.Types.Right', E1407} -> (fun (V1740) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1729, {'Idris.TTImp.TTImp.IBindVar', V1731, V1737}} | V1740], V1735)) end(E1407)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1405)); _ -> begin (V1741 = (('un--getMatch'(V0, V1, V2, V1727, V4))(V1735))), case V1741 of {'Idris.Prelude.Types.Left', E1403} -> (fun (V1742) -> {'Idris.Prelude.Types.Left', V1742} end(E1403)); {'Idris.Prelude.Types.Right', E1404} -> (fun (V1743) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1729, V4} | V1743], V1735)) end(E1404)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1402)); _ -> begin (V1744 = (('un--getMatch'(V0, V1, V2, V1727, V4))(V1735))), case V1744 of {'Idris.Prelude.Types.Left', E1400} -> (fun (V1745) -> {'Idris.Prelude.Types.Left', V1745} end(E1400)); {'Idris.Prelude.Types.Right', E1401} -> (fun (V1746) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1729, V4} | V1746], V1735)) end(E1401)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1395, E1396, E1397, E1398, E1399)); _ -> fun (V1747) -> begin (V1748 = (('un--getMatch'(V0, V1, V2, V1727, V4))(V1747))), case V1748 of {'Idris.Prelude.Types.Left', E1393} -> (fun (V1749) -> {'Idris.Prelude.Types.Left', V1749} end(E1393)); {'Idris.Prelude.Types.Right', E1394} -> (fun (V1750) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1729, V4} | V1750], V1747)) end(E1394)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1392)); _ -> ('un--getMatch'(V0, V1, V2, V1727, V4)) end end(E1391)); _ -> ('un--getMatch'(V0, V1, V2, V1727, V4)) end end(E1386, E1387, E1388, E1389, E1390)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E1364, E1365, E1366, E1367, E1368} -> (fun (V1751, V1752, V1753, V1754, V1755) -> ('un--getMatch'(V0, V1, V2, V3, V1755)) end(E1364, E1365, E1366, E1367, E1368)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E1358} -> (fun (V1756) -> fun (V1757) -> case V4 of {'Idris.TTImp.TTImp.IType', E1359} -> (fun (V1758) -> {'Idris.Prelude.Types.Right', []} end(E1359)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1757)) end end end(E1358)); {'Idris.TTImp.TTImp.IPrimVal', E1360, E1361} -> (fun (V1759, V1760) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E1362, E1363} -> (fun (V1761, V1762) -> fun (V1763) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1760, V1762)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1759, V1763)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1362, E1363)); _ -> fun (V1764) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1764)) end end end(E1360, E1361)); _ -> fun (V1765) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1765)) end end end end end end end end(E1355, E1356, E1357)); _ -> case V2 of 1 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E114, E115, E116, E117} -> (fun (V1766, V1767, V1768, V1769) -> fun (V1770) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V1767, V4} | [{'Idris.Builtin.MkPair', V1769, V1769} | []]], V1770)) end end(E114, E115, E116, E117)); {'Idris.TTImp.TTImp.IAutoApp', E118, E119, E120} -> (fun (V1771, V1772, V1773) -> fun (V1774) -> ('un--matchAll'(V0, V1, 1, [{'Idris.Builtin.MkPair', V1772, V4} | [{'Idris.Builtin.MkPair', V1773, V1773} | []]], V1774)) end end(E118, E119, E120)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E107, E108, E109, E110} -> (fun (V1775, V1776, V1777, V1778) -> fun (V1779) -> ('un--matchFail'(V1775, V1779)) end end(E107, E108, E109, E110)); {'Idris.TTImp.TTImp.IAutoApp', E111, E112, E113} -> (fun (V1780, V1781, V1782) -> fun (V1783) -> ('un--matchFail'(V1780, V1783)) end end(E111, E112, E113)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E68, E69, E70} -> (fun (V1784, V1785, V1786) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E82, E83, E84} -> (fun (V1787, V1788, V1789) -> fun (V1790) -> ('un--matchAny'(V0, V1, V1784, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1786, V1789)), V1790)) end end(E82, E83, E84)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E77, E78, E79, E80, E81} -> (fun (V1791, V1792, V1793, V1794, V1795) -> ('un--getMatch'(V0, V1, V2, V3, V1795)) end(E77, E78, E79, E80, E81)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E71} -> (fun (V1796) -> fun (V1797) -> case V4 of {'Idris.TTImp.TTImp.IType', E72} -> (fun (V1798) -> {'Idris.Prelude.Types.Right', []} end(E72)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1797)) end end end(E71)); {'Idris.TTImp.TTImp.IPrimVal', E73, E74} -> (fun (V1799, V1800) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E75, E76} -> (fun (V1801, V1802) -> fun (V1803) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1800, V1802)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1799, V1803)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E75, E76)); _ -> fun (V1804) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1804)) end end end(E73, E74)); _ -> fun (V1805) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1805)) end end end end end(E68, E69, E70)); {'Idris.TTImp.TTImp.IAs', E85, E86, E87, E88, E89} -> (fun (V1806, V1807, V1808, V1809, V1810) -> case V1809 of {'Idris.Core.Name.UN', E90} -> (fun (V1811) -> case V1811 of {'Idris.Core.Name.Basic', E91} -> (fun (V1812) -> case V4 of {'Idris.TTImp.TTImp.IAs', E94, E95, E96, E97, E98} -> (fun (V1813, V1814, V1815, V1816, V1817) -> fun (V1818) -> case V1816 of {'Idris.Core.Name.UN', E101} -> (fun (V1819) -> case V1819 of {'Idris.Core.Name.Basic', E104} -> (fun (V1820) -> begin (V1821 = (('un--getMatch'(V0, V1, V2, V1810, V1817))(V1818))), case V1821 of {'Idris.Prelude.Types.Left', E105} -> (fun (V1822) -> {'Idris.Prelude.Types.Left', V1822} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V1823) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1812, {'Idris.TTImp.TTImp.IBindVar', V1814, V1820}} | V1823], V1818)) end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E104)); _ -> begin (V1824 = (('un--getMatch'(V0, V1, V2, V1810, V4))(V1818))), case V1824 of {'Idris.Prelude.Types.Left', E102} -> (fun (V1825) -> {'Idris.Prelude.Types.Left', V1825} end(E102)); {'Idris.Prelude.Types.Right', E103} -> (fun (V1826) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1812, V4} | V1826], V1818)) end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E101)); _ -> begin (V1827 = (('un--getMatch'(V0, V1, V2, V1810, V4))(V1818))), case V1827 of {'Idris.Prelude.Types.Left', E99} -> (fun (V1828) -> {'Idris.Prelude.Types.Left', V1828} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V1829) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1812, V4} | V1829], V1818)) end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E94, E95, E96, E97, E98)); _ -> fun (V1830) -> begin (V1831 = (('un--getMatch'(V0, V1, V2, V1810, V4))(V1830))), case V1831 of {'Idris.Prelude.Types.Left', E92} -> (fun (V1832) -> {'Idris.Prelude.Types.Left', V1832} end(E92)); {'Idris.Prelude.Types.Right', E93} -> (fun (V1833) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1812, V4} | V1833], V1830)) end(E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E91)); _ -> ('un--getMatch'(V0, V1, V2, V1810, V4)) end end(E90)); _ -> ('un--getMatch'(V0, V1, V2, V1810, V4)) end end(E85, E86, E87, E88, E89)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E63, E64, E65, E66, E67} -> (fun (V1834, V1835, V1836, V1837, V1838) -> ('un--getMatch'(V0, V1, V2, V3, V1838)) end(E63, E64, E65, E66, E67)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E57} -> (fun (V1839) -> fun (V1840) -> case V4 of {'Idris.TTImp.TTImp.IType', E58} -> (fun (V1841) -> {'Idris.Prelude.Types.Right', []} end(E58)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1840)) end end end(E57)); {'Idris.TTImp.TTImp.IPrimVal', E59, E60} -> (fun (V1842, V1843) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E61, E62} -> (fun (V1844, V1845) -> fun (V1846) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1843, V1845)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1842, V1846)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61, E62)); _ -> fun (V1847) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1847)) end end end(E59, E60)); _ -> fun (V1848) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1848)) end end end end end end; 0 -> case V3 of {'Idris.TTImp.TTImp.INamedApp', E178, E179, E180, E181} -> (fun (V1849, V1850, V1851, V1852) -> ('un--getMatch'(V0, V1, 0, V1850, V1850)) end(E178, E179, E180, E181)); {'Idris.TTImp.TTImp.IAutoApp', E182, E183, E184} -> (fun (V1853, V1854, V1855) -> ('un--getMatch'(V0, V1, 0, V1854, V1854)) end(E182, E183, E184)); _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E171, E172, E173, E174} -> (fun (V1856, V1857, V1858, V1859) -> fun (V1860) -> ('un--matchFail'(V1856, V1860)) end end(E171, E172, E173, E174)); {'Idris.TTImp.TTImp.IAutoApp', E175, E176, E177} -> (fun (V1861, V1862, V1863) -> fun (V1864) -> ('un--matchFail'(V1861, V1864)) end end(E175, E176, E177)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E132, E133, E134} -> (fun (V1865, V1866, V1867) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E146, E147, E148} -> (fun (V1868, V1869, V1870) -> fun (V1871) -> ('un--matchAny'(V0, V1, V1865, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1867, V1870)), V1871)) end end(E146, E147, E148)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E141, E142, E143, E144, E145} -> (fun (V1872, V1873, V1874, V1875, V1876) -> ('un--getMatch'(V0, V1, V2, V3, V1876)) end(E141, E142, E143, E144, E145)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E135} -> (fun (V1877) -> fun (V1878) -> case V4 of {'Idris.TTImp.TTImp.IType', E136} -> (fun (V1879) -> {'Idris.Prelude.Types.Right', []} end(E136)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1878)) end end end(E135)); {'Idris.TTImp.TTImp.IPrimVal', E137, E138} -> (fun (V1880, V1881) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E139, E140} -> (fun (V1882, V1883) -> fun (V1884) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1881, V1883)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1880, V1884)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E139, E140)); _ -> fun (V1885) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1885)) end end end(E137, E138)); _ -> fun (V1886) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1886)) end end end end end(E132, E133, E134)); {'Idris.TTImp.TTImp.IAs', E149, E150, E151, E152, E153} -> (fun (V1887, V1888, V1889, V1890, V1891) -> case V1890 of {'Idris.Core.Name.UN', E154} -> (fun (V1892) -> case V1892 of {'Idris.Core.Name.Basic', E155} -> (fun (V1893) -> case V4 of {'Idris.TTImp.TTImp.IAs', E158, E159, E160, E161, E162} -> (fun (V1894, V1895, V1896, V1897, V1898) -> fun (V1899) -> case V1897 of {'Idris.Core.Name.UN', E165} -> (fun (V1900) -> case V1900 of {'Idris.Core.Name.Basic', E168} -> (fun (V1901) -> begin (V1902 = (('un--getMatch'(V0, V1, V2, V1891, V1898))(V1899))), case V1902 of {'Idris.Prelude.Types.Left', E169} -> (fun (V1903) -> {'Idris.Prelude.Types.Left', V1903} end(E169)); {'Idris.Prelude.Types.Right', E170} -> (fun (V1904) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1893, {'Idris.TTImp.TTImp.IBindVar', V1895, V1901}} | V1904], V1899)) end(E170)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E168)); _ -> begin (V1905 = (('un--getMatch'(V0, V1, V2, V1891, V4))(V1899))), case V1905 of {'Idris.Prelude.Types.Left', E166} -> (fun (V1906) -> {'Idris.Prelude.Types.Left', V1906} end(E166)); {'Idris.Prelude.Types.Right', E167} -> (fun (V1907) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1893, V4} | V1907], V1899)) end(E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E165)); _ -> begin (V1908 = (('un--getMatch'(V0, V1, V2, V1891, V4))(V1899))), case V1908 of {'Idris.Prelude.Types.Left', E163} -> (fun (V1909) -> {'Idris.Prelude.Types.Left', V1909} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V1910) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1893, V4} | V1910], V1899)) end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E158, E159, E160, E161, E162)); _ -> fun (V1911) -> begin (V1912 = (('un--getMatch'(V0, V1, V2, V1891, V4))(V1911))), case V1912 of {'Idris.Prelude.Types.Left', E156} -> (fun (V1913) -> {'Idris.Prelude.Types.Left', V1913} end(E156)); {'Idris.Prelude.Types.Right', E157} -> (fun (V1914) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1893, V4} | V1914], V1911)) end(E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E155)); _ -> ('un--getMatch'(V0, V1, V2, V1891, V4)) end end(E154)); _ -> ('un--getMatch'(V0, V1, V2, V1891, V4)) end end(E149, E150, E151, E152, E153)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E127, E128, E129, E130, E131} -> (fun (V1915, V1916, V1917, V1918, V1919) -> ('un--getMatch'(V0, V1, V2, V3, V1919)) end(E127, E128, E129, E130, E131)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E121} -> (fun (V1920) -> fun (V1921) -> case V4 of {'Idris.TTImp.TTImp.IType', E122} -> (fun (V1922) -> {'Idris.Prelude.Types.Right', []} end(E122)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1921)) end end end(E121)); {'Idris.TTImp.TTImp.IPrimVal', E123, E124} -> (fun (V1923, V1924) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E125, E126} -> (fun (V1925, V1926) -> fun (V1927) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1924, V1926)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1923, V1927)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E125, E126)); _ -> fun (V1928) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1928)) end end end(E123, E124)); _ -> fun (V1929) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1929)) end end end end end end; _ -> case V4 of {'Idris.TTImp.TTImp.INamedApp', E50, E51, E52, E53} -> (fun (V1930, V1931, V1932, V1933) -> fun (V1934) -> ('un--matchFail'(V1930, V1934)) end end(E50, E51, E52, E53)); {'Idris.TTImp.TTImp.IAutoApp', E54, E55, E56} -> (fun (V1935, V1936, V1937) -> fun (V1938) -> ('un--matchFail'(V1935, V1938)) end end(E54, E55, E56)); _ -> case V3 of {'Idris.TTImp.TTImp.IAlternative', E11, E12, E13} -> (fun (V1939, V1940, V1941) -> case V4 of {'Idris.TTImp.TTImp.IAlternative', E25, E26, E27} -> (fun (V1942, V1943, V1944) -> fun (V1945) -> ('un--matchAny'(V0, V1, V1939, V2, ('Idris.Idris2.Data.List':'dn--un--zip_Zippable_List'(V1941, V1944)), V1945)) end end(E25, E26, E27)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E20, E21, E22, E23, E24} -> (fun (V1946, V1947, V1948, V1949, V1950) -> ('un--getMatch'(V0, V1, V2, V3, V1950)) end(E20, E21, E22, E23, E24)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E14} -> (fun (V1951) -> fun (V1952) -> case V4 of {'Idris.TTImp.TTImp.IType', E15} -> (fun (V1953) -> {'Idris.Prelude.Types.Right', []} end(E15)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1952)) end end end(E14)); {'Idris.TTImp.TTImp.IPrimVal', E16, E17} -> (fun (V1954, V1955) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E18, E19} -> (fun (V1956, V1957) -> fun (V1958) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1955, V1957)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1954, V1958)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18, E19)); _ -> fun (V1959) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1959)) end end end(E16, E17)); _ -> fun (V1960) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1960)) end end end end end(E11, E12, E13)); {'Idris.TTImp.TTImp.IAs', E28, E29, E30, E31, E32} -> (fun (V1961, V1962, V1963, V1964, V1965) -> case V1964 of {'Idris.Core.Name.UN', E33} -> (fun (V1966) -> case V1966 of {'Idris.Core.Name.Basic', E34} -> (fun (V1967) -> case V4 of {'Idris.TTImp.TTImp.IAs', E37, E38, E39, E40, E41} -> (fun (V1968, V1969, V1970, V1971, V1972) -> fun (V1973) -> case V1971 of {'Idris.Core.Name.UN', E44} -> (fun (V1974) -> case V1974 of {'Idris.Core.Name.Basic', E47} -> (fun (V1975) -> begin (V1976 = (('un--getMatch'(V0, V1, V2, V1965, V1972))(V1973))), case V1976 of {'Idris.Prelude.Types.Left', E48} -> (fun (V1977) -> {'Idris.Prelude.Types.Left', V1977} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V1978) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1967, {'Idris.TTImp.TTImp.IBindVar', V1969, V1975}} | V1978], V1973)) end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> begin (V1979 = (('un--getMatch'(V0, V1, V2, V1965, V4))(V1973))), case V1979 of {'Idris.Prelude.Types.Left', E45} -> (fun (V1980) -> {'Idris.Prelude.Types.Left', V1980} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V1981) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1967, V4} | V1981], V1973)) end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E44)); _ -> begin (V1982 = (('un--getMatch'(V0, V1, V2, V1965, V4))(V1973))), case V1982 of {'Idris.Prelude.Types.Left', E42} -> (fun (V1983) -> {'Idris.Prelude.Types.Left', V1983} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V1984) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1967, V4} | V1984], V1973)) end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E37, E38, E39, E40, E41)); _ -> fun (V1985) -> begin (V1986 = (('un--getMatch'(V0, V1, V2, V1965, V4))(V1985))), case V1986 of {'Idris.Prelude.Types.Left', E35} -> (fun (V1987) -> {'Idris.Prelude.Types.Left', V1987} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V1988) -> ('un--mergeMatches'(V0, V1, V2, [{'Idris.Builtin.MkPair', V1967, V4} | V1988], V1985)) end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E34)); _ -> ('un--getMatch'(V0, V1, V2, V1965, V4)) end end(E33)); _ -> ('un--getMatch'(V0, V1, V2, V1965, V4)) end end(E28, E29, E30, E31, E32)); _ -> case V4 of {'Idris.TTImp.TTImp.IAs', E6, E7, E8, E9, E10} -> (fun (V1989, V1990, V1991, V1992, V1993) -> ('un--getMatch'(V0, V1, V2, V3, V1993)) end(E6, E7, E8, E9, E10)); _ -> case V3 of {'Idris.TTImp.TTImp.IType', E0} -> (fun (V1994) -> fun (V1995) -> case V4 of {'Idris.TTImp.TTImp.IType', E1} -> (fun (V1996) -> {'Idris.Prelude.Types.Right', []} end(E1)); _ -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V1995)) end end end(E0)); {'Idris.TTImp.TTImp.IPrimVal', E2, E3} -> (fun (V1997, V1998) -> case V4 of {'Idris.TTImp.TTImp.IPrimVal', E4, E5} -> (fun (V1999, V2000) -> fun (V2001) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_Constant'(V1998, V2000)) of 1 -> {'Idris.Prelude.Types.Right', []}; 0 -> ('un--matchFail'(V1997, V2001)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5)); _ -> fun (V2002) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2002)) end end end(E2, E3)); _ -> fun (V2003) -> ('un--matchFail'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V3)), V2003)) end end end end end end end.
'un--getHeadLoc'(V0) -> case V0 of {'Idris.TTImp.TTImp.IVar', E0, E1} -> (fun (V1, V2) -> fun (V3) -> {'Idris.Prelude.Types.Right', V1} end end(E0, E1)); {'Idris.TTImp.TTImp.IApp', E2, E3, E4} -> (fun (V4, V5, V6) -> ('un--getHeadLoc'(V5)) end(E2, E3, E4)); {'Idris.TTImp.TTImp.IAutoApp', E5, E6, E7} -> (fun (V7, V8, V9) -> ('un--getHeadLoc'(V8)) end(E5, E6, E7)); {'Idris.TTImp.TTImp.INamedApp', E8, E9, E10, E11} -> (fun (V10, V11, V12, V13) -> ('un--getHeadLoc'(V11)) end(E8, E9, E10, E11)); _ -> fun (V14) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Could not find head of LHS: "/utf8>>, ('Idris.Idris2.TTImp.TTImp':'dn--un--show_Show_(RawImp\x{27} $nm)'({'Idris.Prelude.Show.MkShow', fun (V15) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V15)) end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V16, V17)) end end}, V0))))}, V14)) end end.
'un--getArgMatch'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> V3 end()); _ -> case V2 of 1 -> case V5 of {'Idris.Prelude.Types.Just', E8} -> (fun (V6) -> case V6 of {'Idris.Builtin.MkPair', E13, E14} -> (fun (V7, V8) -> case V7 of {'Idris.Core.TT.AutoImplicit'} -> (fun () -> case ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isUN'(V8)), fun (V9) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isBasic'(V9)), fun (V10) -> ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V11) -> fun (V12) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V11, V12)) end end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V13, V14)) end end}, V10, V4)) end)) end)) of {'Idris.Prelude.Types.Just', E19} -> (fun (V15) -> V15 end(E19)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V16 = {'Idris.TTImp.TTImp.ISearch', V0, ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num_Nat'(500))}), case ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.TTImp.Elab.Check':'un--isLHS'(V1)))) of 1 -> {'Idris.TTImp.TTImp.IAs', V0, V0, 0, V8, V16}; 0 -> V16; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end()); _ -> case V5 of {'Idris.Prelude.Types.Just', E15} -> (fun (V17) -> case V17 of {'Idris.Builtin.MkPair', E16, E17} -> (fun (V18, V19) -> case ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isUN'(V19)), fun (V20) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isBasic'(V20)), fun (V21) -> ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V22, V23)) end end, fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V24, V25)) end end}, V21, V4)) end)) end)) of {'Idris.Prelude.Types.Just', E18} -> (fun (V26) -> V26 end(E18)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V27 = {'Idris.TTImp.TTImp.Implicit', V0, 1}), case ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.TTImp.Elab.Check':'un--isLHS'(V1)))) of 1 -> {'Idris.TTImp.TTImp.IAs', V0, V0, 0, V19, V27}; 0 -> V27; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13, E14)); _ -> case V5 of {'Idris.Prelude.Types.Just', E9} -> (fun (V28) -> case V28 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V29, V30) -> case ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isUN'(V30)), fun (V31) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isBasic'(V31)), fun (V32) -> ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V33, V34)) end end, fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V35, V36)) end end}, V32, V4)) end)) end)) of {'Idris.Prelude.Types.Just', E12} -> (fun (V37) -> V37 end(E12)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V38 = {'Idris.TTImp.TTImp.Implicit', V0, 1}), case ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.TTImp.Elab.Check':'un--isLHS'(V1)))) of 1 -> {'Idris.TTImp.TTImp.IAs', V0, V0, 0, V30, V38}; 0 -> V38; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> case V5 of {'Idris.Prelude.Types.Just', E4} -> (fun (V39) -> case V39 of {'Idris.Builtin.MkPair', E5, E6} -> (fun (V40, V41) -> case ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isUN'(V41)), fun (V42) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isBasic'(V42)), fun (V43) -> ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V44) -> fun (V45) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V44, V45)) end end, fun (V46) -> fun (V47) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V46, V47)) end end}, V43, V4)) end)) end)) of {'Idris.Prelude.Types.Just', E7} -> (fun (V48) -> V48 end(E7)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V49 = {'Idris.TTImp.TTImp.Implicit', V0, 1}), case ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.TTImp.Elab.Check':'un--isLHS'(V1)))) of 1 -> {'Idris.TTImp.TTImp.IAs', V0, V0, 0, V41, V49}; 0 -> V49; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5, E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> case V5 of {'Idris.Prelude.Types.Just', E0} -> (fun (V50) -> case V50 of {'Idris.Builtin.MkPair', E1, E2} -> (fun (V51, V52) -> case ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isUN'(V52)), fun (V53) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Core.Name':'un--isBasic'(V53)), fun (V54) -> ('Idris.Idris2.Data.List':'un--lookup'({'Idris.Prelude.EqOrd.MkEq', fun (V55) -> fun (V56) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_String'(V55, V56)) end end, fun (V57) -> fun (V58) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V57, V58)) end end}, V54, V4)) end)) end)) of {'Idris.Prelude.Types.Just', E3} -> (fun (V59) -> V59 end(E3)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V60 = {'Idris.TTImp.TTImp.Implicit', V0, 1}), case ('Idris.Idris2.Data.Maybe':'un--isJust'(('Idris.Idris2.TTImp.Elab.Check':'un--isLHS'(V1)))) of 1 -> {'Idris.TTImp.TTImp.IAs', V0, V0, 0, V52, V60}; 0 -> V60; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--addAlias'(V0, V1, V2, V3, V4) -> case ('Idris.Idris2.Core.FC':'un--isConcreteFC'(V2)) of {'Idris.Prelude.Types.Just', E0} -> (fun (V5) -> case ('Idris.Idris2.Core.FC':'un--isConcreteFC'(V3)) of {'Idris.Prelude.Types.Just', E1} -> (fun (V6) -> begin (V139 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"ide-mode.highlight.alias"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0))))))))))))))))))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Adding alias: "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V7) -> ('Idris.Idris2.Core.FC':'dn--un--show_Show_OriginDesc'(V7)) end, fun (V8) -> fun (V9) -> ('Idris.Idris2.Core.FC':'dn--un--showPrec_Show_OriginDesc'(V8, V9)) end end}, {'Idris.Prelude.Show.MkShow', fun (V10) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V11) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V12) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V12)) end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V13, V14)) end end}, {'Idris.Prelude.Show.MkShow', fun (V15) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V15)) end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V16, V17)) end end}}, V11)) end, fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V20) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V20)) end, fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V21, V22)) end end}, {'Idris.Prelude.Show.MkShow', fun (V23) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V23)) end, fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V24, V25)) end end}}, V18, V19)) end end}, {'Idris.Prelude.Show.MkShow', fun (V26) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V27) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V27)) end, fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V28, V29)) end end}, {'Idris.Prelude.Show.MkShow', fun (V30) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V30)) end, fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V31, V32)) end end}}, V26)) end, fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V35) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V35)) end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V36, V37)) end end}, {'Idris.Prelude.Show.MkShow', fun (V38) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V38)) end, fun (V39) -> fun (V40) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V39, V40)) end end}}, V33, V34)) end end}}, V10)) end, fun (V41) -> fun (V42) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V43) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V44) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V44)) end, fun (V45) -> fun (V46) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V45, V46)) end end}, {'Idris.Prelude.Show.MkShow', fun (V47) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V47)) end, fun (V48) -> fun (V49) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V48, V49)) end end}}, V43)) end, fun (V50) -> fun (V51) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V52) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V52)) end, fun (V53) -> fun (V54) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V53, V54)) end end}, {'Idris.Prelude.Show.MkShow', fun (V55) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V55)) end, fun (V56) -> fun (V57) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V56, V57)) end end}}, V50, V51)) end end}, {'Idris.Prelude.Show.MkShow', fun (V58) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V59) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V59)) end, fun (V60) -> fun (V61) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V60, V61)) end end}, {'Idris.Prelude.Show.MkShow', fun (V62) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V62)) end, fun (V63) -> fun (V64) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V63, V64)) end end}}, V58)) end, fun (V65) -> fun (V66) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V67) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V67)) end, fun (V68) -> fun (V69) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V68, V69)) end end}, {'Idris.Prelude.Show.MkShow', fun (V70) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V70)) end, fun (V71) -> fun (V72) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V71, V72)) end end}}, V65, V66)) end end}}, V41, V42)) end end}}, V5)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" -> "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V73) -> ('Idris.Idris2.Core.FC':'dn--un--show_Show_OriginDesc'(V73)) end, fun (V74) -> fun (V75) -> ('Idris.Idris2.Core.FC':'dn--un--showPrec_Show_OriginDesc'(V74, V75)) end end}, {'Idris.Prelude.Show.MkShow', fun (V76) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V77) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V78) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V78)) end, fun (V79) -> fun (V80) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V79, V80)) end end}, {'Idris.Prelude.Show.MkShow', fun (V81) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V81)) end, fun (V82) -> fun (V83) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V82, V83)) end end}}, V77)) end, fun (V84) -> fun (V85) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V86) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V86)) end, fun (V87) -> fun (V88) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V87, V88)) end end}, {'Idris.Prelude.Show.MkShow', fun (V89) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V89)) end, fun (V90) -> fun (V91) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V90, V91)) end end}}, V84, V85)) end end}, {'Idris.Prelude.Show.MkShow', fun (V92) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V93) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V93)) end, fun (V94) -> fun (V95) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V94, V95)) end end}, {'Idris.Prelude.Show.MkShow', fun (V96) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V96)) end, fun (V97) -> fun (V98) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V97, V98)) end end}}, V92)) end, fun (V99) -> fun (V100) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V101) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V101)) end, fun (V102) -> fun (V103) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V102, V103)) end end}, {'Idris.Prelude.Show.MkShow', fun (V104) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V104)) end, fun (V105) -> fun (V106) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V105, V106)) end end}}, V99, V100)) end end}}, V76)) end, fun (V107) -> fun (V108) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V109) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V110) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V110)) end, fun (V111) -> fun (V112) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V111, V112)) end end}, {'Idris.Prelude.Show.MkShow', fun (V113) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V113)) end, fun (V114) -> fun (V115) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V114, V115)) end end}}, V109)) end, fun (V116) -> fun (V117) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V118) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V118)) end, fun (V119) -> fun (V120) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V119, V120)) end end}, {'Idris.Prelude.Show.MkShow', fun (V121) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V121)) end, fun (V122) -> fun (V123) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V122, V123)) end end}}, V116, V117)) end end}, {'Idris.Prelude.Show.MkShow', fun (V124) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V125) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V125)) end, fun (V126) -> fun (V127) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V126, V127)) end end}, {'Idris.Prelude.Show.MkShow', fun (V128) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V128)) end, fun (V129) -> fun (V130) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V129, V130)) end end}}, V124)) end, fun (V131) -> fun (V132) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V133) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V133)) end, fun (V134) -> fun (V135) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V134, V135)) end end}, {'Idris.Prelude.Show.MkShow', fun (V136) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V136)) end, fun (V137) -> fun (V138) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V137, V138)) end end}}, V131, V132)) end end}}, V107, V108)) end end}}, V6)))))))) end, V4))), case V139 of {'Idris.Prelude.Types.Left', E2} -> (fun (V140) -> {'Idris.Prelude.Types.Left', V140} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V141) -> ('Idris.Idris2.Core.Metadata':'un--addSemanticAlias'(V0, V5, V6, V4)) end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
