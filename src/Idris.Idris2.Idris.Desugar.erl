-module('Idris.Idris2.Idris.Desugar').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'with--trimMultiline,dropLastNL-7462'/5,
  'with--trimMultiline,trimLast-7333'/6,
  'case--trimMultiline,trimLeft-7595'/9,
  'case--trimMultiline,trimLeft-7508'/8,
  'case--expandString,mergeStrLit-7112'/11,
  'case--toTokList-3973'/9,
  'nested--12925-7329--in--un--trimLeft'/5,
  'nested--12925-7327--in--un--trimLast'/5,
  'nested--12914-7031--in--un--toRawImp'/10,
  'nested--12987-9235--in--un--toRF'/13,
  'nested--12865-6493--in--un--toPure'/12,
  'nested--13005-9347--in--un--toIDef'/10,
  'nested--13005-9870--in--un--pairToCons'/15,
  'nested--12914-7033--in--un--notEmpty'/10,
  'nested--13005-10789--in--un--mkConName'/13,
  'nested--12914-7032--in--un--mergeStrLit'/10,
  'nested--13005-10790--in--un--mapDesugarPiInfo'/15,
  'nested--13005-10319--in--un--isNamed'/17,
  'nested--12865-6492--in--un--guard'/12,
  'nested--13005-10788--in--un--fname'/13,
  'nested--13005-9871--in--un--expandConstraint'/15,
  'nested--12925-7328--in--un--dropLastNL'/4,
  'nested--12914-7034--in--un--concatStr'/11,
  'nested--12407-3956--in--un--backtickPrec'/6,
  'dn--un--__Impl_Eq_Side'/0,
  'dn--un--==_Eq_Side'/2,
  'dn--un--/=_Eq_Side'/2,
  'un--trimMultiline'/4,
  'un--toTokList'/3,
  'un--seqFun'/4,
  'un--pairname'/0,
  'un--mkpairname'/0,
  'un--mkdpairname'/0,
  'un--mkPrec'/2,
  'un--initBangs'/1,
  'un--idiomise'/2,
  'un--getClauseFn'/1,
  'un--extendSyn'/4,
  'un--expandString'/10,
  'un--expandSnocList'/10,
  'un--expandList'/10,
  'un--expandDo'/9,
  'un--dpairname'/0,
  'un--desugarUpdate'/9,
  'un--desugarType'/7,
  'un--desugarTree'/8,
  'un--desugarLHS'/8,
  'un--desugarFnOpt'/7,
  'un--desugarField'/8,
  'un--desugarDo'/9,
  'un--desugarDecl'/6,
  'un--desugarData'/8,
  'un--desugarClause'/8,
  'un--desugarB'/8,
  'un--desugar'/8,
  'un--bindFun'/4,
  'un--bindBangs'/3,
  'un--addNS'/2,
  'un--addFromString'/4
]).
'with--trimMultiline,dropLastNL-7462'(V0, V1, V2, V3, V4) -> case V3 of [] -> case V4 of {'Idris.Data.List.Views.Empty'} -> (fun () -> [] end()); _ -> case V4 of {'Idris.Data.List.Views.Snoc', E5, E6, E7} -> (fun (V5, V6, V7) -> case V5 of {'Idris.Idris.Syntax.StrLiteral', E8, E9} -> (fun (V8, V9) -> ('Idris.Idris2.Data.List':'un--snoc'(V6, {'Idris.Idris.Syntax.StrLiteral', V8, ('Idris.Idris2.Builtin':'un--fst'(('Idris.Idris2.Data.String':'un--break'(fun (V10) -> ('Idris.Idris2.Prelude.Types':'un--isNL'(V10)) end, V9))))})) end(E8, E9)); _ -> V3 end end(E5, E6, E7)); _ -> V3 end end; _ -> case V4 of {'Idris.Data.List.Views.Snoc', E0, E1, E2} -> (fun (V11, V12, V13) -> case V11 of {'Idris.Idris.Syntax.StrLiteral', E3, E4} -> (fun (V14, V15) -> ('Idris.Idris2.Data.List':'un--snoc'(V12, {'Idris.Idris.Syntax.StrLiteral', V14, ('Idris.Idris2.Builtin':'un--fst'(('Idris.Idris2.Data.String':'un--break'(fun (V16) -> ('Idris.Idris2.Prelude.Types':'un--isNL'(V16)) end, V15))))})) end(E3, E4)); _ -> V3 end end(E0, E1, E2)); _ -> V3 end end.
'with--trimMultiline,trimLast-7333'(V0, V1, V2, V3, V4, V5) -> case V3 of [] -> case V4 of {'Idris.Data.List.Views.Empty'} -> (fun () -> fun (V6) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V5, <<"Expected line wrap"/utf8>>}, V6)) end end()); _ -> case V4 of {'Idris.Data.List.Views.Snoc', E7, E8, E9} -> (fun (V7, V8, V9) -> case V7 of [] -> fun (V10) -> {'Idris.Prelude.Types.Right', V0} end; [E10 | E11] -> (fun (V11, V12) -> case V11 of {'Idris.Idris.Syntax.StrLiteral', E12, E13} -> (fun (V13, V14) -> case V12 of [] -> fun (V15) -> case ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V18, V19, V20)) end end end end end, fun (V21) -> fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V23, V24, V25)) end end end end end, fun (V26) -> fun (V27) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V27)) end end, fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V31, V32, V33, V34)) end end end end end end end, fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V36)) end end, fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V39, V40, V41)) end end end end end}, fun (V42) -> case ('Idris.Idris2.Prelude.Types':'un--isSpace'(V42)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('Idris.Idris2.Prelude.Types':'un--fastUnpack'(V14)))) of 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V13, <<"Closing delimiter of multiline strings cannot be preceded by non-whitespace characters"/utf8>>}, V15)); 0 -> {'Idris.Prelude.Types.Right', V8}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V44 = ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> V2 end, ('Idris.Idris2.Libraries.Data.List.Extra':'un--findBy'(fun (V43) -> ('Idris.Idris2.Idris.Syntax':'un--isStrInterp'(V43)) end, V7))))), fun (V45) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V44, <<"Closing delimiter of multiline strings cannot be preceded by non-whitespace characters"/utf8>>}, V45)) end end end end(E12, E13)); _ -> begin (V47 = ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> V2 end, ('Idris.Idris2.Libraries.Data.List.Extra':'un--findBy'(fun (V46) -> ('Idris.Idris2.Idris.Syntax':'un--isStrInterp'(V46)) end, V7))))), fun (V48) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V47, <<"Closing delimiter of multiline strings cannot be preceded by non-whitespace characters"/utf8>>}, V48)) end end end end(E10, E11)); _ -> begin (V50 = ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> V2 end, ('Idris.Idris2.Libraries.Data.List.Extra':'un--findBy'(fun (V49) -> ('Idris.Idris2.Idris.Syntax':'un--isStrInterp'(V49)) end, V7))))), fun (V51) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V50, <<"Closing delimiter of multiline strings cannot be preceded by non-whitespace characters"/utf8>>}, V51)) end end end end(E7, E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> case V4 of {'Idris.Data.List.Views.Snoc', E0, E1, E2} -> (fun (V52, V53, V54) -> case V52 of [] -> fun (V55) -> {'Idris.Prelude.Types.Right', V0} end; [E3 | E4] -> (fun (V56, V57) -> case V56 of {'Idris.Idris.Syntax.StrLiteral', E5, E6} -> (fun (V58, V59) -> case V57 of [] -> fun (V60) -> case ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V63, V64, V65)) end end end end end, fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V68, V69, V70)) end end end end end, fun (V71) -> fun (V72) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V72)) end end, fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V76, V77, V78, V79)) end end end end end end end, fun (V80) -> fun (V81) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V81)) end end, fun (V82) -> fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V84, V85, V86)) end end end end end}, fun (V87) -> case ('Idris.Idris2.Prelude.Types':'un--isSpace'(V87)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('Idris.Idris2.Prelude.Types':'un--fastUnpack'(V59)))) of 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V58, <<"Closing delimiter of multiline strings cannot be preceded by non-whitespace characters"/utf8>>}, V60)); 0 -> {'Idris.Prelude.Types.Right', V53}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V89 = ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> V2 end, ('Idris.Idris2.Libraries.Data.List.Extra':'un--findBy'(fun (V88) -> ('Idris.Idris2.Idris.Syntax':'un--isStrInterp'(V88)) end, V52))))), fun (V90) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V89, <<"Closing delimiter of multiline strings cannot be preceded by non-whitespace characters"/utf8>>}, V90)) end end end end(E5, E6)); _ -> begin (V92 = ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> V2 end, ('Idris.Idris2.Libraries.Data.List.Extra':'un--findBy'(fun (V91) -> ('Idris.Idris2.Idris.Syntax':'un--isStrInterp'(V91)) end, V52))))), fun (V93) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V92, <<"Closing delimiter of multiline strings cannot be preceded by non-whitespace characters"/utf8>>}, V93)) end end end end(E3, E4)); _ -> begin (V95 = ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> V2 end, ('Idris.Idris2.Libraries.Data.List.Extra':'un--findBy'(fun (V94) -> ('Idris.Idris2.Idris.Syntax':'un--isStrInterp'(V94)) end, V52))))), fun (V96) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V95, <<"Closing delimiter of multiline strings cannot be preceded by non-whitespace characters"/utf8>>}, V96)) end end end end(E0, E1, E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'case--trimMultiline,trimLeft-7595'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V7 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> case case ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V13, V14, V15)) end end end end end, fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V18, V19, V20)) end end end end end, fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V22)) end end, fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V26, V27, V28, V29)) end end end end end end end, fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V31)) end end, fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V34, V35, V36)) end end end end end}, fun (V37) -> case ('Idris.Idris2.Prelude.Types':'un--isSpace'(V37)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V9)) of 1 -> 1; 0 -> ('Idris.Idris2.Prelude.Types':'dn--un--<_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V9)), V6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V4, <<"Line is less indented than the closing delimiter"/utf8>>}, V8)); 0 -> {'Idris.Prelude.Types.Right', [{'Idris.Idris.Syntax.StrLiteral', V4, ('Idris.Idris2.Prelude.Types':'un--fastPack'(V10))} | V5]}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--trimMultiline,trimLeft-7508'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V8, V9) -> case ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V12, V13, V14)) end end end end end, fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V17, V18, V19)) end end end end end, fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V21)) end end, fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V25, V26, V27, V28)) end end end end end end end, fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V30)) end end, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V33, V34, V35)) end end end end end}, fun (V36) -> case ('Idris.Idris2.Prelude.Types':'un--isSpace'(V36)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V8)) of 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V4, <<"Line is less indented than the closing delimiter"/utf8>>}, V7)); 0 -> {'Idris.Prelude.Types.Right', [{'Idris.Idris.Syntax.StrLiteral', V4, ('Idris.Idris2.Prelude.Types':'un--fastPack'(V9))} | []]}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--expandString,mergeStrLit-7112'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V11 of [] -> case V12 of [] -> []; [E2 | E3] -> (fun (V13, V14) -> [V13 | ('nested--12914-7032--in--un--mergeStrLit'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V14))] end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; [E4 | E5] -> (fun (V15, V16) -> [{'Idris.Idris.Syntax.StrLiteral', ('Idris.Idris2.Builtin':'un--fst'(('Idris.Idris2.Data.List':'un--head'(V11)))), ('Idris.Idris2.Prelude.Types':'un--fastConcat'(('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V19, V20)) end end end end, fun (V21) -> ('Idris.Idris2.Builtin':'un--snd'(V21)) end, V11))))} | ('nested--12914-7032--in--un--mergeStrLit'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V12))] end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--toTokList-3973'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> fun (V9) -> case ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V12, V13, V14)) end end end end end, fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V17, V18, V19)) end end end end end, fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V21)) end end, fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V25, V26, V27, V28)) end end end end end end end, fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V30)) end end, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V33, V34, V35)) end end end end end}, fun (V36) -> ('Idris.Idris2.Parser.Lexer.Source':'un--isOpChar'(V36)) end, ('Idris.Idris2.Prelude.Types':'un--fastUnpack'(V7)))) of 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V4, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Unknown operator \x{27}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V7, <<"\x{27}"/utf8>>))))}, V9)); 0 -> begin (V37 = ('un--toTokList'(V5, V1, V9))), case V37 of {'Idris.Prelude.Types.Left', E0} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V39) -> {'Idris.Prelude.Types.Right', [{'Idris.Libraries.Utils.Shunting.Expr', V2} | [{'Idris.Libraries.Utils.Shunting.Op', V4, V3, V0, ('nested--12407-3956--in--un--backtickPrec'(V0, V1, V2, V3, V4, V5))} | V39]]} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V40) -> fun (V41) -> case V40 of {'Idris.Builtin.MkPair', E3, E4} -> (fun (V42, V43) -> case V42 of 3 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V4, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{27}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V7, <<"\x{27} is a prefix operator"/utf8>>))))}, V41)); _ -> begin (V44 = ('un--toTokList'(V5, V1, V41))), case V44 of {'Idris.Prelude.Types.Left', E5} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V46) -> {'Idris.Prelude.Types.Right', [{'Idris.Libraries.Utils.Shunting.Expr', V2} | [{'Idris.Libraries.Utils.Shunting.Op', V4, V3, V0, ('un--mkPrec'(V42, V43))} | V46]]} end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--12925-7329--in--un--trimLeft'(V0, V1, V2, V3, V4) -> case V4 of [] -> fun (V5) -> {'Idris.Prelude.Types.Right', []} end; [E0 | E1] -> (fun (V6, V7) -> case V6 of {'Idris.Idris.Syntax.StrLiteral', E2, E3} -> (fun (V8, V9) -> case V7 of [] -> fun (V10) -> ('case--trimMultiline,trimLeft-7508'(V0, V1, V2, V9, V8, V3, ('Idris.Idris2.Data.List':'un--splitAt'(V3, ('Idris.Idris2.Prelude.Types':'un--fastUnpack'(V9)))), V10)) end; _ -> fun (V11) -> ('case--trimMultiline,trimLeft-7595'(V0, V1, V2, V9, V8, V7, V3, ('Idris.Idris2.Data.List':'un--splitAt'(V3, ('Idris.Idris2.Prelude.Types':'un--fastUnpack'(V9)))), V11)) end end end(E2, E3)); _ -> fun (V12) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V2, <<"Line is less indented than the closing delimiter"/utf8>>}, V12)) end end end(E0, E1)); _ -> fun (V13) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadMultiline', V2, <<"Line is less indented than the closing delimiter"/utf8>>}, V13)) end end.
'nested--12925-7327--in--un--trimLast'(V0, V1, V2, V3, V4) -> ('with--trimMultiline,trimLast-7333'(V4, V1, V3, V4, ('Idris.Idris2.Data.List.Views':'un--snocList'(V4)), V3)).
'nested--12914-7031--in--un--toRawImp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Idris.Syntax.StrLiteral', E0, E1} -> (fun (V10, V11) -> fun (V12) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPrimVal', V10, {'Idris.Core.TT.Str', V11}}} end end(E0, E1)); {'Idris.Idris.Syntax.StrInterp', E2, E3} -> (fun (V13, V14) -> ('un--desugarB'(V8, V7, V6, V5, V4, V3, V2, V14)) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--12987-9235--in--un--toRF'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Core.Name.UN', E0} -> (fun (V13) -> case V13 of {'Idris.Core.Name.Basic', E1} -> (fun (V14) -> {'Idris.Core.Name.UN', {'Idris.Core.Name.Field', V14}} end(E1)); _ -> V12 end end(E0)); _ -> V12 end.
'nested--12865-6493--in--un--toPure'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> {'Idris.Idris.Syntax.DoExp', V2, {'Idris.Idris.Syntax.PApp', V2, {'Idris.Idris.Syntax.PRef', V2, ('Idris.Idris2.Core.Name':'un--mbApplyNS'(V10, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"pure"/utf8>>}}))}, V11}}.
'nested--13005-9347--in--un--toIDef'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V8 of {'Idris.TTImp.TTImp.PatClause', E0, E1, E2} -> (fun (V10, V11, V12) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDef', V10, V7, [{'Idris.TTImp.TTImp.PatClause', V10, V11, V12} | []]}} end(E0, E1, E2)); {'Idris.TTImp.TTImp.WithClause', E3, E4, E5, E6, E7, E8} -> (fun (V13, V14, V15, V16, V17, V18) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDef', V13, V7, [{'Idris.TTImp.TTImp.WithClause', V13, V14, V15, V16, V17, V18} | []]}} end(E3, E4, E5, E6, E7, E8)); {'Idris.TTImp.TTImp.ImpossibleClause', E9, E10} -> (fun (V19, V20) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDef', V19, V7, [{'Idris.TTImp.TTImp.ImpossibleClause', V19, V20} | []]}} end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--13005-9870--in--un--pairToCons'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Idris.Syntax.PPair', E0, E1, E2} -> (fun (V15, V16, V17) -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(('nested--13005-9870--in--un--pairToCons'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V16)), ('nested--13005-9870--in--un--pairToCons'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V17)))) end(E0, E1, E2)); _ -> [V14 | []] end.
'nested--12914-7033--in--un--notEmpty'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Idris.Syntax.StrLiteral', E0, E1} -> (fun (V10, V11) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_String'(V11, <<""/utf8>>)) end(E0, E1)); {'Idris.Idris.Syntax.StrInterp', E2, E3} -> (fun (V12, V13) -> 1 end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--13005-10789--in--un--mkConName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Core.Name.NS', E0, E1} -> (fun (V13, V14) -> case V14 of {'Idris.Core.Name.UN', E2} -> (fun (V15) -> begin (V16 = ('Idris.Idris2.Core.Name':'un--displayUserName'(V15))), {'Idris.Core.Name.NS', V13, {'Idris.Core.Name.DN', V16, {'Idris.Core.Name.MN', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"__mk"/utf8>>, V16)), 0}}} end end(E2)); _ -> {'Idris.Core.Name.DN', ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V12)), {'Idris.Core.Name.MN', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"__mk"/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V12)))), 0}} end end(E0, E1)); _ -> {'Idris.Core.Name.DN', ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V12)), {'Idris.Core.Name.MN', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"__mk"/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V12)))), 0}} end.
'nested--12914-7032--in--un--mergeStrLit'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> ('case--expandString,mergeStrLit-7112'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, ('Idris.Idris2.Data.List':'un--spanBy'(fun (V10) -> case V10 of {'Idris.Idris.Syntax.StrLiteral', E0, E1} -> (fun (V11, V12) -> {'Idris.Prelude.Types.Just', {'Idris.Builtin.MkPair', V11, V12}} end(E0, E1)); _ -> {'Idris.Prelude.Types.Nothing'} end end, V9)))).
'nested--13005-10790--in--un--mapDesugarPiInfo'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> ('Idris.Idris2.Core.Core.PiInfo':'un--traverse'(fun (V15) -> fun (V16) -> ('un--desugar'(V11, V10, V8, V9, 1, V12, V15, V16)) end end, V13, V14)).
'nested--13005-10319--in--un--isNamed'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> 0 end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V17) -> 1 end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--12865-6492--in--un--guard'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Idris.Syntax.DoExp', E0, E1} -> (fun (V12, V13) -> {'Idris.Idris.Syntax.DoExp', V12, {'Idris.Idris.Syntax.PApp', V12, {'Idris.Idris.Syntax.PRef', V12, ('Idris.Idris2.Core.Name':'un--mbApplyNS'(V10, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"guard"/utf8>>}}))}, V13}} end(E0, E1)); _ -> V11 end.
'nested--13005-10788--in--un--fname'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12) -> case V12 of {'Idris.Idris.Syntax.MkField', E0, E1, E2, E3, E4, E5} -> (fun (V13, V14, V15, V16, V17, V18) -> V17 end(E0, E1, E2, E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--13005-9871--in--un--expandConstraint'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V15, V16) -> case V15 of {'Idris.Prelude.Types.Just', E2} -> (fun (V17) -> [{'Idris.Builtin.MkPair', {'Idris.Prelude.Types.Just', V17}, V16} | []] end(E2)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V18) -> {'Idris.Builtin.MkPair', {'Idris.Prelude.Types.Nothing'}, V18} end, ('nested--13005-9870--in--un--pairToCons'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V16)))) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--12925-7328--in--un--dropLastNL'(V0, V1, V2, V3) -> ('with--trimMultiline,dropLastNL-7462'(V0, V1, V2, V3, ('Idris.Idris2.Data.List.Views':'un--snocList'(V3)))).
'nested--12914-7034--in--un--concatStr'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> begin (V11 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V9))))), begin (V12 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(('Idris.Idris2.TTImp.TTImp':'un--getFC'(V10))))), {'Idris.TTImp.TTImp.IApp', V11, {'Idris.TTImp.TTImp.IApp', V12, {'Idris.TTImp.TTImp.IVar', V12, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"++"/utf8>>}}}, V9}, V10} end end.
'nested--12407-3956--in--un--backtickPrec'(V0, V1, V2, V3, V4, V5) -> {'Idris.Libraries.Utils.Shunting.NonAssoc', (1 + 0)}.
'dn--un--__Impl_Eq_Side'() -> {'Idris.Prelude.EqOrd.MkEq', fun (V0) -> fun (V1) -> ('dn--un--==_Eq_Side'(V0, V1)) end end, fun (V2) -> fun (V3) -> ('dn--un--/=_Eq_Side'(V2, V3)) end end}.
'dn--un--==_Eq_Side'(V0, V1) -> case V0 of 0 -> case V1 of 0 -> 1; _ -> 0 end; 1 -> case V1 of 1 -> 1; _ -> 0 end; _ -> 0 end.
'dn--un--/=_Eq_Side'(V0, V1) -> case ('dn--un--==_Eq_Side'(V0, V1)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--trimMultiline'(V0, V1, V2, V3) -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V1, ('Idris.Idris2.Prelude.Types':'dn--un--fromInteger_Num_Nat'(0)))) of 1 -> {'Idris.Prelude.Types.Right', ('nested--12925-7328--in--un--dropLastNL'(V2, V1, V0, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V6, V7, V8)) end end end end end, fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V11, V12, V13)) end end end end end, fun (V14) -> fun (V15) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V15)) end end, fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> fun (V22) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V19, V20, V21, V22)) end end end end end end end, fun (V23) -> fun (V24) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V24)) end end, fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V27, V28, V29)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V30) -> fun (V31) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V30, V31)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V2))))}; 0 -> begin (V32 = (('nested--12925-7327--in--un--trimLast'(V2, V1, V0, V0, V2))(V3))), case V32 of {'Idris.Prelude.Types.Left', E0} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V34) -> begin (V36 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V35) -> ('nested--12925-7329--in--un--trimLeft'(V2, V1, V0, V1, V35)) end, V34, [], V3))), case V36 of {'Idris.Prelude.Types.Left', E2} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V38) -> {'Idris.Prelude.Types.Right', ('nested--12925-7328--in--un--dropLastNL'(V2, V1, V0, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V41, V42, V43)) end end end end end, fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V46, V47, V48)) end end end end end, fun (V49) -> fun (V50) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V50)) end end, fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V54, V55, V56, V57)) end end end end end end end, fun (V58) -> fun (V59) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V59)) end end, fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V62, V63, V64)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V65) -> fun (V66) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V65, V66)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V38))))} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--toTokList'(V0, V1, V2) -> case V1 of {'Idris.Idris.Syntax.POp', E0, E1, E2, E3, E4} -> (fun (V3, V4, V5, V6, V7) -> begin (V9 = begin (V8 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V8} end), case V9 of {'Idris.Prelude.Types.Left', E5} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V11) -> begin (V12 = ('Idris.Idris2.Core.Name':'un--nameRoot'(V5))), (('case--toTokList-3973'(V5, V7, V6, V4, V3, V0, V11, V12, ('Idris.Idris2.Libraries.Data.StringMap':'un--lookup'(V12, case V11 of {'Idris.Idris.Syntax.MkSyntax', E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17} -> (fun (V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23) -> V13 end(E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))))(V2)) end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); {'Idris.Idris.Syntax.PPrefixOp', E18, E19, E20, E21} -> (fun (V24, V25, V26, V27) -> begin (V29 = begin (V28 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V28} end), case V29 of {'Idris.Prelude.Types.Left', E22} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V31) -> begin (V32 = ('Idris.Idris2.Core.Name':'un--nameRoot'(V26))), case ('Idris.Idris2.Libraries.Data.StringMap':'un--lookup'(V32, case V31 of {'Idris.Idris.Syntax.MkSyntax', E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37} -> (fun (V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43) -> V34 end(E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V24, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"\x{27}"/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(V32, <<"\x{27} is not a prefix operator"/utf8>>))))}, V2)) end()); {'Idris.Prelude.Types.Just', E24} -> (fun (V44) -> begin (V45 = ('un--toTokList'(V0, V27, V2))), case V45 of {'Idris.Prelude.Types.Left', E25} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V47) -> {'Idris.Prelude.Types.Right', [{'Idris.Libraries.Utils.Shunting.Op', V24, V25, V26, {'Idris.Libraries.Utils.Shunting.Prefix', V44}} | V47]} end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18, E19, E20, E21)); _ -> {'Idris.Prelude.Types.Right', [{'Idris.Libraries.Utils.Shunting.Expr', V1} | []]} end.
'un--seqFun'(V0, V1, V2, V3) -> begin (V4 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V0))), {'Idris.TTImp.TTImp.IApp', V4, {'Idris.TTImp.TTImp.IApp', V4, {'Idris.TTImp.TTImp.IVar', V4, ('un--addNS'(V1, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<">>"/utf8>>}}))}, V2}, V3} end.
'un--pairname'() -> {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--builtinNS'()), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Pair"/utf8>>}}}.
'un--mkpairname'() -> {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--builtinNS'()), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"MkPair"/utf8>>}}}.
'un--mkdpairname'() -> {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--dpairNS'()), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"MkDPair"/utf8>>}}}.
'un--mkPrec'(V0, V1) -> case V0 of 0 -> {'Idris.Libraries.Utils.Shunting.AssocL', V1}; 1 -> {'Idris.Libraries.Utils.Shunting.AssocR', V1}; 2 -> {'Idris.Libraries.Utils.Shunting.NonAssoc', V1}; 3 -> {'Idris.Libraries.Utils.Shunting.Prefix', V1}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--initBangs'(V0) -> {'Idris.Idris.Desugar.MkBangData', 0, [], V0}.
'un--idiomise'(V0, V1) -> case V1 of {'Idris.TTImp.TTImp.IAlternative', E0, E1, E2} -> (fun (V2, V3, V4) -> {'Idris.TTImp.TTImp.IAlternative', V2, ('Idris.Idris2.TTImp.TTImp':'un--mapAltType'(fun (V5) -> ('un--idiomise'(V2, V5)) end, V3)), ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V6) -> fun (V7) -> fun (V8) -> fun (V9) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(V8, V9)) end end end end, fun (V10) -> ('un--idiomise'(V2, V10)) end, V4))} end(E0, E1, E2)); {'Idris.TTImp.TTImp.IApp', E3, E4, E5} -> (fun (V11, V12, V13) -> begin (V14 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V0))), {'Idris.TTImp.TTImp.IApp', V14, {'Idris.TTImp.TTImp.IApp', V14, {'Idris.TTImp.TTImp.IVar', V14, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"<*>"/utf8>>}}}, ('un--idiomise'(V11, V12))}, V13} end end(E3, E4, E5)); _ -> begin (V15 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V0))), {'Idris.TTImp.TTImp.IApp', V15, {'Idris.TTImp.TTImp.IVar', V15, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"pure"/utf8>>}}}, V1} end end.
'un--getClauseFn'(V0) -> case V0 of {'Idris.TTImp.TTImp.IVar', E0, E1} -> (fun (V1, V2) -> fun (V3) -> {'Idris.Prelude.Types.Right', V2} end end(E0, E1)); {'Idris.TTImp.TTImp.IApp', E2, E3, E4} -> (fun (V4, V5, V6) -> ('un--getClauseFn'(V5)) end(E2, E3, E4)); {'Idris.TTImp.TTImp.IAutoApp', E5, E6, E7} -> (fun (V7, V8, V9) -> ('un--getClauseFn'(V8)) end(E5, E6, E7)); {'Idris.TTImp.TTImp.INamedApp', E8, E9, E10, E11} -> (fun (V10, V11, V12, V13) -> ('un--getClauseFn'(V11)) end(E8, E9, E10, E11)); _ -> fun (V14) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.TTImp.TTImp':'un--getFC'(V0)), <<"Head term in pattern must be a function name"/utf8>>}, V14)) end end.
'un--extendSyn'(V0, V1, V2, V3) -> begin (V5 = begin (V4 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4} end), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> begin (V66 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"doc.module"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> ('Idris.Idris2.Libraries.Data.String.Extra':'un--unlines'([('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Old ("/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Data.String':'un--unwords'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V8) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show_ModuleIdent'(V8)) end, case V7 of {'Idris.Idris.Syntax.MkSyntax', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> V11 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"): "/utf8>>, ('Idris.Idris2.Libraries.Data.SortedMap':'dn--un--show_Show_((SortedMap $k) $v)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V20) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show_ModuleIdent'(V20)) end, fun (V21) -> fun (V22) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--showPrec_Show_ModuleIdent'(V21, V22)) end end}, {'Idris.Prelude.Show.MkShow', fun (V23) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V23)) end, fun (V24) -> fun (V25) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V24, V25)) end end}}, case V7 of {'Idris.Idris.Syntax.MkSyntax', E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23} -> (fun (V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> V29 end(E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))))))) | [('Idris.Idris2.Prelude.Types.String':'un--++'(<<"New ("/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Data.String':'un--unwords'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V37) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show_ModuleIdent'(V37)) end, case V2 of {'Idris.Idris.Syntax.MkSyntax', E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48) -> V40 end(E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"): "/utf8>>, ('Idris.Idris2.Libraries.Data.SortedMap':'dn--un--show_Show_((SortedMap $k) $v)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V49) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--show_Show_ModuleIdent'(V49)) end, fun (V50) -> fun (V51) -> ('Idris.Idris2.Core.Name.Namespace':'dn--un--showPrec_Show_ModuleIdent'(V50, V51)) end end}, {'Idris.Prelude.Show.MkShow', fun (V52) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_String'(V52)) end, fun (V53) -> fun (V54) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_String'(V53, V54)) end end}}, case V2 of {'Idris.Idris.Syntax.MkSyntax', E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45} -> (fun (V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65) -> V58 end(E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))))))) | []]])) end, V3))), case V66 of {'Idris.Prelude.Types.Left', E46} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V68) -> begin (V146 = ('erlang':'put'(V0, case V7 of {'Idris.Idris.Syntax.MkSyntax', E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58} -> (fun (V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79) -> {'Idris.Idris.Syntax.MkSyntax', ('Idris.Idris2.Libraries.Data.StringMap':'un--mergeLeft'(case V2 of {'Idris.Idris.Syntax.MkSyntax', E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69} -> (fun (V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90) -> V80 end(E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V69)), ('Idris.Idris2.Libraries.Data.StringMap':'un--mergeLeft'(case V2 of {'Idris.Idris.Syntax.MkSyntax', E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80} -> (fun (V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101) -> V92 end(E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V70)), V71, ('Idris.Idris2.Libraries.Data.SortedMap':'un--mergeLeft'(case V2 of {'Idris.Idris.Syntax.MkSyntax', E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91} -> (fun (V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112) -> V105 end(E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V72)), V73, ('Idris.Idris2.Libraries.Data.ANameMap':'un--merge'(case V2 of {'Idris.Idris.Syntax.MkSyntax', E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102} -> (fun (V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123) -> V118 end(E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V74)), V75, ('Idris.Idris2.Libraries.Data.ANameMap':'un--merge'(case V2 of {'Idris.Idris.Syntax.MkSyntax', E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113} -> (fun (V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134) -> V131 end(E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V76)), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(case V2 of {'Idris.Idris.Syntax.MkSyntax', E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124} -> (fun (V135, V136, V137, V138, V139, V140, V141, V142, V143, V144, V145) -> V143 end(E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V77)), V78, V79} end(E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V146} end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--expandString'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> begin (V12 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V10) -> ('nested--12914-7031--in--un--toRawImp'(V8, V7, V6, V5, V4, V3, V2, V1, V0, V10)) end, ('Idris.Idris2.Data.List':'un--filter'(fun (V11) -> ('nested--12914-7033--in--un--notEmpty'(V8, V7, V6, V5, V4, V3, V2, V1, V0, V11)) end, ('nested--12914-7032--in--un--mergeStrLit'(V8, V7, V6, V5, V4, V3, V2, V1, V0, V8)))), [], V9))), case V12 of {'Idris.Prelude.Types.Left', E0} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V14) -> {'Idris.Prelude.Types.Right', case V14 of [] -> {'Idris.TTImp.TTImp.IPrimVal', V7, {'Idris.Core.TT.Str', <<""/utf8>>}}; [E2 | E3] -> (fun (V15, V16) -> ('Idris.Idris2.Data.List':'un--foldr1'(fun (V17) -> fun (V18) -> ('nested--12914-7034--in--un--concatStr'(V8, V7, V6, V5, V4, V3, V2, V1, V0, V17, V18)) end end, V14)) end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--expandSnocList'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V8 of [] -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', V7, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Lin"/utf8>>}}}}; [E0 | E1] -> (fun (V10, V11) -> case V10 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V12, V13) -> begin (V14 = ('un--expandSnocList'(V0, V1, V2, V3, V4, V5, V6, V7, V11, V9))), case V14 of {'Idris.Prelude.Types.Left', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V16) -> begin (V17 = (('un--desugarB'(V0, V1, V2, V4, V3, V5, V6, V13))(V9))), case V17 of {'Idris.Prelude.Types.Left', E6} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V19) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V12, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<":<"/utf8>>}}}, [V16 | [V19 | []]]))} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--expandList'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V8 of [] -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', V7, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Nil"/utf8>>}}}}; [E0 | E1] -> (fun (V10, V11) -> case V10 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V12, V13) -> begin (V14 = (('un--desugarB'(V0, V1, V2, V4, V3, V5, V6, V13))(V9))), case V14 of {'Idris.Prelude.Types.Left', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V16) -> begin (V17 = ('un--expandList'(V0, V1, V2, V3, V4, V5, V6, V7, V11, V9))), case V17 of {'Idris.Prelude.Types.Left', E6} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V19) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V12, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"::"/utf8>>}}}, [V16 | [V19 | []]]))} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of [] -> fun (V9) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V6, <<"Do block cannot be empty"/utf8>>}, V9)) end; [E0 | E1] -> (fun (V10, V11) -> case V10 of {'Idris.Idris.Syntax.DoExp', E101, E102} -> (fun (V12, V13) -> case V11 of [] -> fun (V14) -> ('un--desugarDo'(V0, V1, V3, V2, V4, V5, V7, V13, V14)) end; _ -> fun (V15) -> case V11 of [] -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Idris.Syntax':'un--getLoc'(V10)), <<"Last statement in do block must be an expression"/utf8>>}, V15)); _ -> case V10 of {'Idris.Idris.Syntax.DoExp', E103, E104} -> (fun (V16, V17) -> begin (V18 = ('un--desugarDo'(V0, V1, V3, V2, V4, V5, V7, V17, V15))), case V18 of {'Idris.Prelude.Types.Left', E105} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V20) -> begin (V21 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V15))), case V21 of {'Idris.Prelude.Types.Left', E107} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V23) -> begin (V25 = begin (V24 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V24} end), case V25 of {'Idris.Prelude.Types.Left', E109} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E109)); {'Idris.Prelude.Types.Right', E110} -> (fun (V27) -> {'Idris.Prelude.Types.Right', ('un--seqFun'(V16, V7, V20, V23))} end(E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E103, E104)); {'Idris.Idris.Syntax.DoBind', E111, E112, E113, E114} -> (fun (V28, V29, V30, V31) -> begin (V32 = ('un--desugarDo'(V0, V1, V3, V2, V4, V5, V7, V31, V15))), case V32 of {'Idris.Prelude.Types.Left', E115} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V34) -> begin (V35 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V15))), case V35 of {'Idris.Prelude.Types.Left', E117} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V37) -> begin (V39 = case ('Idris.Idris2.Core.FC':'un--isConcreteFC'(V29)) of {'Idris.Prelude.Types.Just', E119} -> (fun (V38) -> ('Idris.Idris2.Core.Metadata':'un--addSemanticDecorations'(V3, V1, [{'Idris.Builtin.MkPair', V38, {'Idris.Builtin.MkPair', 5, {'Idris.Prelude.Types.Just', V30}}} | []], V15)) end(E119)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V39 of {'Idris.Prelude.Types.Left', E120} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V41) -> {'Idris.Prelude.Types.Right', ('un--bindFun'(V28, V7, V34, {'Idris.TTImp.TTImp.ILam', V29, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', V30}, {'Idris.TTImp.TTImp.Implicit', ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V28)), 0}, V37}))} end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E111, E112, E113, E114)); {'Idris.Idris.Syntax.DoBindPat', E122, E123, E124, E125} -> (fun (V42, V43, V44, V45) -> begin (V46 = ('un--desugarDo'(V0, V1, V3, V2, 0, V5, V7, V43, V15))), case V46 of {'Idris.Prelude.Types.Left', E126} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E126)); {'Idris.Prelude.Types.Right', E127} -> (fun (V48) -> begin (V49 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, 0, V48, V15))), case V49 of {'Idris.Prelude.Types.Left', E128} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E128)); {'Idris.Prelude.Types.Right', E129} -> (fun (V51) -> case V51 of {'Idris.Builtin.MkPair', E130, E131} -> (fun (V52, V53) -> begin (V54 = ('un--desugarDo'(V0, V1, V3, V2, V4, V5, V7, V44, V15))), case V54 of {'Idris.Prelude.Types.Left', E132} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E132)); {'Idris.Prelude.Types.Right', E133} -> (fun (V56) -> begin (V63 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V57) -> fun (V58) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V59) -> case V59 of {'Idris.Prelude.Types.Left', E134} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E134)); {'Idris.Prelude.Types.Right', E135} -> (fun (V61) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--snd'(V61))} end(E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V62) -> ('un--desugarClause'(V0, V1, V2, V3, V5, 1, V57, V62)) end, V58)) end end, V45, [], V15))), case V63 of {'Idris.Prelude.Types.Left', E136} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E136)); {'Idris.Prelude.Types.Right', E137} -> (fun (V65) -> begin (V66 = ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V52, V5))), begin (V67 = (('un--expandDo'(V0, V1, V2, V3, V4, V66, V6, V7, V11))(V15))), case V67 of {'Idris.Prelude.Types.Left', E138} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E138)); {'Idris.Prelude.Types.Right', E139} -> (fun (V69) -> begin (V70 = V42), begin (V71 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V42))), {'Idris.Prelude.Types.Right', ('un--bindFun'(V71, V7, V56, {'Idris.TTImp.TTImp.ILam', {'Idris.Core.FC.EmptyFC'}, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', {'Idris.Core.Name.MN', <<"_"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V71, 0}, {'Idris.TTImp.TTImp.ICase', V71, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.Name.MN', <<"_"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V71, 0}, [{'Idris.TTImp.TTImp.PatClause', V70, V53, V69} | V65]}}))} end end end(E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E130, E131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E122, E123, E124, E125)); {'Idris.Idris.Syntax.DoLet', E140, E141, E142, E143, E144, E145} -> (fun (V72, V73, V74, V75, V76, V77) -> begin (V78 = ('Idris.Idris2.Core.Core':'un--newRef'({'Idris.Idris.Desugar.Bang'}, ('un--initBangs'(V7)), V15))), case V78 of {'Idris.Prelude.Types.Left', E146} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E146)); {'Idris.Prelude.Types.Right', E147} -> (fun (V80) -> begin (V81 = (('un--desugarB'(V0, V80, V1, V3, V2, V4, V5, V77))(V15))), case V81 of {'Idris.Prelude.Types.Left', E148} -> (fun (V82) -> {'Idris.Prelude.Types.Left', V82} end(E148)); {'Idris.Prelude.Types.Right', E149} -> (fun (V83) -> begin (V84 = ('un--desugarDo'(V0, V1, V3, V2, V4, V5, V7, V76, V15))), case V84 of {'Idris.Prelude.Types.Left', E150} -> (fun (V85) -> {'Idris.Prelude.Types.Left', V85} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V86) -> begin (V87 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V15))), case V87 of {'Idris.Prelude.Types.Left', E152} -> (fun (V88) -> {'Idris.Prelude.Types.Left', V88} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V89) -> begin (V91 = case ('Idris.Idris2.Core.FC':'un--isConcreteFC'(V73)) of {'Idris.Prelude.Types.Just', E154} -> (fun (V90) -> ('Idris.Idris2.Core.Metadata':'un--addSemanticDecorations'(V3, V1, [{'Idris.Builtin.MkPair', V90, {'Idris.Builtin.MkPair', 5, {'Idris.Prelude.Types.Just', V74}}} | []], V15)) end(E154)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V91 of {'Idris.Prelude.Types.Left', E155} -> (fun (V92) -> {'Idris.Prelude.Types.Left', V92} end(E155)); {'Idris.Prelude.Types.Right', E156} -> (fun (V93) -> begin (V94 = {'Idris.TTImp.TTImp.ILet', V72, ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V73)), V75, V74, V86, V83, V89}), begin (V96 = begin (V95 = ('erlang':'get'(V80))), {'Idris.Prelude.Types.Right', V95} end), case V96 of {'Idris.Prelude.Types.Left', E157} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E157)); {'Idris.Prelude.Types.Right', E158} -> (fun (V98) -> {'Idris.Prelude.Types.Right', ('un--bindBangs'(case V98 of {'Idris.Idris.Desugar.MkBangData', E159, E160, E161} -> (fun (V99, V100, V101) -> V100 end(E159, E160, E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V7, V94))} end(E158)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E147)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E140, E141, E142, E143, E144, E145)); {'Idris.Idris.Syntax.DoLetPat', E162, E163, E164, E165, E166} -> (fun (V102, V103, V104, V105, V106) -> begin (V107 = ('Idris.Idris2.Core.Core':'un--newRef'({'Idris.Idris.Desugar.Bang'}, ('un--initBangs'(V7)), V15))), case V107 of {'Idris.Prelude.Types.Left', E167} -> (fun (V108) -> {'Idris.Prelude.Types.Left', V108} end(E167)); {'Idris.Prelude.Types.Right', E168} -> (fun (V109) -> begin (V110 = ('un--desugarDo'(V0, V1, V3, V2, 0, V5, V7, V103, V15))), case V110 of {'Idris.Prelude.Types.Left', E169} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E169)); {'Idris.Prelude.Types.Right', E170} -> (fun (V112) -> begin (V113 = ('un--desugarDo'(V0, V1, V3, V2, V4, V5, V7, V104, V15))), case V113 of {'Idris.Prelude.Types.Left', E171} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E171)); {'Idris.Prelude.Types.Right', E172} -> (fun (V115) -> begin (V116 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, 0, V112, V15))), case V116 of {'Idris.Prelude.Types.Left', E173} -> (fun (V117) -> {'Idris.Prelude.Types.Left', V117} end(E173)); {'Idris.Prelude.Types.Right', E174} -> (fun (V118) -> case V118 of {'Idris.Builtin.MkPair', E175, E176} -> (fun (V119, V120) -> begin (V121 = (('un--desugarB'(V0, V109, V1, V3, V2, V4, V5, V105))(V15))), case V121 of {'Idris.Prelude.Types.Left', E177} -> (fun (V122) -> {'Idris.Prelude.Types.Left', V122} end(E177)); {'Idris.Prelude.Types.Right', E178} -> (fun (V123) -> begin (V130 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V124) -> fun (V125) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V126) -> case V126 of {'Idris.Prelude.Types.Left', E179} -> (fun (V127) -> {'Idris.Prelude.Types.Left', V127} end(E179)); {'Idris.Prelude.Types.Right', E180} -> (fun (V128) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--snd'(V128))} end(E180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V129) -> ('un--desugarClause'(V0, V1, V2, V3, V5, 1, V124, V129)) end, V125)) end end, V106, [], V15))), case V130 of {'Idris.Prelude.Types.Left', E181} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E181)); {'Idris.Prelude.Types.Right', E182} -> (fun (V132) -> begin (V133 = ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V119, V5))), begin (V134 = (('un--expandDo'(V0, V1, V2, V3, V4, V133, V6, V7, V11))(V15))), case V134 of {'Idris.Prelude.Types.Left', E183} -> (fun (V135) -> {'Idris.Prelude.Types.Left', V135} end(E183)); {'Idris.Prelude.Types.Right', E184} -> (fun (V136) -> begin (V138 = begin (V137 = ('erlang':'get'(V109))), {'Idris.Prelude.Types.Right', V137} end), case V138 of {'Idris.Prelude.Types.Left', E185} -> (fun (V139) -> {'Idris.Prelude.Types.Left', V139} end(E185)); {'Idris.Prelude.Types.Right', E186} -> (fun (V140) -> begin (V141 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V102))), {'Idris.Prelude.Types.Right', ('un--bindBangs'(case V140 of {'Idris.Idris.Desugar.MkBangData', E187, E188, E189} -> (fun (V142, V143, V144) -> V143 end(E187, E188, E189)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V7, {'Idris.TTImp.TTImp.ICase', V141, V123, V115, [{'Idris.TTImp.TTImp.PatClause', V141, V120, V136} | V132]}))} end end(E186)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E184)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E182)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E175, E176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E172)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E170)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E168)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E162, E163, E164, E165, E166)); {'Idris.Idris.Syntax.DoLetLocal', E190, E191} -> (fun (V145, V146) -> begin (V147 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V15))), case V147 of {'Idris.Prelude.Types.Left', E192} -> (fun (V148) -> {'Idris.Prelude.Types.Left', V148} end(E192)); {'Idris.Prelude.Types.Right', E193} -> (fun (V149) -> begin (V151 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V150) -> ('un--desugarDecl'(V0, V1, V2, V3, V5, V150)) end, V146, [], V15))), case V151 of {'Idris.Prelude.Types.Left', E194} -> (fun (V152) -> {'Idris.Prelude.Types.Left', V152} end(E194)); {'Idris.Prelude.Types.Right', E195} -> (fun (V153) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V145, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> fun (V158) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V156, V157, V158)) end end end end end, fun (V159) -> fun (V160) -> fun (V161) -> fun (V162) -> fun (V163) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V161, V162, V163)) end end end end end, fun (V164) -> fun (V165) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V165)) end end, fun (V166) -> fun (V167) -> fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> fun (V172) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V169, V170, V171, V172)) end end end end end end end, fun (V173) -> fun (V174) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V174)) end end, fun (V175) -> fun (V176) -> fun (V177) -> fun (V178) -> fun (V179) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V177, V178, V179)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V180) -> fun (V181) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V180, V181)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V153)), V149}} end(E195)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E193)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E190, E191)); {'Idris.Idris.Syntax.DoRewrite', E196, E197} -> (fun (V182, V183) -> begin (V184 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V15))), case V184 of {'Idris.Prelude.Types.Left', E198} -> (fun (V185) -> {'Idris.Prelude.Types.Left', V185} end(E198)); {'Idris.Prelude.Types.Right', E199} -> (fun (V186) -> begin (V187 = ('un--desugarDo'(V0, V1, V3, V2, V4, V5, V7, V183, V15))), case V187 of {'Idris.Prelude.Types.Left', E200} -> (fun (V188) -> {'Idris.Prelude.Types.Left', V188} end(E200)); {'Idris.Prelude.Types.Right', E201} -> (fun (V189) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V182, V189, V186}} end(E201)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E199)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E196, E197)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E101, E102)); _ -> fun (V190) -> case V11 of [] -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', ('Idris.Idris2.Idris.Syntax':'un--getLoc'(V10)), <<"Last statement in do block must be an expression"/utf8>>}, V190)); _ -> case V10 of {'Idris.Idris.Syntax.DoExp', E2, E3} -> (fun (V191, V192) -> begin (V193 = ('un--desugarDo'(V0, V1, V3, V2, V4, V5, V7, V192, V190))), case V193 of {'Idris.Prelude.Types.Left', E4} -> (fun (V194) -> {'Idris.Prelude.Types.Left', V194} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V195) -> begin (V196 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V190))), case V196 of {'Idris.Prelude.Types.Left', E6} -> (fun (V197) -> {'Idris.Prelude.Types.Left', V197} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V198) -> begin (V200 = begin (V199 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V199} end), case V200 of {'Idris.Prelude.Types.Left', E8} -> (fun (V201) -> {'Idris.Prelude.Types.Left', V201} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V202) -> {'Idris.Prelude.Types.Right', ('un--seqFun'(V191, V7, V195, V198))} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); {'Idris.Idris.Syntax.DoBind', E10, E11, E12, E13} -> (fun (V203, V204, V205, V206) -> begin (V207 = ('un--desugarDo'(V0, V1, V3, V2, V4, V5, V7, V206, V190))), case V207 of {'Idris.Prelude.Types.Left', E14} -> (fun (V208) -> {'Idris.Prelude.Types.Left', V208} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V209) -> begin (V210 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V190))), case V210 of {'Idris.Prelude.Types.Left', E16} -> (fun (V211) -> {'Idris.Prelude.Types.Left', V211} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V212) -> begin (V214 = case ('Idris.Idris2.Core.FC':'un--isConcreteFC'(V204)) of {'Idris.Prelude.Types.Just', E18} -> (fun (V213) -> ('Idris.Idris2.Core.Metadata':'un--addSemanticDecorations'(V3, V1, [{'Idris.Builtin.MkPair', V213, {'Idris.Builtin.MkPair', 5, {'Idris.Prelude.Types.Just', V205}}} | []], V190)) end(E18)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V214 of {'Idris.Prelude.Types.Left', E19} -> (fun (V215) -> {'Idris.Prelude.Types.Left', V215} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V216) -> {'Idris.Prelude.Types.Right', ('un--bindFun'(V203, V7, V209, {'Idris.TTImp.TTImp.ILam', V204, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', V205}, {'Idris.TTImp.TTImp.Implicit', ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V203)), 0}, V212}))} end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10, E11, E12, E13)); {'Idris.Idris.Syntax.DoBindPat', E21, E22, E23, E24} -> (fun (V217, V218, V219, V220) -> begin (V221 = ('un--desugarDo'(V0, V1, V3, V2, 0, V5, V7, V218, V190))), case V221 of {'Idris.Prelude.Types.Left', E25} -> (fun (V222) -> {'Idris.Prelude.Types.Left', V222} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V223) -> begin (V224 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, 0, V223, V190))), case V224 of {'Idris.Prelude.Types.Left', E27} -> (fun (V225) -> {'Idris.Prelude.Types.Left', V225} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V226) -> case V226 of {'Idris.Builtin.MkPair', E29, E30} -> (fun (V227, V228) -> begin (V229 = ('un--desugarDo'(V0, V1, V3, V2, V4, V5, V7, V219, V190))), case V229 of {'Idris.Prelude.Types.Left', E31} -> (fun (V230) -> {'Idris.Prelude.Types.Left', V230} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V231) -> begin (V238 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V232) -> fun (V233) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V234) -> case V234 of {'Idris.Prelude.Types.Left', E33} -> (fun (V235) -> {'Idris.Prelude.Types.Left', V235} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V236) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--snd'(V236))} end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V237) -> ('un--desugarClause'(V0, V1, V2, V3, V5, 1, V232, V237)) end, V233)) end end, V220, [], V190))), case V238 of {'Idris.Prelude.Types.Left', E35} -> (fun (V239) -> {'Idris.Prelude.Types.Left', V239} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V240) -> begin (V241 = ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V227, V5))), begin (V242 = (('un--expandDo'(V0, V1, V2, V3, V4, V241, V6, V7, V11))(V190))), case V242 of {'Idris.Prelude.Types.Left', E37} -> (fun (V243) -> {'Idris.Prelude.Types.Left', V243} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V244) -> begin (V245 = V217), begin (V246 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V217))), {'Idris.Prelude.Types.Right', ('un--bindFun'(V246, V7, V231, {'Idris.TTImp.TTImp.ILam', {'Idris.Core.FC.EmptyFC'}, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', {'Idris.Core.Name.MN', <<"_"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V246, 0}, {'Idris.TTImp.TTImp.ICase', V246, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.Name.MN', <<"_"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V246, 0}, [{'Idris.TTImp.TTImp.PatClause', V245, V228, V244} | V240]}}))} end end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21, E22, E23, E24)); {'Idris.Idris.Syntax.DoLet', E39, E40, E41, E42, E43, E44} -> (fun (V247, V248, V249, V250, V251, V252) -> begin (V253 = ('Idris.Idris2.Core.Core':'un--newRef'({'Idris.Idris.Desugar.Bang'}, ('un--initBangs'(V7)), V190))), case V253 of {'Idris.Prelude.Types.Left', E45} -> (fun (V254) -> {'Idris.Prelude.Types.Left', V254} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V255) -> begin (V256 = (('un--desugarB'(V0, V255, V1, V3, V2, V4, V5, V252))(V190))), case V256 of {'Idris.Prelude.Types.Left', E47} -> (fun (V257) -> {'Idris.Prelude.Types.Left', V257} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V258) -> begin (V259 = ('un--desugarDo'(V0, V1, V3, V2, V4, V5, V7, V251, V190))), case V259 of {'Idris.Prelude.Types.Left', E49} -> (fun (V260) -> {'Idris.Prelude.Types.Left', V260} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V261) -> begin (V262 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V190))), case V262 of {'Idris.Prelude.Types.Left', E51} -> (fun (V263) -> {'Idris.Prelude.Types.Left', V263} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V264) -> begin (V266 = case ('Idris.Idris2.Core.FC':'un--isConcreteFC'(V248)) of {'Idris.Prelude.Types.Just', E53} -> (fun (V265) -> ('Idris.Idris2.Core.Metadata':'un--addSemanticDecorations'(V3, V1, [{'Idris.Builtin.MkPair', V265, {'Idris.Builtin.MkPair', 5, {'Idris.Prelude.Types.Just', V249}}} | []], V190)) end(E53)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V266 of {'Idris.Prelude.Types.Left', E54} -> (fun (V267) -> {'Idris.Prelude.Types.Left', V267} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V268) -> begin (V269 = {'Idris.TTImp.TTImp.ILet', V247, ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V248)), V250, V249, V261, V258, V264}), begin (V271 = begin (V270 = ('erlang':'get'(V255))), {'Idris.Prelude.Types.Right', V270} end), case V271 of {'Idris.Prelude.Types.Left', E56} -> (fun (V272) -> {'Idris.Prelude.Types.Left', V272} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V273) -> {'Idris.Prelude.Types.Right', ('un--bindBangs'(case V273 of {'Idris.Idris.Desugar.MkBangData', E58, E59, E60} -> (fun (V274, V275, V276) -> V275 end(E58, E59, E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V7, V269))} end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39, E40, E41, E42, E43, E44)); {'Idris.Idris.Syntax.DoLetPat', E61, E62, E63, E64, E65} -> (fun (V277, V278, V279, V280, V281) -> begin (V282 = ('Idris.Idris2.Core.Core':'un--newRef'({'Idris.Idris.Desugar.Bang'}, ('un--initBangs'(V7)), V190))), case V282 of {'Idris.Prelude.Types.Left', E66} -> (fun (V283) -> {'Idris.Prelude.Types.Left', V283} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V284) -> begin (V285 = ('un--desugarDo'(V0, V1, V3, V2, 0, V5, V7, V278, V190))), case V285 of {'Idris.Prelude.Types.Left', E68} -> (fun (V286) -> {'Idris.Prelude.Types.Left', V286} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V287) -> begin (V288 = ('un--desugarDo'(V0, V1, V3, V2, V4, V5, V7, V279, V190))), case V288 of {'Idris.Prelude.Types.Left', E70} -> (fun (V289) -> {'Idris.Prelude.Types.Left', V289} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V290) -> begin (V291 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, 0, V287, V190))), case V291 of {'Idris.Prelude.Types.Left', E72} -> (fun (V292) -> {'Idris.Prelude.Types.Left', V292} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V293) -> case V293 of {'Idris.Builtin.MkPair', E74, E75} -> (fun (V294, V295) -> begin (V296 = (('un--desugarB'(V0, V284, V1, V3, V2, V4, V5, V280))(V190))), case V296 of {'Idris.Prelude.Types.Left', E76} -> (fun (V297) -> {'Idris.Prelude.Types.Left', V297} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V298) -> begin (V305 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V299) -> fun (V300) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V301) -> case V301 of {'Idris.Prelude.Types.Left', E78} -> (fun (V302) -> {'Idris.Prelude.Types.Left', V302} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V303) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--snd'(V303))} end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V304) -> ('un--desugarClause'(V0, V1, V2, V3, V5, 1, V299, V304)) end, V300)) end end, V281, [], V190))), case V305 of {'Idris.Prelude.Types.Left', E80} -> (fun (V306) -> {'Idris.Prelude.Types.Left', V306} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V307) -> begin (V308 = ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V294, V5))), begin (V309 = (('un--expandDo'(V0, V1, V2, V3, V4, V308, V6, V7, V11))(V190))), case V309 of {'Idris.Prelude.Types.Left', E82} -> (fun (V310) -> {'Idris.Prelude.Types.Left', V310} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V311) -> begin (V313 = begin (V312 = ('erlang':'get'(V284))), {'Idris.Prelude.Types.Right', V312} end), case V313 of {'Idris.Prelude.Types.Left', E84} -> (fun (V314) -> {'Idris.Prelude.Types.Left', V314} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V315) -> begin (V316 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V277))), {'Idris.Prelude.Types.Right', ('un--bindBangs'(case V315 of {'Idris.Idris.Desugar.MkBangData', E86, E87, E88} -> (fun (V317, V318, V319) -> V318 end(E86, E87, E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V7, {'Idris.TTImp.TTImp.ICase', V316, V298, V290, [{'Idris.TTImp.TTImp.PatClause', V316, V295, V311} | V307]}))} end end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E74, E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61, E62, E63, E64, E65)); {'Idris.Idris.Syntax.DoLetLocal', E89, E90} -> (fun (V320, V321) -> begin (V322 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V190))), case V322 of {'Idris.Prelude.Types.Left', E91} -> (fun (V323) -> {'Idris.Prelude.Types.Left', V323} end(E91)); {'Idris.Prelude.Types.Right', E92} -> (fun (V324) -> begin (V326 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V325) -> ('un--desugarDecl'(V0, V1, V2, V3, V5, V325)) end, V321, [], V190))), case V326 of {'Idris.Prelude.Types.Left', E93} -> (fun (V327) -> {'Idris.Prelude.Types.Left', V327} end(E93)); {'Idris.Prelude.Types.Right', E94} -> (fun (V328) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V320, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V329) -> fun (V330) -> fun (V331) -> fun (V332) -> fun (V333) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V331, V332, V333)) end end end end end, fun (V334) -> fun (V335) -> fun (V336) -> fun (V337) -> fun (V338) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V336, V337, V338)) end end end end end, fun (V339) -> fun (V340) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V340)) end end, fun (V341) -> fun (V342) -> fun (V343) -> fun (V344) -> fun (V345) -> fun (V346) -> fun (V347) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V344, V345, V346, V347)) end end end end end end end, fun (V348) -> fun (V349) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V349)) end end, fun (V350) -> fun (V351) -> fun (V352) -> fun (V353) -> fun (V354) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V352, V353, V354)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V355) -> fun (V356) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V355, V356)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V328)), V324}} end(E94)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E89, E90)); {'Idris.Idris.Syntax.DoRewrite', E95, E96} -> (fun (V357, V358) -> begin (V359 = (('un--expandDo'(V0, V1, V2, V3, V4, V5, V6, V7, V11))(V190))), case V359 of {'Idris.Prelude.Types.Left', E97} -> (fun (V360) -> {'Idris.Prelude.Types.Left', V360} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V361) -> begin (V362 = ('un--desugarDo'(V0, V1, V3, V2, V4, V5, V7, V358, V190))), case V362 of {'Idris.Prelude.Types.Left', E99} -> (fun (V363) -> {'Idris.Prelude.Types.Left', V363} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V364) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V357, V364, V361}} end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E95, E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--dpairname'() -> {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--dpairNS'()), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"DPair"/utf8>>}}}.
'un--desugarUpdate'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V7 of {'Idris.Idris.Syntax.PSetField', E0, E1} -> (fun (V9, V10) -> begin (V11 = (('un--desugarB'(V0, V1, V2, V4, V3, V5, V6, V10))(V8))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetField', V9, V13}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); {'Idris.Idris.Syntax.PSetFieldApp', E4, E5} -> (fun (V14, V15) -> begin (V16 = (('un--desugarB'(V0, V1, V2, V4, V3, V5, V6, V15))(V8))), case V16 of {'Idris.Prelude.Types.Left', E6} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V18) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISetFieldApp', V14, V18}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarType'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.Idris.Syntax.MkPTy', E0, E1, E2, E3, E4} -> (fun (V7, V8, V9, V10, V11) -> begin (V12 = ('Idris.Idris2.Idris.Doc.String':'un--addDocString'(V1, V0, V9, V10, V6))), case V12 of {'Idris.Prelude.Types.Left', E5} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V14) -> begin (V16 = begin (V15 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V15} end), case V16 of {'Idris.Prelude.Types.Left', E7} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V18) -> begin (V19 = ('un--desugar'(V0, V1, V3, V2, 1, V4, V11, V6))), case V19 of {'Idris.Prelude.Types.Left', E9} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V21) -> begin (V33 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNames'(V1, V7, case V18 of {'Idris.Idris.Syntax.MkSyntax', E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32) -> V31 end(E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V21, V6))), case V33 of {'Idris.Prelude.Types.Left', E22} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V35) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpTy', V7, V8, V9, V35}} end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Libraries.Utils.Shunting.Infix', E0, E1, E2, E3, E4} -> (fun (V8, V9, V10, V11, V12) -> case V10 of {'Idris.Core.Name.UN', E9} -> (fun (V13) -> fun (V14) -> case V13 of {'Idris.Core.Name.Basic', E14} -> (fun (V15) -> case V15 of <<"="/utf8>> -> begin (V16 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V11))(V14))), case V16 of {'Idris.Prelude.Types.Left', E19} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V18) -> begin (V19 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V12))(V14))), case V19 of {'Idris.Prelude.Types.Left', E21} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V21) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V8, {'Idris.TTImp.TTImp.FirstSuccess'}, [('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V9, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"==="/utf8>>}}}, [V18 | [V21 | []]])) | [('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V9, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"~=~"/utf8>>}}}, [V18 | [V21 | []]])) | []]]}} end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; <<"$"/utf8>> -> begin (V22 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V11))(V14))), case V22 of {'Idris.Prelude.Types.Left', E23} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V24) -> begin (V25 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V12))(V14))), case V25 of {'Idris.Prelude.Types.Left', E25} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E25)); {'Idris.Prelude.Types.Right', E26} -> (fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V8, V24, V27}} end(E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V28 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V11))(V14))), case V28 of {'Idris.Prelude.Types.Left', E15} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V30) -> begin (V31 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V12))(V14))), case V31 of {'Idris.Prelude.Types.Left', E17} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V33) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V8, {'Idris.TTImp.TTImp.IApp', V8, {'Idris.TTImp.TTImp.IVar', V9, V10}, V30}, V33}} end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E14)); _ -> begin (V34 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V11))(V14))), case V34 of {'Idris.Prelude.Types.Left', E10} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V36) -> begin (V37 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V12))(V14))), case V37 of {'Idris.Prelude.Types.Left', E12} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V39) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V8, {'Idris.TTImp.TTImp.IApp', V8, {'Idris.TTImp.TTImp.IVar', V9, V10}, V36}, V39}} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E9)); _ -> fun (V40) -> begin (V41 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V11))(V40))), case V41 of {'Idris.Prelude.Types.Left', E5} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V43) -> begin (V44 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V12))(V40))), case V44 of {'Idris.Prelude.Types.Left', E7} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V46) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V8, {'Idris.TTImp.TTImp.IApp', V8, {'Idris.TTImp.TTImp.IVar', V9, V10}, V43}, V46}} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E0, E1, E2, E3, E4)); {'Idris.Libraries.Utils.Shunting.Pre', E27, E28, E29, E30} -> (fun (V47, V48, V49, V50) -> case V49 of {'Idris.Core.Name.UN', E33} -> (fun (V51) -> case V51 of {'Idris.Core.Name.Basic', E36} -> (fun (V52) -> case V52 of <<"-"/utf8>> -> case V50 of {'Idris.Libraries.Utils.Shunting.Leaf', E41} -> (fun (V53) -> case V53 of {'Idris.Idris.Syntax.PPrimVal', E44, E45} -> (fun (V54, V55) -> begin (V56 = ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(fun () -> {'Idris.Core.FC.EmptyFC'} end, ('Idris.Idris2.Core.FC':'un--mergeFC'(V47, V54))))), begin (V58 = fun (V57) -> ('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Libraries.Utils.Shunting.Leaf', {'Idris.Idris.Syntax.PPrimVal', V56, V57}})) end), case V55 of {'Idris.Core.TT.I', E48} -> (fun (V59) -> (V58({'Idris.Core.TT.I', ((0 - V59) rem 9223372036854775808)})) end(E48)); {'Idris.Core.TT.I8', E49} -> (fun (V60) -> (V58({'Idris.Core.TT.I8', (0 - V60)})) end(E49)); {'Idris.Core.TT.I16', E50} -> (fun (V61) -> (V58({'Idris.Core.TT.I16', (0 - V61)})) end(E50)); {'Idris.Core.TT.I32', E51} -> (fun (V62) -> (V58({'Idris.Core.TT.I32', (0 - V62)})) end(E51)); {'Idris.Core.TT.I64', E52} -> (fun (V63) -> (V58({'Idris.Core.TT.I64', (0 - V63)})) end(E52)); {'Idris.Core.TT.BI', E53} -> (fun (V64) -> (V58({'Idris.Core.TT.BI', (0 - V64)})) end(E53)); _ -> fun (V65) -> begin (V66 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Libraries.Utils.Shunting.Leaf', {'Idris.Idris.Syntax.PPrimVal', V54, V55}}))(V65))), case V66 of {'Idris.Prelude.Types.Left', E46} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V68) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V47, {'Idris.TTImp.TTImp.IVar', V48, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"negate"/utf8>>}}}, V68}} end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E44, E45)); _ -> fun (V69) -> begin (V70 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V50))(V69))), case V70 of {'Idris.Prelude.Types.Left', E42} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V72) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V47, {'Idris.TTImp.TTImp.IVar', V48, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"negate"/utf8>>}}}, V72}} end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E41)); _ -> fun (V73) -> begin (V74 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V50))(V73))), case V74 of {'Idris.Prelude.Types.Left', E39} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V76) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V47, {'Idris.TTImp.TTImp.IVar', V48, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"negate"/utf8>>}}}, V76}} end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> fun (V77) -> begin (V78 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V50))(V77))), case V78 of {'Idris.Prelude.Types.Left', E37} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V80) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V47, {'Idris.TTImp.TTImp.IVar', V48, V49}, V80}} end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E36)); _ -> fun (V81) -> begin (V82 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V50))(V81))), case V82 of {'Idris.Prelude.Types.Left', E34} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V84) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V47, {'Idris.TTImp.TTImp.IVar', V48, V49}, V84}} end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E33)); _ -> fun (V85) -> begin (V86 = (('un--desugarTree'(V0, V1, V2, V3, V4, V5, V6, V50))(V85))), case V86 of {'Idris.Prelude.Types.Left', E31} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V88) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V47, {'Idris.TTImp.TTImp.IVar', V48, V49}, V88}} end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E27, E28, E29, E30)); {'Idris.Libraries.Utils.Shunting.Leaf', E54} -> (fun (V89) -> ('un--desugarB'(V0, V1, V2, V4, V3, V5, V6, V89)) end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarLHS'(V0, V1, V2, V3, V4, V5, V6, V7) -> begin (V8 = ('un--desugar'(V0, V1, V2, V3, 0, V4, V6, V7))), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> begin (V11 = ('Idris.Idris2.Core.Core':'un--iunless'(V5, fun () -> ('un--getClauseFn'(V10)) end, V7))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> begin (V14 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, V5, V10, V7))), case V14 of {'Idris.Prelude.Types.Left', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V16) -> case V16 of {'Idris.Builtin.MkPair', E6, E7} -> (fun (V17, V18) -> begin (V55 = (('Idris.Idris2.Core.Core':'un--iwhenJust'(V13, fun (V19) -> case ('Idris.Idris2.Prelude.Types':'un--elem'({'Idris.Prelude.EqOrd.MkEq', fun (V20) -> fun (V21) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V20, V21)) end end, fun (V22) -> fun (V23) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V22, V23)) end end}, V19, V17)) of 1 -> (begin (V24 = ('Idris.Idris2.Idris.Syntax':'un--getPTermLoc'(V6))), fun () -> fun (V25) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V24, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V28, V29, V30)) end end end end end, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V33, V34, V35)) end end end end end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V37)) end end, fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V41, V42, V43, V44)) end end end end end end end, fun (V45) -> fun (V46) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V46)) end end, fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V49, V50, V51)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_String'(V52, V53)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_String'())}}, [<<"Declaration name ("/utf8>> | [('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V19)) | [<<") shadowed by a pattern variable."/utf8>> | []]]]))}, V25)) end end end()); 0 -> fun (V54) -> {'Idris.Prelude.Types.Right', 0} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end))(V7))), case V55 of {'Idris.Prelude.Types.Left', E8} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V57) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V13, {'Idris.Builtin.MkPair', V17, V18}}} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--desugarFnOpt'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.Idris.Syntax.IFnOpt', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Right', V7} end(E0)); {'Idris.Idris.Syntax.PForeign', E1} -> (fun (V8) -> begin (V11 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V9) -> fun (V10) -> ('un--desugar'(V0, V1, V3, V2, 1, V4, V9, V10)) end end, V8, [], V6))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ForeignFn', V13}} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarField'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Idris.Idris.Syntax.MkField', E0, E1, E2, E3, E4, E5} -> (fun (V8, V9, V10, V11, V12, V13) -> begin (V14 = ('Idris.Idris2.Idris.Doc.String':'un--addDocStringNS'(V1, V0, V5, V12, V9, V7))), case V14 of {'Idris.Prelude.Types.Left', E6} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V16) -> begin (V17 = ('Idris.Idris2.Idris.Doc.String':'un--addDocStringNS'(V1, V0, V5, ('nested--12987-9235--in--un--toRF'(V13, V12, V11, V10, V9, V8, V5, V4, V3, V2, V1, V0, V12)), V9, V7))), case V17 of {'Idris.Prelude.Types.Left', E8} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V19) -> begin (V21 = begin (V20 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V20} end), case V21 of {'Idris.Prelude.Types.Left', E10} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V23) -> begin (V26 = ('Idris.Idris2.Core.Core.PiInfo':'un--traverse'(fun (V24) -> fun (V25) -> ('un--desugar'(V0, V1, V3, V2, 1, V4, V24, V25)) end end, V11, V7))), case V26 of {'Idris.Prelude.Types.Left', E12} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V28) -> begin (V29 = ('un--desugar'(V0, V1, V3, V2, 1, V4, V13, V7))), case V29 of {'Idris.Prelude.Types.Left', E14} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V31) -> begin (V43 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNames'(V1, V8, case V23 of {'Idris.Idris.Syntax.MkSyntax', E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26} -> (fun (V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42) -> V41 end(E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V31, V7))), case V43 of {'Idris.Prelude.Types.Left', E27} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E27)); {'Idris.Prelude.Types.Right', E28} -> (fun (V45) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkIField', V8, V10, V28, V12, V45}} end(E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarDo'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> begin (V9 = ('Idris.Idris2.Core.Core':'un--newRef'({'Idris.Idris.Desugar.Bang'}, ('un--initBangs'(V6)), V8))), case V9 of {'Idris.Prelude.Types.Left', E0} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V11) -> begin (V12 = (('un--desugarB'(V0, V11, V1, V2, V3, V4, V5, V7))(V8))), case V12 of {'Idris.Prelude.Types.Left', E2} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V14) -> begin (V16 = begin (V15 = ('erlang':'get'(V11))), {'Idris.Prelude.Types.Right', V15} end), case V16 of {'Idris.Prelude.Types.Left', E4} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V18) -> {'Idris.Prelude.Types.Right', ('un--bindBangs'(case V18 of {'Idris.Idris.Desugar.MkBangData', E6, E7, E8} -> (fun (V19, V20, V21) -> V20 end(E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V14))} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--desugarDecl'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Idris.Syntax.PClaim', E0, E1, E2, E3, E4} -> (fun (V6, V7, V8, V9, V10) -> fun (V11) -> begin (V14 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V12) -> fun (V13) -> ('un--desugarFnOpt'(V0, V1, V2, V3, V4, V12, V13)) end end, V9, [], V11))), case V14 of {'Idris.Prelude.Types.Left', E5} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V16) -> begin (V17 = ('un--desugarType'(V0, V1, V2, V3, V4, V10, V11))), case V17 of {'Idris.Prelude.Types.Left', E7} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V19) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IClaim', V6, V7, V8, V16, V19} | []]} end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); {'Idris.Idris.Syntax.PDef', E9, E10} -> (fun (V20, V21) -> fun (V22) -> begin (V25 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V23) -> fun (V24) -> ('un--desugarClause'(V0, V1, V2, V3, V4, 0, V23, V24)) end end, V21, [], V22))), case V25 of {'Idris.Prelude.Types.Left', E11} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V27) -> begin (V32 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V28) -> ('Idris.Idris2.Prelude.Basics':'un--uncurry'(fun (V29) -> fun (V30) -> fun (V31) -> ('nested--13005-9347--in--un--toIDef'(V21, V20, V4, V3, V2, V1, V0, ('Idris.Idris2.Libraries.Data.IMaybe':'un--fromJust'(V29)), V30, V31)) end end end, V28)) end, V27, [], V22))), case V32 of {'Idris.Prelude.Types.Left', E13} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V34) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.TTImp.Parser':'un--collectDefs'(V34))} end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E9, E10)); {'Idris.Idris.Syntax.PData', E15, E16, E17, E18} -> (fun (V35, V36, V37, V38) -> fun (V39) -> begin (V40 = ('un--desugarData'(V0, V1, V2, V3, V4, V36, V38, V39))), case V40 of {'Idris.Prelude.Types.Left', E19} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V42) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IData', V35, V37, V42} | []]} end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E15, E16, E17, E18)); {'Idris.Idris.Syntax.PParameters', E21, E22, E23} -> (fun (V43, V44, V45) -> fun (V46) -> begin (V49 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V47) -> ('un--desugarDecl'(V0, V1, V2, V3, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V4, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V48) -> ('Idris.Idris2.Builtin':'un--fst'(V48)) end, V44)))), V47)) end, V45, [], V46))), case V49 of {'Idris.Prelude.Types.Left', E24} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V51) -> begin (V68 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V52) -> case V52 of {'Idris.Builtin.MkPair', E26, E27} -> (fun (V53, V54) -> fun (V55) -> case V54 of {'Idris.Builtin.MkPair', E28, E29} -> (fun (V56, V57) -> case V57 of {'Idris.Builtin.MkPair', E30, E31} -> (fun (V58, V59) -> begin (V60 = ('un--desugar'(V0, V1, V3, V2, 1, V4, V59, V55))), case V60 of {'Idris.Prelude.Types.Left', E32} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V62) -> begin (V65 = ('Idris.Idris2.Core.Core.PiInfo':'un--traverse'(fun (V63) -> fun (V64) -> ('un--desugar'(V0, V1, V3, V2, 1, V4, V63, V64)) end end, V58, V55))), case V65 of {'Idris.Prelude.Types.Left', E34} -> (fun (V66) -> {'Idris.Prelude.Types.Left', V66} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V67) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V53, {'Idris.Builtin.MkPair', V56, {'Idris.Builtin.MkPair', V67, V62}}}} end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V44, [], V46))), case V68 of {'Idris.Prelude.Types.Left', E36} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V70) -> begin (V111 = begin (V71 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V1, V46))), case V71 of {'Idris.Prelude.Types.Left', E38} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V73) -> case V73 of 1 -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V74) -> case V74 of {'Idris.Prelude.Types.Left', E40} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V76) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V79, V80, V81)) end end end end end, fun (V82) -> fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V84, V85, V86)) end end end end end, fun (V87) -> fun (V88) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V88)) end end, fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V92, V93, V94, V95)) end end end end end end end, fun (V96) -> fun (V97) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V97)) end end, fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> fun (V102) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V100, V101, V102)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V103) -> fun (V104) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V103, V104)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V76))} end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V105) -> fun (V106) -> fun (V107) -> ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(V105, V106, [], V107)) end end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V108) -> ('Idris.Idris2.Builtin':'un--snd'(('Idris.Idris2.Builtin':'un--snd'(('Idris.Idris2.Builtin':'un--snd'(V108)))))) end, V70)), fun (V109) -> ('Idris.Idris2.TTImp.Utils':'un--findUniqueBindableNames'(V1, V43, 1, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V4, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V110) -> ('Idris.Idris2.Builtin':'un--fst'(V110)) end, V44)))), [], V109)) end)), V46)); 0 -> {'Idris.Prelude.Types.Right', []}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V111 of {'Idris.Prelude.Types.Left', E42} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V113) -> begin (V121 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V114) -> case V114 of {'Idris.Builtin.MkPair', E44, E45} -> (fun (V115, V116) -> case V116 of {'Idris.Builtin.MkPair', E46, E47} -> (fun (V117, V118) -> case V118 of {'Idris.Builtin.MkPair', E48, E49} -> (fun (V119, V120) -> {'Idris.Builtin.MkPair', V115, {'Idris.Builtin.MkPair', V117, {'Idris.Builtin.MkPair', V119, ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V113, V120))}}} end(E48, E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E44, E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V70))), {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IParameters', V43, V121, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V122) -> fun (V123) -> fun (V124) -> fun (V125) -> fun (V126) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V124, V125, V126)) end end end end end, fun (V127) -> fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V129, V130, V131)) end end end end end, fun (V132) -> fun (V133) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V133)) end end, fun (V134) -> fun (V135) -> fun (V136) -> fun (V137) -> fun (V138) -> fun (V139) -> fun (V140) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V137, V138, V139, V140)) end end end end end end end, fun (V141) -> fun (V142) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V142)) end end, fun (V143) -> fun (V144) -> fun (V145) -> fun (V146) -> fun (V147) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V145, V146, V147)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V148) -> fun (V149) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V148, V149)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V51))} | []]} end end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E21, E22, E23)); {'Idris.Idris.Syntax.PUsing', E50, E51, E52} -> (fun (V150, V151, V152) -> fun (V153) -> begin (V155 = begin (V154 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V154} end), case V155 of {'Idris.Prelude.Types.Left', E53} -> (fun (V156) -> {'Idris.Prelude.Types.Left', V156} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V157) -> begin (V169 = case V157 of {'Idris.Idris.Syntax.MkSyntax', E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65} -> (fun (V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168) -> V167 end(E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V178 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V170) -> fun (V171) -> begin (V172 = ('un--desugar'(V0, V1, V3, V2, 1, V4, ('Idris.Idris2.Builtin':'un--snd'(V170)), V171))), case V172 of {'Idris.Prelude.Types.Left', E66} -> (fun (V173) -> {'Idris.Prelude.Types.Left', V173} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V174) -> begin (V175 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNames'(V1, V150, V169, V4, V174, V171))), case V175 of {'Idris.Prelude.Types.Left', E68} -> (fun (V176) -> {'Idris.Prelude.Types.Left', V176} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V177) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Builtin':'un--fst'(V170)), V177}} end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V151, [], V153))), case V178 of {'Idris.Prelude.Types.Left', E70} -> (fun (V179) -> {'Idris.Prelude.Types.Left', V179} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V180) -> begin (V193 = begin (V192 = ('erlang':'put'(V0, case V157 of {'Idris.Idris.Syntax.MkSyntax', E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82} -> (fun (V181, V182, V183, V184, V185, V186, V187, V188, V189, V190, V191) -> {'Idris.Idris.Syntax.MkSyntax', V181, V182, V183, V184, V185, V186, V187, V188, V189, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V180, V169)), V191} end(E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V192} end), case V193 of {'Idris.Prelude.Types.Left', E83} -> (fun (V194) -> {'Idris.Prelude.Types.Left', V194} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V195) -> begin (V197 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V196) -> ('un--desugarDecl'(V0, V1, V2, V3, V4, V196)) end, V152, [], V153))), case V197 of {'Idris.Prelude.Types.Left', E85} -> (fun (V198) -> {'Idris.Prelude.Types.Left', V198} end(E85)); {'Idris.Prelude.Types.Right', E86} -> (fun (V199) -> begin (V201 = begin (V200 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V200} end), case V201 of {'Idris.Prelude.Types.Left', E87} -> (fun (V202) -> {'Idris.Prelude.Types.Left', V202} end(E87)); {'Idris.Prelude.Types.Right', E88} -> (fun (V203) -> begin (V216 = begin (V215 = ('erlang':'put'(V0, case V203 of {'Idris.Idris.Syntax.MkSyntax', E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99} -> (fun (V204, V205, V206, V207, V208, V209, V210, V211, V212, V213, V214) -> {'Idris.Idris.Syntax.MkSyntax', V204, V205, V206, V207, V208, V209, V210, V211, V212, V169, V214} end(E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V215} end), case V216 of {'Idris.Prelude.Types.Left', E100} -> (fun (V217) -> {'Idris.Prelude.Types.Left', V217} end(E100)); {'Idris.Prelude.Types.Right', E101} -> (fun (V218) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V219) -> fun (V220) -> fun (V221) -> fun (V222) -> fun (V223) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V221, V222, V223)) end end end end end, fun (V224) -> fun (V225) -> fun (V226) -> fun (V227) -> fun (V228) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V226, V227, V228)) end end end end end, fun (V229) -> fun (V230) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V230)) end end, fun (V231) -> fun (V232) -> fun (V233) -> fun (V234) -> fun (V235) -> fun (V236) -> fun (V237) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V234, V235, V236, V237)) end end end end end end end, fun (V238) -> fun (V239) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V239)) end end, fun (V240) -> fun (V241) -> fun (V242) -> fun (V243) -> fun (V244) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V242, V243, V244)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V245) -> fun (V246) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V245, V246)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V199))} end(E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E50, E51, E52)); {'Idris.Idris.Syntax.PReflect', E102, E103} -> (fun (V247, V248) -> fun (V249) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V247, <<"Reflection not implemented yet"/utf8>>}, V249)) end end(E102, E103)); {'Idris.Idris.Syntax.PInterface', E104, E105, E106, E107, E108, E109, E110, E111, E112} -> (fun (V250, V251, V252, V253, V254, V255, V256, V257, V258) -> fun (V259) -> begin (V260 = ('Idris.Idris2.Idris.Doc.String':'un--addDocString'(V1, V0, V253, V254, V259))), case V260 of {'Idris.Prelude.Types.Left', E113} -> (fun (V261) -> {'Idris.Prelude.Types.Left', V261} end(E113)); {'Idris.Prelude.Types.Right', E114} -> (fun (V262) -> begin (V264 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V263) -> ('Idris.Idris2.Builtin':'un--fst'(V263)) end, V255))), begin (V294 = ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V265) -> fun (V266) -> fun (V267) -> fun (V268) -> fun (V269) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V267, V268, V269)) end end end end end, fun (V270) -> fun (V271) -> fun (V272) -> fun (V273) -> fun (V274) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V272, V273, V274)) end end end end end, fun (V275) -> fun (V276) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V276)) end end, fun (V277) -> fun (V278) -> fun (V279) -> fun (V280) -> fun (V281) -> fun (V282) -> fun (V283) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V280, V281, V282, V283)) end end end end end end end, fun (V284) -> fun (V285) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V285)) end end, fun (V286) -> fun (V287) -> fun (V288) -> fun (V289) -> fun (V290) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V288, V289, V290)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V291) -> fun (V292) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V291, V292)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, fun (V293) -> ('nested--13005-9871--in--un--expandConstraint'(V258, V257, V256, V255, V254, V253, V252, V251, V250, V4, V3, V2, V1, V0, V293)) end, V252))), begin (V300 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V295) -> fun (V296) -> begin (V297 = ('un--desugar'(V0, V1, V3, V2, 1, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V4, V264)), ('Idris.Idris2.Builtin':'un--snd'(V295)), V296))), case V297 of {'Idris.Prelude.Types.Left', E115} -> (fun (V298) -> {'Idris.Prelude.Types.Left', V298} end(E115)); {'Idris.Prelude.Types.Right', E116} -> (fun (V299) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', ('Idris.Idris2.Builtin':'un--fst'(V295)), V299}} end(E116)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V294, [], V259))), case V300 of {'Idris.Prelude.Types.Left', E117} -> (fun (V301) -> {'Idris.Prelude.Types.Left', V301} end(E117)); {'Idris.Prelude.Types.Right', E118} -> (fun (V302) -> begin (V312 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V303) -> fun (V304) -> case V303 of {'Idris.Builtin.MkPair', E119, E120} -> (fun (V305, V306) -> case V306 of {'Idris.Builtin.MkPair', E121, E122} -> (fun (V307, V308) -> begin (V309 = ('un--desugar'(V0, V1, V3, V2, 1, V4, V308, V304))), case V309 of {'Idris.Prelude.Types.Left', E123} -> (fun (V310) -> {'Idris.Prelude.Types.Left', V310} end(E123)); {'Idris.Prelude.Types.Right', E124} -> (fun (V311) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V305, {'Idris.Builtin.MkPair', V307, V311}}} end(E124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E121, E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E119, E120)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V255, [], V259))), case V312 of {'Idris.Prelude.Types.Left', E125} -> (fun (V313) -> {'Idris.Prelude.Types.Left', V313} end(E125)); {'Idris.Prelude.Types.Right', E126} -> (fun (V314) -> begin (V316 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V315) -> ('Idris.Idris2.Core.Name':'un--dropNS'(V315)) end, ('Idris.Idris2.Idris.Syntax':'un--definedIn'(V258))))), begin (V357 = begin (V317 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V1, V259))), case V317 of {'Idris.Prelude.Types.Left', E127} -> (fun (V318) -> {'Idris.Prelude.Types.Left', V318} end(E127)); {'Idris.Prelude.Types.Right', E128} -> (fun (V319) -> case V319 of 1 -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V320) -> case V320 of {'Idris.Prelude.Types.Left', E129} -> (fun (V321) -> {'Idris.Prelude.Types.Left', V321} end(E129)); {'Idris.Prelude.Types.Right', E130} -> (fun (V322) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V323) -> fun (V324) -> fun (V325) -> fun (V326) -> fun (V327) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V325, V326, V327)) end end end end end, fun (V328) -> fun (V329) -> fun (V330) -> fun (V331) -> fun (V332) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V330, V331, V332)) end end end end end, fun (V333) -> fun (V334) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V334)) end end, fun (V335) -> fun (V336) -> fun (V337) -> fun (V338) -> fun (V339) -> fun (V340) -> fun (V341) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V338, V339, V340, V341)) end end end end end end end, fun (V342) -> fun (V343) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V343)) end end, fun (V344) -> fun (V345) -> fun (V346) -> fun (V347) -> fun (V348) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V346, V347, V348)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V349) -> fun (V350) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V349, V350)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V322))} end(E130)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V351) -> fun (V352) -> fun (V353) -> ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(V351, V352, [], V353)) end end end, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V354) -> ('Idris.Idris2.Builtin':'un--snd'(V354)) end, V302)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V355) -> ('Idris.Idris2.Builtin':'un--snd'(('Idris.Idris2.Builtin':'un--snd'(V355)))) end, V314)))), fun (V356) -> ('Idris.Idris2.TTImp.Utils':'un--findUniqueBindableNames'(V1, V250, 1, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V4, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V316, V264)))), [], V356)) end)), V259)); 0 -> {'Idris.Prelude.Types.Right', []}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E128)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V357 of {'Idris.Prelude.Types.Left', E131} -> (fun (V358) -> {'Idris.Prelude.Types.Left', V358} end(E131)); {'Idris.Prelude.Types.Right', E132} -> (fun (V359) -> begin (V366 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V360) -> case V360 of {'Idris.Builtin.MkPair', E133, E134} -> (fun (V361, V362) -> case V362 of {'Idris.Builtin.MkPair', E135, E136} -> (fun (V363, V364) -> begin (V365 = ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V359, V364))), {'Idris.Builtin.MkPair', V361, {'Idris.Builtin.MkPair', V363, V365}} end end(E135, E136)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E133, E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V314))), begin (V370 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V367) -> case V367 of {'Idris.Builtin.MkPair', E137, E138} -> (fun (V368, V369) -> {'Idris.Builtin.MkPair', V368, ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V359, V369))} end(E137, E138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V302))), begin (V372 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V371) -> ('un--desugarDecl'(V0, V1, V2, V3, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V4, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V316, V264)))), V371)) end, V258, [], V259))), case V372 of {'Idris.Prelude.Types.Left', E139} -> (fun (V373) -> {'Idris.Prelude.Types.Left', V373} end(E139)); {'Idris.Prelude.Types.Right', E140} -> (fun (V374) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> [V253 | []] end, fun () -> fun (V375) -> [V253 | [V375 | []]] end end, V257)), fun (V376) -> fun (V377) -> fun (V378) -> fun (V379) -> ('Idris.Idris2.Idris.Elab.Interface':'un--elabInterface'(V376, V1, V2, V0, V3, V250, V251, V378, V377, V370, V253, V366, V256, V257, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V380) -> fun (V381) -> fun (V382) -> fun (V383) -> fun (V384) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V382, V383, V384)) end end end end end, fun (V385) -> fun (V386) -> fun (V387) -> fun (V388) -> fun (V389) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V387, V388, V389)) end end end end end, fun (V390) -> fun (V391) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V391)) end end, fun (V392) -> fun (V393) -> fun (V394) -> fun (V395) -> fun (V396) -> fun (V397) -> fun (V398) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V395, V396, V397, V398)) end end end end end end end, fun (V399) -> fun (V400) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V400)) end end, fun (V401) -> fun (V402) -> fun (V403) -> fun (V404) -> fun (V405) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V403, V404, V405)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V406) -> fun (V407) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V406, V407)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V374)), V379)) end end end end} | []]} end(E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E132)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E126)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E104, E105, E106, E107, E108, E109, E110, E111, E112)); {'Idris.Idris.Syntax.PImplementation', E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151} -> (fun (V408, V409, V410, V411, V412, V413, V414, V415, V416, V417, V418) -> fun (V419) -> begin (V422 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V420) -> fun (V421) -> ('un--desugarFnOpt'(V0, V1, V2, V3, V4, V420, V421)) end end, V410, [], V419))), case V422 of {'Idris.Prelude.Types.Left', E152} -> (fun (V423) -> {'Idris.Prelude.Types.Left', V423} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V424) -> begin (V434 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V425) -> fun (V426) -> case V425 of {'Idris.Builtin.MkPair', E154, E155} -> (fun (V427, V428) -> case V428 of {'Idris.Builtin.MkPair', E156, E157} -> (fun (V429, V430) -> begin (V431 = ('un--desugar'(V0, V1, V3, V2, 1, V4, V430, V426))), case V431 of {'Idris.Prelude.Types.Left', E158} -> (fun (V432) -> {'Idris.Prelude.Types.Left', V432} end(E158)); {'Idris.Prelude.Types.Right', E159} -> (fun (V433) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V427, {'Idris.Builtin.MkPair', V429, V433}}} end(E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E156, E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E154, E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V412, [], V419))), case V434 of {'Idris.Prelude.Types.Left', E160} -> (fun (V435) -> {'Idris.Prelude.Types.Left', V435} end(E160)); {'Idris.Prelude.Types.Right', E161} -> (fun (V436) -> begin (V444 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V437) -> fun (V438) -> case V437 of {'Idris.Builtin.MkPair', E162, E163} -> (fun (V439, V440) -> begin (V441 = ('un--desugar'(V0, V1, V3, V2, 1, V4, V440, V438))), case V441 of {'Idris.Prelude.Types.Left', E164} -> (fun (V442) -> {'Idris.Prelude.Types.Left', V442} end(E164)); {'Idris.Prelude.Types.Right', E165} -> (fun (V443) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V439, V443}} end(E165)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E162, E163)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V413, [], V419))), case V444 of {'Idris.Prelude.Types.Left', E166} -> (fun (V445) -> {'Idris.Prelude.Types.Left', V445} end(E166)); {'Idris.Prelude.Types.Right', E167} -> (fun (V446) -> begin (V449 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V447) -> fun (V448) -> ('un--desugar'(V0, V1, V3, V2, 1, V4, V447, V448)) end end, V415, [], V419))), case V449 of {'Idris.Prelude.Types.Left', E168} -> (fun (V450) -> {'Idris.Prelude.Types.Left', V450} end(E168)); {'Idris.Prelude.Types.Right', E169} -> (fun (V451) -> begin (V491 = begin (V452 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V1, V419))), case V452 of {'Idris.Prelude.Types.Left', E170} -> (fun (V453) -> {'Idris.Prelude.Types.Left', V453} end(E170)); {'Idris.Prelude.Types.Right', E171} -> (fun (V454) -> case V454 of 1 -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V455) -> case V455 of {'Idris.Prelude.Types.Left', E172} -> (fun (V456) -> {'Idris.Prelude.Types.Left', V456} end(E172)); {'Idris.Prelude.Types.Right', E173} -> (fun (V457) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V458) -> fun (V459) -> fun (V460) -> fun (V461) -> fun (V462) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V460, V461, V462)) end end end end end, fun (V463) -> fun (V464) -> fun (V465) -> fun (V466) -> fun (V467) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V465, V466, V467)) end end end end end, fun (V468) -> fun (V469) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V469)) end end, fun (V470) -> fun (V471) -> fun (V472) -> fun (V473) -> fun (V474) -> fun (V475) -> fun (V476) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V473, V474, V475, V476)) end end end end end end end, fun (V477) -> fun (V478) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V478)) end end, fun (V479) -> fun (V480) -> fun (V481) -> fun (V482) -> fun (V483) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V481, V482, V483)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V484) -> fun (V485) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V484, V485)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V457))} end(E173)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V486) -> fun (V487) -> fun (V488) -> ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(V486, V487, [], V488)) end end end, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V489) -> ('Idris.Idris2.Builtin':'un--snd'(V489)) end, V446)), V451)), fun (V490) -> ('Idris.Idris2.TTImp.Utils':'un--findUniqueBindableNames'(V1, V408, 1, V4, [], V490)) end)), V419)); 0 -> {'Idris.Prelude.Types.Right', []}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E171)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V491 of {'Idris.Prelude.Types.Left', E174} -> (fun (V492) -> {'Idris.Prelude.Types.Left', V492} end(E174)); {'Idris.Prelude.Types.Right', E175} -> (fun (V493) -> begin (V495 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V494) -> ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V493, V494)) end, V451))), begin (V501 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V496) -> case V496 of {'Idris.Builtin.MkPair', E176, E177} -> (fun (V497, V498) -> case V498 of {'Idris.Builtin.MkPair', E178, E179} -> (fun (V499, V500) -> {'Idris.Builtin.MkPair', V497, {'Idris.Builtin.MkPair', V499, ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V493, V500))}} end(E178, E179)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E176, E177)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V436))), begin (V505 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V502) -> case V502 of {'Idris.Builtin.MkPair', E180, E181} -> (fun (V503, V504) -> {'Idris.Builtin.MkPair', V503, ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V493, V504))} end(E180, E181)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V446))), begin (V541 = (('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> fun (V506) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end, fun () -> fun (V507) -> fun (V508) -> begin (V510 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V509) -> ('un--desugarDecl'(V0, V1, V2, V3, V4, V509)) end, V507, [], V508))), case V510 of {'Idris.Prelude.Types.Left', E182} -> (fun (V511) -> {'Idris.Prelude.Types.Left', V511} end(E182)); {'Idris.Prelude.Types.Right', E183} -> (fun (V512) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V513) -> fun (V514) -> fun (V515) -> fun (V516) -> fun (V517) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V515, V516, V517)) end end end end end, fun (V518) -> fun (V519) -> fun (V520) -> fun (V521) -> fun (V522) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V520, V521, V522)) end end end end end, fun (V523) -> fun (V524) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V524)) end end, fun (V525) -> fun (V526) -> fun (V527) -> fun (V528) -> fun (V529) -> fun (V530) -> fun (V531) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V528, V529, V530, V531)) end end end end end end end, fun (V532) -> fun (V533) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V533)) end end, fun (V534) -> fun (V535) -> fun (V536) -> fun (V537) -> fun (V538) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V536, V537, V538)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V539) -> fun (V540) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V539, V540)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V512))}} end(E183)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, V418))(V419))), case V541 of {'Idris.Prelude.Types.Left', E184} -> (fun (V542) -> {'Idris.Prelude.Types.Left', V542} end(E184)); {'Idris.Prelude.Types.Right', E185} -> (fun (V543) -> begin (V545 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> ('Idris.Idris2.Idris.Elab.Implementation':'un--mkImplName'(V408, V414, V495)) end, fun () -> fun (V544) -> V544 end end, V416))), {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [V545 | []], fun (V546) -> fun (V547) -> fun (V548) -> ('Idris.Idris2.Idris.Elab.Implementation':'un--elabImplementation'(V546, V1, V2, V0, V3, V408, V409, V424, V411, V548, V547, V501, V505, V414, V495, ('nested--13005-10319--in--un--isNamed'(V418, V417, V416, V415, V414, V413, V412, V411, V410, V409, V408, V4, V3, V2, V1, V0, V416)), V545, V417, V543)) end end end} | []]} end end(E185)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E175)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E161)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151)); {'Idris.Idris.Syntax.PRecord', E186, E187, E188, E189, E190, E191, E192} -> (fun (V549, V550, V551, V552, V553, V554, V555) -> fun (V556) -> begin (V557 = ('Idris.Idris2.Idris.Doc.String':'un--addDocString'(V1, V0, V552, V550, V556))), case V557 of {'Idris.Prelude.Types.Left', E193} -> (fun (V558) -> {'Idris.Prelude.Types.Left', V558} end(E193)); {'Idris.Prelude.Types.Right', E194} -> (fun (V559) -> begin (V574 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V560) -> case V560 of {'Idris.Builtin.MkPair', E195, E196} -> (fun (V561, V562) -> fun (V563) -> case V562 of {'Idris.Builtin.MkPair', E197, E198} -> (fun (V564, V565) -> case V565 of {'Idris.Builtin.MkPair', E199, E200} -> (fun (V566, V567) -> begin (V568 = ('un--desugar'(V0, V1, V3, V2, 1, V4, V567, V563))), case V568 of {'Idris.Prelude.Types.Left', E201} -> (fun (V569) -> {'Idris.Prelude.Types.Left', V569} end(E201)); {'Idris.Prelude.Types.Right', E202} -> (fun (V570) -> begin (V571 = ('nested--13005-10790--in--un--mapDesugarPiInfo'(V555, V554, V553, V552, V551, V550, V549, V4, V3, V2, V1, V0, V4, V566, V563))), case V571 of {'Idris.Prelude.Types.Left', E203} -> (fun (V572) -> {'Idris.Prelude.Types.Left', V572} end(E203)); {'Idris.Prelude.Types.Right', E204} -> (fun (V573) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V561, {'Idris.Builtin.MkPair', V564, {'Idris.Builtin.MkPair', V573, V570}}}} end(E204)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E202)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E199, E200)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E197, E198)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E195, E196)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V553, [], V556))), case V574 of {'Idris.Prelude.Types.Left', E205} -> (fun (V575) -> {'Idris.Prelude.Types.Left', V575} end(E205)); {'Idris.Prelude.Types.Right', E206} -> (fun (V576) -> begin (V578 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V577) -> ('nested--13005-10788--in--un--fname'(V555, V554, V553, V552, V551, V550, V549, V4, V3, V2, V1, V0, V577)) end, V555))), begin (V579 = ('Idris.Idris2.Core.Context':'un--isUnboundImplicits'(V1, V556))), case V579 of {'Idris.Prelude.Types.Left', E207} -> (fun (V580) -> {'Idris.Prelude.Types.Left', V580} end(E207)); {'Idris.Prelude.Types.Right', E208} -> (fun (V581) -> begin (V619 = case V581 of 1 -> ('Idris.Idris2.Prelude.Interfaces':'un--concatMap'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V582) -> fun (V583) -> fun (V584) -> fun (V585) -> fun (V586) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V584, V585, V586)) end end end end end, fun (V587) -> fun (V588) -> fun (V589) -> fun (V590) -> fun (V591) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V589, V590, V591)) end end end end end, fun (V592) -> fun (V593) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V593)) end end, fun (V594) -> fun (V595) -> fun (V596) -> fun (V597) -> fun (V598) -> fun (V599) -> fun (V600) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V597, V598, V599, V600)) end end end end end end end, fun (V601) -> fun (V602) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V602)) end end, fun (V603) -> fun (V604) -> fun (V605) -> fun (V606) -> fun (V607) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V605, V606, V607)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V608) -> fun (V609) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V608, V609)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, fun (V610) -> ('Idris.Idris2.TTImp.Utils':'un--findBindableNames'(1, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V4, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V578, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V611) -> ('Idris.Idris2.Builtin':'un--fst'(V611)) end, V553)))))), [], V610)) end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V612) -> case V612 of {'Idris.Builtin.MkPair', E209, E210} -> (fun (V613, V614) -> case V614 of {'Idris.Builtin.MkPair', E211, E212} -> (fun (V615, V616) -> case V616 of {'Idris.Builtin.MkPair', E213, E214} -> (fun (V617, V618) -> V618 end(E213, E214)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E211, E212)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E209, E210)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V576)))); 0 -> []; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V627 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V620) -> case V620 of {'Idris.Builtin.MkPair', E215, E216} -> (fun (V621, V622) -> case V622 of {'Idris.Builtin.MkPair', E217, E218} -> (fun (V623, V624) -> case V624 of {'Idris.Builtin.MkPair', E219, E220} -> (fun (V625, V626) -> {'Idris.Builtin.MkPair', V621, {'Idris.Builtin.MkPair', V623, {'Idris.Builtin.MkPair', V625, ('Idris.Idris2.TTImp.BindImplicits':'un--doBind'(V619, V626))}}} end(E219, E220)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E217, E218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E215, E216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, V576))), begin (V628 = ('Idris.Idris2.Core.Name':'un--nameRoot'(V552))), begin (V633 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V629) -> fun (V630) -> ('un--desugarField'(V0, V1, V2, V3, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V4, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V631) -> ('nested--13005-10788--in--un--fname'(V555, V554, V553, V552, V551, V550, V549, V4, V3, V2, V1, V0, V631)) end, V555)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V632) -> ('Idris.Idris2.Builtin':'un--fst'(V632)) end, V553)))))), ('Idris.Idris2.Core.Name.Namespace':'un--mkNamespace'(V628)), V629, V630)) end end, V555, [], V556))), case V633 of {'Idris.Prelude.Types.Left', E221} -> (fun (V634) -> {'Idris.Prelude.Types.Left', V634} end(E221)); {'Idris.Prelude.Types.Right', E222} -> (fun (V635) -> begin (V637 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> ('nested--13005-10789--in--un--mkConName'(V555, V554, V553, V552, V551, V550, V549, V4, V3, V2, V1, V0, V552)) end, fun () -> fun (V636) -> V636 end end, V554))), {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IRecord', V549, {'Idris.Prelude.Types.Just', V628}, V551, {'Idris.TTImp.TTImp.MkImpRecord', V549, V552, V627, V637, V635}} | []]} end end(E222)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E208)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E206)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E194)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E186, E187, E188, E189, E190, E191, E192)); {'Idris.Idris.Syntax.PFixity', E223, E224, E225, E226} -> (fun (V638, V639, V640, V641) -> case V639 of 3 -> case V641 of {'Idris.Core.Name.UN', E261} -> (fun (V642) -> case V642 of {'Idris.Core.Name.Basic', E279} -> (fun (V643) -> fun (V644) -> begin (V646 = begin (V645 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V645} end), case V646 of {'Idris.Prelude.Types.Left', E280} -> (fun (V647) -> {'Idris.Prelude.Types.Left', V647} end(E280)); {'Idris.Prelude.Types.Right', E281} -> (fun (V648) -> begin (V661 = begin (V660 = ('erlang':'put'(V0, case V648 of {'Idris.Idris.Syntax.MkSyntax', E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292} -> (fun (V649, V650, V651, V652, V653, V654, V655, V656, V657, V658, V659) -> {'Idris.Idris.Syntax.MkSyntax', V649, ('Idris.Idris2.Libraries.Data.StringMap':'un--insert'(V643, V640, V650)), V651, V652, V653, V654, V655, V656, V657, V658, V659} end(E282, E283, E284, E285, E286, E287, E288, E289, E290, E291, E292)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V660} end), case V661 of {'Idris.Prelude.Types.Left', E293} -> (fun (V662) -> {'Idris.Prelude.Types.Left', V662} end(E293)); {'Idris.Prelude.Types.Right', E294} -> (fun (V663) -> {'Idris.Prelude.Types.Right', []} end(E294)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E281)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E279)); _ -> fun (V664) -> case V641 of {'Idris.Core.Name.UN', E262} -> (fun (V665) -> case V665 of {'Idris.Core.Name.Basic', E263} -> (fun (V666) -> begin (V668 = begin (V667 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V667} end), case V668 of {'Idris.Prelude.Types.Left', E264} -> (fun (V669) -> {'Idris.Prelude.Types.Left', V669} end(E264)); {'Idris.Prelude.Types.Right', E265} -> (fun (V670) -> begin (V683 = begin (V682 = ('erlang':'put'(V0, case V670 of {'Idris.Idris.Syntax.MkSyntax', E266, E267, E268, E269, E270, E271, E272, E273, E274, E275, E276} -> (fun (V671, V672, V673, V674, V675, V676, V677, V678, V679, V680, V681) -> {'Idris.Idris.Syntax.MkSyntax', ('Idris.Idris2.Libraries.Data.StringMap':'un--insert'(V666, {'Idris.Builtin.MkPair', V639, V640}, V671)), V672, V673, V674, V675, V676, V677, V678, V679, V680, V681} end(E266, E267, E268, E269, E270, E271, E272, E273, E274, E275, E276)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V682} end), case V683 of {'Idris.Prelude.Types.Left', E277} -> (fun (V684) -> {'Idris.Prelude.Types.Left', V684} end(E277)); {'Idris.Prelude.Types.Right', E278} -> (fun (V685) -> {'Idris.Prelude.Types.Right', []} end(E278)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E265)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E263)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V638, <<"Fixity declarations must be for unqualified names"/utf8>>}, V664)) end end(E262)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V638, <<"Fixity declarations must be for unqualified names"/utf8>>}, V664)) end end end end(E261)); _ -> fun (V686) -> case V641 of {'Idris.Core.Name.UN', E244} -> (fun (V687) -> case V687 of {'Idris.Core.Name.Basic', E245} -> (fun (V688) -> begin (V690 = begin (V689 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V689} end), case V690 of {'Idris.Prelude.Types.Left', E246} -> (fun (V691) -> {'Idris.Prelude.Types.Left', V691} end(E246)); {'Idris.Prelude.Types.Right', E247} -> (fun (V692) -> begin (V705 = begin (V704 = ('erlang':'put'(V0, case V692 of {'Idris.Idris.Syntax.MkSyntax', E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258} -> (fun (V693, V694, V695, V696, V697, V698, V699, V700, V701, V702, V703) -> {'Idris.Idris.Syntax.MkSyntax', ('Idris.Idris2.Libraries.Data.StringMap':'un--insert'(V688, {'Idris.Builtin.MkPair', V639, V640}, V693)), V694, V695, V696, V697, V698, V699, V700, V701, V702, V703} end(E248, E249, E250, E251, E252, E253, E254, E255, E256, E257, E258)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V704} end), case V705 of {'Idris.Prelude.Types.Left', E259} -> (fun (V706) -> {'Idris.Prelude.Types.Left', V706} end(E259)); {'Idris.Prelude.Types.Right', E260} -> (fun (V707) -> {'Idris.Prelude.Types.Right', []} end(E260)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E247)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E245)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V638, <<"Fixity declarations must be for unqualified names"/utf8>>}, V686)) end end(E244)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V638, <<"Fixity declarations must be for unqualified names"/utf8>>}, V686)) end end end; _ -> fun (V708) -> case V641 of {'Idris.Core.Name.UN', E227} -> (fun (V709) -> case V709 of {'Idris.Core.Name.Basic', E228} -> (fun (V710) -> begin (V712 = begin (V711 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V711} end), case V712 of {'Idris.Prelude.Types.Left', E229} -> (fun (V713) -> {'Idris.Prelude.Types.Left', V713} end(E229)); {'Idris.Prelude.Types.Right', E230} -> (fun (V714) -> begin (V727 = begin (V726 = ('erlang':'put'(V0, case V714 of {'Idris.Idris.Syntax.MkSyntax', E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241} -> (fun (V715, V716, V717, V718, V719, V720, V721, V722, V723, V724, V725) -> {'Idris.Idris.Syntax.MkSyntax', ('Idris.Idris2.Libraries.Data.StringMap':'un--insert'(V710, {'Idris.Builtin.MkPair', V639, V640}, V715)), V716, V717, V718, V719, V720, V721, V722, V723, V724, V725} end(E231, E232, E233, E234, E235, E236, E237, E238, E239, E240, E241)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V726} end), case V727 of {'Idris.Prelude.Types.Left', E242} -> (fun (V728) -> {'Idris.Prelude.Types.Left', V728} end(E242)); {'Idris.Prelude.Types.Right', E243} -> (fun (V729) -> {'Idris.Prelude.Types.Right', []} end(E243)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E228)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V638, <<"Fixity declarations must be for unqualified names"/utf8>>}, V708)) end end(E227)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V638, <<"Fixity declarations must be for unqualified names"/utf8>>}, V708)) end end end end(E223, E224, E225, E226)); {'Idris.Idris.Syntax.PMutual', E295, E296} -> (fun (V730, V731) -> fun (V732) -> case ('Idris.Idris2.Idris.Desugar.Mutual':'un--splitMutual'(V731)) of {'Idris.Builtin.MkPair', E297, E298} -> (fun (V733, V734) -> begin (V736 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V735) -> ('un--desugarDecl'(V0, V1, V2, V3, V4, V735)) end, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V733, V734)), [], V732))), case V736 of {'Idris.Prelude.Types.Left', E299} -> (fun (V737) -> {'Idris.Prelude.Types.Left', V737} end(E299)); {'Idris.Prelude.Types.Right', E300} -> (fun (V738) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V739) -> fun (V740) -> fun (V741) -> fun (V742) -> fun (V743) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V741, V742, V743)) end end end end end, fun (V744) -> fun (V745) -> fun (V746) -> fun (V747) -> fun (V748) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V746, V747, V748)) end end end end end, fun (V749) -> fun (V750) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V750)) end end, fun (V751) -> fun (V752) -> fun (V753) -> fun (V754) -> fun (V755) -> fun (V756) -> fun (V757) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V754, V755, V756, V757)) end end end end end end end, fun (V758) -> fun (V759) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V759)) end end, fun (V760) -> fun (V761) -> fun (V762) -> fun (V763) -> fun (V764) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V762, V763, V764)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V765) -> fun (V766) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V765, V766)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V738))} end(E300)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E297, E298)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E295, E296)); {'Idris.Idris.Syntax.PNamespace', E301, E302, E303} -> (fun (V767, V768, V769) -> fun (V770) -> ('Idris.Idris2.Core.Context':'un--withExtendedNS'(V1, V768, fun (V771) -> begin (V773 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V772) -> ('un--desugarDecl'(V0, V1, V2, V3, V4, V772)) end, V769, [], V771))), case V773 of {'Idris.Prelude.Types.Left', E304} -> (fun (V774) -> {'Idris.Prelude.Types.Left', V774} end(E304)); {'Idris.Prelude.Types.Right', E305} -> (fun (V775) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.INamespace', V767, V768, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V776) -> fun (V777) -> fun (V778) -> fun (V779) -> fun (V780) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V778, V779, V780)) end end end end end, fun (V781) -> fun (V782) -> fun (V783) -> fun (V784) -> fun (V785) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V783, V784, V785)) end end end end end, fun (V786) -> fun (V787) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V787)) end end, fun (V788) -> fun (V789) -> fun (V790) -> fun (V791) -> fun (V792) -> fun (V793) -> fun (V794) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V791, V792, V793, V794)) end end end end end end end, fun (V795) -> fun (V796) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V796)) end end, fun (V797) -> fun (V798) -> fun (V799) -> fun (V800) -> fun (V801) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V799, V800, V801)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V802) -> fun (V803) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V802, V803)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V775))} | []]} end(E305)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V770)) end end(E301, E302, E303)); {'Idris.Idris.Syntax.PTransform', E306, E307, E308, E309} -> (fun (V804, V805, V806, V807) -> fun (V808) -> begin (V812 = begin (V809 = ('un--desugar'(V0, V1, V3, V2, 0, V4, V806, V808))), case V809 of {'Idris.Prelude.Types.Left', E310} -> (fun (V810) -> {'Idris.Prelude.Types.Left', V810} end(E310)); {'Idris.Prelude.Types.Right', E311} -> (fun (V811) -> ('Idris.Idris2.TTImp.BindImplicits':'un--bindNames'(V1, 0, V811, V808)) end(E311)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V812 of {'Idris.Prelude.Types.Left', E312} -> (fun (V813) -> {'Idris.Prelude.Types.Left', V813} end(E312)); {'Idris.Prelude.Types.Right', E313} -> (fun (V814) -> case V814 of {'Idris.Builtin.MkPair', E314, E315} -> (fun (V815, V816) -> begin (V817 = ('un--desugar'(V0, V1, V3, V2, 1, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V815, V4)), V807, V808))), case V817 of {'Idris.Prelude.Types.Left', E316} -> (fun (V818) -> {'Idris.Prelude.Types.Left', V818} end(E316)); {'Idris.Prelude.Types.Right', E317} -> (fun (V819) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.ITransform', V804, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', V805}}, V816, V819} | []]} end(E317)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E314, E315)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E313)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E306, E307, E308, E309)); {'Idris.Idris.Syntax.PRunElabDecl', E318, E319} -> (fun (V820, V821) -> fun (V822) -> begin (V823 = ('un--desugar'(V0, V1, V3, V2, 1, V4, V821, V822))), case V823 of {'Idris.Prelude.Types.Left', E320} -> (fun (V824) -> {'Idris.Prelude.Types.Left', V824} end(E320)); {'Idris.Prelude.Types.Right', E321} -> (fun (V825) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IRunElabDecl', V820, V825} | []]} end(E321)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E318, E319)); {'Idris.Idris.Syntax.PDirective', E322, E323} -> (fun (V826, V827) -> fun (V828) -> case V827 of {'Idris.Idris.Syntax.Hide', E324} -> (fun (V829) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V830) -> fun (V831) -> fun (V832) -> fun (V833) -> ('Idris.Idris2.Core.Context':'un--hide'(V1, V826, V829, V833)) end end end end} | []]} end(E324)); {'Idris.Idris.Syntax.Logging', E325} -> (fun (V834) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.ILog', ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V835) -> fun (V836) -> fun (V837) -> fun (V838) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V837, V838)) end end end end, fun (V839) -> {'Idris.Builtin.MkPair', ('Idris.Idris2.Core.Options.Log':'un--topics'(V839)), ('Idris.Idris2.Core.Options.Log':'un--verbosity'(V839))} end, V834))} | []]} end(E325)); {'Idris.Idris.Syntax.LazyOn', E326} -> (fun (V840) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V841) -> fun (V842) -> fun (V843) -> fun (V844) -> ('Idris.Idris2.Core.Context':'un--lazyActive'(V1, V840, V844)) end end end end} | []]} end(E326)); {'Idris.Idris.Syntax.UnboundImplicits', E327} -> (fun (V845) -> begin (V846 = ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V1, V845, V828))), case V846 of {'Idris.Prelude.Types.Left', E328} -> (fun (V847) -> {'Idris.Prelude.Types.Left', V847} end(E328)); {'Idris.Prelude.Types.Right', E329} -> (fun (V848) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V849) -> fun (V850) -> fun (V851) -> fun (V852) -> ('Idris.Idris2.Core.Context':'un--setUnboundImplicits'(V1, V845, V852)) end end end end} | []]} end(E329)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E327)); {'Idris.Idris.Syntax.PrefixRecordProjections', E330} -> (fun (V853) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V854) -> fun (V855) -> fun (V856) -> fun (V857) -> ('Idris.Idris2.Core.Context':'un--setPrefixRecordProjections'(V1, V853, V857)) end end end end} | []]} end(E330)); {'Idris.Idris.Syntax.AmbigDepth', E331} -> (fun (V858) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V859) -> fun (V860) -> fun (V861) -> fun (V862) -> ('Idris.Idris2.Core.Context':'un--setAmbigLimit'(V1, V858, V862)) end end end end} | []]} end(E331)); {'Idris.Idris.Syntax.AutoImplicitDepth', E332} -> (fun (V863) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V864) -> fun (V865) -> fun (V866) -> fun (V867) -> ('Idris.Idris2.Core.Context':'un--setAutoImplicitLimit'(V1, V863, V867)) end end end end} | []]} end(E332)); {'Idris.Idris.Syntax.NFMetavarThreshold', E333} -> (fun (V868) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V869) -> fun (V870) -> fun (V871) -> fun (V872) -> ('Idris.Idris2.Core.Context':'un--setNFThreshold'(V1, V868, V872)) end end end end} | []]} end(E333)); {'Idris.Idris.Syntax.SearchTimeout', E334} -> (fun (V873) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V874) -> fun (V875) -> fun (V876) -> fun (V877) -> ('Idris.Idris2.Core.Context':'un--setSearchTimeout'(V1, V873, V877)) end end end end} | []]} end(E334)); {'Idris.Idris.Syntax.PairNames', E335, E336, E337} -> (fun (V878, V879, V880) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V881) -> fun (V882) -> fun (V883) -> fun (V884) -> ('Idris.Idris2.Core.Context':'un--setPair'(V1, V826, V878, V879, V880, V884)) end end end end} | []]} end(E335, E336, E337)); {'Idris.Idris.Syntax.RewriteName', E338, E339} -> (fun (V885, V886) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V887) -> fun (V888) -> fun (V889) -> fun (V890) -> ('Idris.Idris2.Core.Context':'un--setRewrite'(V1, V826, V885, V886, V890)) end end end end} | []]} end(E338, E339)); {'Idris.Idris.Syntax.PrimInteger', E340} -> (fun (V891) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V892) -> fun (V893) -> fun (V894) -> fun (V895) -> ('Idris.Idris2.Core.Context':'un--setFromInteger'(V1, V891, V895)) end end end end} | []]} end(E340)); {'Idris.Idris.Syntax.PrimString', E341} -> (fun (V896) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V897) -> fun (V898) -> fun (V899) -> fun (V900) -> ('Idris.Idris2.Core.Context':'un--setFromString'(V1, V896, V900)) end end end end} | []]} end(E341)); {'Idris.Idris.Syntax.PrimChar', E342} -> (fun (V901) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V902) -> fun (V903) -> fun (V904) -> fun (V905) -> ('Idris.Idris2.Core.Context':'un--setFromChar'(V1, V901, V905)) end end end end} | []]} end(E342)); {'Idris.Idris.Syntax.PrimDouble', E343} -> (fun (V906) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V907) -> fun (V908) -> fun (V909) -> fun (V910) -> ('Idris.Idris2.Core.Context':'un--setFromDouble'(V1, V906, V910)) end end end end} | []]} end(E343)); {'Idris.Idris.Syntax.CGAction', E344, E345} -> (fun (V911, V912) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V913) -> fun (V914) -> fun (V915) -> fun (V916) -> ('Idris.Idris2.Core.Context':'un--addDirective'(V1, V911, V912, V916)) end end end end} | []]} end(E344, E345)); {'Idris.Idris.Syntax.Names', E346, E347} -> (fun (V917, V918) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V919) -> fun (V920) -> fun (V921) -> fun (V922) -> ('Idris.Idris2.Core.Context':'un--addNameDirective'(V1, V826, V917, V918, V922)) end end end end} | []]} end(E346, E347)); {'Idris.Idris.Syntax.StartExpr', E348} -> (fun (V923) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V924) -> fun (V925) -> fun (V926) -> fun (V927) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', <<"%start not implemented"/utf8>>}, V927)) end end end end} | []]} end(E348)); {'Idris.Idris.Syntax.Overloadable', E349} -> (fun (V928) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V929) -> fun (V930) -> fun (V931) -> fun (V932) -> ('Idris.Idris2.Core.Context':'un--setNameFlag'(V1, V826, V928, {'Idris.Core.Context.Context.Overloadable'}, V932)) end end end end} | []]} end(E349)); {'Idris.Idris.Syntax.Extension', E350} -> (fun (V933) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V934) -> fun (V935) -> fun (V936) -> fun (V937) -> ('Idris.Idris2.Core.Context':'un--setExtension'(V1, V933, V937)) end end end end} | []]} end(E350)); {'Idris.Idris.Syntax.DefaultTotality', E351} -> (fun (V938) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IPragma', [], fun (V939) -> fun (V940) -> fun (V941) -> fun (V942) -> ('Idris.Idris2.Core.Context':'un--setDefaultTotalityOption'(V1, V938, V942)) end end end end} | []]} end(E351)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E322, E323)); {'Idris.Idris.Syntax.PBuiltin', E352, E353, E354} -> (fun (V943, V944, V945) -> fun (V946) -> {'Idris.Prelude.Types.Right', [{'Idris.TTImp.TTImp.IBuiltin', V943, V944, V945} | []]} end end(E352, E353, E354)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarData'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Idris.Idris.Syntax.MkPData', E0, E1, E2, E3, E4} -> (fun (V8, V9, V10, V11, V12) -> begin (V13 = ('Idris.Idris2.Idris.Doc.String':'un--addDocString'(V1, V0, V9, V5, V7))), case V13 of {'Idris.Prelude.Types.Left', E5} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V15) -> begin (V17 = begin (V16 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V16} end), case V17 of {'Idris.Prelude.Types.Left', E7} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V19) -> begin (V20 = ('un--desugar'(V0, V1, V3, V2, 1, V4, V10, V7))), case V20 of {'Idris.Prelude.Types.Left', E9} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V22) -> begin (V34 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNames'(V1, V8, case V19 of {'Idris.Idris.Syntax.MkSyntax', E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33) -> V32 end(E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V22, V7))), case V34 of {'Idris.Prelude.Types.Left', E22} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V36) -> begin (V39 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V37) -> fun (V38) -> ('un--desugarType'(V0, V1, V2, V3, V4, V37, V38)) end end, V12, [], V7))), case V39 of {'Idris.Prelude.Types.Left', E24} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V41) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpData', V8, V9, V36, V11, V41}} end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3, E4)); {'Idris.Idris.Syntax.MkPLater', E26, E27, E28} -> (fun (V42, V43, V44) -> begin (V45 = ('Idris.Idris2.Idris.Doc.String':'un--addDocString'(V1, V0, V43, V5, V7))), case V45 of {'Idris.Prelude.Types.Left', E29} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E29)); {'Idris.Prelude.Types.Right', E30} -> (fun (V47) -> begin (V49 = begin (V48 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V48} end), case V49 of {'Idris.Prelude.Types.Left', E31} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V51) -> begin (V52 = ('un--desugar'(V0, V1, V3, V2, 1, V4, V44, V7))), case V52 of {'Idris.Prelude.Types.Left', E33} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V54) -> begin (V66 = ('Idris.Idris2.TTImp.BindImplicits':'un--bindTypeNames'(V1, V42, case V51 of {'Idris.Idris.Syntax.MkSyntax', E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45} -> (fun (V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65) -> V64 end(E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V54, V7))), case V66 of {'Idris.Prelude.Types.Left', E46} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V68) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.MkImpLater', V42, V43, V68}} end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E26, E27, E28)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarClause'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Idris.Idris.Syntax.MkPatClause', E0, E1, E2, E3} -> (fun (V8, V9, V10, V11) -> begin (V13 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V12) -> ('un--desugarDecl'(V0, V1, V2, V3, V4, V12)) end, V11, [], V7))), case V13 of {'Idris.Prelude.Types.Left', E4} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V15) -> begin (V16 = ('un--desugarLHS'(V0, V1, V3, V2, V4, V5, V9, V7))), case V16 of {'Idris.Prelude.Types.Left', E6} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V18) -> case V18 of {'Idris.Builtin.MkPair', E8, E9} -> (fun (V19, V20) -> case V20 of {'Idris.Builtin.MkPair', E10, E11} -> (fun (V21, V22) -> begin (V23 = ('un--desugar'(V0, V1, V3, V2, 1, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V21, V4)), V10, V7))), case V23 of {'Idris.Prelude.Types.Left', E12} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V25) -> begin (V54 = case V15 of [] -> V25; _ -> {'Idris.TTImp.TTImp.ILocal', V8, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V28, V29, V30)) end end end end end, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V33, V34, V35)) end end end end end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V37)) end end, fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V41, V42, V43, V44)) end end end end end end end, fun (V45) -> fun (V46) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V46)) end end, fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V49, V50, V51)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V52, V53)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V15)), V25} end), {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V19, {'Idris.TTImp.TTImp.PatClause', V8, V22, V54}}} end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E8, E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3)); {'Idris.Idris.Syntax.MkWithClause', E14, E15, E16, E17, E18, E19} -> (fun (V55, V56, V57, V58, V59, V60) -> begin (V67 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V61) -> fun (V62) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V63) -> case V63 of {'Idris.Prelude.Types.Left', E20} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V65) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--snd'(V65))} end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V66) -> ('un--desugarClause'(V0, V1, V2, V3, V4, V5, V61, V66)) end, V62)) end end, V60, [], V7))), case V67 of {'Idris.Prelude.Types.Left', E22} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V69) -> begin (V70 = ('un--desugarLHS'(V0, V1, V3, V2, V4, V5, V56, V7))), case V70 of {'Idris.Prelude.Types.Left', E24} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V72) -> case V72 of {'Idris.Builtin.MkPair', E26, E27} -> (fun (V73, V74) -> case V74 of {'Idris.Builtin.MkPair', E28, E29} -> (fun (V75, V76) -> begin (V77 = ('un--desugar'(V0, V1, V3, V2, 1, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V75, V4)), V57, V7))), case V77 of {'Idris.Prelude.Types.Left', E30} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V79) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V73, {'Idris.TTImp.TTImp.WithClause', V55, V76, V79, V58, V59, V69}}} end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E28, E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E26, E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14, E15, E16, E17, E18, E19)); {'Idris.Idris.Syntax.MkImpossible', E32, E33} -> (fun (V80, V81) -> begin (V82 = ('un--desugarLHS'(V0, V1, V3, V2, V4, V5, V81, V7))), case V82 of {'Idris.Prelude.Types.Left', E34} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V84) -> case V84 of {'Idris.Builtin.MkPair', E36, E37} -> (fun (V85, V86) -> case V86 of {'Idris.Builtin.MkPair', E38, E39} -> (fun (V87, V88) -> {'Idris.Prelude.Types.Right', {'Idris.Builtin.MkPair', V85, {'Idris.TTImp.TTImp.ImpossibleClause', V80, V88}}} end(E38, E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E36, E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Idris.Syntax.PRef', E0, E1} -> (fun (V8, V9) -> fun (V10) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', V8, V9}} end end(E0, E1)); {'Idris.Idris.Syntax.PPi', E2, E3, E4, E5, E6, E7} -> (fun (V11, V12, V13, V14, V15, V16) -> begin (V18 = ('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> V6 end, fun () -> fun (V17) -> [V17 | V6] end end, V14))), fun (V19) -> begin (V22 = ('Idris.Idris2.Core.Core.PiInfo':'un--traverse'(fun (V20) -> fun (V21) -> ('un--desugar'(V0, V2, V3, V4, V5, V18, V20, V21)) end end, V13, V19))), case V22 of {'Idris.Prelude.Types.Left', E8} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V24) -> begin (V25 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V15))(V19))), case V25 of {'Idris.Prelude.Types.Left', E10} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V27) -> begin (V28 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V18, V16))(V19))), case V28 of {'Idris.Prelude.Types.Left', E12} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V30) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPi', V11, V12, V24, V14, V27, V30}} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E2, E3, E4, E5, E6, E7)); {'Idris.Idris.Syntax.PLam', E14, E15, E16, E17, E18, E19} -> (fun (V31, V32, V33, V34, V35, V36) -> case V34 of {'Idris.Idris.Syntax.PRef', E26, E27} -> (fun (V37, V38) -> case V38 of {'Idris.Core.Name.UN', E34} -> (fun (V39) -> begin (V40 = {'Idris.Idris.Syntax.PRef', V37, {'Idris.Core.Name.UN', V39}}), begin (V41 = {'Idris.Core.Name.UN', V39}), fun (V42) -> case ('Idris.Idris2.Core.Name':'un--isPatternVariable'(V39)) of 1 -> begin (V44 = case ('Idris.Idris2.Core.FC':'un--isConcreteFC'(V37)) of {'Idris.Prelude.Types.Just', E35} -> (fun (V43) -> ('Idris.Idris2.Core.Metadata':'un--addSemanticDecorations'(V3, V2, [{'Idris.Builtin.MkPair', V43, {'Idris.Builtin.MkPair', 5, {'Idris.Prelude.Types.Just', V41}}} | []], V42)) end(E35)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V44 of {'Idris.Prelude.Types.Left', E36} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V46) -> begin (V49 = ('Idris.Idris2.Core.Core.PiInfo':'un--traverse'(fun (V47) -> fun (V48) -> ('un--desugar'(V0, V2, V3, V4, 1, V6, V47, V48)) end end, V33, V42))), case V49 of {'Idris.Prelude.Types.Left', E38} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V51) -> begin (V52 = (('un--desugarB'(V0, V1, V2, V3, V4, 1, V6, V35))(V42))), case V52 of {'Idris.Prelude.Types.Left', E40} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V54) -> begin (V55 = ('un--desugar'(V0, V2, V3, V4, 1, [V41 | V6], V36, V42))), case V55 of {'Idris.Prelude.Types.Left', E42} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V57) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V31, V32, V51, {'Idris.Prelude.Types.Just', V41}, V54, V57}} end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V60 = ('Idris.Idris2.Core.Core.PiInfo':'un--traverse'(fun (V58) -> fun (V59) -> ('un--desugar'(V0, V2, V3, V4, 1, V6, V58, V59)) end end, V33, V42))), case V60 of {'Idris.Prelude.Types.Left', E44} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V62) -> begin (V63 = (('un--desugarB'(V0, V1, V2, V3, V4, 1, V6, V35))(V42))), case V63 of {'Idris.Prelude.Types.Left', E46} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V65) -> begin (V66 = ('un--desugarClause'(V0, V2, V4, V3, V6, 1, {'Idris.Idris.Syntax.MkPatClause', V31, V40, V36, []}, V42))), case V66 of {'Idris.Prelude.Types.Left', E48} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V68) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', {'Idris.Core.FC.EmptyFC'}, V32, V62, {'Idris.Prelude.Types.Just', {'Idris.Core.Name.MN', <<"lamc"/utf8>>, 0}}, V65, {'Idris.TTImp.TTImp.ICase', V31, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.Name.MN', <<"lamc"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V31, 0}, [('Idris.Idris2.Builtin':'un--snd'(V68)) | []]}}} end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E34)); {'Idris.Core.Name.MN', E50, E51} -> (fun (V69, V70) -> fun (V71) -> begin (V74 = ('Idris.Idris2.Core.Core.PiInfo':'un--traverse'(fun (V72) -> fun (V73) -> ('un--desugar'(V0, V2, V3, V4, 1, V6, V72, V73)) end end, V33, V71))), case V74 of {'Idris.Prelude.Types.Left', E52} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V76) -> begin (V77 = (('un--desugarB'(V0, V1, V2, V3, V4, 1, V6, V35))(V71))), case V77 of {'Idris.Prelude.Types.Left', E54} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V79) -> begin (V80 = ('un--desugar'(V0, V2, V3, V4, 1, [V38 | V6], V36, V71))), case V80 of {'Idris.Prelude.Types.Left', E56} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V82) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V31, V32, V76, {'Idris.Prelude.Types.Just', V38}, V79, V82}} end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E50, E51)); _ -> fun (V83) -> begin (V86 = ('Idris.Idris2.Core.Core.PiInfo':'un--traverse'(fun (V84) -> fun (V85) -> ('un--desugar'(V0, V2, V3, V4, 1, V6, V84, V85)) end end, V33, V83))), case V86 of {'Idris.Prelude.Types.Left', E28} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V88) -> begin (V89 = (('un--desugarB'(V0, V1, V2, V3, V4, 1, V6, V35))(V83))), case V89 of {'Idris.Prelude.Types.Left', E30} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V91) -> begin (V92 = ('un--desugarClause'(V0, V2, V4, V3, V6, 1, {'Idris.Idris.Syntax.MkPatClause', V31, V34, V36, []}, V83))), case V92 of {'Idris.Prelude.Types.Left', E32} -> (fun (V93) -> {'Idris.Prelude.Types.Left', V93} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V94) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', {'Idris.Core.FC.EmptyFC'}, V32, V88, {'Idris.Prelude.Types.Just', {'Idris.Core.Name.MN', <<"lamc"/utf8>>, 0}}, V91, {'Idris.TTImp.TTImp.ICase', V31, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.Name.MN', <<"lamc"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V31, 0}, [('Idris.Idris2.Builtin':'un--snd'(V94)) | []]}}} end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E26, E27)); {'Idris.Idris.Syntax.PImplicit', E58} -> (fun (V95) -> fun (V96) -> begin (V99 = ('Idris.Idris2.Core.Core.PiInfo':'un--traverse'(fun (V97) -> fun (V98) -> ('un--desugar'(V0, V2, V3, V4, 1, V6, V97, V98)) end end, V33, V96))), case V99 of {'Idris.Prelude.Types.Left', E59} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V101) -> begin (V102 = (('un--desugarB'(V0, V1, V2, V3, V4, 1, V6, V35))(V96))), case V102 of {'Idris.Prelude.Types.Left', E61} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V104) -> begin (V105 = ('un--desugar'(V0, V2, V3, V4, 1, V6, V36, V96))), case V105 of {'Idris.Prelude.Types.Left', E63} -> (fun (V106) -> {'Idris.Prelude.Types.Left', V106} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V107) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', V31, V32, V101, {'Idris.Prelude.Types.Nothing'}, V104, V107}} end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E58)); _ -> fun (V108) -> begin (V111 = ('Idris.Idris2.Core.Core.PiInfo':'un--traverse'(fun (V109) -> fun (V110) -> ('un--desugar'(V0, V2, V3, V4, 1, V6, V109, V110)) end end, V33, V108))), case V111 of {'Idris.Prelude.Types.Left', E20} -> (fun (V112) -> {'Idris.Prelude.Types.Left', V112} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V113) -> begin (V114 = (('un--desugarB'(V0, V1, V2, V3, V4, 1, V6, V35))(V108))), case V114 of {'Idris.Prelude.Types.Left', E22} -> (fun (V115) -> {'Idris.Prelude.Types.Left', V115} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V116) -> begin (V117 = ('un--desugarClause'(V0, V2, V4, V3, V6, 1, {'Idris.Idris.Syntax.MkPatClause', V31, V34, V36, []}, V108))), case V117 of {'Idris.Prelude.Types.Left', E24} -> (fun (V118) -> {'Idris.Prelude.Types.Left', V118} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V119) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILam', {'Idris.Core.FC.EmptyFC'}, V32, V113, {'Idris.Prelude.Types.Just', {'Idris.Core.Name.MN', <<"lamc"/utf8>>, 0}}, V116, {'Idris.TTImp.TTImp.ICase', V31, {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, {'Idris.Core.Name.MN', <<"lamc"/utf8>>, 0}}, {'Idris.TTImp.TTImp.Implicit', V31, 0}, [('Idris.Idris2.Builtin':'un--snd'(V119)) | []]}}} end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E14, E15, E16, E17, E18, E19)); {'Idris.Idris.Syntax.PLet', E65, E66, E67, E68, E69, E70, E71} -> (fun (V120, V121, V122, V123, V124, V125, V126) -> fun (V127) -> case V122 of {'Idris.Idris.Syntax.PRef', E80, E81} -> (fun (V128, V129) -> case V126 of [] -> begin (V131 = case ('Idris.Idris2.Core.FC':'un--isConcreteFC'(V128)) of {'Idris.Prelude.Types.Just', E90} -> (fun (V130) -> ('Idris.Idris2.Core.Metadata':'un--addSemanticDecorations'(V3, V2, [{'Idris.Builtin.MkPair', V130, {'Idris.Builtin.MkPair', 5, {'Idris.Prelude.Types.Just', V129}}} | []], V127)) end(E90)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V131 of {'Idris.Prelude.Types.Left', E91} -> (fun (V132) -> {'Idris.Prelude.Types.Left', V132} end(E91)); {'Idris.Prelude.Types.Right', E92} -> (fun (V133) -> begin (V134 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V123))(V127))), case V134 of {'Idris.Prelude.Types.Left', E93} -> (fun (V135) -> {'Idris.Prelude.Types.Left', V135} end(E93)); {'Idris.Prelude.Types.Right', E94} -> (fun (V136) -> begin (V137 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V124))(V127))), case V137 of {'Idris.Prelude.Types.Left', E95} -> (fun (V138) -> {'Idris.Prelude.Types.Left', V138} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V139) -> begin (V140 = ('un--desugar'(V0, V2, V3, V4, V5, [V129 | V6], V125, V127))), case V140 of {'Idris.Prelude.Types.Left', E97} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V142) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILet', V120, V128, V121, V129, V136, V139, V142}} end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E94)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V143 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V124))(V127))), case V143 of {'Idris.Prelude.Types.Left', E82} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V145) -> begin (V146 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V123))(V127))), case V146 of {'Idris.Prelude.Types.Left', E84} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V148) -> begin (V155 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V149) -> fun (V150) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V151) -> case V151 of {'Idris.Prelude.Types.Left', E86} -> (fun (V152) -> {'Idris.Prelude.Types.Left', V152} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V153) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--snd'(V153))} end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V154) -> ('un--desugarClause'(V0, V2, V4, V3, V6, 1, V149, V154)) end, V150)) end end, [{'Idris.Idris.Syntax.MkPatClause', V120, V122, V125, []} | V126], [], V127))), case V155 of {'Idris.Prelude.Types.Left', E88} -> (fun (V156) -> {'Idris.Prelude.Types.Left', V156} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V157) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V120, V145, V148, V157}} end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E80, E81)); _ -> begin (V158 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V124))(V127))), case V158 of {'Idris.Prelude.Types.Left', E72} -> (fun (V159) -> {'Idris.Prelude.Types.Left', V159} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V160) -> begin (V161 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V123))(V127))), case V161 of {'Idris.Prelude.Types.Left', E74} -> (fun (V162) -> {'Idris.Prelude.Types.Left', V162} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V163) -> begin (V170 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V164) -> fun (V165) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V166) -> case V166 of {'Idris.Prelude.Types.Left', E76} -> (fun (V167) -> {'Idris.Prelude.Types.Left', V167} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V168) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--snd'(V168))} end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V169) -> ('un--desugarClause'(V0, V2, V4, V3, V6, 1, V164, V169)) end, V165)) end end, [{'Idris.Idris.Syntax.MkPatClause', V120, V122, V125, []} | V126], [], V127))), case V170 of {'Idris.Prelude.Types.Left', E78} -> (fun (V171) -> {'Idris.Prelude.Types.Left', V171} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V172) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V120, V160, V163, V172}} end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E65, E66, E67, E68, E69, E70, E71)); {'Idris.Idris.Syntax.PCase', E99, E100, E101} -> (fun (V173, V174, V175) -> fun (V176) -> begin (V177 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V174))(V176))), case V177 of {'Idris.Prelude.Types.Left', E102} -> (fun (V178) -> {'Idris.Prelude.Types.Left', V178} end(E102)); {'Idris.Prelude.Types.Right', E103} -> (fun (V179) -> begin (V186 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V180) -> fun (V181) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V182) -> case V182 of {'Idris.Prelude.Types.Left', E104} -> (fun (V183) -> {'Idris.Prelude.Types.Left', V183} end(E104)); {'Idris.Prelude.Types.Right', E105} -> (fun (V184) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Builtin':'un--snd'(V184))} end(E105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V185) -> ('un--desugarClause'(V0, V2, V4, V3, V6, 1, V180, V185)) end, V181)) end end, V175, [], V176))), case V186 of {'Idris.Prelude.Types.Left', E106} -> (fun (V187) -> {'Idris.Prelude.Types.Left', V187} end(E106)); {'Idris.Prelude.Types.Right', E107} -> (fun (V188) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V173, V179, {'Idris.TTImp.TTImp.Implicit', ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V173)), 0}, V188}} end(E107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E103)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E99, E100, E101)); {'Idris.Idris.Syntax.PLocal', E108, E109, E110} -> (fun (V189, V190, V191) -> begin (V192 = ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(('Idris.Idris2.Idris.Syntax':'un--definedIn'(V190)), V6))), fun (V193) -> begin (V195 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V194) -> ('un--desugarDecl'(V0, V2, V4, V3, V192, V194)) end, V190, [], V193))), case V195 of {'Idris.Prelude.Types.Left', E111} -> (fun (V196) -> {'Idris.Prelude.Types.Left', V196} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V197) -> begin (V198 = ('un--desugar'(V0, V2, V3, V4, V5, V192, V191, V193))), case V198 of {'Idris.Prelude.Types.Left', E113} -> (fun (V199) -> {'Idris.Prelude.Types.Left', V199} end(E113)); {'Idris.Prelude.Types.Right', E114} -> (fun (V200) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ILocal', V189, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V201) -> fun (V202) -> fun (V203) -> fun (V204) -> fun (V205) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V203, V204, V205)) end end end end end, fun (V206) -> fun (V207) -> fun (V208) -> fun (V209) -> fun (V210) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V208, V209, V210)) end end end end end, fun (V211) -> fun (V212) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V212)) end end, fun (V213) -> fun (V214) -> fun (V215) -> fun (V216) -> fun (V217) -> fun (V218) -> fun (V219) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V216, V217, V218, V219)) end end end end end end end, fun (V220) -> fun (V221) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V221)) end end, fun (V222) -> fun (V223) -> fun (V224) -> fun (V225) -> fun (V226) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V224, V225, V226)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V227) -> fun (V228) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V227, V228)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V197)), V200}} end(E114)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E108, E109, E110)); {'Idris.Idris.Syntax.PApp', E115, E116, E117} -> (fun (V229, V230, V231) -> fun (V232) -> case V230 of {'Idris.Idris.Syntax.PUpdate', E122, E123} -> (fun (V233, V234) -> begin (V237 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V235) -> fun (V236) -> ('un--desugarUpdate'(V0, V1, V2, V4, V3, V5, V6, V235, V236)) end end, V234, [], V232))), case V237 of {'Idris.Prelude.Types.Left', E124} -> (fun (V238) -> {'Idris.Prelude.Types.Left', V238} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V239) -> begin (V240 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V231))(V232))), case V240 of {'Idris.Prelude.Types.Left', E126} -> (fun (V241) -> {'Idris.Prelude.Types.Left', V241} end(E126)); {'Idris.Prelude.Types.Right', E127} -> (fun (V242) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUpdate', V229, V239, V242}} end(E127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E122, E123)); _ -> begin (V243 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V230))(V232))), case V243 of {'Idris.Prelude.Types.Left', E118} -> (fun (V244) -> {'Idris.Prelude.Types.Left', V244} end(E118)); {'Idris.Prelude.Types.Right', E119} -> (fun (V245) -> begin (V246 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V231))(V232))), case V246 of {'Idris.Prelude.Types.Left', E120} -> (fun (V247) -> {'Idris.Prelude.Types.Left', V247} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V248) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V229, V245, V248}} end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E115, E116, E117)); {'Idris.Idris.Syntax.PUpdate', E128, E129} -> (fun (V249, V250) -> ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, begin (V251 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V249))), {'Idris.Idris.Syntax.PLam', V251, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Idris.Syntax.PRef', V251, {'Idris.Core.Name.MN', <<"rec"/utf8>>, 0}}, {'Idris.Idris.Syntax.PImplicit', V251}, {'Idris.Idris.Syntax.PApp', V251, {'Idris.Idris.Syntax.PUpdate', V249, V250}, {'Idris.Idris.Syntax.PRef', V251, {'Idris.Core.Name.MN', <<"rec"/utf8>>, 0}}}} end)) end(E128, E129)); {'Idris.Idris.Syntax.PAutoApp', E130, E131, E132} -> (fun (V252, V253, V254) -> fun (V255) -> begin (V256 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V253))(V255))), case V256 of {'Idris.Prelude.Types.Left', E133} -> (fun (V257) -> {'Idris.Prelude.Types.Left', V257} end(E133)); {'Idris.Prelude.Types.Right', E134} -> (fun (V258) -> begin (V259 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V254))(V255))), case V259 of {'Idris.Prelude.Types.Left', E135} -> (fun (V260) -> {'Idris.Prelude.Types.Left', V260} end(E135)); {'Idris.Prelude.Types.Right', E136} -> (fun (V261) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAutoApp', V252, V258, V261}} end(E136)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E134)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E130, E131, E132)); {'Idris.Idris.Syntax.PWithApp', E137, E138, E139} -> (fun (V262, V263, V264) -> fun (V265) -> begin (V266 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V263))(V265))), case V266 of {'Idris.Prelude.Types.Left', E140} -> (fun (V267) -> {'Idris.Prelude.Types.Left', V267} end(E140)); {'Idris.Prelude.Types.Right', E141} -> (fun (V268) -> begin (V269 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V264))(V265))), case V269 of {'Idris.Prelude.Types.Left', E142} -> (fun (V270) -> {'Idris.Prelude.Types.Left', V270} end(E142)); {'Idris.Prelude.Types.Right', E143} -> (fun (V271) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithApp', V262, V268, V271}} end(E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E141)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E137, E138, E139)); {'Idris.Idris.Syntax.PNamedApp', E144, E145, E146, E147} -> (fun (V272, V273, V274, V275) -> fun (V276) -> begin (V277 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V273))(V276))), case V277 of {'Idris.Prelude.Types.Left', E148} -> (fun (V278) -> {'Idris.Prelude.Types.Left', V278} end(E148)); {'Idris.Prelude.Types.Right', E149} -> (fun (V279) -> begin (V280 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V275))(V276))), case V280 of {'Idris.Prelude.Types.Left', E150} -> (fun (V281) -> {'Idris.Prelude.Types.Left', V281} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V282) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.INamedApp', V272, V279, V274, V282}} end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E144, E145, E146, E147)); {'Idris.Idris.Syntax.PDelayed', E152, E153, E154} -> (fun (V283, V284, V285) -> fun (V286) -> begin (V287 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V285))(V286))), case V287 of {'Idris.Prelude.Types.Left', E155} -> (fun (V288) -> {'Idris.Prelude.Types.Left', V288} end(E155)); {'Idris.Prelude.Types.Right', E156} -> (fun (V289) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelayed', V283, V284, V289}} end(E156)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E152, E153, E154)); {'Idris.Idris.Syntax.PDelay', E157, E158} -> (fun (V290, V291) -> fun (V292) -> begin (V293 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V291))(V292))), case V293 of {'Idris.Prelude.Types.Left', E159} -> (fun (V294) -> {'Idris.Prelude.Types.Left', V294} end(E159)); {'Idris.Prelude.Types.Right', E160} -> (fun (V295) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IDelay', V290, V295}} end(E160)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E157, E158)); {'Idris.Idris.Syntax.PForce', E161, E162} -> (fun (V296, V297) -> fun (V298) -> begin (V299 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V297))(V298))), case V299 of {'Idris.Prelude.Types.Left', E163} -> (fun (V300) -> {'Idris.Prelude.Types.Left', V300} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V301) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IForce', V296, V301}} end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E161, E162)); {'Idris.Idris.Syntax.PEq', E165, E166, E167} -> (fun (V302, V303, V304) -> fun (V305) -> begin (V306 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V303))(V305))), case V306 of {'Idris.Prelude.Types.Left', E168} -> (fun (V307) -> {'Idris.Prelude.Types.Left', V307} end(E168)); {'Idris.Prelude.Types.Right', E169} -> (fun (V308) -> begin (V309 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V304))(V305))), case V309 of {'Idris.Prelude.Types.Left', E170} -> (fun (V310) -> {'Idris.Prelude.Types.Left', V310} end(E170)); {'Idris.Prelude.Types.Right', E171} -> (fun (V311) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V302, {'Idris.TTImp.TTImp.FirstSuccess'}, [('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V302, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"==="/utf8>>}}}, [V308 | [V311 | []]])) | [('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V302, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"~=~"/utf8>>}}}, [V308 | [V311 | []]])) | []]]}} end(E171)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E169)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E165, E166, E167)); {'Idris.Idris.Syntax.PBracketed', E172, E173} -> (fun (V312, V313) -> ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V313)) end(E172, E173)); {'Idris.Idris.Syntax.POp', E174, E175, E176, E177, E178} -> (fun (V314, V315, V316, V317, V318) -> fun (V319) -> begin (V320 = ('un--toTokList'(V0, {'Idris.Idris.Syntax.POp', V314, V315, V316, V317, V318}, V319))), case V320 of {'Idris.Prelude.Types.Left', E179} -> (fun (V321) -> {'Idris.Prelude.Types.Left', V321} end(E179)); {'Idris.Prelude.Types.Right', E180} -> (fun (V322) -> begin (V326 = ('Idris.Idris2.Libraries.Utils.Shunting':'un--parseOps'({'Idris.Prelude.Show.MkShow', fun (V323) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V323)) end, fun (V324) -> fun (V325) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V324, V325)) end end}, V322, V319))), case V326 of {'Idris.Prelude.Types.Left', E181} -> (fun (V327) -> {'Idris.Prelude.Types.Left', V327} end(E181)); {'Idris.Prelude.Types.Right', E182} -> (fun (V328) -> (('un--desugarTree'(V0, V1, V2, V4, V3, V5, V6, V328))(V319)) end(E182)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E174, E175, E176, E177, E178)); {'Idris.Idris.Syntax.PPrefixOp', E183, E184, E185, E186} -> (fun (V329, V330, V331, V332) -> fun (V333) -> begin (V334 = ('un--toTokList'(V0, {'Idris.Idris.Syntax.PPrefixOp', V329, V330, V331, V332}, V333))), case V334 of {'Idris.Prelude.Types.Left', E187} -> (fun (V335) -> {'Idris.Prelude.Types.Left', V335} end(E187)); {'Idris.Prelude.Types.Right', E188} -> (fun (V336) -> begin (V340 = ('Idris.Idris2.Libraries.Utils.Shunting':'un--parseOps'({'Idris.Prelude.Show.MkShow', fun (V337) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V337)) end, fun (V338) -> fun (V339) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V338, V339)) end end}, V336, V333))), case V340 of {'Idris.Prelude.Types.Left', E189} -> (fun (V341) -> {'Idris.Prelude.Types.Left', V341} end(E189)); {'Idris.Prelude.Types.Right', E190} -> (fun (V342) -> (('un--desugarTree'(V0, V1, V2, V4, V3, V5, V6, V342))(V333)) end(E190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E188)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E183, E184, E185, E186)); {'Idris.Idris.Syntax.PSectionL', E191, E192, E193, E194} -> (fun (V343, V344, V345, V346) -> fun (V347) -> begin (V349 = begin (V348 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V348} end), case V349 of {'Idris.Prelude.Types.Left', E195} -> (fun (V350) -> {'Idris.Prelude.Types.Left', V350} end(E195)); {'Idris.Prelude.Types.Right', E196} -> (fun (V351) -> case ('Idris.Idris2.Libraries.Data.StringMap':'un--lookup'(('Idris.Idris2.Core.Name':'un--nameRoot'(V345)), case V351 of {'Idris.Idris.Syntax.MkSyntax', E198, E199, E200, E201, E202, E203, E204, E205, E206, E207, E208} -> (fun (V352, V353, V354, V355, V356, V357, V358, V359, V360, V361, V362) -> V353 end(E198, E199, E200, E201, E202, E203, E204, E205, E206, E207, E208)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Idris.Syntax.PLam', V343, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Idris.Syntax.PRef', V343, {'Idris.Core.Name.MN', <<"arg"/utf8>>, 0}}, {'Idris.Idris.Syntax.PImplicit', V343}, {'Idris.Idris.Syntax.POp', V343, V344, V345, {'Idris.Idris.Syntax.PRef', V343, {'Idris.Core.Name.MN', <<"arg"/utf8>>, 0}}, V346}}))(V347)) end()); {'Idris.Prelude.Types.Just', E197} -> (fun (V363) -> (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Idris.Syntax.PPrefixOp', V343, V344, V345, V346}))(V347)) end(E197)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E196)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E191, E192, E193, E194)); {'Idris.Idris.Syntax.PSectionR', E209, E210, E211, E212} -> (fun (V364, V365, V366, V367) -> ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Idris.Syntax.PLam', V364, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Idris.Syntax.PRef', V364, {'Idris.Core.Name.MN', <<"arg"/utf8>>, 0}}, {'Idris.Idris.Syntax.PImplicit', V364}, {'Idris.Idris.Syntax.POp', V364, V365, V367, V366, {'Idris.Idris.Syntax.PRef', V364, {'Idris.Core.Name.MN', <<"arg"/utf8>>, 0}}}})) end(E209, E210, E211, E212)); {'Idris.Idris.Syntax.PSearch', E213, E214} -> (fun (V368, V369) -> fun (V370) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ISearch', V368, V369}} end end(E213, E214)); {'Idris.Idris.Syntax.PPrimVal', E215, E216} -> (fun (V371, V372) -> fun (V373) -> case V372 of {'Idris.Core.TT.BI', E217} -> (fun (V374) -> begin (V375 = ('Idris.Idris2.Core.Context':'un--fromIntegerName'(V2, V373))), case V375 of {'Idris.Prelude.Types.Left', E218} -> (fun (V376) -> {'Idris.Prelude.Types.Left', V376} end(E218)); {'Idris.Prelude.Types.Right', E219} -> (fun (V377) -> case V377 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V371, {'Idris.TTImp.TTImp.UniqueDefault', {'Idris.TTImp.TTImp.IPrimVal', V371, {'Idris.Core.TT.BI', V374}}}, [{'Idris.TTImp.TTImp.IPrimVal', V371, {'Idris.Core.TT.BI', V374}} | [{'Idris.TTImp.TTImp.IPrimVal', V371, {'Idris.Core.TT.I', V374}} | []]]}} end()); {'Idris.Prelude.Types.Just', E220} -> (fun (V378) -> begin (V379 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V371))), {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V379, {'Idris.TTImp.TTImp.IVar', V379, V378}, {'Idris.TTImp.TTImp.IPrimVal', V371, {'Idris.Core.TT.BI', V374}}}} end end(E220)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E219)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E217)); {'Idris.Core.TT.Ch', E221} -> (fun (V380) -> begin (V381 = ('Idris.Idris2.Core.Context':'un--fromCharName'(V2, V373))), case V381 of {'Idris.Prelude.Types.Left', E222} -> (fun (V382) -> {'Idris.Prelude.Types.Left', V382} end(E222)); {'Idris.Prelude.Types.Right', E223} -> (fun (V383) -> case V383 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPrimVal', V371, {'Idris.Core.TT.Ch', V380}}} end()); {'Idris.Prelude.Types.Just', E224} -> (fun (V384) -> begin (V385 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V371))), {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V385, {'Idris.TTImp.TTImp.IVar', V385, V384}, {'Idris.TTImp.TTImp.IPrimVal', V371, {'Idris.Core.TT.Ch', V380}}}} end end(E224)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E223)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E221)); {'Idris.Core.TT.Db', E225} -> (fun (V386) -> begin (V387 = ('Idris.Idris2.Core.Context':'un--fromDoubleName'(V2, V373))), case V387 of {'Idris.Prelude.Types.Left', E226} -> (fun (V388) -> {'Idris.Prelude.Types.Left', V388} end(E226)); {'Idris.Prelude.Types.Right', E227} -> (fun (V389) -> case V389 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPrimVal', V371, {'Idris.Core.TT.Db', V386}}} end()); {'Idris.Prelude.Types.Just', E228} -> (fun (V390) -> begin (V391 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V371))), {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IApp', V391, {'Idris.TTImp.TTImp.IVar', V391, V390}, {'Idris.TTImp.TTImp.IPrimVal', V371, {'Idris.Core.TT.Db', V386}}}} end end(E228)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E227)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E225)); _ -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IPrimVal', V371, V372}} end end end(E215, E216)); {'Idris.Idris.Syntax.PQuote', E229, E230} -> (fun (V392, V393) -> fun (V394) -> begin (V395 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V393))(V394))), case V395 of {'Idris.Prelude.Types.Left', E231} -> (fun (V396) -> {'Idris.Prelude.Types.Left', V396} end(E231)); {'Idris.Prelude.Types.Right', E232} -> (fun (V397) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuote', V392, V397}} end(E232)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E229, E230)); {'Idris.Idris.Syntax.PQuoteName', E233, E234} -> (fun (V398, V399) -> fun (V400) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuoteName', V398, V399}} end end(E233, E234)); {'Idris.Idris.Syntax.PQuoteDecl', E235, E236} -> (fun (V401, V402) -> fun (V403) -> begin (V405 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V404) -> ('un--desugarDecl'(V0, V2, V4, V3, V6, V404)) end, V402, [], V403))), case V405 of {'Idris.Prelude.Types.Left', E237} -> (fun (V406) -> {'Idris.Prelude.Types.Left', V406} end(E237)); {'Idris.Prelude.Types.Right', E238} -> (fun (V407) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IQuoteDecl', V401, ('Idris.Idris2.Prelude.Interfaces':'un--concat'({'Idris.Builtin.MkPair', {'Idris.Prelude.Interfaces.MkFoldable', fun (V408) -> fun (V409) -> fun (V410) -> fun (V411) -> fun (V412) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V410, V411, V412)) end end end end end, fun (V413) -> fun (V414) -> fun (V415) -> fun (V416) -> fun (V417) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V415, V416, V417)) end end end end end, fun (V418) -> fun (V419) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V419)) end end, fun (V420) -> fun (V421) -> fun (V422) -> fun (V423) -> fun (V424) -> fun (V425) -> fun (V426) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V423, V424, V425, V426)) end end end end end end end, fun (V427) -> fun (V428) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V428)) end end, fun (V429) -> fun (V430) -> fun (V431) -> fun (V432) -> fun (V433) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V431, V432, V433)) end end end end end}, {'Idris.Prelude.Interfaces.MkMonoid', fun (V434) -> fun (V435) -> ('Idris.Idris2.Prelude.Types':'dn--un--<+>_Semigroup_(List $a)'(V434, V435)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--neutral_Monoid_(List $a)'())}}, V407))}} end(E238)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E235, E236)); {'Idris.Idris.Syntax.PUnquote', E239, E240} -> (fun (V436, V437) -> fun (V438) -> begin (V439 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V437))(V438))), case V439 of {'Idris.Prelude.Types.Left', E241} -> (fun (V440) -> {'Idris.Prelude.Types.Left', V440} end(E241)); {'Idris.Prelude.Types.Right', E242} -> (fun (V441) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUnquote', V436, V441}} end(E242)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E239, E240)); {'Idris.Idris.Syntax.PRunElab', E243, E244} -> (fun (V442, V443) -> fun (V444) -> begin (V445 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V443))(V444))), case V445 of {'Idris.Prelude.Types.Left', E245} -> (fun (V446) -> {'Idris.Prelude.Types.Left', V446} end(E245)); {'Idris.Prelude.Types.Right', E246} -> (fun (V447) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRunElab', V442, V447}} end(E246)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E243, E244)); {'Idris.Idris.Syntax.PHole', E247, E248, E249} -> (fun (V448, V449, V450) -> fun (V451) -> begin (V468 = case V449 of 1 -> begin (V453 = begin (V452 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V452} end), case V453 of {'Idris.Prelude.Types.Left', E250} -> (fun (V454) -> {'Idris.Prelude.Types.Left', V454} end(E250)); {'Idris.Prelude.Types.Right', E251} -> (fun (V455) -> begin (V467 = ('erlang':'put'(V0, case V455 of {'Idris.Idris.Syntax.MkSyntax', E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262} -> (fun (V456, V457, V458, V459, V460, V461, V462, V463, V464, V465, V466) -> {'Idris.Idris.Syntax.MkSyntax', V456, V457, V458, V459, V460, V461, V462, V463, [{'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', V450}} | V464], V465, V466} end(E252, E253, E254, E255, E256, E257, E258, E259, E260, E261, E262)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V467} end end(E251)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> {'Idris.Prelude.Types.Right', 0}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V468 of {'Idris.Prelude.Types.Left', E263} -> (fun (V469) -> {'Idris.Prelude.Types.Left', V469} end(E263)); {'Idris.Prelude.Types.Right', E264} -> (fun (V470) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IHole', V448, V450}} end(E264)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E247, E248, E249)); {'Idris.Idris.Syntax.PType', E265} -> (fun (V471) -> fun (V472) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IType', V471}} end end(E265)); {'Idris.Idris.Syntax.PAs', E266, E267, E268, E269} -> (fun (V473, V474, V475, V476) -> fun (V477) -> begin (V478 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V476))(V477))), case V478 of {'Idris.Prelude.Types.Left', E270} -> (fun (V479) -> {'Idris.Prelude.Types.Left', V479} end(E270)); {'Idris.Prelude.Types.Right', E271} -> (fun (V480) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAs', V473, V474, 1, V475, V480}} end(E271)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E266, E267, E268, E269)); {'Idris.Idris.Syntax.PDotted', E272, E273} -> (fun (V481, V482) -> fun (V483) -> begin (V484 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V482))(V483))), case V484 of {'Idris.Prelude.Types.Left', E274} -> (fun (V485) -> {'Idris.Prelude.Types.Left', V485} end(E274)); {'Idris.Prelude.Types.Right', E275} -> (fun (V486) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IMustUnify', V481, 4, V486}} end(E275)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E272, E273)); {'Idris.Idris.Syntax.PImplicit', E276} -> (fun (V487) -> fun (V488) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Implicit', V487, 1}} end end(E276)); {'Idris.Idris.Syntax.PInfer', E277} -> (fun (V489) -> fun (V490) -> begin (V491 = case ('dn--un--==_Eq_Side'(V5, 0)) of 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V489, <<"? is not a valid pattern"/utf8>>}, V490)); 0 -> {'Idris.Prelude.Types.Right', 0}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V491 of {'Idris.Prelude.Types.Left', E278} -> (fun (V492) -> {'Idris.Prelude.Types.Left', V492} end(E278)); {'Idris.Prelude.Types.Right', E279} -> (fun (V493) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.Implicit', V489, 0}} end(E279)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E277)); {'Idris.Idris.Syntax.PMultiline', E280, E281, E282} -> (fun (V494, V495, V496) -> fun (V497) -> begin (V498 = ('un--trimMultiline'(V494, V495, V496, V497))), case V498 of {'Idris.Prelude.Types.Left', E283} -> (fun (V499) -> {'Idris.Prelude.Types.Left', V499} end(E283)); {'Idris.Prelude.Types.Right', E284} -> (fun (V500) -> begin (V501 = ('un--expandString'(V0, V1, V2, V3, V4, V5, V6, V494, V500, V497))), case V501 of {'Idris.Prelude.Types.Left', E285} -> (fun (V502) -> {'Idris.Prelude.Types.Left', V502} end(E285)); {'Idris.Prelude.Types.Right', E286} -> (fun (V503) -> ('un--addFromString'(V2, V494, V503, V497)) end(E286)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E284)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E280, E281, E282)); {'Idris.Idris.Syntax.PString', E287, E288} -> (fun (V504, V505) -> case V505 of [] -> fun (V506) -> ('un--addFromString'(V2, V504, {'Idris.TTImp.TTImp.IPrimVal', V504, {'Idris.Core.TT.Str', <<""/utf8>>}}, V506)) end; [E289 | E290] -> (fun (V507, V508) -> case V507 of {'Idris.Idris.Syntax.StrLiteral', E291, E292} -> (fun (V509, V510) -> fun (V511) -> case V508 of [] -> ('un--addFromString'(V2, V504, {'Idris.TTImp.TTImp.IPrimVal', V509, {'Idris.Core.TT.Str', V510}}, V511)); _ -> ('un--expandString'(V0, V1, V2, V3, V4, V5, V6, V504, V505, V511)) end end end(E291, E292)); _ -> fun (V512) -> ('un--expandString'(V0, V1, V2, V3, V4, V5, V6, V504, V505, V512)) end end end(E289, E290)); _ -> fun (V513) -> ('un--expandString'(V0, V1, V2, V3, V4, V5, V6, V504, V505, V513)) end end end(E287, E288)); {'Idris.Idris.Syntax.PDoBlock', E293, E294, E295} -> (fun (V514, V515, V516) -> ('un--expandDo'(V0, V2, V4, V3, V5, V6, V514, V515, V516)) end(E293, E294, E295)); {'Idris.Idris.Syntax.PBang', E296, E297} -> (fun (V517, V518) -> fun (V519) -> begin (V520 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V518))(V519))), case V520 of {'Idris.Prelude.Types.Left', E298} -> (fun (V521) -> {'Idris.Prelude.Types.Left', V521} end(E298)); {'Idris.Prelude.Types.Right', E299} -> (fun (V522) -> begin (V524 = begin (V523 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V523} end), case V524 of {'Idris.Prelude.Types.Left', E300} -> (fun (V525) -> {'Idris.Prelude.Types.Left', V525} end(E300)); {'Idris.Prelude.Types.Right', E301} -> (fun (V526) -> begin (V530 = {'Idris.Core.Name.MN', <<"bind"/utf8>>, case V526 of {'Idris.Idris.Desugar.MkBangData', E302, E303, E304} -> (fun (V527, V528, V529) -> V527 end(E302, E303, E304)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end}), begin (V535 = begin (V534 = ('erlang':'put'(V1, case V526 of {'Idris.Idris.Desugar.MkBangData', E305, E306, E307} -> (fun (V531, V532, V533) -> {'Idris.Idris.Desugar.MkBangData', ((V531 + 1) rem 9223372036854775808), [{'Idris.Builtin.MkPair', V530, {'Idris.Builtin.MkPair', V517, V522}} | V532], V533} end(E305, E306, E307)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V534} end), case V535 of {'Idris.Prelude.Types.Left', E308} -> (fun (V536) -> {'Idris.Prelude.Types.Left', V536} end(E308)); {'Idris.Prelude.Types.Right', E309} -> (fun (V537) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IVar', {'Idris.Core.FC.EmptyFC'}, V530}} end(E309)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E301)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E299)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E296, E297)); {'Idris.Idris.Syntax.PIdiom', E310, E311} -> (fun (V538, V539) -> fun (V540) -> begin (V541 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V539))(V540))), case V541 of {'Idris.Prelude.Types.Left', E312} -> (fun (V542) -> {'Idris.Prelude.Types.Left', V542} end(E312)); {'Idris.Prelude.Types.Right', E313} -> (fun (V543) -> begin (V544 = ('Idris.Idris2.TTImp.TTImp':'un--logRaw'(V2, <<"desugar.idiom"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Desugaring idiom for"/utf8>> end, V543, V540))), case V544 of {'Idris.Prelude.Types.Left', E314} -> (fun (V545) -> {'Idris.Prelude.Types.Left', V545} end(E314)); {'Idris.Prelude.Types.Right', E315} -> (fun (V546) -> begin (V547 = ('un--idiomise'(V538, V543))), begin (V548 = ('Idris.Idris2.TTImp.TTImp':'un--logRaw'(V2, <<"desugar.idiom"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Desugared to"/utf8>> end, V547, V540))), case V548 of {'Idris.Prelude.Types.Left', E316} -> (fun (V549) -> {'Idris.Prelude.Types.Left', V549} end(E316)); {'Idris.Prelude.Types.Right', E317} -> (fun (V550) -> {'Idris.Prelude.Types.Right', V547} end(E317)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E315)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E313)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E310, E311)); {'Idris.Idris.Syntax.PList', E318, E319, E320} -> (fun (V551, V552, V553) -> fun (V554) -> ('un--expandList'(V0, V1, V2, V4, V3, V5, V6, V552, V553, V554)) end end(E318, E319, E320)); {'Idris.Idris.Syntax.PSnocList', E321, E322, E323} -> (fun (V555, V556, V557) -> fun (V558) -> ('un--expandSnocList'(V0, V1, V2, V4, V3, V5, V6, V556, ('Idris.Idris2.Prelude.Types.List':'un--reverse'(V557)), V558)) end end(E321, E322, E323)); {'Idris.Idris.Syntax.PPair', E324, E325, E326} -> (fun (V559, V560, V561) -> fun (V562) -> begin (V563 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V560))(V562))), case V563 of {'Idris.Prelude.Types.Left', E327} -> (fun (V564) -> {'Idris.Prelude.Types.Left', V564} end(E327)); {'Idris.Prelude.Types.Right', E328} -> (fun (V565) -> begin (V566 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V561))(V562))), case V566 of {'Idris.Prelude.Types.Left', E329} -> (fun (V567) -> {'Idris.Prelude.Types.Left', V567} end(E329)); {'Idris.Prelude.Types.Right', E330} -> (fun (V568) -> begin (V569 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V559, ('un--mkpairname'())}, [V565 | [V568 | []]]))), {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V559, {'Idris.TTImp.TTImp.UniqueDefault', V569}, [('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V559, ('un--pairname'())}, [V565 | [V568 | []]])) | [V569 | []]]}} end end(E330)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E328)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E324, E325, E326)); {'Idris.Idris.Syntax.PDPair', E331, E332, E333, E334, E335} -> (fun (V570, V571, V572, V573, V574) -> case V572 of {'Idris.Idris.Syntax.PRef', E341, E342} -> (fun (V575, V576) -> fun (V577) -> case V576 of {'Idris.Core.Name.UN', E348} -> (fun (V578) -> case V573 of {'Idris.Idris.Syntax.PImplicit', E353} -> (fun (V579) -> begin (V580 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V574))(V577))), case V580 of {'Idris.Prelude.Types.Left', E354} -> (fun (V581) -> {'Idris.Prelude.Types.Left', V581} end(E354)); {'Idris.Prelude.Types.Right', E355} -> (fun (V582) -> begin (V583 = ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V571, ('un--mkdpairname'())}, [{'Idris.TTImp.TTImp.IVar', V575, V576} | [V582 | []]]))), begin (V584 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V575))), begin (V586 = case ('Idris.Idris2.Core.FC':'un--isConcreteFC'(V575)) of {'Idris.Prelude.Types.Just', E356} -> (fun (V585) -> ('Idris.Idris2.Core.Metadata':'un--addSemanticDefault'(V3, {'Idris.Builtin.MkPair', V585, {'Idris.Builtin.MkPair', 5, {'Idris.Prelude.Types.Just', V576}}}, V577)) end(E356)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V586 of {'Idris.Prelude.Types.Left', E357} -> (fun (V587) -> {'Idris.Prelude.Types.Left', V587} end(E357)); {'Idris.Prelude.Types.Right', E358} -> (fun (V588) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V570, {'Idris.TTImp.TTImp.UniqueDefault', V583}, [('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V571, ('un--dpairname'())}, [{'Idris.TTImp.TTImp.Implicit', V584, 0} | [{'Idris.TTImp.TTImp.ILam', V575, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', V576}, {'Idris.TTImp.TTImp.Implicit', V584, 0}, V582} | []]])) | [V583 | []]]}} end(E358)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E355)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E353)); _ -> begin (V589 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V573))(V577))), case V589 of {'Idris.Prelude.Types.Left', E349} -> (fun (V590) -> {'Idris.Prelude.Types.Left', V590} end(E349)); {'Idris.Prelude.Types.Right', E350} -> (fun (V591) -> begin (V592 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V574))(V577))), case V592 of {'Idris.Prelude.Types.Left', E351} -> (fun (V593) -> {'Idris.Prelude.Types.Left', V593} end(E351)); {'Idris.Prelude.Types.Right', E352} -> (fun (V594) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V571, ('un--dpairname'())}, [V591 | [{'Idris.TTImp.TTImp.ILam', V575, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', V576}, V591, V594} | []]]))} end(E352)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E350)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E348)); _ -> case V573 of {'Idris.Idris.Syntax.PImplicit', E343} -> (fun (V595) -> begin (V596 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V572))(V577))), case V596 of {'Idris.Prelude.Types.Left', E344} -> (fun (V597) -> {'Idris.Prelude.Types.Left', V597} end(E344)); {'Idris.Prelude.Types.Right', E345} -> (fun (V598) -> begin (V599 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V574))(V577))), case V599 of {'Idris.Prelude.Types.Left', E346} -> (fun (V600) -> {'Idris.Prelude.Types.Left', V600} end(E346)); {'Idris.Prelude.Types.Right', E347} -> (fun (V601) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V571, ('un--mkdpairname'())}, [V598 | [V601 | []]]))} end(E347)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E345)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E343)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V570, <<"Invalid dependent pair type"/utf8>>}, V577)) end end end end(E341, E342)); _ -> fun (V602) -> case V573 of {'Idris.Idris.Syntax.PImplicit', E336} -> (fun (V603) -> begin (V604 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V572))(V602))), case V604 of {'Idris.Prelude.Types.Left', E337} -> (fun (V605) -> {'Idris.Prelude.Types.Left', V605} end(E337)); {'Idris.Prelude.Types.Right', E338} -> (fun (V606) -> begin (V607 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V574))(V602))), case V607 of {'Idris.Prelude.Types.Left', E339} -> (fun (V608) -> {'Idris.Prelude.Types.Left', V608} end(E339)); {'Idris.Prelude.Types.Right', E340} -> (fun (V609) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.TTImp.TTImp':'un--apply'({'Idris.TTImp.TTImp.IVar', V571, ('un--mkdpairname'())}, [V606 | [V609 | []]]))} end(E340)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E338)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E336)); _ -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V570, <<"Invalid dependent pair type"/utf8>>}, V602)) end end end end(E331, E332, E333, E334, E335)); {'Idris.Idris.Syntax.PUnit', E359} -> (fun (V610) -> fun (V611) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IAlternative', V610, {'Idris.TTImp.TTImp.UniqueDefault', {'Idris.TTImp.TTImp.IVar', V610, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"MkUnit"/utf8>>}}}}, [{'Idris.TTImp.TTImp.IVar', V610, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Unit"/utf8>>}}} | [{'Idris.TTImp.TTImp.IVar', V610, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"MkUnit"/utf8>>}}} | []]]}} end end(E359)); {'Idris.Idris.Syntax.PIfThenElse', E360, E361, E362, E363} -> (fun (V612, V613, V614, V615) -> begin (V616 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V612))), fun (V617) -> begin (V618 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V613))(V617))), case V618 of {'Idris.Prelude.Types.Left', E364} -> (fun (V619) -> {'Idris.Prelude.Types.Left', V619} end(E364)); {'Idris.Prelude.Types.Right', E365} -> (fun (V620) -> begin (V621 = ('un--desugar'(V0, V2, V3, V4, V5, V6, V614, V617))), case V621 of {'Idris.Prelude.Types.Left', E366} -> (fun (V622) -> {'Idris.Prelude.Types.Left', V622} end(E366)); {'Idris.Prelude.Types.Right', E367} -> (fun (V623) -> begin (V624 = ('un--desugar'(V0, V2, V3, V4, V5, V6, V615, V617))), case V624 of {'Idris.Prelude.Types.Left', E368} -> (fun (V625) -> {'Idris.Prelude.Types.Left', V625} end(E368)); {'Idris.Prelude.Types.Right', E369} -> (fun (V626) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.ICase', V616, V620, {'Idris.TTImp.TTImp.IVar', V616, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Bool"/utf8>>}}}, [{'Idris.TTImp.TTImp.PatClause', V616, {'Idris.TTImp.TTImp.IVar', V616, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"True"/utf8>>}}}, V623} | [{'Idris.TTImp.TTImp.PatClause', V616, {'Idris.TTImp.TTImp.IVar', V616, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"False"/utf8>>}}}, V626} | []]]}} end(E369)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E367)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E365)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E360, E361, E362, E363)); {'Idris.Idris.Syntax.PComprehension', E370, E371, E372} -> (fun (V627, V628, V629) -> fun (V630) -> begin (V632 = begin (V631 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V631} end), case V632 of {'Idris.Prelude.Types.Left', E373} -> (fun (V633) -> {'Idris.Prelude.Types.Left', V633} end(E373)); {'Idris.Prelude.Types.Right', E374} -> (fun (V634) -> begin (V638 = case V634 of {'Idris.Idris.Desugar.MkBangData', E375, E376, E377} -> (fun (V635, V636, V637) -> V637 end(E375, E376, E377)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Idris.Syntax.PDoBlock', V627, V638, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V639) -> ('nested--12865-6492--in--un--guard'(V629, V628, V627, V6, V5, V4, V3, V2, V1, V0, V638, V639)) end, V629)), [('nested--12865-6493--in--un--toPure'(V629, V628, V627, V6, V5, V4, V3, V2, V1, V0, V638, V628)) | []]))}))(V630)) end end(E374)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E370, E371, E372)); {'Idris.Idris.Syntax.PRewrite', E378, E379, E380} -> (fun (V640, V641, V642) -> fun (V643) -> begin (V644 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V641))(V643))), case V644 of {'Idris.Prelude.Types.Left', E381} -> (fun (V645) -> {'Idris.Prelude.Types.Left', V645} end(E381)); {'Idris.Prelude.Types.Right', E382} -> (fun (V646) -> begin (V647 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V642))(V643))), case V647 of {'Idris.Prelude.Types.Left', E383} -> (fun (V648) -> {'Idris.Prelude.Types.Left', V648} end(E383)); {'Idris.Prelude.Types.Right', E384} -> (fun (V649) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IRewrite', V640, V646, V649}} end(E384)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E382)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E378, E379, E380)); {'Idris.Idris.Syntax.PRange', E385, E386, E387, E388} -> (fun (V650, V651, V652, V653) -> begin (V654 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V650))), ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, case V652 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Idris.Syntax':'un--papply'(V654, {'Idris.Idris.Syntax.PRef', V654, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"rangeFromTo"/utf8>>}}}, [V651 | [V653 | []]])) end()); {'Idris.Prelude.Types.Just', E389} -> (fun (V655) -> ('Idris.Idris2.Idris.Syntax':'un--papply'(V654, {'Idris.Idris.Syntax.PRef', V654, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"rangeFromThenTo"/utf8>>}}}, [V651 | [V655 | [V653 | []]]])) end(E389)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end end(E385, E386, E387, E388)); {'Idris.Idris.Syntax.PRangeStream', E390, E391, E392} -> (fun (V656, V657, V658) -> begin (V659 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V656))), ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, case V658 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Idris.Syntax':'un--papply'(V659, {'Idris.Idris.Syntax.PRef', V659, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"rangeFrom"/utf8>>}}}, [V657 | []])) end()); {'Idris.Prelude.Types.Just', E393} -> (fun (V660) -> ('Idris.Idris2.Idris.Syntax':'un--papply'(V659, {'Idris.Idris.Syntax.PRef', V659, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"rangeFromThen"/utf8>>}}}, [V657 | [V660 | []]])) end(E393)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) end end(E390, E391, E392)); {'Idris.Idris.Syntax.PUnifyLog', E394, E395, E396} -> (fun (V661, V662, V663) -> fun (V664) -> begin (V665 = (('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V663))(V664))), case V665 of {'Idris.Prelude.Types.Left', E397} -> (fun (V666) -> {'Idris.Prelude.Types.Left', V666} end(E397)); {'Idris.Prelude.Types.Right', E398} -> (fun (V667) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IUnifyLog', V661, V662, V667}} end(E398)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E394, E395, E396)); {'Idris.Idris.Syntax.PPostfixApp', E399, E400, E401} -> (fun (V668, V669, V670) -> ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(fun (V671) -> fun (V672) -> case V672 of {'Idris.Builtin.MkPair', E402, E403} -> (fun (V673, V674) -> {'Idris.Idris.Syntax.PApp', V673, {'Idris.Idris.Syntax.PRef', V673, V674}, V671} end(E402, E403)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V669, V670)))) end(E399, E400, E401)); {'Idris.Idris.Syntax.PPostfixAppPartial', E404, E405} -> (fun (V675, V676) -> begin (V677 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V675))), begin (V678 = {'Idris.Idris.Syntax.PRef', V677, {'Idris.Core.Name.MN', <<"paRoot"/utf8>>, 0}}), ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, {'Idris.Idris.Syntax.PLam', V675, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, V678, {'Idris.Idris.Syntax.PImplicit', V677}, ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(fun (V679) -> fun (V680) -> case V680 of {'Idris.Builtin.MkPair', E406, E407} -> (fun (V681, V682) -> {'Idris.Idris.Syntax.PApp', V681, {'Idris.Idris.Syntax.PRef', V681, V682}, V679} end(E406, E407)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V678, V676))})) end end end(E404, E405)); {'Idris.Idris.Syntax.PWithUnambigNames', E408, E409, E410} -> (fun (V683, V684, V685) -> fun (V686) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V687) -> case V687 of {'Idris.Prelude.Types.Left', E411} -> (fun (V688) -> {'Idris.Prelude.Types.Left', V688} end(E411)); {'Idris.Prelude.Types.Right', E412} -> (fun (V689) -> {'Idris.Prelude.Types.Right', {'Idris.TTImp.TTImp.IWithUnambigNames', V683, V684, V689}} end(E412)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, ('un--desugarB'(V0, V1, V2, V3, V4, V5, V6, V685)), V686)) end end(E408, E409, E410)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--desugar'(V0, V1, V2, V3, V4, V5, V6, V7) -> ('un--desugarDo'(V0, V1, V2, V3, V4, V5, {'Idris.Prelude.Types.Nothing'}, V6, V7)).
'un--bindFun'(V0, V1, V2, V3) -> begin (V4 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V0))), {'Idris.TTImp.TTImp.IApp', V4, {'Idris.TTImp.TTImp.IApp', V4, {'Idris.TTImp.TTImp.IVar', V4, ('un--addNS'(V1, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<">>="/utf8>>}}))}, V2}, V3} end.
'un--bindBangs'(V0, V1, V2) -> case V0 of [] -> V2; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V5, V6) -> case V6 of {'Idris.Builtin.MkPair', E4, E5} -> (fun (V7, V8) -> ('un--bindBangs'(V4, V1, ('un--bindFun'(V7, V1, V8, {'Idris.TTImp.TTImp.ILam', {'Idris.Core.FC.EmptyFC'}, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--top_Top_ZeroOneOmega'()), {'Idris.Core.TT.Explicit'}, {'Idris.Prelude.Types.Just', V5}, {'Idris.TTImp.TTImp.Implicit', V7, 0}, V2})))) end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--addNS'(V0, V1) -> case V0 of {'Idris.Prelude.Types.Just', E0} -> (fun (V2) -> case V1 of {'Idris.Core.Name.NS', E1, E2} -> (fun (V3, V4) -> V1 end(E1, E2)); _ -> {'Idris.Core.Name.NS', V2, V1} end end(E0)); _ -> V1 end.
'un--addFromString'(V0, V1, V2, V3) -> begin (V4 = ('Idris.Idris2.Core.Context':'un--fromStringName'(V0, V3))), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> {'Idris.Prelude.Types.Right', case V6 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> V2 end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V7) -> begin (V8 = ('Idris.Idris2.Core.FC':'un--virtualiseFC'(V1))), {'Idris.TTImp.TTImp.IApp', V8, {'Idris.TTImp.TTImp.IVar', V8, V7}, V2} end end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
