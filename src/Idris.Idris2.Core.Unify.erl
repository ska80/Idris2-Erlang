-module('Idris.Idris2.Core.Unify').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'un--search'/11,
  'case--case block in case block in retryGuess-24246'/17,
  'case--case block in case block in retryGuess-23651'/17,
  'case--case block in retryGuess-23155'/11,
  'case--retry-22527'/7,
  'case--case block in unifyD-21667'/14,
  'case--case block in unifyBothBinders-19009'/28,
  'case--case block in case block in unifyHole-16459'/23,
  'case--headsConvert-14412'/9,
  'case--occursCheck-11279'/10,
  'case--occursCheck,failOnStrongRigid-11141'/11,
  'case--case block in patternEnvTm-11016'/9,
  'case--patternEnvTm-10977'/8,
  'case--case block in patternEnv-10745'/10,
  'case--patternEnv-10702'/9,
  'case--chaseMetas-9733'/5,
  'nested--8987-10878--in--un--updateVars'/7,
  'nested--8655-10592--in--un--updateVars'/7,
  'nested--9834-12287--in--un--updateIVarsPi'/25,
  'nested--9834-12288--in--un--updateIVarsB'/25,
  'nested--9807-11611--in--un--updateIVars'/18,
  'nested--9807-11610--in--un--updateIVar'/16,
  'nested--12355-13881--in--un--tooBigArgs'/7,
  'nested--15611-16704--in--un--solveOrElsePostpone'/30,
  'nested--12588-15581--in--un--solutionHeadSame'/17,
  'nested--12608-17997--in--un--pv'/17,
  'nested--9807-11608--in--un--noMeta'/16,
  'nested--9807-11612--in--un--mkDef'/20,
  'nested--12608-17998--in--un--localsIn'/18,
  'nested--9807-11609--in--un--isSimple'/15,
  'nested--12576-15238--in--un--isPatName'/18,
  'nested--12355-13880--in--un--isFn'/5,
  'nested--12627-20319--in--un--isDelay'/9,
  'nested--12588-15580--in--un--inNoSolve'/18,
  'nested--8408-10381--in--un--inArgs'/8,
  'nested--24927-24999--in--un--getHoleName'/4,
  'nested--9202-11060--in--un--failOnStrongRigid'/10,
  'nested--24477-24598--in--un--constraintToHole'/4,
  'nested--7850-9855--in--un--checkDefined'/12,
  'nested--24927-25000--in--un--checkConstraint'/3,
  'nested--24612-24734--in--un--anySame'/7,
  'nested--8539-10490--in--un--anyFirst'/4,
  'nested--24419-24544--in--un--afterStart'/6,
  'dn--un--weaken_Weaken_(IVars $vs)'/1,
  'dn--un--unifyWithLazyD_Unify_Term'/9,
  'dn--un--unifyWithLazyD_Unify_NF'/8,
  'dn--un--unifyWithLazyD_Unify_Closure'/9,
  'dn--un--unifyD_Unify_Term'/9,
  'dn--un--unifyD_Unify_NF'/8,
  'dn--un--unifyD_Unify_Closure'/9,
  'dn--un--show_Show_UnifyMode'/1,
  'dn--un--show_Show_AddLazy'/1,
  'dn--un--showPrec_Show_AddLazy'/2,
  'dn--un--__Impl_Unify_Term'/0,
  'dn--un--__Impl_Unify_NF'/0,
  'dn--un--__Impl_Unify_Closure'/0,
  'dn--un--__Impl_Show_AddLazy'/0,
  'dn--un--==_Eq_UnifyMode'/2,
  'dn--un--==_Eq_SolveMode'/2,
  'dn--un--/=_Eq_UnifyMode'/2,
  'un--updateSolution'/7,
  'un--unionAll'/1,
  'un--union'/2,
  'un--unifyWithLazyD'/5,
  'un--unifyWithLazy'/7,
  'un--unifyNoEta'/8,
  'un--unifyInvertible'/15,
  'un--unifyIfEq'/10,
  'un--unifyHoleApp'/12,
  'un--unifyHole'/14,
  'un--unifyD'/5,
  'un--unifyBothBinders'/14,
  'un--unifyBothApps'/12,
  'un--unifyArgs'/9,
  'un--unifyApp'/11,
  'un--unify'/7,
  'un--ufail'/3,
  'un--tryInstantiate'/15,
  'un--tooBig'/4,
  'un--toSubVars'/2,
  'un--success'/0,
  'un--solvedHole'/1,
  'un--solveIfUndefined'/7,
  'un--solveHole'/17,
  'un--solveConstraintsAfter'/6,
  'un--solveConstraints'/5,
  'un--setInvertible'/4,
  'un--retryGuess'/6,
  'un--retry'/5,
  'un--recoverable'/1,
  'un--postponeS'/11,
  'un--postponePatVar'/12,
  'un--postpone'/10,
  'un--patternEnvTm'/6,
  'un--patternEnv'/6,
  'un--occursCheck'/8,
  'un--lower'/1,
  'un--isHoleApp'/1,
  'un--isDefInvertible'/4,
  'un--inTerm'/0,
  'un--inSearch'/0,
  'un--inMatch'/0,
  'un--inLHS'/0,
  'un--headsConvert'/8,
  'un--giveUpConstraints'/3,
  'un--getVarsTm'/2,
  'un--getVars'/3,
  'un--getMetaNames'/2,
  'un--getIVars'/1,
  'un--getArgTypes'/5,
  'un--forceMeta'/3,
  'un--dumpArg'/5,
  'un--delayMeta'/5,
  'un--convertErrorS'/8,
  'un--convertError'/7,
  'un--constrain'/1,
  'un--checkDots'/3,
  'un--checkArgsSame'/4,
  'un--chaseMetas'/3
]).
'un--search'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> begin (V12 = begin (V11 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V11} end), case V12 of {'Idris.Prelude.Types.Left', E0} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Normalise':'un--logTermNF'(V0, V1, <<"auto"/utf8>>, (1 + (1 + (1 + 0))), fun () -> <<"Initial target: "/utf8>> end, V9, V8, V10))), case V15 of {'Idris.Prelude.Types.Left', E2} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V17) -> begin (V18 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"auto"/utf8>>, (1 + (1 + (1 + 0))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Running search with defaults "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Bool'(V5)))) end, V10))), case V18 of {'Idris.Prelude.Types.Left', E4} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V20) -> begin (V21 = ('Idris.Idris2.Core.AutoSearch':'un--searchType'(V0, V1, V2, V3, V4, V5, [], V6, V7, 1, ('Idris.Idris2.Core.Env':'un--abstractEnvType'(V0, V3, V9, V8)), V9, V8, V10))), case V21 of {'Idris.Prelude.Types.Left', E6} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V23) -> begin (V24 = ('Idris.Idris2.Core.Normalise':'un--logTermNF'(V0, V1, <<"auto"/utf8>>, (1 + (1 + (1 + 0))), fun () -> <<"Result"/utf8>> end, V9, V23, V10))), case V24 of {'Idris.Prelude.Types.Left', E8} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V26) -> begin (V28 = begin (V27 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V27} end), case V28 of {'Idris.Prelude.Types.Left', E10} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V30) -> {'Idris.Prelude.Types.Right', V23} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'case--case block in case block in retryGuess-24246'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of [] -> begin (V37 = case V8 of {'Idris.Core.Context.Context.MkGlobalDef', E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43} -> (fun (V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36) -> {'Idris.Core.Context.Context.MkGlobalDef', V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, {'Idris.Core.Context.Context.PMDef', {'Idris.Core.Context.Context.MkPMDefInfo', {'Idris.Core.Context.Context.NotHole'}, 1, 0}, [], {'Idris.Core.CaseTree.STerm', 0, V12}, {'Idris.Core.CaseTree.STerm', 0, V12}, []}, V35, V36} end(E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), fun (V38) -> begin (V39 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V6, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Resolved "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2)))) end, V12, V38))), case V39 of {'Idris.Prelude.Types.Left', E44} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V41) -> begin (V46 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V42) -> case V42 of {'Idris.Prelude.Types.Left', E46} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V44) -> {'Idris.Prelude.Types.Right', 0} end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V45) -> ('Idris.Idris2.Core.Context':'un--addDef'(V6, {'Idris.Core.Name.Resolved', V0}, V37, V45)) end, V38))), case V46 of {'Idris.Prelude.Types.Left', E48} -> (fun (V47) -> {'Idris.Prelude.Types.Left', V47} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V48) -> begin (V49 = ('Idris.Idris2.Core.UnifyState':'un--removeGuess'(V5, V0, V38))), case V49 of {'Idris.Prelude.Types.Left', E50} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V51) -> {'Idris.Prelude.Types.Right', case V15 of {'Idris.Core.Unify.MkUnifyResult', E52, E53, E54, E55} -> (fun (V52, V53, V54, V55) -> V53 end(E52, E53, E54, E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> begin (V76 = case V8 of {'Idris.Core.Context.Context.MkGlobalDef', E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19} -> (fun (V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73, V74, V75) -> {'Idris.Core.Context.Context.MkGlobalDef', V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, {'Idris.Core.Context.Context.Guess', V12, V11, V16}, V74, V75} end(E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), fun (V77) -> begin (V82 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V78) -> case V78 of {'Idris.Prelude.Types.Left', E20} -> (fun (V79) -> {'Idris.Prelude.Types.Left', V79} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V80) -> {'Idris.Prelude.Types.Right', 0} end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V81) -> ('Idris.Idris2.Core.Context':'un--addDef'(V6, {'Idris.Core.Name.Resolved', V0}, V76, V81)) end, V77))), case V82 of {'Idris.Prelude.Types.Left', E22} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V84) -> {'Idris.Prelude.Types.Right', 0} end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end.
'case--case block in case block in retryGuess-23651'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V15 of [] -> begin (V32 = case V14 of {'Idris.Core.Unify.MkUnifyResult', E38, E39, E40, E41} -> (fun (V17, V18, V19, V20) -> case V20 of {'Idris.Core.Unify.NoLazy'} -> (fun () -> {'Idris.Prelude.Types.Right', V12} end()); {'Idris.Core.Unify.AddForce', E42} -> (fun (V21) -> {'Idris.Prelude.Types.Right', ('un--forceMeta'(V21, V11, V12))} end(E42)); {'Idris.Core.Unify.AddDelay', E43} -> (fun (V22) -> begin (V23 = (('Idris.Idris2.Core.GetType':'un--getType'([], V6, {'Idris.Core.Env.Nil'}, V12))(V16))), case V23 of {'Idris.Prelude.Types.Left', E44} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V25) -> begin (V26 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V6, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> <<"Retry Delay"/utf8>> end, V12, V16))), case V26 of {'Idris.Prelude.Types.Left', E46} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V28) -> begin (V29 = (('Idris.Idris2.Core.Normalise.Eval':'un--getTerm'(V25))(V16))), case V29 of {'Idris.Prelude.Types.Left', E48} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V31) -> {'Idris.Prelude.Types.Right', ('un--delayMeta'([], V22, V11, V31, V12))} end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E38, E39, E40, E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V32 of {'Idris.Prelude.Types.Left', E50} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V34) -> begin (V55 = case V8 of {'Idris.Core.Context.Context.MkGlobalDef', E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71} -> (fun (V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54) -> {'Idris.Core.Context.Context.MkGlobalDef', V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, {'Idris.Core.Context.Context.PMDef', {'Idris.Core.Context.Context.MkPMDefInfo', {'Idris.Core.Context.Context.NotHole'}, 1, 0}, [], {'Idris.Core.CaseTree.STerm', 0, V34}, {'Idris.Core.CaseTree.STerm', 0, V34}, []}, V53, V54} end(E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V56 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V6, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Resolved "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2)))) end, V34, V16))), case V56 of {'Idris.Prelude.Types.Left', E72} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V58) -> begin (V63 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V59) -> case V59 of {'Idris.Prelude.Types.Left', E74} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V61) -> {'Idris.Prelude.Types.Right', 0} end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V62) -> ('Idris.Idris2.Core.Context':'un--addDef'(V6, {'Idris.Core.Name.Resolved', V0}, V55, V62)) end, V16))), case V63 of {'Idris.Prelude.Types.Left', E76} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V65) -> begin (V66 = ('Idris.Idris2.Core.UnifyState':'un--removeGuess'(V5, V0, V16))), case V66 of {'Idris.Prelude.Types.Left', E78} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V68) -> {'Idris.Prelude.Types.Right', case V14 of {'Idris.Core.Unify.MkUnifyResult', E80, E81, E82, E83} -> (fun (V69, V70, V71, V72) -> V70 end(E80, E81, E82, E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V88 = case V14 of {'Idris.Core.Unify.MkUnifyResult', E0, E1, E2, E3} -> (fun (V73, V74, V75, V76) -> case V76 of {'Idris.Core.Unify.NoLazy'} -> (fun () -> {'Idris.Prelude.Types.Right', V12} end()); {'Idris.Core.Unify.AddForce', E4} -> (fun (V77) -> {'Idris.Prelude.Types.Right', ('un--forceMeta'(V77, V11, V12))} end(E4)); {'Idris.Core.Unify.AddDelay', E5} -> (fun (V78) -> begin (V79 = (('Idris.Idris2.Core.GetType':'un--getType'([], V6, {'Idris.Core.Env.Nil'}, V12))(V16))), case V79 of {'Idris.Prelude.Types.Left', E6} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V81) -> begin (V82 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V6, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> <<"Retry Delay (constrained)"/utf8>> end, V12, V16))), case V82 of {'Idris.Prelude.Types.Left', E8} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V84) -> begin (V85 = (('Idris.Idris2.Core.Normalise.Eval':'un--getTerm'(V81))(V16))), case V85 of {'Idris.Prelude.Types.Left', E10} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V87) -> {'Idris.Prelude.Types.Right', ('un--delayMeta'([], V78, V11, V87, V12))} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V88 of {'Idris.Prelude.Types.Left', E12} -> (fun (V89) -> {'Idris.Prelude.Types.Left', V89} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V90) -> begin (V111 = case V8 of {'Idris.Core.Context.Context.MkGlobalDef', E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33} -> (fun (V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110) -> {'Idris.Core.Context.Context.MkGlobalDef', V91, V92, V93, V94, V95, V96, V97, V98, V99, V100, V101, V102, V103, V104, V105, V106, V107, {'Idris.Core.Context.Context.Guess', V90, V11, V15}, V109, V110} end(E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V116 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V112) -> case V112 of {'Idris.Prelude.Types.Left', E34} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V114) -> {'Idris.Prelude.Types.Right', 0} end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V115) -> ('Idris.Idris2.Core.Context':'un--addDef'(V6, {'Idris.Core.Name.Resolved', V0}, V111, V115)) end, V16))), case V116 of {'Idris.Prelude.Types.Left', E36} -> (fun (V117) -> {'Idris.Prelude.Types.Left', V117} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V118) -> {'Idris.Prelude.Types.Right', 0} end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'case--case block in retryGuess-23155'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Core.Context.Context.BySearch', E0, E1, E2} -> (fun (V11, V12, V13) -> fun (V14) -> ('Idris.Idris2.Core.UnifyState':'un--handleUnify'(V6, V5, fun (V15) -> begin (V36 = ('un--search'([], V6, V5, V1, V11, ('dn--un--==_Eq_SolveMode'(V3, 1)), V12, V13, case V8 of {'Idris.Core.Context.Context.MkGlobalDef', E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22} -> (fun (V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35) -> V18 end(E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Core.Env.Nil'}, V15))), case V36 of {'Idris.Prelude.Types.Left', E23} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E23)); {'Idris.Prelude.Types.Right', E24} -> (fun (V38) -> begin (V59 = case V8 of {'Idris.Core.Context.Context.MkGlobalDef', E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44} -> (fun (V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58) -> {'Idris.Core.Context.Context.MkGlobalDef', V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, {'Idris.Core.Context.Context.PMDef', ('Idris.Idris2.Core.Context.Context':'un--defaultPI'()), [], {'Idris.Core.CaseTree.STerm', 0, V38}, {'Idris.Core.CaseTree.STerm', 0, V38}, []}, V57, V58} end(E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V60 = ('Idris.Idris2.Core.Normalise':'un--logTermNF'([], V6, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Solved "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2)))) end, {'Idris.Core.Env.Nil'}, V38, V15))), case V60 of {'Idris.Prelude.Types.Left', E45} -> (fun (V61) -> {'Idris.Prelude.Types.Left', V61} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V62) -> begin (V67 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V63) -> case V63 of {'Idris.Prelude.Types.Left', E47} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V65) -> {'Idris.Prelude.Types.Right', 0} end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V66) -> ('Idris.Idris2.Core.Context':'un--addDef'(V6, {'Idris.Core.Name.Resolved', V0}, V59, V66)) end, V15))), case V67 of {'Idris.Prelude.Types.Left', E49} -> (fun (V68) -> {'Idris.Prelude.Types.Left', V68} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V69) -> begin (V70 = ('Idris.Idris2.Core.UnifyState':'un--removeGuess'(V5, V0, V15))), case V70 of {'Idris.Prelude.Types.Left', E51} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V72) -> {'Idris.Prelude.Types.Right', 1} end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V73) -> fun (V74) -> case V73 of {'Idris.Core.Core.DeterminingArg', E125, E126, E127, E128, E129, E130} -> (fun (V75, V76, V77, V78, V79, V80) -> begin (V101 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V6, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Failed (det "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V77)), <<")"/utf8>>)))))))) end, case V8 of {'Idris.Core.Context.Context.MkGlobalDef', E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150} -> (fun (V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97, V98, V99, V100) -> V83 end(E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V74))), case V101 of {'Idris.Prelude.Types.Left', E151} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E151)); {'Idris.Prelude.Types.Right', E152} -> (fun (V103) -> begin (V104 = ('un--setInvertible'(V6, V1, {'Idris.Core.Name.Resolved', V78}, V74))), case V104 of {'Idris.Prelude.Types.Left', E153} -> (fun (V105) -> {'Idris.Prelude.Types.Left', V105} end(E153)); {'Idris.Prelude.Types.Right', E154} -> (fun (V106) -> {'Idris.Prelude.Types.Right', 0} end(E154)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E152)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E125, E126, E127, E128, E129, E130)); _ -> begin (V127 = ('Idris.Idris2.Core.Normalise':'un--logTermNF'([], V6, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Search failed at "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--show_Show_ZeroOneOmega'(V11)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" for "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V2)))))))) end, {'Idris.Core.Env.Nil'}, case V8 of {'Idris.Core.Context.Context.MkGlobalDef', E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72} -> (fun (V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126) -> V109 end(E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V74))), case V127 of {'Idris.Prelude.Types.Left', E73} -> (fun (V128) -> {'Idris.Prelude.Types.Left', V128} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V129) -> case V3 of 3 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'(V73, V74)); _ -> case ('un--recoverable'(V73)) of 1 -> {'Idris.Prelude.Types.Right', 0}; 0 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.CantSolveGoal', [], V1, case V7 of {'Idris.Core.Context.MkDefs', E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104} -> (fun (V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154, V155, V156, V157, V158, V159) -> V130 end(E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Core.Env.Nil'}, case V8 of {'Idris.Core.Context.Context.MkGlobalDef', E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124} -> (fun (V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177, V178, V179) -> V162 end(E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123, E124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, {'Idris.Prelude.Types.Just', V73}}, V74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, V14)) end end(E0, E1, E2)); {'Idris.Core.Context.Context.Guess', E155, E156, E157} -> (fun (V180, V181, V182) -> case V182 of [E164 | E165] -> (fun (V183, V184) -> case V184 of [] -> begin (V185 = case V3 of 2 -> ('un--inMatch'()); _ -> V4 end), fun (V186) -> begin (V187 = ('un--retry'(V6, V5, V185, V183, V186))), case V187 of {'Idris.Prelude.Types.Left', E172} -> (fun (V188) -> {'Idris.Prelude.Types.Left', V188} end(E172)); {'Idris.Prelude.Types.Right', E173} -> (fun (V189) -> ('case--case block in case block in retryGuess-23651'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V183, V181, V180, V185, V189, case V189 of {'Idris.Core.Unify.MkUnifyResult', E174, E175, E176, E177} -> (fun (V190, V191, V192, V193) -> V190 end(E174, E175, E176, E177)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V186)) end(E173)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> begin (V194 = case V3 of 2 -> ('un--inMatch'()); _ -> V4 end), fun (V195) -> begin (V198 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V196) -> fun (V197) -> ('un--retry'(V6, V5, V194, V196, V197)) end end, V182, [], V195))), case V198 of {'Idris.Prelude.Types.Left', E166} -> (fun (V199) -> {'Idris.Prelude.Types.Left', V199} end(E166)); {'Idris.Prelude.Types.Right', E167} -> (fun (V200) -> begin (V201 = ('un--unionAll'(V200))), (('case--case block in case block in retryGuess-24246'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V182, V181, V180, V194, V200, V201, case V201 of {'Idris.Core.Unify.MkUnifyResult', E168, E169, E170, E171} -> (fun (V202, V203, V204, V205) -> V202 end(E168, E169, E170, E171)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V195)) end end(E167)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E164, E165)); _ -> begin (V206 = case V3 of 2 -> ('un--inMatch'()); _ -> V4 end), fun (V207) -> begin (V210 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V208) -> fun (V209) -> ('un--retry'(V6, V5, V206, V208, V209)) end end, V182, [], V207))), case V210 of {'Idris.Prelude.Types.Left', E158} -> (fun (V211) -> {'Idris.Prelude.Types.Left', V211} end(E158)); {'Idris.Prelude.Types.Right', E159} -> (fun (V212) -> begin (V213 = ('un--unionAll'(V212))), (('case--case block in case block in retryGuess-24246'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V182, V181, V180, V206, V212, V213, case V213 of {'Idris.Core.Unify.MkUnifyResult', E160, E161, E162, E163} -> (fun (V214, V215, V216, V217) -> V214 end(E160, E161, E162, E163)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V207)) end end(E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end(E155, E156, E157)); _ -> fun (V218) -> {'Idris.Prelude.Types.Right', 0} end end.
'case--retry-22527'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--success'())} end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V7) -> case V7 of {'Idris.Core.UnifyState.Resolved'} -> (fun () -> {'Idris.Prelude.Types.Right', ('un--success'())} end()); {'Idris.Core.UnifyState.MkConstraint', E1, E2, E3, E4, E5, E6} -> (fun (V8, V9, V10, V11, V12, V13) -> begin (V15 = begin (V14 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V14} end), case V15 of {'Idris.Prelude.Types.Left', E7} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E7)); {'Idris.Prelude.Types.Right', E8} -> (fun (V17) -> begin (V18 = (('Idris.Idris2.Core.Normalise.Eval':'un--continueNF'(V0, V8, V17, V11, V12))(V6))), case V18 of {'Idris.Prelude.Types.Left', E9} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E9)); {'Idris.Prelude.Types.Right', E10} -> (fun (V20) -> begin (V21 = (('Idris.Idris2.Core.Normalise.Eval':'un--continueNF'(V0, V8, V17, V11, V13))(V6))), case V21 of {'Idris.Prelude.Types.Left', E11} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V23) -> ('Idris.Idris2.Core.Core':'dn--un--catch_Catchable_Core_Error'(fun (V24) -> begin (V27 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V8, V0, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Retrying "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V1)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('dn--un--show_Show_UnifyMode'(case V2 of {'Idris.Core.Unify.MkUnifyInfo', E13, E14} -> (fun (V25, V26) -> V26 end(E13, E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))))))) end, V11, V20, V24))), case V27 of {'Idris.Prelude.Types.Left', E15} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V29) -> begin (V30 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V8, V0, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> <<"....with"/utf8>> end, V11, V23, V24))), case V30 of {'Idris.Prelude.Types.Left', E17} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V32) -> begin (V33 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), case V10 of 1 -> fun () -> <<"(lazy allowed)"/utf8>> end; 0 -> fun () -> <<"(no lazy)"/utf8>> end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V24))), case V33 of {'Idris.Prelude.Types.Left', E19} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E19)); {'Idris.Prelude.Types.Right', E20} -> (fun (V35) -> begin (V68 = case V10 of 1 -> (((('un--unifyWithLazy'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('dn--un--unifyD_Unify_NF'(V36, V37, V38, V39, V40, V41, V42, V43)) end end end end end end end end, fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('dn--un--unifyWithLazyD_Unify_NF'(V44, V45, V46, V47, V48, V49, V50, V51)) end end end end end end end end}, V8, V0, V3, V2, V9, V11))(V20))(V23))(V24)); 0 -> (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> ('dn--un--unifyD_Unify_NF'(V52, V53, V54, V55, V56, V57, V58, V59)) end end end end end end end end, fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> ('dn--un--unifyWithLazyD_Unify_NF'(V60, V61, V62, V63, V64, V65, V66, V67)) end end end end end end end end}, V8, V0, V3, ('un--lower'(V2)), V9, V11))(V20))(V23))(V24)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V68 of {'Idris.Prelude.Types.Left', E21} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E21)); {'Idris.Prelude.Types.Right', E22} -> (fun (V70) -> case V70 of {'Idris.Core.Unify.MkUnifyResult', E23, E24, E25, E26} -> (fun (V71, V72, V73, V74) -> case V71 of [] -> begin (V79 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Success "/utf8>>, ('dn--un--show_Show_AddLazy'(case V70 of {'Idris.Core.Unify.MkUnifyResult', E33, E34, E35, E36} -> (fun (V75, V76, V77, V78) -> V78 end(E33, E34, E35, E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))) end, V24))), case V79 of {'Idris.Prelude.Types.Left', E37} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V81) -> begin (V82 = ('Idris.Idris2.Core.UnifyState':'un--deleteConstraint'(V3, V1, V24))), case V82 of {'Idris.Prelude.Types.Left', E39} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V84) -> {'Idris.Prelude.Types.Right', V70} end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V89 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.retry"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Constraints "/utf8>>, ('dn--un--show_Show_AddLazy'(case V70 of {'Idris.Core.Unify.MkUnifyResult', E27, E28, E29, E30} -> (fun (V85, V86, V87, V88) -> V88 end(E27, E28, E29, E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))) end, V24))), case V89 of {'Idris.Prelude.Types.Left', E31} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V91) -> {'Idris.Prelude.Types.Right', V70} end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E23, E24, E25, E26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V92) -> fun (V93) -> begin (V95 = begin (V94 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V94} end), case V95 of {'Idris.Prelude.Types.Left', E41} -> (fun (V96) -> {'Idris.Prelude.Types.Left', V96} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V97) -> begin (V98 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V97, V93))), case V98 of {'Idris.Prelude.Types.Left', E43} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V100) -> begin (V101 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, V8, V100, V11, V20, V93))), case V101 of {'Idris.Prelude.Types.Left', E45} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V103) -> begin (V104 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, V8, V100, V11, V23, V93))), case V104 of {'Idris.Prelude.Types.Left', E47} -> (fun (V105) -> {'Idris.Prelude.Types.Left', V105} end(E47)); {'Idris.Prelude.Types.Right', E48} -> (fun (V106) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.WhenUnifying', V8, V9, case V97 of {'Idris.Core.Context.MkDefs', E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78} -> (fun (V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136) -> V107 end(E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V11, V103, V106, V92}, V93)) end(E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V6)) end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1, E2, E3, E4, E5, E6)); {'Idris.Core.UnifyState.MkSeqConstraint', E79, E80, E81, E82, E83} -> (fun (V137, V138, V139, V140, V141) -> begin (V143 = begin (V142 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V142} end), case V143 of {'Idris.Prelude.Types.Left', E84} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V145) -> begin (V147 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V146) -> ('Idris.Idris2.Core.Normalise.Eval':'un--continueNF'(V0, V137, V145, V139, V146)) end, V140, [], V6))), case V147 of {'Idris.Prelude.Types.Left', E86} -> (fun (V148) -> {'Idris.Prelude.Types.Left', V148} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V149) -> begin (V151 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V150) -> ('Idris.Idris2.Core.Normalise.Eval':'un--continueNF'(V0, V137, V145, V139, V150)) end, V141, [], V6))), case V151 of {'Idris.Prelude.Types.Left', E88} -> (fun (V152) -> {'Idris.Prelude.Types.Left', V152} end(E88)); {'Idris.Prelude.Types.Right', E89} -> (fun (V153) -> begin (V197 = (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> fun (V158) -> fun (V159) -> fun (V160) -> fun (V161) -> ('dn--un--unifyD_Unify_NF'(V154, V155, V156, V157, V158, V159, V160, V161)) end end end end end end end end, fun (V162) -> fun (V163) -> fun (V164) -> fun (V165) -> fun (V166) -> fun (V167) -> fun (V168) -> fun (V169) -> ('dn--un--unifyWithLazyD_Unify_NF'(V162, V163, V164, V165, V166, V167, V168, V169)) end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V170) -> fun (V171) -> fun (V172) -> fun (V173) -> fun (V174) -> fun (V175) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V170, V171, V172, V173, V174, V175)) end end end end end end, fun (V176) -> fun (V177) -> fun (V178) -> fun (V179) -> fun (V180) -> fun (V181) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_NF'(V176, V177, V178, V179, V180, V181)) end end end end end end, fun (V182) -> fun (V183) -> fun (V184) -> fun (V185) -> fun (V186) -> fun (V187) -> fun (V188) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_NF'(V182, V183, V184, V185, V186, V187, V188)) end end end end end end end, fun (V189) -> fun (V190) -> fun (V191) -> fun (V192) -> fun (V193) -> fun (V194) -> fun (V195) -> fun (V196) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_NF'(V189, V190, V191, V192, V193, V194, V195, V196)) end end end end end end end end}}, V137, V0, V3, V2, V138, V139, V149, V153))(V6))), case V197 of {'Idris.Prelude.Types.Left', E90} -> (fun (V198) -> {'Idris.Prelude.Types.Left', V198} end(E90)); {'Idris.Prelude.Types.Right', E91} -> (fun (V199) -> case V199 of {'Idris.Core.Unify.MkUnifyResult', E92, E93, E94, E95} -> (fun (V200, V201, V202, V203) -> case V200 of [] -> begin (V204 = ('Idris.Idris2.Core.UnifyState':'un--deleteConstraint'(V3, V1, V6))), case V204 of {'Idris.Prelude.Types.Left', E96} -> (fun (V205) -> {'Idris.Prelude.Types.Left', V205} end(E96)); {'Idris.Prelude.Types.Right', E97} -> (fun (V206) -> {'Idris.Prelude.Types.Right', V199} end(E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> {'Idris.Prelude.Types.Right', V199} end end(E92, E93, E94, E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E79, E80, E81, E82, E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in unifyD-21667'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V13 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V14, V15) -> case V14 of {'Idris.Core.Value.NApp', E24, E25, E26} -> (fun (V16, V17, V18) -> case V17 of {'Idris.Core.Value.NMeta', E49, E50, E51} -> (fun (V19, V20, V21) -> case V15 of {'Idris.Core.Value.NApp', E70, E71, E72} -> (fun (V22, V23, V24) -> case V23 of {'Idris.Core.Value.NMeta', E91, E92, E93} -> (fun (V25, V26, V27) -> ((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('dn--un--unifyD_Unify_NF'(V28, V29, V30, V31, V32, V33, V34, V35)) end end end end end end end end, fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> ('dn--un--unifyWithLazyD_Unify_NF'(V36, V37, V38, V39, V40, V41, V42, V43)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V11))(V12)) end(E91, E92, E93)); _ -> fun (V44) -> begin (V45 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V9, V3))(V44))), case V45 of {'Idris.Prelude.Types.Left', E73} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V47) -> begin (V48 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V9, V5, V11, V44))), case V48 of {'Idris.Prelude.Types.Left', E75} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E75)); {'Idris.Prelude.Types.Right', E76} -> (fun (V50) -> begin (V51 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V9, V5, V47, V44))), case V51 of {'Idris.Prelude.Types.Left', E77} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E77)); {'Idris.Prelude.Types.Right', E78} -> (fun (V53) -> begin (V76 = begin (V54 = (('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V9, V5, V50))(V44))), case V54 of {'Idris.Prelude.Types.Left', E79} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E79)); {'Idris.Prelude.Types.Right', E80} -> (fun (V56) -> begin (V57 = (('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V9, V5, V53))(V44))), case V57 of {'Idris.Prelude.Types.Left', E81} -> (fun (V58) -> {'Idris.Prelude.Types.Left', V58} end(E81)); {'Idris.Prelude.Types.Right', E82} -> (fun (V59) -> (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> ('dn--un--unifyD_Unify_NF'(V60, V61, V62, V63, V64, V65, V66, V67)) end end end end end end end end, fun (V68) -> fun (V69) -> fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> ('dn--un--unifyWithLazyD_Unify_NF'(V68, V69, V70, V71, V72, V73, V74, V75)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V56))(V59))(V44)) end(E82)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E80)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V76 of {'Idris.Prelude.Types.Left', E83} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E83)); {'Idris.Prelude.Types.Right', E84} -> (fun (V78) -> case V78 of {'Idris.Core.Unify.MkUnifyResult', E85, E86, E87, E88} -> (fun (V79, V80, V81, V82) -> case V79 of [] -> {'Idris.Prelude.Types.Right', V78}; _ -> begin (V83 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V8, V3))(V44))), case V83 of {'Idris.Prelude.Types.Left', E89} -> (fun (V84) -> {'Idris.Prelude.Types.Left', V84} end(E89)); {'Idris.Prelude.Types.Right', E90} -> (fun (V85) -> (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> ('dn--un--unifyD_Unify_NF'(V86, V87, V88, V89, V90, V91, V92, V93)) end end end end end end end end, fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> ('dn--un--unifyWithLazyD_Unify_NF'(V94, V95, V96, V97, V98, V99, V100, V101)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V11))(V85))(V44)) end(E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E85, E86, E87, E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E84)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E78)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E76)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E70, E71, E72)); _ -> fun (V102) -> begin (V103 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V9, V3))(V102))), case V103 of {'Idris.Prelude.Types.Left', E52} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V105) -> begin (V106 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V9, V5, V11, V102))), case V106 of {'Idris.Prelude.Types.Left', E54} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V108) -> begin (V109 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V9, V5, V105, V102))), case V109 of {'Idris.Prelude.Types.Left', E56} -> (fun (V110) -> {'Idris.Prelude.Types.Left', V110} end(E56)); {'Idris.Prelude.Types.Right', E57} -> (fun (V111) -> begin (V134 = begin (V112 = (('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V9, V5, V108))(V102))), case V112 of {'Idris.Prelude.Types.Left', E58} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V114) -> begin (V115 = (('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V9, V5, V111))(V102))), case V115 of {'Idris.Prelude.Types.Left', E60} -> (fun (V116) -> {'Idris.Prelude.Types.Left', V116} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V117) -> (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V118) -> fun (V119) -> fun (V120) -> fun (V121) -> fun (V122) -> fun (V123) -> fun (V124) -> fun (V125) -> ('dn--un--unifyD_Unify_NF'(V118, V119, V120, V121, V122, V123, V124, V125)) end end end end end end end end, fun (V126) -> fun (V127) -> fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> fun (V132) -> fun (V133) -> ('dn--un--unifyWithLazyD_Unify_NF'(V126, V127, V128, V129, V130, V131, V132, V133)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V114))(V117))(V102)) end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V134 of {'Idris.Prelude.Types.Left', E62} -> (fun (V135) -> {'Idris.Prelude.Types.Left', V135} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V136) -> case V136 of {'Idris.Core.Unify.MkUnifyResult', E64, E65, E66, E67} -> (fun (V137, V138, V139, V140) -> case V137 of [] -> {'Idris.Prelude.Types.Right', V136}; _ -> begin (V141 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V8, V3))(V102))), case V141 of {'Idris.Prelude.Types.Left', E68} -> (fun (V142) -> {'Idris.Prelude.Types.Left', V142} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V143) -> (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V144) -> fun (V145) -> fun (V146) -> fun (V147) -> fun (V148) -> fun (V149) -> fun (V150) -> fun (V151) -> ('dn--un--unifyD_Unify_NF'(V144, V145, V146, V147, V148, V149, V150, V151)) end end end end end end end end, fun (V152) -> fun (V153) -> fun (V154) -> fun (V155) -> fun (V156) -> fun (V157) -> fun (V158) -> fun (V159) -> ('dn--un--unifyWithLazyD_Unify_NF'(V152, V153, V154, V155, V156, V157, V158, V159)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V11))(V143))(V102)) end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E64, E65, E66, E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E49, E50, E51)); _ -> case V15 of {'Idris.Core.Value.NApp', E27, E28, E29} -> (fun (V160, V161, V162) -> case V161 of {'Idris.Core.Value.NMeta', E30, E31, E32} -> (fun (V163, V164, V165) -> fun (V166) -> begin (V167 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V9, V4))(V166))), case V167 of {'Idris.Prelude.Types.Left', E33} -> (fun (V168) -> {'Idris.Prelude.Types.Left', V168} end(E33)); {'Idris.Prelude.Types.Right', E34} -> (fun (V169) -> begin (V170 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V9, V5, V169, V166))), case V170 of {'Idris.Prelude.Types.Left', E35} -> (fun (V171) -> {'Idris.Prelude.Types.Left', V171} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V172) -> begin (V173 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V9, V5, V12, V166))), case V173 of {'Idris.Prelude.Types.Left', E37} -> (fun (V174) -> {'Idris.Prelude.Types.Left', V174} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V175) -> begin (V198 = begin (V176 = (('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V9, V5, V175))(V166))), case V176 of {'Idris.Prelude.Types.Left', E39} -> (fun (V177) -> {'Idris.Prelude.Types.Left', V177} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V178) -> begin (V179 = (('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V9, V5, V172))(V166))), case V179 of {'Idris.Prelude.Types.Left', E41} -> (fun (V180) -> {'Idris.Prelude.Types.Left', V180} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V181) -> (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V182) -> fun (V183) -> fun (V184) -> fun (V185) -> fun (V186) -> fun (V187) -> fun (V188) -> fun (V189) -> ('dn--un--unifyD_Unify_NF'(V182, V183, V184, V185, V186, V187, V188, V189)) end end end end end end end end, fun (V190) -> fun (V191) -> fun (V192) -> fun (V193) -> fun (V194) -> fun (V195) -> fun (V196) -> fun (V197) -> ('dn--un--unifyWithLazyD_Unify_NF'(V190, V191, V192, V193, V194, V195, V196, V197)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V178))(V181))(V166)) end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V198 of {'Idris.Prelude.Types.Left', E43} -> (fun (V199) -> {'Idris.Prelude.Types.Left', V199} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V200) -> case V200 of {'Idris.Core.Unify.MkUnifyResult', E45, E46, E47, E48} -> (fun (V201, V202, V203, V204) -> case V201 of [] -> {'Idris.Prelude.Types.Right', V200}; _ -> (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V205) -> fun (V206) -> fun (V207) -> fun (V208) -> fun (V209) -> fun (V210) -> fun (V211) -> fun (V212) -> ('dn--un--unifyD_Unify_NF'(V205, V206, V207, V208, V209, V210, V211, V212)) end end end end end end end end, fun (V213) -> fun (V214) -> fun (V215) -> fun (V216) -> fun (V217) -> fun (V218) -> fun (V219) -> fun (V220) -> ('dn--un--unifyWithLazyD_Unify_NF'(V213, V214, V215, V216, V217, V218, V219, V220)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V11))(V12))(V166)) end end(E45, E46, E47, E48)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E30, E31, E32)); _ -> ((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V221) -> fun (V222) -> fun (V223) -> fun (V224) -> fun (V225) -> fun (V226) -> fun (V227) -> fun (V228) -> ('dn--un--unifyD_Unify_NF'(V221, V222, V223, V224, V225, V226, V227, V228)) end end end end end end end end, fun (V229) -> fun (V230) -> fun (V231) -> fun (V232) -> fun (V233) -> fun (V234) -> fun (V235) -> fun (V236) -> ('dn--un--unifyWithLazyD_Unify_NF'(V229, V230, V231, V232, V233, V234, V235, V236)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V11))(V12)) end end(E27, E28, E29)); _ -> ((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V237) -> fun (V238) -> fun (V239) -> fun (V240) -> fun (V241) -> fun (V242) -> fun (V243) -> fun (V244) -> ('dn--un--unifyD_Unify_NF'(V237, V238, V239, V240, V241, V242, V243, V244)) end end end end end end end end, fun (V245) -> fun (V246) -> fun (V247) -> fun (V248) -> fun (V249) -> fun (V250) -> fun (V251) -> fun (V252) -> ('dn--un--unifyWithLazyD_Unify_NF'(V245, V246, V247, V248, V249, V250, V251, V252)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V11))(V12)) end end end(E24, E25, E26)); _ -> case V15 of {'Idris.Core.Value.NApp', E2, E3, E4} -> (fun (V253, V254, V255) -> case V254 of {'Idris.Core.Value.NMeta', E5, E6, E7} -> (fun (V256, V257, V258) -> fun (V259) -> begin (V260 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V9, V4))(V259))), case V260 of {'Idris.Prelude.Types.Left', E8} -> (fun (V261) -> {'Idris.Prelude.Types.Left', V261} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V262) -> begin (V263 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V9, V5, V262, V259))), case V263 of {'Idris.Prelude.Types.Left', E10} -> (fun (V264) -> {'Idris.Prelude.Types.Left', V264} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V265) -> begin (V266 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V9, V5, V12, V259))), case V266 of {'Idris.Prelude.Types.Left', E12} -> (fun (V267) -> {'Idris.Prelude.Types.Left', V267} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V268) -> begin (V291 = begin (V269 = (('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V9, V5, V268))(V259))), case V269 of {'Idris.Prelude.Types.Left', E14} -> (fun (V270) -> {'Idris.Prelude.Types.Left', V270} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V271) -> begin (V272 = (('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V9, V5, V265))(V259))), case V272 of {'Idris.Prelude.Types.Left', E16} -> (fun (V273) -> {'Idris.Prelude.Types.Left', V273} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V274) -> (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V275) -> fun (V276) -> fun (V277) -> fun (V278) -> fun (V279) -> fun (V280) -> fun (V281) -> fun (V282) -> ('dn--un--unifyD_Unify_NF'(V275, V276, V277, V278, V279, V280, V281, V282)) end end end end end end end end, fun (V283) -> fun (V284) -> fun (V285) -> fun (V286) -> fun (V287) -> fun (V288) -> fun (V289) -> fun (V290) -> ('dn--un--unifyWithLazyD_Unify_NF'(V283, V284, V285, V286, V287, V288, V289, V290)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V271))(V274))(V259)) end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V291 of {'Idris.Prelude.Types.Left', E18} -> (fun (V292) -> {'Idris.Prelude.Types.Left', V292} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V293) -> case V293 of {'Idris.Core.Unify.MkUnifyResult', E20, E21, E22, E23} -> (fun (V294, V295, V296, V297) -> case V294 of [] -> {'Idris.Prelude.Types.Right', V293}; _ -> (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V298) -> fun (V299) -> fun (V300) -> fun (V301) -> fun (V302) -> fun (V303) -> fun (V304) -> fun (V305) -> ('dn--un--unifyD_Unify_NF'(V298, V299, V300, V301, V302, V303, V304, V305)) end end end end end end end end, fun (V306) -> fun (V307) -> fun (V308) -> fun (V309) -> fun (V310) -> fun (V311) -> fun (V312) -> fun (V313) -> ('dn--un--unifyWithLazyD_Unify_NF'(V306, V307, V308, V309, V310, V311, V312, V313)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V11))(V12))(V259)) end end(E20, E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E5, E6, E7)); _ -> ((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V314) -> fun (V315) -> fun (V316) -> fun (V317) -> fun (V318) -> fun (V319) -> fun (V320) -> fun (V321) -> ('dn--un--unifyD_Unify_NF'(V314, V315, V316, V317, V318, V319, V320, V321)) end end end end end end end end, fun (V322) -> fun (V323) -> fun (V324) -> fun (V325) -> fun (V326) -> fun (V327) -> fun (V328) -> fun (V329) -> ('dn--un--unifyWithLazyD_Unify_NF'(V322, V323, V324, V325, V326, V327, V328, V329)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V11))(V12)) end end(E2, E3, E4)); _ -> ((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V330) -> fun (V331) -> fun (V332) -> fun (V333) -> fun (V334) -> fun (V335) -> fun (V336) -> fun (V337) -> ('dn--un--unifyD_Unify_NF'(V330, V331, V332, V333, V334, V335, V336, V337)) end end end end end end end end, fun (V338) -> fun (V339) -> fun (V340) -> fun (V341) -> fun (V342) -> fun (V343) -> fun (V344) -> fun (V345) -> ('dn--un--unifyWithLazyD_Unify_NF'(V338, V339, V340, V341, V342, V343, V344, V345)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V11))(V12)) end end end(E0, E1)); _ -> ((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V346) -> fun (V347) -> fun (V348) -> fun (V349) -> fun (V350) -> fun (V351) -> fun (V352) -> fun (V353) -> ('dn--un--unifyD_Unify_NF'(V346, V347, V348, V349, V350, V351, V352, V353)) end end end end end end end end, fun (V354) -> fun (V355) -> fun (V356) -> fun (V357) -> fun (V358) -> fun (V359) -> fun (V360) -> fun (V361) -> ('dn--un--unifyWithLazyD_Unify_NF'(V354, V355, V356, V357, V358, V359, V360, V361)) end end end end end end end end}, V0, V1, V2, V7, V6, V5))(V11))(V12)) end.
'case--case block in unifyBothBinders-19009'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27) -> case V26 of [] -> begin (V28 = (((V12(V20))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), V15, {'Idris.Core.TT.Ref', V16, {'Idris.Core.TT.Bound'}, V24}))))(V27))), case V28 of {'Idris.Prelude.Types.Left', E16} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V30) -> begin (V31 = (((V9(V20))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), V15, {'Idris.Core.TT.Ref', V16, {'Idris.Core.TT.Bound'}, V24}))))(V27))), case V31 of {'Idris.Prelude.Types.Left', E18} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V33) -> begin (V34 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V19, V0, V21, V15, V30, V27))), case V34 of {'Idris.Prelude.Types.Left', E20} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V36) -> begin (V37 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V19, V0, V21, V15, V33, V27))), case V37 of {'Idris.Prelude.Types.Left', E22} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V39) -> (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> ('dn--un--unifyD_Unify_Term'(V40, V41, V42, V43, V44, V45, V46, V47, V48)) end end end end end end end end end, fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> ('dn--un--unifyWithLazyD_Unify_Term'(V49, V50, V51, V52, V53, V54, V55, V56, V57)) end end end end end end end end end}, [V13 | V0], V19, V18, ('un--lower'(V17)), V16, V25))(('Idris.Idris2.Core.TT':'un--refsToLocals'({'Idris.Core.TT.Bounds.Add', V13, V24, {'Idris.Core.TT.Bounds.None'}}, V36))))(('Idris.Idris2.Core.TT':'un--refsToLocals'({'Idris.Core.TT.Bounds.Add', V13, V24, {'Idris.Core.TT.Bounds.None'}}, V39))))(V27)) end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> begin (V58 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V19, V0, V21, V15, V1, V27))), case V58 of {'Idris.Prelude.Types.Left', E0} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V60) -> begin (V61 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V19, V0, V21, V15, V5, V27))), case V61 of {'Idris.Prelude.Types.Left', E2} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V63) -> begin (V68 = (('Idris.Idris2.Core.UnifyState':'un--newConstant'(V0, V18, V19, V16, ('Idris.Idris2.Algebra.Semiring':'un--erased'({'Idris.Algebra.Semiring.dn--un--__mkSemiring', fun (V64) -> fun (V65) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|+|_Semiring_ZeroOneOmega'(V64, V65)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--plusNeutral_Semiring_ZeroOneOmega'()), fun (V66) -> fun (V67) -> ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--|*|_Semiring_ZeroOneOmega'(V66, V67)) end end, ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--timesNeutral_Semiring_ZeroOneOmega'())})), V15, {'Idris.Core.TT.Bind', V14, V13, {'Idris.Core.TT.Lam', V8, V7, {'Idris.Core.TT.Explicit'}, V60}, {'Idris.Core.TT.Local', V14, {'Idris.Prelude.Types.Nothing'}, 0}}, {'Idris.Core.TT.Bind', V14, V13, {'Idris.Core.TT.Pi', V8, V7, {'Idris.Core.TT.Explicit'}, V60}, ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Term'(V63))}, V26))(V27))), case V68 of {'Idris.Prelude.Types.Left', E4} -> (fun (V69) -> {'Idris.Prelude.Types.Left', V69} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V70) -> begin (V71 = (((V12(V20))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), V15, {'Idris.Core.TT.Ref', V16, {'Idris.Core.TT.Bound'}, V24}))))(V27))), case V71 of {'Idris.Prelude.Types.Left', E6} -> (fun (V72) -> {'Idris.Prelude.Types.Left', V72} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V73) -> begin (V74 = (((V9(V20))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), V15, {'Idris.Core.TT.App', V16, V70, {'Idris.Core.TT.Ref', V16, {'Idris.Core.TT.Bound'}, V24}}))))(V27))), case V74 of {'Idris.Prelude.Types.Left', E8} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V76) -> begin (V77 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V19, V0, V21, V15, V73, V27))), case V77 of {'Idris.Prelude.Types.Left', E10} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V79) -> begin (V80 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V19, V0, V21, V15, V76, V27))), case V80 of {'Idris.Prelude.Types.Left', E12} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V82) -> begin (V101 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> ('dn--un--unifyD_Unify_Term'(V83, V84, V85, V86, V87, V88, V89, V90, V91)) end end end end end end end end end, fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> ('dn--un--unifyWithLazyD_Unify_Term'(V92, V93, V94, V95, V96, V97, V98, V99, V100)) end end end end end end end end end}, [V13 | V0], V19, V18, ('un--lower'(V17)), V16, V25))(('Idris.Idris2.Core.TT':'un--refsToLocals'({'Idris.Core.TT.Bounds.Add', V13, V24, {'Idris.Core.TT.Bounds.None'}}, V79))))(('Idris.Idris2.Core.TT':'un--refsToLocals'({'Idris.Core.TT.Bounds.Add', V13, V24, {'Idris.Core.TT.Bounds.None'}}, V82))))(V27))), case V101 of {'Idris.Prelude.Types.Left', E14} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V103) -> {'Idris.Prelude.Types.Right', ('un--union'(V23, V103))} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'case--case block in case block in unifyHole-16459'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> case V22 of {'Idris.Core.Context.Context.Hole', E0, E1} -> (fun (V23, V24) -> fun (V25) -> begin (V26 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V12, V0, V14, V7, V1, V25))), case V26 of {'Idris.Prelude.Types.Left', E2} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V28) -> begin (V76 = case ('un--tooBig'(0, case V13 of {'Idris.Core.Context.MkDefs', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33} -> (fun (V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58) -> case V33 of {'Idris.Core.Options.MkOptions', E34, E35, E36, E37, E38, E39, E40, E41, E42, E43} -> (fun (V59, V60, V61, V62, V63, V64, V65, V66, V67, V68) -> case V62 of {'Idris.Core.Options.MkElabDirectives', E44, E45, E46, E47, E48, E49, E50} -> (fun (V69, V70, V71, V72, V73, V74, V75) -> V74 end(E44, E45, E46, E47, E48, E49, E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E34, E35, E36, E37, E38, E39, E40, E41, E42, E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, [], V28)) of 1 -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V12, V0, V13, V7, V1, V25)); 0 -> {'Idris.Prelude.Types.Right', V28}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V76 of {'Idris.Prelude.Types.Left', E51} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V78) -> begin (V79 = ('un--occursCheck'(V0, V12, V8, V7, V9, V5, V78, V25))), case V79 of {'Idris.Prelude.Types.Left', E53} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E53)); {'Idris.Prelude.Types.Right', E54} -> (fun (V81) -> case V81 of {'Idris.Prelude.Types.Just', E55} -> (fun (V82) -> begin (V83 = {'Idris.Prelude.Types.Just', V82}), case ('Idris.Idris2.Core.TT':'un--shrinkTerm'(V82, V18)) of {'Idris.Prelude.Types.Just', E56} -> (fun (V84) -> ('nested--15611-16704--in--un--solveOrElsePostpone'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V23, V24, V28, V78, V82, V83, V84, V25)) end(E56)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V85 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V12, V0, V13, V7, V1, V25))), case V85 of {'Idris.Prelude.Types.Left', E57} -> (fun (V86) -> {'Idris.Prelude.Types.Left', V86} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V87) -> case ('Idris.Idris2.Core.TT':'un--shrinkTerm'(V87, V18)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('un--postponeS'(V0, V12, V11, V10, V8, V9, <<"Can\x{27}t shrink"/utf8>>, V7, {'Idris.Core.Value.NApp', V8, {'Idris.Core.Value.NMeta', V5, V4, V3}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V88) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V88} end, V2))}, V1, V25)) end()); {'Idris.Prelude.Types.Just', E59} -> (fun (V89) -> ('nested--15611-16704--in--un--solveOrElsePostpone'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V23, V24, V28, V78, V82, V83, V89, V25)) end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E55)); _ -> ('un--postponeS'(V0, V12, V11, V10, V8, V9, <<"Occurs check failed"/utf8>>, V7, {'Idris.Core.Value.NApp', V8, {'Idris.Core.Value.NMeta', V5, V4, V3}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V90) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V90} end, V2))}, V1, V25)) end end(E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1)); _ -> fun (V91) -> ('un--postponeS'(V0, V12, V11, V10, V8, V9, <<"Delayed hole"/utf8>>, V7, {'Idris.Core.Value.NApp', V8, {'Idris.Core.Value.NMeta', V5, V4, V3}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V92) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V92} end, V2))}, V1, V91)) end end.
'case--headsConvert-14412'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V9, V10) -> fun (V11) -> case V9 of [E2 | E3] -> (fun (V12, V13) -> case V10 of [E4 | E5] -> (fun (V14, V15) -> begin (V16 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V7, <<"unify.head"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Unifying head"/utf8>> end, V3, V12, V11))), case V16 of {'Idris.Prelude.Types.Left', E6} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V18) -> begin (V19 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V7, <<"unify.head"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<".........with"/utf8>> end, V3, V14, V11))), case V19 of {'Idris.Prelude.Types.Left', E8} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V21) -> begin (V38 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('dn--un--unifyD_Unify_NF'(V22, V23, V24, V25, V26, V27, V28, V29)) end end end end end end end end, fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('dn--un--unifyWithLazyD_Unify_NF'(V30, V31, V32, V33, V34, V35, V36, V37)) end end end end end end end end}, V0, V7, V6, V5, V4, V3))(V12))(V14))(V11))), case V38 of {'Idris.Prelude.Types.Left', E10} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V40) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.List':'un--isNil'(case V40 of {'Idris.Core.Unify.MkUnifyResult', E12, E13, E14, E15} -> (fun (V41, V42, V43, V44) -> V41 end(E12, E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5)); _ -> {'Idris.Prelude.Types.Right', 0} end end(E2, E3)); _ -> {'Idris.Prelude.Types.Right', 0} end end end(E0, E1)); _ -> fun (V45) -> {'Idris.Prelude.Types.Right', 0} end end.
'case--occursCheck-11279'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V8 of 0 -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V1}}; _ -> begin (V11 = begin (V10 = ('erlang':'get'(V6))), {'Idris.Prelude.Types.Right', V10} end), case V11 of {'Idris.Prelude.Types.Left', E0} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V13) -> begin (V14 = ('Idris.Idris2.Core.Normalise':'un--normalise'(V6, V0, V13, V4, V1, V9))), case V14 of {'Idris.Prelude.Types.Left', E2} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V16) -> begin (V17 = (('un--getMetaNames'(V6, V16))(V9))), case V17 of {'Idris.Prelude.Types.Left', E4} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V19) -> case ('Idris.Idris2.Prelude.Types':'un--elem'({'Idris.Prelude.EqOrd.MkEq', fun (V20) -> fun (V21) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V20, V21)) end end, fun (V22) -> fun (V23) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V22, V23)) end end}, V2, V19)) of 1 -> begin (V25 = (('nested--9202-11060--in--un--failOnStrongRigid'(V0, V1, V2, V3, V4, V5, V6, 0, fun (V24) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.CyclicMeta', V0, V5, V4, V2, V16}, V24)) end, V16))(V9))), case V25 of {'Idris.Prelude.Types.Left', E6} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V27) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V16}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'case--occursCheck,failOnStrongRigid-11141'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V10 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V11, V12) -> case V12 of [] -> fun (V13) -> {'Idris.Prelude.Types.Right', 0} end; _ -> fun (V14) -> case V11 of {'Idris.Core.TT.Ref', E2, E3, E4} -> (fun (V15, V16, V17) -> case V16 of {'Idris.Core.TT.Func'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); _ -> ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V18) -> ('nested--9202-11060--in--un--failOnStrongRigid'(V0, V1, V2, V3, V4, V5, V6, 1, V8, V18)) end, V12, V14)) end end(E2, E3, E4)); _ -> ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V19) -> ('nested--9202-11060--in--un--failOnStrongRigid'(V0, V1, V2, V3, V4, V5, V6, V9, V8, V19)) end, V12, V14)) end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in patternEnvTm-11016'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V9, V10) -> {'Idris.Prelude.Types.Just', {'Idris.Builtin.DPair.MkDPair', V9, {'Idris.Builtin.MkPair', ('nested--8987-10878--in--un--updateVars'(V0, V1, V2, V3, V4, V7, V10)), V10}}} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--patternEnvTm-10977'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Nothing'} end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V8) -> ('case--case block in patternEnvTm-11016'(V0, V1, V2, V3, V4, V5, V6, V8, ('un--toSubVars'(V0, V8)))) end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--case block in patternEnv-10745'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Builtin.DPair.MkDPair', E0, E1} -> (fun (V10, V11) -> {'Idris.Prelude.Types.Just', {'Idris.Builtin.DPair.MkDPair', V10, {'Idris.Builtin.MkPair', ('nested--8655-10592--in--un--updateVars'(V0, V1, V2, V3, V4, V8, V11)), V11}}} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--patternEnv-10702'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Nothing'} end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V9) -> ('case--case block in patternEnv-10745'(V0, V1, V2, V3, V4, V5, V6, V7, V9, ('un--toSubVars'(V0, V9)))) end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'case--chaseMetas-9733'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Prelude.Types.Just', E42} -> (fun (V5) -> ('un--chaseMetas'(V3, V1, V2)) end(E42)); _ -> fun (V6) -> begin (V8 = begin (V7 = ('erlang':'get'(V3))), {'Idris.Prelude.Types.Right', V7} end), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> begin (V41 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V0, case V10 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40) -> V11 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6))), case V41 of {'Idris.Prelude.Types.Left', E32} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V43) -> case V43 of {'Idris.Prelude.Types.Just', E34} -> (fun (V44) -> case V44 of {'Idris.Core.Context.Context.PMDef', E35, E36, E37, E38, E39} -> (fun (V45, V46, V47, V48, V49) -> case V47 of {'Idris.Core.CaseTree.STerm', E40, E41} -> (fun (V50, V51) -> begin (V52 = ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'(('Idris.Idris2.Core.TT':'un--getMetas'(V51))))), (('un--chaseMetas'(V3, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V52, V1)), ('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V0, 0, V2))))(V6)) end end(E40, E41)); _ -> (('un--chaseMetas'(V3, V1, ('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V0, 0, V2))))(V6)) end end(E35, E36, E37, E38, E39)); _ -> (('un--chaseMetas'(V3, V1, ('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V0, 0, V2))))(V6)) end end(E34)); _ -> (('un--chaseMetas'(V3, V1, ('Idris.Idris2.Libraries.Data.NameMap':'un--insert'(V0, 0, V2))))(V6)) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'nested--8987-10878--in--un--updateVars'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of [] -> []; [E0 | E1] -> (fun (V7, V8) -> case ('Idris.Idris2.Core.TT':'un--subElem'(V7, V6)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('nested--8987-10878--in--un--updateVars'(V0, V1, V2, V3, V4, V8, V6)) end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V9) -> [V9 | ('nested--8987-10878--in--un--updateVars'(V0, V1, V2, V3, V4, V8, V6))] end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--8655-10592--in--un--updateVars'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of [] -> []; [E0 | E1] -> (fun (V7, V8) -> case ('Idris.Idris2.Core.TT':'un--subElem'(V7, V6)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('nested--8655-10592--in--un--updateVars'(V0, V1, V2, V3, V4, V8, V6)) end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V9) -> [V9 | ('nested--8655-10592--in--un--updateVars'(V0, V1, V2, V3, V4, V8, V6))] end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9834-12287--in--un--updateIVarsPi'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> case V24 of {'Idris.Core.TT.Explicit'} -> (fun () -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.Explicit'}} end()); {'Idris.Core.TT.Implicit'} -> (fun () -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.Implicit'}} end()); {'Idris.Core.TT.AutoImplicit'} -> (fun () -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.AutoImplicit'}} end()); {'Idris.Core.TT.DefImplicit', E0} -> (fun (V25) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V25)), fun (V26) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.DefImplicit', V26}} end)) end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9834-12288--in--un--updateIVarsB'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> case V24 of {'Idris.Core.TT.Lam', E0, E1, E2, E3} -> (fun (V25, V26, V27, V28) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9834-12287--in--un--updateIVarsPi'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V27)), fun (V29) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V28)), fun (V30) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.Lam', V25, V26, V29, V30}} end)) end)) end(E0, E1, E2, E3)); {'Idris.Core.TT.Let', E4, E5, E6, E7} -> (fun (V31, V32, V33, V34) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V33)), fun (V35) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V34)), fun (V36) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.Let', V31, V32, V35, V36}} end)) end)) end(E4, E5, E6, E7)); {'Idris.Core.TT.Pi', E8, E9, E10, E11} -> (fun (V37, V38, V39, V40) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9834-12287--in--un--updateIVarsPi'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V39)), fun (V41) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V40)), fun (V42) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.Pi', V37, V38, V41, V42}} end)) end)) end(E8, E9, E10, E11)); {'Idris.Core.TT.PVar', E12, E13, E14, E15} -> (fun (V43, V44, V45, V46) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9834-12287--in--un--updateIVarsPi'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V45)), fun (V47) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V46)), fun (V48) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.PVar', V43, V44, V47, V48}} end)) end)) end(E12, E13, E14, E15)); {'Idris.Core.TT.PLet', E16, E17, E18, E19} -> (fun (V49, V50, V51, V52) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V51)), fun (V53) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V52)), fun (V54) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.PLet', V49, V50, V53, V54}} end)) end)) end(E16, E17, E18, E19)); {'Idris.Core.TT.PVTy', E20, E21, E22} -> (fun (V55, V56, V57) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V21, V22, V23, V57)), fun (V58) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.PVTy', V55, V56, V58}} end)) end(E20, E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Idris.Core.TT.Local', E0, E1, E2} -> (fun (V18, V19, V20) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9807-11610--in--un--updateIVar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V20, V16)), fun (V21) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.Local', V18, V19, V21}} end)) end(E0, E1, E2)); {'Idris.Core.TT.Ref', E3, E4, E5} -> (fun (V22, V23, V24) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'({'Idris.Core.TT.Ref', V22, V23, V24})) end(E3, E4, E5)); {'Idris.Core.TT.Meta', E6, E7, E8, E9} -> (fun (V25, V26, V27, V28) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('Idris.Idris2.Prelude.Types':'dn--un--traverse_Traversable_List'({'Idris.Prelude.Interfaces.MkApplicative', fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V31, V32)) end end end end, fun (V33) -> fun (V34) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'(V34)) end end, fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.Types':'dn--un--<*>_Applicative_Maybe'(V37, V38)) end end end end}, fun (V39) -> ('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V39)) end, V28)), fun (V40) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'({'Idris.Core.TT.Meta', V25, V26, V27, V40})) end)) end(E6, E7, E8, E9)); {'Idris.Core.TT.Bind', E10, E11, E12, E13} -> (fun (V41, V42, V43, V44) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9834-12288--in--un--updateIVarsB'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V15, V42, V44, V43, V41, V14, V16, V14, V15, V16, V43)), fun (V45) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, [V42 | V14], [V42 | V15], {'Idris.Core.Unify.ICons', {'Idris.Prelude.Types.Just', 0}, ('dn--un--weaken_Weaken_(IVars $vs)'(V16))}, V44)), fun (V46) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.Bind', V41, V42, V45, V46}} end)) end)) end(E10, E11, E12, E13)); {'Idris.Core.TT.App', E14, E15, E16} -> (fun (V47, V48, V49) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V48)), fun (V50) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V49)), fun (V51) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.App', V47, V50, V51}} end)) end)) end(E14, E15, E16)); {'Idris.Core.TT.As', E17, E18, E19, E20} -> (fun (V52, V53, V54, V55) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V54)), fun (V56) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V55)), fun (V57) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.As', V52, V53, V56, V57}} end)) end)) end(E17, E18, E19, E20)); {'Idris.Core.TT.TDelayed', E21, E22, E23} -> (fun (V58, V59, V60) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V60)), fun (V61) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.TDelayed', V58, V59, V61}} end)) end(E21, E22, E23)); {'Idris.Core.TT.TDelay', E24, E25, E26, E27} -> (fun (V62, V63, V64, V65) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V64)), fun (V66) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V65)), fun (V67) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.TDelay', V62, V63, V66, V67}} end)) end)) end(E24, E25, E26, E27)); {'Idris.Core.TT.TForce', E28, E29, E30} -> (fun (V68, V69, V70) -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V70)), fun (V71) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.TForce', V68, V69, V71}} end)) end(E28, E29, E30)); {'Idris.Core.TT.PrimVal', E31, E32} -> (fun (V72, V73) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.PrimVal', V72, V73}} end(E31, E32)); {'Idris.Core.TT.Erased', E33, E34} -> (fun (V74, V75) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.Erased', V74, V75}} end(E33, E34)); {'Idris.Core.TT.TType', E35} -> (fun (V76) -> {'Idris.Prelude.Types.Just', {'Idris.Core.TT.TType', V76}} end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9807-11610--in--un--updateIVar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> case V15 of {'Idris.Core.Unify.ICons', E0, E1} -> (fun (V16, V17) -> case V16 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9807-11610--in--un--updateIVar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V17)), fun (V18) -> {'Idris.Prelude.Types.Just', (1 + V18)} end)) end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V19) -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V14, V19)) of 1 -> {'Idris.Prelude.Types.Just', 0}; 0 -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('nested--9807-11610--in--un--updateIVar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V17)), fun (V20) -> {'Idris.Prelude.Types.Just', (1 + V20)} end)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E0, E1)); _ -> {'Idris.Prelude.Types.Nothing'} end.
'nested--12355-13881--in--un--tooBigArgs'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of 0 -> 1; _ -> case V6 of [] -> 0; _ -> case V5 of 0 -> ('erlang':'throw'("Nat case not covered")); _ -> begin (V7 = (V5 - 1)), case V6 of [E0 | E1] -> (fun (V8, V9) -> case ('un--tooBig'(V4, case V4 of 1 -> V7; 0 -> (1 + V7); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, [], V8)) of 1 -> 1; 0 -> ('nested--12355-13881--in--un--tooBigArgs'(V0, V1, V2, V3, V4, V7, V9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end.
'nested--15611-16704--in--un--solveOrElsePostpone'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29) -> begin (V30 = ('un--solveHole'(V12, V11, V16, V0, V6, V9, V7, V5, V4, V3, V2, V17, V18, V26, V28, V1, V29))), case V30 of {'Idris.Prelude.Types.Left', E0} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V32) -> (('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V33) -> fun (V34) -> ('Idris.Idris2.Data.Maybe':'un--fromMaybe'(V33, V34)) end end, ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V37, V38)) end end end end, fun (V39) -> fun (V40) -> {'Idris.Prelude.Types.Right', V39} end end, V32)), fun () -> fun (V41) -> ('un--postponeS'(V0, V12, V11, V10, V8, V9, <<"Can\x{27}t instantiate"/utf8>>, V7, {'Idris.Core.Value.NApp', V8, {'Idris.Core.Value.NMeta', V5, V4, V3}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V42) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V42} end, V2))}, V1, V41)) end end))(V29)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--12588-15581--in--un--solutionHeadSame'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of {'Idris.Core.Value.NApp', E0, E1, E2} -> (fun (V17, V18, V19) -> case V18 of {'Idris.Core.Value.NMeta', E3, E4, E5} -> (fun (V20, V21, V22) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V21, V9)) end(E3, E4, E5)); _ -> 0 end end(E0, E1, E2)); _ -> 0 end.
'nested--12608-17997--in--un--pv'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> case V16 of {'Idris.Core.Name.PV', E0, E1} -> (fun (V17, V18) -> 1 end(E0, E1)); _ -> 0 end.
'nested--9807-11608--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15) -> case V14 of {'Idris.Core.TT.App', E0, E1, E2} -> (fun (V16, V17, V18) -> case V15 of 0 -> 0; _ -> begin (V19 = (V15 - 1)), case ('nested--9807-11608--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V17, V19)) of 1 -> ('nested--9807-11608--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V18, V19)); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); {'Idris.Core.TT.Bind', E3, E4, E5, E6} -> (fun (V20, V21, V22, V23) -> case V15 of 0 -> 0; _ -> begin (V24 = (V15 - 1)), case ('nested--9807-11608--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, ('Idris.Idris2.Core.TT':'un--binderType'(V22)), V24)) of 1 -> ('nested--9807-11608--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V23, V24)); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3, E4, E5, E6)); {'Idris.Core.TT.Meta', E7, E8, E9, E10} -> (fun (V25, V26, V27, V28) -> 0 end(E7, E8, E9, E10)); {'Idris.Core.TT.TDelayed', E11, E12, E13} -> (fun (V29, V30, V31) -> ('nested--9807-11608--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V31, V15)) end(E11, E12, E13)); {'Idris.Core.TT.TDelay', E14, E15, E16, E17} -> (fun (V32, V33, V34, V35) -> case ('nested--9807-11608--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V34, V15)) of 1 -> ('nested--9807-11608--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V35, V15)); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E14, E15, E16, E17)); {'Idris.Core.TT.TForce', E18, E19, E20} -> (fun (V36, V37, V38) -> ('nested--9807-11608--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V38, V15)) end(E18, E19, E20)); {'Idris.Core.TT.As', E21, E22, E23, E24} -> (fun (V39, V40, V41, V42) -> case ('nested--9807-11608--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V41, V15)) of 1 -> ('nested--9807-11608--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V42, V15)); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E21, E22, E23, E24)); {'Idris.Core.TT.Local', E25, E26, E27} -> (fun (V43, V44, V45) -> 1 end(E25, E26, E27)); {'Idris.Core.TT.Ref', E28, E29, E30} -> (fun (V46, V47, V48) -> 1 end(E28, E29, E30)); {'Idris.Core.TT.PrimVal', E31, E32} -> (fun (V49, V50) -> 1 end(E31, E32)); {'Idris.Core.TT.TType', E33} -> (fun (V51) -> 1 end(E33)); _ -> 0 end.
'nested--9807-11612--in--un--mkDef'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19) -> case V16 of [E16 | E17] -> (fun (V20, V21) -> case V19 of {'Idris.Core.TT.Bind', E34, E35, E36, E37} -> (fun (V22, V23, V24, V25) -> case V24 of {'Idris.Core.TT.Pi', E54, E55, E56, E57} -> (fun (V26, V27, V28, V29) -> fun (V30) -> begin (V31 = (('nested--9807-11612--in--un--mkDef'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, [V23 | V14], V15, V21, {'Idris.Core.Unify.ICons', {'Idris.Prelude.Types.Just', V20}, V17}, V18, V25))(V30))), case V31 of {'Idris.Prelude.Types.Left', E58} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V33) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Interfaces':'un--<$>'(fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_Maybe'(V36, V37)) end end end end, fun (V38) -> {'Idris.Core.TT.Bind', V22, V23, {'Idris.Core.TT.Lam', V26, V27, {'Idris.Core.TT.Explicit'}, {'Idris.Core.TT.Erased', V22, 0}}, V38} end, V33))} end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E54, E55, E56, E57)); _ -> case V19 of {'Idris.Core.TT.Bind', E39, E40, E41, E42} -> (fun (V39, V40, V41, V42) -> case V41 of {'Idris.Core.TT.Let', E44, E45, E46, E47} -> (fun (V43, V44, V45, V46) -> fun (V47) -> begin (V48 = (('nested--9807-11612--in--un--mkDef'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, [V40 | V14], V15, V16, {'Idris.Core.Unify.ICons', {'Idris.Prelude.Types.Nothing'}, V17}, V18, V42))(V47))), case V48 of {'Idris.Prelude.Types.Left', E48} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V50) -> (('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V51) -> fun (V52) -> fun (V53) -> case V52 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E50} -> (fun (V54) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V55) -> case V55 of {'Idris.Prelude.Types.Left', E51} -> (fun (V56) -> {'Idris.Prelude.Types.Left', V56} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V57) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V57}} end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, (V51(V54)), V53)) end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V50, fun (V58) -> begin (V59 = {'Idris.Core.TT.Let', V43, V44, V45, V46}), fun (V60) -> case ('Idris.Idris2.Core.TT':'un--shrinkTerm'(V58, {'Idris.Core.TT.DropCons', {'Idris.Core.TT.SubRefl'}})) of {'Idris.Prelude.Types.Just', E53} -> (fun (V61) -> {'Idris.Prelude.Types.Right', V61} end(E53)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Bind', V39, V40, V59, V58}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end))(V47)) end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E44, E45, E46, E47)); _ -> case V16 of [] -> fun (V62) -> case ('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V17, V18)) of {'Idris.Prelude.Types.Just', E43} -> (fun (V63) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V63}} end(E43)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('un--ufail'(V11, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t make solution for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V64) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V65) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V66) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V66)) end, fun (V67) -> fun (V68) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V67, V68)) end end}, V65)) end, fun (V69) -> fun (V70) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V71) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V71)) end, fun (V72) -> fun (V73) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V72, V73)) end end}, V69, V70)) end end}, V64)) end, fun (V74) -> fun (V75) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V76) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V77) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V77)) end, fun (V78) -> fun (V79) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V78, V79)) end end}, V76)) end, fun (V80) -> fun (V81) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V82) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V82)) end, fun (V83) -> fun (V84) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V83, V84)) end end}, V80, V81)) end end}, V74, V75)) end end}, {'Idris.Prelude.Show.MkShow', fun (V85) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V15, V85)) end, fun (V86) -> fun (V87) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V15, V86, V87)) end end}}, {'Idris.Builtin.MkPair', ('un--getIVars'(V17)), V18})))))))), V62)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> fun (V88) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end end(E39, E40, E41, E42)); _ -> case V16 of [] -> fun (V89) -> case ('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V17, V18)) of {'Idris.Prelude.Types.Just', E38} -> (fun (V90) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V90}} end(E38)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('un--ufail'(V11, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t make solution for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V91) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V92) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V93) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V93)) end, fun (V94) -> fun (V95) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V94, V95)) end end}, V92)) end, fun (V96) -> fun (V97) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V98) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V98)) end, fun (V99) -> fun (V100) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V99, V100)) end end}, V96, V97)) end end}, V91)) end, fun (V101) -> fun (V102) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V103) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V104) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V104)) end, fun (V105) -> fun (V106) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V105, V106)) end end}, V103)) end, fun (V107) -> fun (V108) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V109) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V109)) end, fun (V110) -> fun (V111) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V110, V111)) end end}, V107, V108)) end end}, V101, V102)) end end}, {'Idris.Prelude.Show.MkShow', fun (V112) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V15, V112)) end, fun (V113) -> fun (V114) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V15, V113, V114)) end end}}, {'Idris.Builtin.MkPair', ('un--getIVars'(V17)), V18})))))))), V89)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> fun (V115) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end end end(E34, E35, E36, E37)); _ -> case V19 of {'Idris.Core.TT.Bind', E19, E20, E21, E22} -> (fun (V116, V117, V118, V119) -> case V118 of {'Idris.Core.TT.Let', E24, E25, E26, E27} -> (fun (V120, V121, V122, V123) -> fun (V124) -> begin (V125 = (('nested--9807-11612--in--un--mkDef'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, [V117 | V14], V15, V16, {'Idris.Core.Unify.ICons', {'Idris.Prelude.Types.Nothing'}, V17}, V18, V119))(V124))), case V125 of {'Idris.Prelude.Types.Left', E28} -> (fun (V126) -> {'Idris.Prelude.Types.Left', V126} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V127) -> (('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V128) -> fun (V129) -> fun (V130) -> case V129 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E30} -> (fun (V131) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V132) -> case V132 of {'Idris.Prelude.Types.Left', E31} -> (fun (V133) -> {'Idris.Prelude.Types.Left', V133} end(E31)); {'Idris.Prelude.Types.Right', E32} -> (fun (V134) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V134}} end(E32)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, (V128(V131)), V130)) end(E30)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V127, fun (V135) -> begin (V136 = {'Idris.Core.TT.Let', V120, V121, V122, V123}), fun (V137) -> case ('Idris.Idris2.Core.TT':'un--shrinkTerm'(V135, {'Idris.Core.TT.DropCons', {'Idris.Core.TT.SubRefl'}})) of {'Idris.Prelude.Types.Just', E33} -> (fun (V138) -> {'Idris.Prelude.Types.Right', V138} end(E33)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Bind', V116, V117, V136, V135}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end))(V124)) end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E24, E25, E26, E27)); _ -> case V16 of [] -> fun (V139) -> case ('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V17, V18)) of {'Idris.Prelude.Types.Just', E23} -> (fun (V140) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V140}} end(E23)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('un--ufail'(V11, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t make solution for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V141) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V142) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V143) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V143)) end, fun (V144) -> fun (V145) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V144, V145)) end end}, V142)) end, fun (V146) -> fun (V147) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V148) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V148)) end, fun (V149) -> fun (V150) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V149, V150)) end end}, V146, V147)) end end}, V141)) end, fun (V151) -> fun (V152) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V153) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V154) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V154)) end, fun (V155) -> fun (V156) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V155, V156)) end end}, V153)) end, fun (V157) -> fun (V158) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V159) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V159)) end, fun (V160) -> fun (V161) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V160, V161)) end end}, V157, V158)) end end}, V151, V152)) end end}, {'Idris.Prelude.Show.MkShow', fun (V162) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V15, V162)) end, fun (V163) -> fun (V164) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V15, V163, V164)) end end}}, {'Idris.Builtin.MkPair', ('un--getIVars'(V17)), V18})))))))), V139)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> fun (V165) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end end(E19, E20, E21, E22)); _ -> case V16 of [] -> fun (V166) -> case ('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V17, V18)) of {'Idris.Prelude.Types.Just', E18} -> (fun (V167) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V167}} end(E18)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('un--ufail'(V11, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t make solution for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V168) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V169) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V170) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V170)) end, fun (V171) -> fun (V172) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V171, V172)) end end}, V169)) end, fun (V173) -> fun (V174) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V175) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V175)) end, fun (V176) -> fun (V177) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V176, V177)) end end}, V173, V174)) end end}, V168)) end, fun (V178) -> fun (V179) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V180) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V181) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V181)) end, fun (V182) -> fun (V183) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V182, V183)) end end}, V180)) end, fun (V184) -> fun (V185) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V186) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V186)) end, fun (V187) -> fun (V188) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V187, V188)) end end}, V184, V185)) end end}, V178, V179)) end end}, {'Idris.Prelude.Show.MkShow', fun (V189) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V15, V189)) end, fun (V190) -> fun (V191) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V15, V190, V191)) end end}}, {'Idris.Builtin.MkPair', ('un--getIVars'(V17)), V18})))))))), V166)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> fun (V192) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end end end(E16, E17)); _ -> case V19 of {'Idris.Core.TT.Bind', E1, E2, E3, E4} -> (fun (V193, V194, V195, V196) -> case V195 of {'Idris.Core.TT.Let', E6, E7, E8, E9} -> (fun (V197, V198, V199, V200) -> fun (V201) -> begin (V202 = (('nested--9807-11612--in--un--mkDef'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, [V194 | V14], V15, V16, {'Idris.Core.Unify.ICons', {'Idris.Prelude.Types.Nothing'}, V17}, V18, V196))(V201))), case V202 of {'Idris.Prelude.Types.Left', E10} -> (fun (V203) -> {'Idris.Prelude.Types.Left', V203} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V204) -> (('Idris.Idris2.Prelude.Basics':'un--flip'(fun (V205) -> fun (V206) -> fun (V207) -> case V206 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); {'Idris.Prelude.Types.Just', E12} -> (fun (V208) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V209) -> case V209 of {'Idris.Prelude.Types.Left', E13} -> (fun (V210) -> {'Idris.Prelude.Types.Left', V210} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V211) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V211}} end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, (V205(V208)), V207)) end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end, V204, fun (V212) -> begin (V213 = {'Idris.Core.TT.Let', V197, V198, V199, V200}), fun (V214) -> case ('Idris.Idris2.Core.TT':'un--shrinkTerm'(V212, {'Idris.Core.TT.DropCons', {'Idris.Core.TT.SubRefl'}})) of {'Idris.Prelude.Types.Just', E15} -> (fun (V215) -> {'Idris.Prelude.Types.Right', V215} end(E15)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Core.TT.Bind', V193, V194, V213, V212}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end))(V201)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E6, E7, E8, E9)); _ -> case V16 of [] -> fun (V216) -> case ('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V17, V18)) of {'Idris.Prelude.Types.Just', E5} -> (fun (V217) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V217}} end(E5)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('un--ufail'(V11, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t make solution for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V218) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V219) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V220) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V220)) end, fun (V221) -> fun (V222) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V221, V222)) end end}, V219)) end, fun (V223) -> fun (V224) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V225) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V225)) end, fun (V226) -> fun (V227) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V226, V227)) end end}, V223, V224)) end end}, V218)) end, fun (V228) -> fun (V229) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V230) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V231) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V231)) end, fun (V232) -> fun (V233) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V232, V233)) end end}, V230)) end, fun (V234) -> fun (V235) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V236) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V236)) end, fun (V237) -> fun (V238) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V237, V238)) end end}, V234, V235)) end end}, V228, V229)) end end}, {'Idris.Prelude.Show.MkShow', fun (V239) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V15, V239)) end, fun (V240) -> fun (V241) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V15, V240, V241)) end end}}, {'Idris.Builtin.MkPair', ('un--getIVars'(V17)), V18})))))))), V216)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> fun (V242) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end end(E1, E2, E3, E4)); _ -> case V16 of [] -> fun (V243) -> case ('nested--9807-11611--in--un--updateIVars'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V17, V18)) of {'Idris.Prelude.Types.Just', E0} -> (fun (V244) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V244}} end(E0)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('un--ufail'(V11, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t make solution for "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(|((Builtin.Pair $a) $b),((Builtin.MkPair $a) $b)|)'({'Idris.Builtin.MkPair', {'Idris.Prelude.Show.MkShow', fun (V245) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V246) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V247) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V247)) end, fun (V248) -> fun (V249) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V248, V249)) end end}, V246)) end, fun (V250) -> fun (V251) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V252) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V252)) end, fun (V253) -> fun (V254) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V253, V254)) end end}, V250, V251)) end end}, V245)) end, fun (V255) -> fun (V256) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V257) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V258) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V258)) end, fun (V259) -> fun (V260) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V259, V260)) end end}, V257)) end, fun (V261) -> fun (V262) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_(Maybe $a)'({'Idris.Prelude.Show.MkShow', fun (V263) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V263)) end, fun (V264) -> fun (V265) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V264, V265)) end end}, V261, V262)) end end}, V255, V256)) end end}, {'Idris.Prelude.Show.MkShow', fun (V266) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V15, V266)) end, fun (V267) -> fun (V268) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V15, V267, V268)) end end}}, {'Idris.Builtin.MkPair', ('un--getIVars'(V17)), V18})))))))), V243)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> fun (V269) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end end.
'nested--12608-17998--in--un--localsIn'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V16 of [] -> {'Idris.Prelude.Types.Right', 0}; [E0 | E1] -> (fun (V18, V19) -> begin (V21 = begin (V20 = ('erlang':'get'(V15))), {'Idris.Prelude.Types.Right', V20} end), case V21 of {'Idris.Prelude.Types.Left', E2} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V23) -> begin (V24 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V15, V0, V23, V18))(V17))), case V24 of {'Idris.Prelude.Types.Left', E4} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V26) -> case V26 of {'Idris.Core.Value.NApp', E6, E7, E8} -> (fun (V27, V28, V29) -> case V28 of {'Idris.Core.Value.NLocal', E9, E10} -> (fun (V30, V31) -> begin (V32 = ('nested--12608-17998--in--un--localsIn'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V19, V17))), case V32 of {'Idris.Prelude.Types.Left', E11} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V34) -> {'Idris.Prelude.Types.Right', (1 + V34)} end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9, E10)); _ -> ('nested--12608-17998--in--un--localsIn'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V19, V17)) end end(E6, E7, E8)); _ -> ('nested--12608-17998--in--un--localsIn'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V19, V17)) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--9807-11609--in--un--isSimple'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> case V14 of {'Idris.Core.TT.Meta', E0, E1, E2, E3} -> (fun (V15, V16, V17, V18) -> 1 end(E0, E1, E2, E3)); {'Idris.Core.TT.Bind', E4, E5, E6, E7} -> (fun (V19, V20, V21, V22) -> case V21 of {'Idris.Core.TT.Lam', E8, E9, E10, E11} -> (fun (V23, V24, V25, V26) -> ('nested--9807-11609--in--un--isSimple'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V22)) end(E8, E9, E10, E11)); _ -> ('nested--9807-11608--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, 0)) end end(E4, E5, E6, E7)); {'Idris.Core.TT.App', E12, E13, E14} -> (fun (V27, V28, V29) -> case ('nested--9807-11608--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V28, (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))) of 1 -> ('nested--9807-11608--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V29, (1 + (1 + (1 + 0))))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E12, E13, E14)); _ -> ('nested--9807-11608--in--un--noMeta'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, 0)) end.
'nested--12576-15238--in--un--isPatName'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case V17 of {'Idris.Core.Name.PV', E0, E1} -> (fun (V18, V19) -> 1 end(E0, E1)); _ -> 0 end.
'nested--12355-13880--in--un--isFn'(V0, V1, V2, V3, V4) -> case V4 of {'Idris.Core.TT.Ref', E0, E1, E2} -> (fun (V5, V6, V7) -> case V6 of {'Idris.Core.TT.Func'} -> (fun () -> 1 end()); _ -> 0 end end(E0, E1, E2)); _ -> 0 end.
'nested--12627-20319--in--un--isDelay'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V8 of {'Idris.Core.Value.NDelayed', E0, E1, E2} -> (fun (V9, V10, V11) -> 1 end(E0, E1, E2)); _ -> 0 end.
'nested--12588-15580--in--un--inNoSolve'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16, V17) -> case ('Idris.Idris2.Libraries.Data.IntMap':'un--lookup'(V16, V17)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> 0 end()); {'Idris.Prelude.Types.Just', E0} -> (fun (V18) -> 1 end(E0)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--8408-10381--in--un--inArgs'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V7 of [] -> 0; [E0 | E1] -> (fun (V8, V9) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Integer'(V6, V8)) of 1 -> 1; 0 -> ('nested--8408-10381--in--un--inArgs'(V0, V1, V2, V3, V4, V5, V6, V9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--24927-24999--in--un--getHoleName'(V0, V1, V2, V3) -> begin (V5 = begin (V4 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4} end), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> begin (V8 = (('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V0, [], V7, {'Idris.Core.Env.Nil'}, V2))(V3))), case V8 of {'Idris.Prelude.Types.Left', E2} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V10) -> case V10 of {'Idris.Core.Value.NApp', E4, E5, E6} -> (fun (V11, V12, V13) -> case V12 of {'Idris.Core.Value.NMeta', E7, E8, E9} -> (fun (V14, V15, V16) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', V14}} end(E7, E8, E9)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E4, E5, E6)); _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'nested--9202-11060--in--un--failOnStrongRigid'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> case V9 of {'Idris.Core.TT.Meta', E0, E1, E2, E3} -> (fun (V10, V11, V12, V13) -> case case V7 of 1 -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V11, V2)); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> V8; 0 -> fun (V14) -> {'Idris.Prelude.Types.Right', 0} end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1, E2, E3)); _ -> ('case--occursCheck,failOnStrongRigid-11141'(V0, V1, V2, V3, V4, V5, V6, V9, V8, V7, ('Idris.Idris2.Core.TT':'un--getFnArgs'(V9)))) end.
'nested--24477-24598--in--un--constraintToHole'(V0, V1, V2, V3) -> case V2 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V6, V7) -> begin (V9 = begin (V8 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V8} end), case V9 of {'Idris.Prelude.Types.Left', E4} -> (fun (V10) -> {'Idris.Prelude.Types.Left', V10} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V11) -> begin (V42 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'({'Idris.Core.Name.Resolved', V4}, case V11 of {'Idris.Core.Context.MkDefs', E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35} -> (fun (V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41) -> V12 end(E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V3))), case V42 of {'Idris.Prelude.Types.Left', E36} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V44) -> case V44 of {'Idris.Prelude.Types.Just', E38} -> (fun (V45) -> case V45 of {'Idris.Core.Context.Context.BySearch', E39, E40, E41} -> (fun (V46, V47, V48) -> ('Idris.Idris2.Core.Context':'un--updateDef'(V1, {'Idris.Core.Name.Resolved', V4}, fun (V49) -> {'Idris.Prelude.Types.Just', {'Idris.Core.Context.Context.Hole', 0, ('Idris.Idris2.Core.Context.Context':'un--holeInit'(0))}} end, V3)) end(E39, E40, E41)); {'Idris.Core.Context.Context.Guess', E42, E43, E44} -> (fun (V50, V51, V52) -> ('Idris.Idris2.Core.Context':'un--updateDef'(V1, {'Idris.Core.Name.Resolved', V4}, fun (V53) -> {'Idris.Prelude.Types.Just', {'Idris.Core.Context.Context.Hole', 0, ('Idris.Idris2.Core.Context.Context':'un--holeInit'(0))}} end, V3)) end(E42, E43, E44)); _ -> {'Idris.Prelude.Types.Right', 0} end end(E38)); _ -> {'Idris.Prelude.Types.Right', 0} end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--7850-9855--in--un--checkDefined'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V10 of {'Idris.Core.Value.NApp', E0, E1, E2} -> (fun (V12, V13, V14) -> case V13 of {'Idris.Core.Value.NRef', E3, E4} -> (fun (V15, V16) -> begin (V47 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V16, case V9 of {'Idris.Core.Context.MkDefs', E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34} -> (fun (V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46) -> V17 end(E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V11))), case V47 of {'Idris.Prelude.Types.Left', E35} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V49) -> case V49 of {'Idris.Prelude.Types.Just', E37} -> (fun (V50) -> {'Idris.Prelude.Types.Right', 0} end(E37)); _ -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V8, V6, V16, V11)) end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3, E4)); _ -> {'Idris.Prelude.Types.Right', 0} end end(E0, E1, E2)); _ -> {'Idris.Prelude.Types.Right', 0} end.
'nested--24927-25000--in--un--checkConstraint'(V0, V1, V2) -> case V2 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V3, V4) -> fun (V5) -> case V4 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V6, V7) -> case V7 of {'Idris.Core.UnifyState.MkConstraint', E4, E5, E6, E7, E8, E9} -> (fun (V8, V9, V10, V11, V12, V13) -> begin (V15 = begin (V14 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V14} end), case V15 of {'Idris.Prelude.Types.Left', E10} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V17) -> begin (V18 = (('Idris.Idris2.Core.Normalise.Eval':'un--continueNF'(V0, V8, V17, V11, V12))(V5))), case V18 of {'Idris.Prelude.Types.Left', E12} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V20) -> begin (V21 = (('Idris.Idris2.Core.Normalise.Eval':'un--continueNF'(V0, V8, V17, V11, V13))(V5))), case V21 of {'Idris.Prelude.Types.Left', E14} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V23) -> begin (V24 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V8, V0, <<"unify.constraint"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Dot"/utf8>> end, V11, V23, V5))), case V24 of {'Idris.Prelude.Types.Left', E16} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V26) -> begin (V27 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V8, V0, <<"unify.constraint"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"  ="/utf8>> end, V11, V20, V5))), case V27 of {'Idris.Prelude.Types.Left', E18} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V29) -> begin (V31 = begin (V30 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V30} end), case V31 of {'Idris.Prelude.Types.Left', E20} -> (fun (V32) -> {'Idris.Prelude.Types.Left', V32} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V33) -> ('Idris.Idris2.Core.UnifyState':'un--handleUnify'(V0, V1, fun (V34) -> begin (V36 = begin (V35 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V35} end), case V36 of {'Idris.Prelude.Types.Left', E22} -> (fun (V37) -> {'Idris.Prelude.Types.Left', V37} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V38) -> begin (V69 = (('Idris.Idris2.Core.Context':'un--getPosition'(V3, case V38 of {'Idris.Core.Context.MkDefs', E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53} -> (fun (V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68) -> V39 end(E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V34))), case V69 of {'Idris.Prelude.Types.Left', E54} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V71) -> case V71 of {'Idris.Builtin.MkPair', E56, E57} -> (fun (V72, V73) -> begin (V74 = ('nested--24927-24999--in--un--getHoleName'(V0, V1, {'Idris.Core.TT.Meta', V9, V3, V72, []}, V34))), case V74 of {'Idris.Prelude.Types.Left', E58} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V76) -> begin (V93 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V77) -> fun (V78) -> fun (V79) -> fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> ('dn--un--unifyD_Unify_NF'(V77, V78, V79, V80, V81, V82, V83, V84)) end end end end end end end end, fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> ('dn--un--unifyWithLazyD_Unify_NF'(V85, V86, V87, V88, V89, V90, V91, V92)) end end end end end end end end}, V8, V0, V1, ('un--inMatch'()), V9, V11))(V20))(V23))(V34))), case V93 of {'Idris.Prelude.Types.Left', E60} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V95) -> begin (V97 = begin (V96 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V96} end), case V97 of {'Idris.Prelude.Types.Left', E62} -> (fun (V98) -> {'Idris.Prelude.Types.Left', V98} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V99) -> begin (V139 = (('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> fun (V100) -> {'Idris.Prelude.Types.Right', 0} end end, fun () -> fun (V101) -> fun (V102) -> begin (V133 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'(V101, case V99 of {'Idris.Core.Context.MkDefs', E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93} -> (fun (V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132) -> V103 end(E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88, E89, E90, E91, E92, E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V102))), case V133 of {'Idris.Prelude.Types.Left', E94} -> (fun (V134) -> {'Idris.Prelude.Types.Left', V134} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V135) -> case V135 of {'Idris.Prelude.Types.Just', E96} -> (fun (V136) -> {'Idris.Prelude.Types.Right', case V136 of {'Idris.Core.Context.Context.Hole', E97, E98} -> (fun (V137, V138) -> 0 end(E97, E98)); _ -> 1 end} end(E96)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, V9, V101, V102)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, V76))(V34))), case V139 of {'Idris.Prelude.Types.Left', E99} -> (fun (V140) -> {'Idris.Prelude.Types.Left', V140} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V141) -> begin (V146 = ('un--checkArgsSame'(V1, V0, case V95 of {'Idris.Core.Unify.MkUnifyResult', E101, E102, E103, E104} -> (fun (V142, V143, V144, V145) -> V144 end(E101, E102, E103, E104)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V34))), case V146 of {'Idris.Prelude.Types.Left', E105} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V148) -> case case ('Idris.Idris2.Data.List':'un--isNil'(case V95 of {'Idris.Core.Unify.MkUnifyResult', E107, E108, E109, E110} -> (fun (V149, V150, V151, V152) -> V149 end(E107, E108, E109, E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)) of 1 -> case V141 of 1 -> 1; 0 -> V148; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', <<"Dot pattern match fail"/utf8>>}, V34)); 0 -> {'Idris.Prelude.Types.Right', 0}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E56, E57)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, fun (V153) -> fun (V154) -> case V153 of {'Idris.Core.Core.InternalError', E125} -> (fun (V155) -> begin (V157 = begin (V156 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V156} end), case V157 of {'Idris.Prelude.Types.Left', E126} -> (fun (V158) -> {'Idris.Prelude.Types.Left', V158} end(E126)); {'Idris.Prelude.Types.Right', E127} -> (fun (V159) -> begin (V190 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(V3, case V159 of {'Idris.Core.Context.MkDefs', E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157} -> (fun (V160, V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177, V178, V179, V180, V181, V182, V183, V184, V185, V186, V187, V188, V189) -> V160 end(E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146, E147, E148, E149, E150, E151, E152, E153, E154, E155, E156, E157)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V154))), case V190 of {'Idris.Prelude.Types.Left', E158} -> (fun (V191) -> {'Idris.Prelude.Types.Left', V191} end(E158)); {'Idris.Prelude.Types.Right', E159} -> (fun (V192) -> case V192 of {'Idris.Prelude.Types.Just', E160} -> (fun (V193) -> begin (V194 = ('Idris.Idris2.Core.Normalise':'un--logTermNF'([], V0, <<"unify.constraint"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> <<"Dot type"/utf8>> end, {'Idris.Core.Env.Nil'}, V193, V154))), case V194 of {'Idris.Prelude.Types.Left', E161} -> (fun (V195) -> {'Idris.Prelude.Types.Left', V195} end(E161)); {'Idris.Prelude.Types.Right', E162} -> (fun (V196) -> begin (V210 = begin (V209 = ('erlang':'put'(V1, case V33 of {'Idris.Core.UnifyState.MkUState', E163, E164, E165, E166, E167, E168, E169, E170, E171, E172, E173, E174} -> (fun (V197, V198, V199, V200, V201, V202, V203, V204, V205, V206, V207, V208) -> {'Idris.Core.UnifyState.MkUState', V197, V198, V199, V200, V201, V202, V203, [], V205, V206, V207, V208} end(E163, E164, E165, E166, E167, E168, E169, E170, E171, E172, E173, E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V209} end), case V210 of {'Idris.Prelude.Types.Left', E175} -> (fun (V211) -> {'Idris.Prelude.Types.Left', V211} end(E175)); {'Idris.Prelude.Types.Right', E176} -> (fun (V212) -> begin (V213 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V159, V154))), case V213 of {'Idris.Prelude.Types.Left', E177} -> (fun (V214) -> {'Idris.Prelude.Types.Left', V214} end(E177)); {'Idris.Prelude.Types.Right', E178} -> (fun (V215) -> begin (V216 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, V8, V215, V11, V20, V154))), case V216 of {'Idris.Prelude.Types.Left', E179} -> (fun (V217) -> {'Idris.Prelude.Types.Left', V217} end(E179)); {'Idris.Prelude.Types.Right', E180} -> (fun (V218) -> begin (V219 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, V8, V215, V11, V23, V154))), case V219 of {'Idris.Prelude.Types.Left', E181} -> (fun (V220) -> {'Idris.Prelude.Types.Left', V220} end(E181)); {'Idris.Prelude.Types.Right', E182} -> (fun (V221) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.BadDotPattern', V8, V9, V11, V6, V218, V221}, V154)) end(E182)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E162)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E160)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, V9, V3, V154)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E159)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E125)); _ -> begin (V235 = begin (V234 = ('erlang':'put'(V1, case V33 of {'Idris.Core.UnifyState.MkUState', E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122} -> (fun (V222, V223, V224, V225, V226, V227, V228, V229, V230, V231, V232, V233) -> {'Idris.Core.UnifyState.MkUState', V222, V223, V224, V225, V226, V227, V228, [], V230, V231, V232, V233} end(E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V234} end), case V235 of {'Idris.Prelude.Types.Left', E123} -> (fun (V236) -> {'Idris.Prelude.Types.Left', V236} end(E123)); {'Idris.Prelude.Types.Right', E124} -> (fun (V237) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'(V153, V154)) end(E124)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, V5)) end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5, E6, E7, E8, E9)); _ -> {'Idris.Prelude.Types.Right', 0} end end(E2, E3)); _ -> {'Idris.Prelude.Types.Right', 0} end end end(E0, E1)); _ -> fun (V238) -> {'Idris.Prelude.Types.Right', 0} end end.
'nested--24612-24734--in--un--anySame'(V0, V1, V2, V3, V4, V5, V6) -> case V5 of [] -> {'Idris.Prelude.Types.Right', 0}; [E0 | E1] -> (fun (V7, V8) -> begin (V10 = begin (V9 = ('erlang':'get'(V2))), {'Idris.Prelude.Types.Right', V9} end), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> begin (V43 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'({'Idris.Core.Name.Resolved', V7}, case V12 of {'Idris.Core.Context.MkDefs', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33} -> (fun (V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42) -> V13 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6))), case V43 of {'Idris.Prelude.Types.Left', E34} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V45) -> case V45 of {'Idris.Prelude.Types.Just', E36} -> (fun (V46) -> case V46 of {'Idris.Core.Context.Context.PMDef', E37, E38, E39, E40, E41} -> (fun (V47, V48, V49, V50, V51) -> case V48 of [] -> case V49 of {'Idris.Core.CaseTree.STerm', E42, E43} -> (fun (V52, V53) -> case V52 of 0 -> begin (V54 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_Term'(V2, [], V12, {'Idris.Core.Env.Nil'}, V4, V53, V6))), case V54 of {'Idris.Prelude.Types.Left', E44} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V56) -> case V56 of 1 -> {'Idris.Prelude.Types.Right', 1}; 0 -> ('nested--24612-24734--in--un--anySame'(V0, V1, V2, V3, V4, V8, V6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('nested--24612-24734--in--un--anySame'(V0, V1, V2, V3, V4, V8, V6)) end end(E42, E43)); _ -> ('nested--24612-24734--in--un--anySame'(V0, V1, V2, V3, V4, V8, V6)) end; _ -> ('nested--24612-24734--in--un--anySame'(V0, V1, V2, V3, V4, V8, V6)) end end(E37, E38, E39, E40, E41)); _ -> ('nested--24612-24734--in--un--anySame'(V0, V1, V2, V3, V4, V8, V6)) end end(E36)); _ -> ('nested--24612-24734--in--un--anySame'(V0, V1, V2, V3, V4, V8, V6)) end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--8539-10490--in--un--anyFirst'(V0, V1, V2, V3) -> case V3 of [] -> 0; [E0 | E1] -> (fun (V4, V5) -> case V4 of 0 -> 1; _ -> ('nested--8539-10490--in--un--anyFirst'(V0, V1, V2, V5)) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'nested--24419-24544--in--un--afterStart'(V0, V1, V2, V3, V4, V5) -> case V5 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un-->=_Ord_Int'(V6, V2)) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--weaken_Weaken_(IVars $vs)'(V0) -> case V0 of {'Idris.Core.Unify.INil'} -> (fun () -> {'Idris.Core.Unify.INil'} end()); {'Idris.Core.Unify.ICons', E0, E1} -> (fun (V1, V2) -> case V1 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Core.Unify.ICons', {'Idris.Prelude.Types.Nothing'}, ('dn--un--weaken_Weaken_(IVars $vs)'(V2))} end()); {'Idris.Prelude.Types.Just', E2} -> (fun (V3) -> {'Idris.Core.Unify.ICons', {'Idris.Prelude.Types.Just', ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Var'(V3))}, ('dn--un--weaken_Weaken_(IVars $vs)'(V2))} end(E2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--unifyWithLazyD_Unify_Term'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> begin (V10 = begin (V9 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V9} end), case V10 of {'Idris.Prelude.Types.Left', E0} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V12) -> begin (V13 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V12, V8))), case V13 of {'Idris.Prelude.Types.Left', E2} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V15) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_(Term $vars)'(V6, V7)) of 1 -> begin (V16 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"unify.equal"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Skipped unification (equal already): "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V0, V6)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" and "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V0, V7)))))))) end, V8))), case V16 of {'Idris.Prelude.Types.Left', E4} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V18) -> {'Idris.Prelude.Types.Right', ('un--success'())} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V19 = (('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V12, V5, V6))(V8))), case V19 of {'Idris.Prelude.Types.Left', E6} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V21) -> begin (V22 = (('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V12, V5, V7))(V8))), case V22 of {'Idris.Prelude.Types.Left', E8} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V24) -> (((('un--unifyWithLazy'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('dn--un--unifyD_Unify_NF'(V25, V26, V27, V28, V29, V30, V31, V32)) end end end end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> ('dn--un--unifyWithLazyD_Unify_NF'(V33, V34, V35, V36, V37, V38, V39, V40)) end end end end end end end end}, V0, V1, V2, V3, V4, V5))(V21))(V24))(V8)) end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'dn--un--unifyWithLazyD_Unify_NF'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Idris.Core.Value.NDelayed', E9, E10, E11} -> (fun (V8, V9, V10) -> case V7 of {'Idris.Core.Value.NDelayed', E20, E21, E22} -> (fun (V11, V12, V13) -> ((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('dn--un--unifyD_Unify_NF'(V14, V15, V16, V17, V18, V19, V20, V21)) end end end end end end end end, fun (V22) -> fun (V23) -> fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> ('dn--un--unifyWithLazyD_Unify_NF'(V22, V23, V24, V25, V26, V27, V28, V29)) end end end end end end end end}, V0, V1, V2, ('un--lower'(V3)), V4, V5))(V10))(V13)) end(E20, E21, E22)); _ -> begin (V30 = {'Idris.Core.Value.NDelayed', V8, V9, V10}), fun (V31) -> case case ('un--isHoleApp'(V7)) of 1 -> case ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E18, E19} -> (fun (V32, V33) -> V33 end(E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> ('un--postpone'(V0, V1, V2, V4, V3, <<"Postponing in lazy"/utf8>>, V5, V30, V7, V31)); 0 -> begin (V50 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> ('dn--un--unifyD_Unify_NF'(V34, V35, V36, V37, V38, V39, V40, V41)) end end end end end end end end, fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> ('dn--un--unifyWithLazyD_Unify_NF'(V42, V43, V44, V45, V46, V47, V48, V49)) end end end end end end end end}, V0, V1, V2, ('un--lower'(V3)), V4, V5))(V10))(V7))(V31))), case V50 of {'Idris.Prelude.Types.Left', E12} -> (fun (V51) -> {'Idris.Prelude.Types.Left', V51} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V52) -> {'Idris.Prelude.Types.Right', case V52 of {'Idris.Core.Unify.MkUnifyResult', E14, E15, E16, E17} -> (fun (V53, V54, V55, V56) -> {'Idris.Core.Unify.MkUnifyResult', V53, V54, V55, {'Idris.Core.Unify.AddForce', V9}} end(E14, E15, E16, E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E9, E10, E11)); _ -> case V7 of {'Idris.Core.Value.NDelayed', E0, E1, E2} -> (fun (V57, V58, V59) -> fun (V60) -> begin (V77 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> ('dn--un--unifyD_Unify_NF'(V61, V62, V63, V64, V65, V66, V67, V68)) end end end end end end end end, fun (V69) -> fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> fun (V75) -> fun (V76) -> ('dn--un--unifyWithLazyD_Unify_NF'(V69, V70, V71, V72, V73, V74, V75, V76)) end end end end end end end end}, V0, V1, V2, ('un--lower'(V3)), V4, V5))(V6))(V59))(V60))), case V77 of {'Idris.Prelude.Types.Left', E3} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V79) -> {'Idris.Prelude.Types.Right', case V79 of {'Idris.Core.Unify.MkUnifyResult', E5, E6, E7, E8} -> (fun (V80, V81, V82, V83) -> {'Idris.Core.Unify.MkUnifyResult', V80, V81, V82, {'Idris.Core.Unify.AddDelay', V58}} end(E5, E6, E7, E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2)); _ -> ((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> ('dn--un--unifyD_Unify_NF'(V84, V85, V86, V87, V88, V89, V90, V91)) end end end end end end end end, fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> ('dn--un--unifyWithLazyD_Unify_NF'(V92, V93, V94, V95, V96, V97, V98, V99)) end end end end end end end end}, V0, V1, V2, V3, V4, V5))(V6))(V7)) end end.
'dn--un--unifyWithLazyD_Unify_Closure'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> ('dn--un--unifyD_Unify_Closure'(V0, V1, V2, V3, V4, V5, V6, V7, V8)).
'dn--un--unifyD_Unify_Term'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> begin (V10 = begin (V9 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V9} end), case V10 of {'Idris.Prelude.Types.Left', E0} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V12) -> begin (V13 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V12, V8))), case V13 of {'Idris.Prelude.Types.Left', E2} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V15) -> case ('Idris.Idris2.Core.TT':'dn--un--==_Eq_(Term $vars)'(V6, V7)) of 1 -> begin (V16 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"unify.equal"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Skipped unification (equal already): "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V0, V6)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" and "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V0, V7)))))))) end, V8))), case V16 of {'Idris.Prelude.Types.Left', E4} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V18) -> {'Idris.Prelude.Types.Right', ('un--success'())} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V19 = (('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V12, V5, V6))(V8))), case V19 of {'Idris.Prelude.Types.Left', E6} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V21) -> begin (V22 = (('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V12, V5, V7))(V8))), case V22 of {'Idris.Prelude.Types.Left', E8} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V24) -> (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('dn--un--unifyD_Unify_NF'(V25, V26, V27, V28, V29, V30, V31, V32)) end end end end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> ('dn--un--unifyWithLazyD_Unify_NF'(V33, V34, V35, V36, V37, V38, V39, V40)) end end end end end end end end}, V0, V1, V2, V3, V4, V5))(V21))(V24))(V8)) end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'dn--un--unifyD_Unify_NF'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Idris.Core.Value.NBind', E26, E27, E28, E29} -> (fun (V8, V9, V10, V11) -> case V7 of {'Idris.Core.Value.NBind', E78, E79, E80, E81} -> (fun (V12, V13, V14, V15) -> ('un--unifyBothBinders'(V1, V2, V0, V3, V4, V5, V8, V9, V10, V11, V12, V13, V14, V15)) end(E78, E79, E80, E81)); _ -> case V10 of {'Idris.Core.TT.Lam', E56, E57, E58, E59} -> (fun (V16, V17, V18, V19) -> fun (V20) -> begin (V22 = begin (V21 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V21} end), case V22 of {'Idris.Prelude.Types.Left', E60} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V24) -> begin (V25 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"EtaR"/utf8>> end, V5, V6, V20))), case V25 of {'Idris.Prelude.Types.Left', E62} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V27) -> begin (V28 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"...with"/utf8>> end, V5, V7, V20))), case V28 of {'Idris.Prelude.Types.Left', E64} -> (fun (V29) -> {'Idris.Prelude.Types.Left', V29} end(E64)); {'Idris.Prelude.Types.Right', E65} -> (fun (V30) -> begin (V31 = {'Idris.Core.Value.NBind', V8, V9, {'Idris.Core.TT.Lam', V16, V17, V18, V19}, V11}), case ('un--isHoleApp'(V7)) of 1 -> begin (V32 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V1, V0, V24, V5, V31, V7, V20))), case V32 of {'Idris.Prelude.Types.Left', E66} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E66)); {'Idris.Prelude.Types.Right', E67} -> (fun (V34) -> case V34 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> (('un--unifyNoEta'(V1, V2, V0, ('un--lower'(V3)), V4, V5, V31, V7))(V20)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V35 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V24, V20))), case V35 of {'Idris.Prelude.Types.Left', E68} -> (fun (V36) -> {'Idris.Prelude.Types.Left', V36} end(E68)); {'Idris.Prelude.Types.Right', E69} -> (fun (V37) -> begin (V38 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1, V0, V37, V5, V19, V20))), case V38 of {'Idris.Prelude.Types.Left', E70} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V40) -> begin (V44 = begin (V41 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V37, V5, V7, V20))), case V41 of {'Idris.Prelude.Types.Left', E72} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V43) -> (('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V24, V5, {'Idris.Core.TT.Bind', V8, V9, {'Idris.Core.TT.Lam', V16, V17, {'Idris.Core.TT.Explicit'}, V40}, {'Idris.Core.TT.App', V8, ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Term'(V43)), {'Idris.Core.TT.Local', V8, {'Idris.Prelude.Types.Nothing'}, 0}}}))(V20)) end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V44 of {'Idris.Prelude.Types.Left', E74} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V46) -> begin (V47 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Expand"/utf8>> end, V5, V46, V20))), case V47 of {'Idris.Prelude.Types.Left', E76} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V49) -> (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> ('dn--un--unifyD_Unify_NF'(V50, V51, V52, V53, V54, V55, V56, V57)) end end end end end end end end, fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> ('dn--un--unifyWithLazyD_Unify_NF'(V58, V59, V60, V61, V62, V63, V64, V65)) end end end end end end end end}, V0, V1, V2, ('un--lower'(V3)), V4, V5))(V31))(V46))(V20)) end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E56, E57, E58, E59)); _ -> case V7 of {'Idris.Core.Value.NBind', E30, E31, E32, E33} -> (fun (V66, V67, V68, V69) -> case V68 of {'Idris.Core.TT.Lam', E34, E35, E36, E37} -> (fun (V70, V71, V72, V73) -> fun (V74) -> begin (V76 = begin (V75 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V75} end), case V76 of {'Idris.Prelude.Types.Left', E38} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V78) -> begin (V79 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"EtaL"/utf8>> end, V5, V6, V74))), case V79 of {'Idris.Prelude.Types.Left', E40} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V81) -> begin (V82 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"...with"/utf8>> end, V5, V7, V74))), case V82 of {'Idris.Prelude.Types.Left', E42} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V84) -> begin (V85 = {'Idris.Core.Value.NBind', V66, V67, {'Idris.Core.TT.Lam', V70, V71, V72, V73}, V69}), case ('un--isHoleApp'(V6)) of 1 -> begin (V86 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V1, V0, V78, V5, V6, V85, V74))), case V86 of {'Idris.Prelude.Types.Left', E44} -> (fun (V87) -> {'Idris.Prelude.Types.Left', V87} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V88) -> case V88 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> (('un--unifyNoEta'(V1, V2, V0, ('un--lower'(V3)), V4, V5, V6, V85))(V74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V89 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V78, V74))), case V89 of {'Idris.Prelude.Types.Left', E46} -> (fun (V90) -> {'Idris.Prelude.Types.Left', V90} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V91) -> begin (V92 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1, V0, V91, V5, V73, V74))), case V92 of {'Idris.Prelude.Types.Left', E48} -> (fun (V93) -> {'Idris.Prelude.Types.Left', V93} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V94) -> begin (V98 = begin (V95 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V91, V5, V6, V74))), case V95 of {'Idris.Prelude.Types.Left', E50} -> (fun (V96) -> {'Idris.Prelude.Types.Left', V96} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V97) -> (('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V78, V5, {'Idris.Core.TT.Bind', V66, V67, {'Idris.Core.TT.Lam', V70, V71, {'Idris.Core.TT.Explicit'}, V94}, {'Idris.Core.TT.App', V66, ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Term'(V97)), {'Idris.Core.TT.Local', V66, {'Idris.Prelude.Types.Nothing'}, 0}}}))(V74)) end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V98 of {'Idris.Prelude.Types.Left', E52} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V100) -> begin (V101 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Expand"/utf8>> end, V5, V100, V74))), case V101 of {'Idris.Prelude.Types.Left', E54} -> (fun (V102) -> {'Idris.Prelude.Types.Left', V102} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V103) -> (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> fun (V109) -> fun (V110) -> fun (V111) -> ('dn--un--unifyD_Unify_NF'(V104, V105, V106, V107, V108, V109, V110, V111)) end end end end end end end end, fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> ('dn--un--unifyWithLazyD_Unify_NF'(V112, V113, V114, V115, V116, V117, V118, V119)) end end end end end end end end}, V0, V1, V2, ('un--lower'(V3)), V4, V5))(V100))(V85))(V74)) end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E34, E35, E36, E37)); _ -> ('un--unifyNoEta'(V1, V2, V0, V3, V4, V5, V6, V7)) end end(E30, E31, E32, E33)); _ -> ('un--unifyNoEta'(V1, V2, V0, V3, V4, V5, V6, V7)) end end end end(E26, E27, E28, E29)); _ -> case V7 of {'Idris.Core.Value.NBind', E0, E1, E2, E3} -> (fun (V120, V121, V122, V123) -> case V122 of {'Idris.Core.TT.Lam', E4, E5, E6, E7} -> (fun (V124, V125, V126, V127) -> fun (V128) -> begin (V130 = begin (V129 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V129} end), case V130 of {'Idris.Prelude.Types.Left', E8} -> (fun (V131) -> {'Idris.Prelude.Types.Left', V131} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V132) -> begin (V133 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"EtaL"/utf8>> end, V5, V6, V128))), case V133 of {'Idris.Prelude.Types.Left', E10} -> (fun (V134) -> {'Idris.Prelude.Types.Left', V134} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V135) -> begin (V136 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"...with"/utf8>> end, V5, V7, V128))), case V136 of {'Idris.Prelude.Types.Left', E12} -> (fun (V137) -> {'Idris.Prelude.Types.Left', V137} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V138) -> begin (V139 = {'Idris.Core.Value.NBind', V120, V121, {'Idris.Core.TT.Lam', V124, V125, V126, V127}, V123}), case ('un--isHoleApp'(V6)) of 1 -> begin (V140 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V1, V0, V132, V5, V6, V139, V128))), case V140 of {'Idris.Prelude.Types.Left', E14} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V142) -> case V142 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> (('un--unifyNoEta'(V1, V2, V0, ('un--lower'(V3)), V4, V5, V6, V139))(V128)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V143 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V132, V128))), case V143 of {'Idris.Prelude.Types.Left', E16} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V145) -> begin (V146 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1, V0, V145, V5, V127, V128))), case V146 of {'Idris.Prelude.Types.Left', E18} -> (fun (V147) -> {'Idris.Prelude.Types.Left', V147} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V148) -> begin (V152 = begin (V149 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V145, V5, V6, V128))), case V149 of {'Idris.Prelude.Types.Left', E20} -> (fun (V150) -> {'Idris.Prelude.Types.Left', V150} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V151) -> (('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V1, V0, V132, V5, {'Idris.Core.TT.Bind', V120, V121, {'Idris.Core.TT.Lam', V124, V125, {'Idris.Core.TT.Explicit'}, V148}, {'Idris.Core.TT.App', V120, ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Term'(V151)), {'Idris.Core.TT.Local', V120, {'Idris.Prelude.Types.Nothing'}, 0}}}))(V128)) end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V152 of {'Idris.Prelude.Types.Left', E22} -> (fun (V153) -> {'Idris.Prelude.Types.Left', V153} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V154) -> begin (V155 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Expand"/utf8>> end, V5, V154, V128))), case V155 of {'Idris.Prelude.Types.Left', E24} -> (fun (V156) -> {'Idris.Prelude.Types.Left', V156} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V157) -> (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V158) -> fun (V159) -> fun (V160) -> fun (V161) -> fun (V162) -> fun (V163) -> fun (V164) -> fun (V165) -> ('dn--un--unifyD_Unify_NF'(V158, V159, V160, V161, V162, V163, V164, V165)) end end end end end end end end, fun (V166) -> fun (V167) -> fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> fun (V172) -> fun (V173) -> ('dn--un--unifyWithLazyD_Unify_NF'(V166, V167, V168, V169, V170, V171, V172, V173)) end end end end end end end end}, V0, V1, V2, ('un--lower'(V3)), V4, V5))(V154))(V139))(V128)) end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E4, E5, E6, E7)); _ -> ('un--unifyNoEta'(V1, V2, V0, V3, V4, V5, V6, V7)) end end(E0, E1, E2, E3)); _ -> ('un--unifyNoEta'(V1, V2, V0, V3, V4, V5, V6, V7)) end end.
'dn--un--unifyD_Unify_Closure'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> begin (V10 = begin (V9 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V9} end), case V10 of {'Idris.Prelude.Types.Left', E0} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V12) -> begin (V13 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V12, V8))), case V13 of {'Idris.Prelude.Types.Left', E2} -> (fun (V14) -> {'Idris.Prelude.Types.Left', V14} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V15) -> begin (V16 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_Closure'(V1, V0, V15, V5, V6, V7, V8))), case V16 of {'Idris.Prelude.Types.Left', E4} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V18) -> case V18 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> begin (V19 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V12, V6))(V8))), case V19 of {'Idris.Prelude.Types.Left', E6} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V21) -> begin (V22 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V12, V7))(V8))), case V22 of {'Idris.Prelude.Types.Left', E8} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V24) -> begin (V25 = 0), (('case--case block in unifyD-21667'(V0, V1, V2, V7, V6, V5, V4, V3, V12, V15, V25, V21, V24, {'Idris.Builtin.MkPair', V21, V24}))(V8)) end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'dn--un--show_Show_UnifyMode'(V0) -> case V0 of 0 -> <<"InLHS"/utf8>>; 1 -> <<"InTerm"/utf8>>; 2 -> <<"InMatch"/utf8>>; 3 -> <<"InSearch"/utf8>>; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--show_Show_AddLazy'(V0) -> case V0 of {'Idris.Core.Unify.NoLazy'} -> (fun () -> <<"NoLazy"/utf8>> end()); {'Idris.Core.Unify.AddForce', E0} -> (fun (V1) -> <<"AddForce"/utf8>> end(E0)); {'Idris.Core.Unify.AddDelay', E1} -> (fun (V2) -> <<"AddDelay"/utf8>> end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'dn--un--showPrec_Show_AddLazy'(V0, V1) -> ('dn--un--show_Show_AddLazy'(V1)).
'dn--un--__Impl_Unify_Term'() -> {'Idris.Core.Unify.dn--un--__mkUnify', fun (V0) -> fun (V1) -> fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> ('dn--un--unifyD_Unify_Term'(V0, V1, V2, V3, V4, V5, V6, V7, V8)) end end end end end end end end end, fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> ('dn--un--unifyWithLazyD_Unify_Term'(V9, V10, V11, V12, V13, V14, V15, V16, V17)) end end end end end end end end end}.
'dn--un--__Impl_Unify_NF'() -> {'Idris.Core.Unify.dn--un--__mkUnify', fun (V0) -> fun (V1) -> fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> ('dn--un--unifyD_Unify_NF'(V0, V1, V2, V3, V4, V5, V6, V7)) end end end end end end end end, fun (V8) -> fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> ('dn--un--unifyWithLazyD_Unify_NF'(V8, V9, V10, V11, V12, V13, V14, V15)) end end end end end end end end}.
'dn--un--__Impl_Unify_Closure'() -> {'Idris.Core.Unify.dn--un--__mkUnify', fun (V0) -> fun (V1) -> fun (V2) -> fun (V3) -> fun (V4) -> fun (V5) -> fun (V6) -> fun (V7) -> fun (V8) -> ('dn--un--unifyD_Unify_Closure'(V0, V1, V2, V3, V4, V5, V6, V7, V8)) end end end end end end end end end, fun (V9) -> fun (V10) -> fun (V11) -> fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> fun (V17) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V9, V10, V11, V12, V13, V14, V15, V16, V17)) end end end end end end end end end}.
'dn--un--__Impl_Show_AddLazy'() -> {'Idris.Prelude.Show.MkShow', fun (V0) -> ('dn--un--show_Show_AddLazy'(V0)) end, fun (V1) -> fun (V2) -> ('dn--un--showPrec_Show_AddLazy'(V1, V2)) end end}.
'dn--un--==_Eq_UnifyMode'(V0, V1) -> case V0 of 0 -> case V1 of 0 -> 1; _ -> 0 end; 1 -> case V1 of 1 -> 1; _ -> 0 end; 2 -> case V1 of 2 -> 1; _ -> 0 end; 3 -> case V1 of 3 -> 1; _ -> 0 end; _ -> 0 end.
'dn--un--==_Eq_SolveMode'(V0, V1) -> case V0 of 0 -> case V1 of 0 -> 1; _ -> 0 end; 1 -> case V1 of 1 -> 1; _ -> 0 end; 3 -> case V1 of 3 -> 1; _ -> 0 end; _ -> 0 end.
'dn--un--/=_Eq_UnifyMode'(V0, V1) -> case ('dn--un--==_Eq_UnifyMode'(V0, V1)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--updateSolution'(V0, V1, V2, V3, V4, V5, V6) -> case V4 of {'Idris.Core.TT.Meta', E0, E1, E2, E3} -> (fun (V7, V8, V9, V10) -> begin (V12 = begin (V11 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V11} end), case V12 of {'Idris.Prelude.Types.Left', E4} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V14) -> begin (V15 = ('un--patternEnvTm'(V1, V2, V0, V3, V10, V6))), case V15 of {'Idris.Prelude.Types.Left', E6} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V17) -> case V17 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); {'Idris.Prelude.Types.Just', E8} -> (fun (V18) -> case V18 of {'Idris.Builtin.DPair.MkDPair', E9, E10} -> (fun (V19, V20) -> case V20 of {'Idris.Builtin.MkPair', E11, E12} -> (fun (V21, V22) -> case ('Idris.Idris2.Core.TT':'un--shrinkTerm'(V5, V22)) of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); {'Idris.Prelude.Types.Just', E13} -> (fun (V23) -> begin (V54 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'({'Idris.Core.Name.Resolved', V9}, case V14 of {'Idris.Core.Context.MkDefs', E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43} -> (fun (V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53) -> V24 end(E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V6))), case V54 of {'Idris.Prelude.Types.Left', E44} -> (fun (V55) -> {'Idris.Prelude.Types.Left', V55} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V56) -> case V56 of {'Idris.Prelude.Types.Just', E46} -> (fun (V57) -> ('un--tryInstantiate'(V1, V2, V0, V19, V7, ('un--inTerm'()), V3, V8, V9, ('Idris.Idris2.Prelude.Types.List':'un--length'(V10)), V57, V21, V5, V23, V6)) end(E46)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', <<"Can\x{27}t happen: no definition"/utf8>>}, V6)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E11, E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E9, E10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E8)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3)); _ -> {'Idris.Prelude.Types.Right', 0} end.
'un--unionAll'(V0) -> case V0 of [] -> {'Idris.Core.Unify.MkUnifyResult', [], 0, [], {'Idris.Core.Unify.NoLazy'}}; [E0 | E1] -> (fun (V1, V2) -> case V2 of [] -> V1; _ -> ('un--union'(V1, ('un--unionAll'(V2)))) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--union'(V0, V1) -> {'Idris.Core.Unify.MkUnifyResult', ('Idris.Idris2.Data.List':'un--union'({'Idris.Prelude.EqOrd.MkEq', fun (V2) -> fun (V3) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V2, V3)) end end, fun (V4) -> fun (V5) -> ('Idris.Idris2.Prelude.EqOrd':'dn--un--/=_Eq_Int'(V4, V5)) end end}, case V0 of {'Idris.Core.Unify.MkUnifyResult', E0, E1, E2, E3} -> (fun (V6, V7, V8, V9) -> V6 end(E0, E1, E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case V1 of {'Idris.Core.Unify.MkUnifyResult', E4, E5, E6, E7} -> (fun (V10, V11, V12, V13) -> V10 end(E4, E5, E6, E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), case case V0 of {'Idris.Core.Unify.MkUnifyResult', E12, E13, E14, E15} -> (fun (V14, V15, V16, V17) -> V15 end(E12, E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> 1; 0 -> case V1 of {'Idris.Core.Unify.MkUnifyResult', E8, E9, E10, E11} -> (fun (V18, V19, V20, V21) -> V19 end(E8, E9, E10, E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(case V0 of {'Idris.Core.Unify.MkUnifyResult', E16, E17, E18, E19} -> (fun (V22, V23, V24, V25) -> V24 end(E16, E17, E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, case V1 of {'Idris.Core.Unify.MkUnifyResult', E20, E21, E22, E23} -> (fun (V26, V27, V28, V29) -> V28 end(E20, E21, E22, E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), {'Idris.Core.Unify.NoLazy'}}.
'un--unifyWithLazyD'(V0, V1, V2, V3, V4) -> case V0 of {'Idris.Core.Unify.dn--un--__mkUnify', E0, E1} -> (fun (V5, V6) -> fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> ((((((((V6(V1))(V2))(V3))(V4))(V7))(V8))(V9))(V10)) end end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--unifyWithLazy'(V0, V1, V2, V3, V4, V5, V6) -> case V0 of {'Idris.Core.Unify.dn--un--__mkUnify', E0, E1} -> (fun (V7, V8) -> fun (V9) -> fun (V10) -> ((((((((V8(V1))(V2))(V3))(V4))(V5))(V6))(V9))(V10)) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Idris.Core.Value.NDCon', E21, E22, E23, E24, E25} -> (fun (V8, V9, V10, V11, V12) -> case V7 of {'Idris.Core.Value.NDCon', E47, E48, E49, E50, E51} -> (fun (V13, V14, V15, V16, V17) -> fun (V18) -> begin (V20 = begin (V19 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V19} end), case V20 of {'Idris.Prelude.Types.Left', E52} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V22) -> case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V10, V15)) of 1 -> begin (V24 = begin (V23 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V23} end), case V24 of {'Idris.Prelude.Types.Left', E54} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E54)); {'Idris.Prelude.Types.Right', E55} -> (fun (V26) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('dn--un--unifyD_Unify_Closure'(V27, V28, V29, V30, V31, V32, V33, V34, V35)) end end end end end end end end end, fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V36, V37, V38, V39, V40, V41, V42, V43, V44)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V45, V46, V47, V48, V49, V50)) end end end end end end, fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V51, V52, V53, V54, V55, V56)) end end end end end end, fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> fun (V62) -> fun (V63) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V57, V58, V59, V60, V61, V62, V63)) end end end end end end end, fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> fun (V69) -> fun (V70) -> fun (V71) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V64, V65, V66, V67, V68, V69, V70, V71)) end end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V72) -> ('Idris.Idris2.Builtin':'un--snd'(V72)) end, V12)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V73) -> ('Idris.Idris2.Builtin':'un--snd'(V73)) end, V17))))(V18)) end(E55)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> ('un--convertError'(V2, V0, V4, V5, {'Idris.Core.Value.NDCon', V8, V9, V10, V11, V12}, {'Idris.Core.Value.NDCon', V13, V14, V15, V16, V17}, V18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E47, E48, E49, E50, E51)); _ -> case V7 of {'Idris.Core.Value.NApp', E36, E37, E38} -> (fun (V74, V75, V76) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E41, E42} -> (fun (V77, V78) -> V78 end(E41, E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V74, V75, V76, V6)); 0 -> fun (V79) -> begin (V80 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Unify if Eq due to something with app"/utf8>> end, V79))), case V80 of {'Idris.Prelude.Types.Left', E39} -> (fun (V81) -> {'Idris.Prelude.Types.Left', V81} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V82) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Idris.Core.Value.NApp', V74, V75, V76}, V79)) end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E36, E37, E38)); {'Idris.Core.Value.NAs', E43, E44, E45, E46} -> (fun (V83, V84, V85, V86) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V86)) end(E43, E44, E45, E46)); _ -> case V6 of {'Idris.Core.Value.NAs', E32, E33, E34, E35} -> (fun (V87, V88, V89, V90) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V90, V7)) end(E32, E33, E34, E35)); _ -> fun (V91) -> begin (V93 = begin (V92 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V92} end), case V93 of {'Idris.Prelude.Types.Left', E26} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V95) -> begin (V96 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V95, V91))), case V96 of {'Idris.Prelude.Types.Left', E28} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E28)); {'Idris.Prelude.Types.Right', E29} -> (fun (V98) -> begin (V99 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end, V91))), case V99 of {'Idris.Prelude.Types.Left', E30} -> (fun (V100) -> {'Idris.Prelude.Types.Left', V100} end(E30)); {'Idris.Prelude.Types.Right', E31} -> (fun (V101) -> ('un--unifyIfEq'(V0, V1, V2, case ('nested--12627-20319--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--12627-20319--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V3, V5, V6, V7, V91)) end(E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E29)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E21, E22, E23, E24, E25)); {'Idris.Core.Value.NTCon', E56, E57, E58, E59, E60} -> (fun (V102, V103, V104, V105, V106) -> case V7 of {'Idris.Core.Value.NTCon', E82, E83, E84, E85, E86} -> (fun (V107, V108, V109, V110, V111) -> fun (V112) -> begin (V132 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun (V113) -> begin (V120 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V114) -> fun (V115) -> fun (V116) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V114, V115, V116)) end end end, fun (V117) -> fun (V118) -> fun (V119) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V117, V118, V119)) end end end}, V103, V113))), case V120 of {'Idris.Prelude.Types.Left', E87} -> (fun (V121) -> {'Idris.Prelude.Types.Left', V121} end(E87)); {'Idris.Prelude.Types.Right', E88} -> (fun (V122) -> begin (V129 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V0, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V123) -> fun (V124) -> fun (V125) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_Name'(V123, V124, V125)) end end end, fun (V126) -> fun (V127) -> fun (V128) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_Name'(V126, V127, V128)) end end end}, V108, V113))), case V129 of {'Idris.Prelude.Types.Left', E89} -> (fun (V130) -> {'Idris.Prelude.Types.Left', V130} end(E89)); {'Idris.Prelude.Types.Right', E90} -> (fun (V131) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Comparing type constructors "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V122)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" and "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V131))))))))} end(E90)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V112))), case V132 of {'Idris.Prelude.Types.Left', E91} -> (fun (V133) -> {'Idris.Prelude.Types.Left', V133} end(E91)); {'Idris.Prelude.Types.Right', E92} -> (fun (V134) -> case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V103, V108)) of 1 -> begin (V136 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V135) -> ('Idris.Idris2.Builtin':'un--snd'(V135)) end, V106))), begin (V138 = ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V137) -> ('Idris.Idris2.Builtin':'un--snd'(V137)) end, V111))), begin (V140 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun (V139) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Constructor "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V103))))} end, V112))), case V140 of {'Idris.Prelude.Types.Left', E93} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E93)); {'Idris.Prelude.Types.Right', E94} -> (fun (V142) -> begin (V150 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun (V143) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V144) -> case V144 of {'Idris.Prelude.Types.Left', E95} -> (fun (V145) -> {'Idris.Prelude.Types.Left', V145} end(E95)); {'Idris.Prelude.Types.Right', E96} -> (fun (V146) -> {'Idris.Prelude.Types.Right', <<""/utf8>>} end(E96)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V147) -> ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V148) -> fun (V149) -> ('un--dumpArg'(V2, V0, V5, V148, V149)) end end, V136, V147)) end, V143)) end, V112))), case V150 of {'Idris.Prelude.Types.Left', E97} -> (fun (V151) -> {'Idris.Prelude.Types.Left', V151} end(E97)); {'Idris.Prelude.Types.Right', E98} -> (fun (V152) -> begin (V160 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun (V153) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V154) -> case V154 of {'Idris.Prelude.Types.Left', E99} -> (fun (V155) -> {'Idris.Prelude.Types.Left', V155} end(E99)); {'Idris.Prelude.Types.Right', E100} -> (fun (V156) -> {'Idris.Prelude.Types.Right', <<""/utf8>>} end(E100)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V157) -> ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V158) -> fun (V159) -> ('un--dumpArg'(V2, V0, V5, V158, V159)) end end, V138, V157)) end, V153)) end, V112))), case V160 of {'Idris.Prelude.Types.Left', E101} -> (fun (V161) -> {'Idris.Prelude.Types.Left', V161} end(E101)); {'Idris.Prelude.Types.Right', E102} -> (fun (V162) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V163) -> fun (V164) -> fun (V165) -> fun (V166) -> fun (V167) -> fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> ('dn--un--unifyD_Unify_Closure'(V163, V164, V165, V166, V167, V168, V169, V170, V171)) end end end end end end end end end, fun (V172) -> fun (V173) -> fun (V174) -> fun (V175) -> fun (V176) -> fun (V177) -> fun (V178) -> fun (V179) -> fun (V180) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V172, V173, V174, V175, V176, V177, V178, V179, V180)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V181) -> fun (V182) -> fun (V183) -> fun (V184) -> fun (V185) -> fun (V186) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V181, V182, V183, V184, V185, V186)) end end end end end end, fun (V187) -> fun (V188) -> fun (V189) -> fun (V190) -> fun (V191) -> fun (V192) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V187, V188, V189, V190, V191, V192)) end end end end end end, fun (V193) -> fun (V194) -> fun (V195) -> fun (V196) -> fun (V197) -> fun (V198) -> fun (V199) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V193, V194, V195, V196, V197, V198, V199)) end end end end end end end, fun (V200) -> fun (V201) -> fun (V202) -> fun (V203) -> fun (V204) -> fun (V205) -> fun (V206) -> fun (V207) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V200, V201, V202, V203, V204, V205, V206, V207)) end end end end end end end end}}, V2, V0, V1, V3, V4, V5, V136, V138))(V112)) end(E102)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E98)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E94)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; 0 -> ('un--convertError'(V2, V0, V4, V5, {'Idris.Core.Value.NTCon', V102, V103, V104, V105, V106}, {'Idris.Core.Value.NTCon', V107, V108, V109, V110, V111}, V112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E82, E83, E84, E85, E86)); _ -> case V7 of {'Idris.Core.Value.NApp', E71, E72, E73} -> (fun (V208, V209, V210) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E76, E77} -> (fun (V211, V212) -> V212 end(E76, E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V208, V209, V210, V6)); 0 -> fun (V213) -> begin (V214 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Unify if Eq due to something with app"/utf8>> end, V213))), case V214 of {'Idris.Prelude.Types.Left', E74} -> (fun (V215) -> {'Idris.Prelude.Types.Left', V215} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V216) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Idris.Core.Value.NApp', V208, V209, V210}, V213)) end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E71, E72, E73)); {'Idris.Core.Value.NAs', E78, E79, E80, E81} -> (fun (V217, V218, V219, V220) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V220)) end(E78, E79, E80, E81)); _ -> case V6 of {'Idris.Core.Value.NAs', E67, E68, E69, E70} -> (fun (V221, V222, V223, V224) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V224, V7)) end(E67, E68, E69, E70)); _ -> fun (V225) -> begin (V227 = begin (V226 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V226} end), case V227 of {'Idris.Prelude.Types.Left', E61} -> (fun (V228) -> {'Idris.Prelude.Types.Left', V228} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V229) -> begin (V230 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V229, V225))), case V230 of {'Idris.Prelude.Types.Left', E63} -> (fun (V231) -> {'Idris.Prelude.Types.Left', V231} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V232) -> begin (V233 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end, V225))), case V233 of {'Idris.Prelude.Types.Left', E65} -> (fun (V234) -> {'Idris.Prelude.Types.Left', V234} end(E65)); {'Idris.Prelude.Types.Right', E66} -> (fun (V235) -> ('un--unifyIfEq'(V0, V1, V2, case ('nested--12627-20319--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--12627-20319--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V3, V5, V6, V7, V225)) end(E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E56, E57, E58, E59, E60)); {'Idris.Core.Value.NDelayed', E103, E104, E105} -> (fun (V236, V237, V238) -> case V7 of {'Idris.Core.Value.NDelayed', E127, E128, E129} -> (fun (V239, V240, V241) -> ((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V242) -> fun (V243) -> fun (V244) -> fun (V245) -> fun (V246) -> fun (V247) -> fun (V248) -> fun (V249) -> ('dn--un--unifyD_Unify_NF'(V242, V243, V244, V245, V246, V247, V248, V249)) end end end end end end end end, fun (V250) -> fun (V251) -> fun (V252) -> fun (V253) -> fun (V254) -> fun (V255) -> fun (V256) -> fun (V257) -> ('dn--un--unifyWithLazyD_Unify_NF'(V250, V251, V252, V253, V254, V255, V256, V257)) end end end end end end end end}, V2, V0, V1, ('un--lower'(V3)), V4, V5))(V238))(V241)) end(E127, E128, E129)); _ -> case V7 of {'Idris.Core.Value.NApp', E116, E117, E118} -> (fun (V258, V259, V260) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E121, E122} -> (fun (V261, V262) -> V262 end(E121, E122)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V258, V259, V260, V6)); 0 -> fun (V263) -> begin (V264 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Unify if Eq due to something with app"/utf8>> end, V263))), case V264 of {'Idris.Prelude.Types.Left', E119} -> (fun (V265) -> {'Idris.Prelude.Types.Left', V265} end(E119)); {'Idris.Prelude.Types.Right', E120} -> (fun (V266) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Idris.Core.Value.NApp', V258, V259, V260}, V263)) end(E120)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E116, E117, E118)); {'Idris.Core.Value.NAs', E123, E124, E125, E126} -> (fun (V267, V268, V269, V270) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V270)) end(E123, E124, E125, E126)); _ -> case V6 of {'Idris.Core.Value.NAs', E112, E113, E114, E115} -> (fun (V271, V272, V273, V274) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V274, V7)) end(E112, E113, E114, E115)); _ -> fun (V275) -> begin (V277 = begin (V276 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V276} end), case V277 of {'Idris.Prelude.Types.Left', E106} -> (fun (V278) -> {'Idris.Prelude.Types.Left', V278} end(E106)); {'Idris.Prelude.Types.Right', E107} -> (fun (V279) -> begin (V280 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V279, V275))), case V280 of {'Idris.Prelude.Types.Left', E108} -> (fun (V281) -> {'Idris.Prelude.Types.Left', V281} end(E108)); {'Idris.Prelude.Types.Right', E109} -> (fun (V282) -> begin (V283 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end, V275))), case V283 of {'Idris.Prelude.Types.Left', E110} -> (fun (V284) -> {'Idris.Prelude.Types.Left', V284} end(E110)); {'Idris.Prelude.Types.Right', E111} -> (fun (V285) -> ('un--unifyIfEq'(V0, V1, V2, case ('nested--12627-20319--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--12627-20319--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V3, V5, V6, V7, V275)) end(E111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E109)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E103, E104, E105)); {'Idris.Core.Value.NDelay', E130, E131, E132, E133} -> (fun (V286, V287, V288, V289) -> case V7 of {'Idris.Core.Value.NDelay', E155, E156, E157, E158} -> (fun (V290, V291, V292, V293) -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V294) -> fun (V295) -> fun (V296) -> fun (V297) -> fun (V298) -> fun (V299) -> fun (V300) -> fun (V301) -> fun (V302) -> ('dn--un--unifyD_Unify_Closure'(V294, V295, V296, V297, V298, V299, V300, V301, V302)) end end end end end end end end end, fun (V303) -> fun (V304) -> fun (V305) -> fun (V306) -> fun (V307) -> fun (V308) -> fun (V309) -> fun (V310) -> fun (V311) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V303, V304, V305, V306, V307, V308, V309, V310, V311)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V312) -> fun (V313) -> fun (V314) -> fun (V315) -> fun (V316) -> fun (V317) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V312, V313, V314, V315, V316, V317)) end end end end end end, fun (V318) -> fun (V319) -> fun (V320) -> fun (V321) -> fun (V322) -> fun (V323) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V318, V319, V320, V321, V322, V323)) end end end end end end, fun (V324) -> fun (V325) -> fun (V326) -> fun (V327) -> fun (V328) -> fun (V329) -> fun (V330) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V324, V325, V326, V327, V328, V329, V330)) end end end end end end end, fun (V331) -> fun (V332) -> fun (V333) -> fun (V334) -> fun (V335) -> fun (V336) -> fun (V337) -> fun (V338) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V331, V332, V333, V334, V335, V336, V337, V338)) end end end end end end end end}}, V2, V0, V1, V3, V4, V5, [V288 | [V289 | []]], [V292 | [V293 | []]])) end(E155, E156, E157, E158)); _ -> case V7 of {'Idris.Core.Value.NApp', E144, E145, E146} -> (fun (V339, V340, V341) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E149, E150} -> (fun (V342, V343) -> V343 end(E149, E150)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V339, V340, V341, V6)); 0 -> fun (V344) -> begin (V345 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Unify if Eq due to something with app"/utf8>> end, V344))), case V345 of {'Idris.Prelude.Types.Left', E147} -> (fun (V346) -> {'Idris.Prelude.Types.Left', V346} end(E147)); {'Idris.Prelude.Types.Right', E148} -> (fun (V347) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Idris.Core.Value.NApp', V339, V340, V341}, V344)) end(E148)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E144, E145, E146)); {'Idris.Core.Value.NAs', E151, E152, E153, E154} -> (fun (V348, V349, V350, V351) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V351)) end(E151, E152, E153, E154)); _ -> case V6 of {'Idris.Core.Value.NAs', E140, E141, E142, E143} -> (fun (V352, V353, V354, V355) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V355, V7)) end(E140, E141, E142, E143)); _ -> fun (V356) -> begin (V358 = begin (V357 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V357} end), case V358 of {'Idris.Prelude.Types.Left', E134} -> (fun (V359) -> {'Idris.Prelude.Types.Left', V359} end(E134)); {'Idris.Prelude.Types.Right', E135} -> (fun (V360) -> begin (V361 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V360, V356))), case V361 of {'Idris.Prelude.Types.Left', E136} -> (fun (V362) -> {'Idris.Prelude.Types.Left', V362} end(E136)); {'Idris.Prelude.Types.Right', E137} -> (fun (V363) -> begin (V364 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end, V356))), case V364 of {'Idris.Prelude.Types.Left', E138} -> (fun (V365) -> {'Idris.Prelude.Types.Left', V365} end(E138)); {'Idris.Prelude.Types.Right', E139} -> (fun (V366) -> ('un--unifyIfEq'(V0, V1, V2, case ('nested--12627-20319--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--12627-20319--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V3, V5, V6, V7, V356)) end(E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E130, E131, E132, E133)); {'Idris.Core.Value.NForce', E159, E160, E161, E162} -> (fun (V367, V368, V369, V370) -> case V7 of {'Idris.Core.Value.NForce', E184, E185, E186, E187} -> (fun (V371, V372, V373, V374) -> fun (V375) -> begin (V392 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V376) -> fun (V377) -> fun (V378) -> fun (V379) -> fun (V380) -> fun (V381) -> fun (V382) -> fun (V383) -> ('dn--un--unifyD_Unify_NF'(V376, V377, V378, V379, V380, V381, V382, V383)) end end end end end end end end, fun (V384) -> fun (V385) -> fun (V386) -> fun (V387) -> fun (V388) -> fun (V389) -> fun (V390) -> fun (V391) -> ('dn--un--unifyWithLazyD_Unify_NF'(V384, V385, V386, V387, V388, V389, V390, V391)) end end end end end end end end}, V2, V0, V1, ('un--lower'(V3)), V4, V5))(V369))(V373))(V375))), case V392 of {'Idris.Prelude.Types.Left', E188} -> (fun (V393) -> {'Idris.Prelude.Types.Left', V393} end(E188)); {'Idris.Prelude.Types.Right', E189} -> (fun (V394) -> begin (V442 = (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V395) -> fun (V396) -> fun (V397) -> fun (V398) -> fun (V399) -> fun (V400) -> fun (V401) -> fun (V402) -> fun (V403) -> ('dn--un--unifyD_Unify_Closure'(V395, V396, V397, V398, V399, V400, V401, V402, V403)) end end end end end end end end end, fun (V404) -> fun (V405) -> fun (V406) -> fun (V407) -> fun (V408) -> fun (V409) -> fun (V410) -> fun (V411) -> fun (V412) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V404, V405, V406, V407, V408, V409, V410, V411, V412)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V413) -> fun (V414) -> fun (V415) -> fun (V416) -> fun (V417) -> fun (V418) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V413, V414, V415, V416, V417, V418)) end end end end end end, fun (V419) -> fun (V420) -> fun (V421) -> fun (V422) -> fun (V423) -> fun (V424) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V419, V420, V421, V422, V423, V424)) end end end end end end, fun (V425) -> fun (V426) -> fun (V427) -> fun (V428) -> fun (V429) -> fun (V430) -> fun (V431) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V425, V426, V427, V428, V429, V430, V431)) end end end end end end end, fun (V432) -> fun (V433) -> fun (V434) -> fun (V435) -> fun (V436) -> fun (V437) -> fun (V438) -> fun (V439) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V432, V433, V434, V435, V436, V437, V438, V439)) end end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V440) -> ('Idris.Idris2.Builtin':'un--snd'(V440)) end, V370)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V441) -> ('Idris.Idris2.Builtin':'un--snd'(V441)) end, V374))))(V375))), case V442 of {'Idris.Prelude.Types.Left', E190} -> (fun (V443) -> {'Idris.Prelude.Types.Left', V443} end(E190)); {'Idris.Prelude.Types.Right', E191} -> (fun (V444) -> {'Idris.Prelude.Types.Right', ('un--union'(V394, V444))} end(E191)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E189)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E184, E185, E186, E187)); _ -> case V7 of {'Idris.Core.Value.NApp', E173, E174, E175} -> (fun (V445, V446, V447) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E178, E179} -> (fun (V448, V449) -> V449 end(E178, E179)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V445, V446, V447, V6)); 0 -> fun (V450) -> begin (V451 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Unify if Eq due to something with app"/utf8>> end, V450))), case V451 of {'Idris.Prelude.Types.Left', E176} -> (fun (V452) -> {'Idris.Prelude.Types.Left', V452} end(E176)); {'Idris.Prelude.Types.Right', E177} -> (fun (V453) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Idris.Core.Value.NApp', V445, V446, V447}, V450)) end(E177)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E173, E174, E175)); {'Idris.Core.Value.NAs', E180, E181, E182, E183} -> (fun (V454, V455, V456, V457) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V457)) end(E180, E181, E182, E183)); _ -> case V6 of {'Idris.Core.Value.NAs', E169, E170, E171, E172} -> (fun (V458, V459, V460, V461) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V461, V7)) end(E169, E170, E171, E172)); _ -> fun (V462) -> begin (V464 = begin (V463 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V463} end), case V464 of {'Idris.Prelude.Types.Left', E163} -> (fun (V465) -> {'Idris.Prelude.Types.Left', V465} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V466) -> begin (V467 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V466, V462))), case V467 of {'Idris.Prelude.Types.Left', E165} -> (fun (V468) -> {'Idris.Prelude.Types.Left', V468} end(E165)); {'Idris.Prelude.Types.Right', E166} -> (fun (V469) -> begin (V470 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end, V462))), case V470 of {'Idris.Prelude.Types.Left', E167} -> (fun (V471) -> {'Idris.Prelude.Types.Left', V471} end(E167)); {'Idris.Prelude.Types.Right', E168} -> (fun (V472) -> ('un--unifyIfEq'(V0, V1, V2, case ('nested--12627-20319--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--12627-20319--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V3, V5, V6, V7, V462)) end(E168)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end end(E159, E160, E161, E162)); {'Idris.Core.Value.NApp', E192, E193, E194} -> (fun (V473, V474, V475) -> case V474 of {'Idris.Core.Value.NMeta', E198, E199, E200} -> (fun (V476, V477, V478) -> case V7 of {'Idris.Core.Value.NApp', E204, E205, E206} -> (fun (V479, V480, V481) -> case V480 of {'Idris.Core.Value.NMeta', E210, E211, E212} -> (fun (V482, V483, V484) -> fun (V485) -> begin (V487 = begin (V486 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V486} end), case V487 of {'Idris.Prelude.Types.Left', E213} -> (fun (V488) -> {'Idris.Prelude.Types.Left', V488} end(E213)); {'Idris.Prelude.Types.Right', E214} -> (fun (V489) -> begin (V490 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V489, V5, V6, V7, V485))), case V490 of {'Idris.Prelude.Types.Left', E215} -> (fun (V491) -> {'Idris.Prelude.Types.Left', V491} end(E215)); {'Idris.Prelude.Types.Right', E216} -> (fun (V492) -> begin (V493 = {'Idris.Core.Value.NMeta', V476, V477, V478}), begin (V494 = {'Idris.Core.Value.NMeta', V482, V483, V484}), case V492 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> (('un--unifyBothApps'(V0, V1, V2, ('un--lower'(V3)), V4, V5, V473, V493, V475, V479, V494, V481))(V485)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E216)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E214)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E210, E211, E212)); _ -> case V7 of {'Idris.Core.Value.NApp', E207, E208, E209} -> (fun (V495, V496, V497) -> ('un--unifyBothApps'(V0, V1, V2, ('un--lower'(V3)), V4, V5, V473, V474, V475, V495, V496, V497)) end(E207, E208, E209)); _ -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V473, V474, V475, V7)) end end end(E204, E205, E206)); _ -> case V7 of {'Idris.Core.Value.NApp', E201, E202, E203} -> (fun (V498, V499, V500) -> ('un--unifyBothApps'(V0, V1, V2, ('un--lower'(V3)), V4, V5, V473, V474, V475, V498, V499, V500)) end(E201, E202, E203)); _ -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V473, V474, V475, V7)) end end end(E198, E199, E200)); _ -> case V7 of {'Idris.Core.Value.NApp', E195, E196, E197} -> (fun (V501, V502, V503) -> ('un--unifyBothApps'(V0, V1, V2, ('un--lower'(V3)), V4, V5, V473, V474, V475, V501, V502, V503)) end(E195, E196, E197)); _ -> ('un--unifyApp'(V0, V1, V2, 0, ('un--lower'(V3)), V4, V5, V473, V474, V475, V7)) end end end(E192, E193, E194)); _ -> case V7 of {'Idris.Core.Value.NApp', E10, E11, E12} -> (fun (V504, V505, V506) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E15, E16} -> (fun (V507, V508) -> V508 end(E15, E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V504, V505, V506, V6)); 0 -> fun (V509) -> begin (V510 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Unify if Eq due to something with app"/utf8>> end, V509))), case V510 of {'Idris.Prelude.Types.Left', E13} -> (fun (V511) -> {'Idris.Prelude.Types.Left', V511} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V512) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, V6, {'Idris.Core.Value.NApp', V504, V505, V506}, V509)) end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E10, E11, E12)); {'Idris.Core.Value.NAs', E17, E18, E19, E20} -> (fun (V513, V514, V515, V516) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V6, V516)) end(E17, E18, E19, E20)); _ -> case V6 of {'Idris.Core.Value.NAs', E6, E7, E8, E9} -> (fun (V517, V518, V519, V520) -> ('un--unifyNoEta'(V0, V1, V2, V3, V4, V5, V520, V7)) end(E6, E7, E8, E9)); _ -> fun (V521) -> begin (V523 = begin (V522 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V522} end), case V523 of {'Idris.Prelude.Types.Left', E0} -> (fun (V524) -> {'Idris.Prelude.Types.Left', V524} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V525) -> begin (V526 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V525, V521))), case V526 of {'Idris.Prelude.Types.Left', E2} -> (fun (V527) -> {'Idris.Prelude.Types.Left', V527} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V528) -> begin (V529 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.noeta"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Nothing else worked, unifyIfEq"/utf8>> end, V521))), case V529 of {'Idris.Prelude.Types.Left', E4} -> (fun (V530) -> {'Idris.Prelude.Types.Left', V530} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V531) -> ('un--unifyIfEq'(V0, V1, V2, case ('nested--12627-20319--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V6)) of 1 -> 1; 0 -> ('nested--12627-20319--in--un--isDelay'(V2, V7, V6, V5, V4, V3, V1, V0, V7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V4, V3, V5, V6, V7, V521)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end.
'un--unifyInvertible'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> begin (V16 = begin (V15 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V15} end), case V16 of {'Idris.Prelude.Types.Left', E0} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V18) -> begin (V49 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'({'Idris.Core.Name.Resolved', V8}, case V18 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48) -> V19 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V14))), case V49 of {'Idris.Prelude.Types.Left', E32} -> (fun (V50) -> {'Idris.Prelude.Types.Left', V50} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V51) -> case V51 of {'Idris.Prelude.Types.Just', E34} -> (fun (V52) -> begin (V56 = begin (V53 = (('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V0, V2, V18, V6, ('Idris.Idris2.Core.TT':'un--embed'(V52))))(V14))), case V53 of {'Idris.Prelude.Types.Left', E35} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V55) -> (('un--getArgTypes'(V2, V0, V18, V55, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V9, V10))))(V14)) end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V56 of {'Idris.Prelude.Types.Left', E37} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V58) -> begin (V66 = (('Idris.Idris2.Prelude.Types':'un--maybe'(fun () -> fun (V59) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end, fun () -> fun (V60) -> fun (V61) -> begin (V62 = (('Idris.Idris2.Core.Normalise.Eval':'un--nf'(V0, V2, V18, V6, ('Idris.Idris2.Core.TT':'un--embed'(V60))))(V61))), case V62 of {'Idris.Prelude.Types.Left', E39} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V64) -> (('un--getArgTypes'(V2, V0, V18, V64, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V65) -> ('Idris.Idris2.Builtin':'un--snd'(V65)) end, V13))))(V61)) end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end, V11))(V14))), case V66 of {'Idris.Prelude.Types.Left', E41} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V68) -> begin (V69 = (('un--headsConvert'(V2, V0, V1, V4, V5, V6, V58, V68))(V14))), case V69 of {'Idris.Prelude.Types.Left', E43} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V71) -> case V71 of 1 -> case ('Idris.Idris2.Prelude.Types.List':'un--reverse'(V10)) of [E45 | E46] -> (fun (V72, V73) -> case ('Idris.Idris2.Prelude.Types.List':'un--reverse'(V13)) of [E47 | E48] -> (fun (V74, V75) -> ('Idris.Idris2.Core.UnifyState':'un--tryUnify'(V0, V1, fun (V76) -> case V3 of 1 -> begin (V77 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.invertible"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Unifying invertible"/utf8>> end, V76))), case V77 of {'Idris.Prelude.Types.Left', E49} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E49)); {'Idris.Prelude.Types.Right', E50} -> (fun (V79) -> begin (V98 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V80) -> fun (V81) -> fun (V82) -> fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> ('dn--un--unifyD_Unify_Closure'(V80, V81, V82, V83, V84, V85, V86, V87, V88)) end end end end end end end end end, fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V89, V90, V91, V92, V93, V94, V95, V96, V97)) end end end end end end end end end}, V2, V0, V1, V4, V5, V6))(('Idris.Idris2.Builtin':'un--snd'(V74))))(V72))(V76))), case V98 of {'Idris.Prelude.Types.Left', E51} -> (fun (V99) -> {'Idris.Prelude.Types.Left', V99} end(E51)); {'Idris.Prelude.Types.Right', E52} -> (fun (V100) -> begin (V108 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.invertible"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Constraints "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V101) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V101)) end, fun (V102) -> fun (V103) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V102, V103)) end end}, case V100 of {'Idris.Core.Unify.MkUnifyResult', E53, E54, E55, E56} -> (fun (V104, V105, V106, V107) -> V104 end(E53, E54, E55, E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))) end, V76))), case V108 of {'Idris.Prelude.Types.Left', E57} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E57)); {'Idris.Prelude.Types.Right', E58} -> (fun (V110) -> begin (V128 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> fun (V116) -> fun (V117) -> fun (V118) -> fun (V119) -> ('dn--un--unifyD_Unify_NF'(V112, V113, V114, V115, V116, V117, V118, V119)) end end end end end end end end, fun (V120) -> fun (V121) -> fun (V122) -> fun (V123) -> fun (V124) -> fun (V125) -> fun (V126) -> fun (V127) -> ('dn--un--unifyWithLazyD_Unify_NF'(V120, V121, V122, V123, V124, V125, V126, V127)) end end end end end end end end}, V2, V0, V1, V4, V5, V6))((V12(('Idris.Idris2.Prelude.Types.List':'un--reverse'(V75))))))({'Idris.Core.Value.NApp', V5, {'Idris.Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Prelude.Types.List':'un--reverse'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V111) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V111} end, V73))))}))(V76))), case V128 of {'Idris.Prelude.Types.Left', E59} -> (fun (V129) -> {'Idris.Prelude.Types.Left', V129} end(E59)); {'Idris.Prelude.Types.Right', E60} -> (fun (V130) -> {'Idris.Prelude.Types.Right', ('un--union'(V100, V130))} end(E60)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E50)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 0 -> begin (V131 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.invertible"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Unifying invertible"/utf8>> end, V76))), case V131 of {'Idris.Prelude.Types.Left', E61} -> (fun (V132) -> {'Idris.Prelude.Types.Left', V132} end(E61)); {'Idris.Prelude.Types.Right', E62} -> (fun (V133) -> begin (V152 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V134) -> fun (V135) -> fun (V136) -> fun (V137) -> fun (V138) -> fun (V139) -> fun (V140) -> fun (V141) -> fun (V142) -> ('dn--un--unifyD_Unify_Closure'(V134, V135, V136, V137, V138, V139, V140, V141, V142)) end end end end end end end end end, fun (V143) -> fun (V144) -> fun (V145) -> fun (V146) -> fun (V147) -> fun (V148) -> fun (V149) -> fun (V150) -> fun (V151) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V143, V144, V145, V146, V147, V148, V149, V150, V151)) end end end end end end end end end}, V2, V0, V1, V4, V5, V6))(V72))(('Idris.Idris2.Builtin':'un--snd'(V74))))(V76))), case V152 of {'Idris.Prelude.Types.Left', E63} -> (fun (V153) -> {'Idris.Prelude.Types.Left', V153} end(E63)); {'Idris.Prelude.Types.Right', E64} -> (fun (V154) -> begin (V162 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.invertible"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Constraints "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V155) -> ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V155)) end, fun (V156) -> fun (V157) -> ('Idris.Idris2.Prelude.Show':'dn--un--showPrec_Show_Int'(V156, V157)) end end}, case V154 of {'Idris.Core.Unify.MkUnifyResult', E65, E66, E67, E68} -> (fun (V158, V159, V160, V161) -> V158 end(E65, E66, E67, E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))) end, V76))), case V162 of {'Idris.Prelude.Types.Left', E69} -> (fun (V163) -> {'Idris.Prelude.Types.Left', V163} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V164) -> begin (V182 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V166) -> fun (V167) -> fun (V168) -> fun (V169) -> fun (V170) -> fun (V171) -> fun (V172) -> fun (V173) -> ('dn--un--unifyD_Unify_NF'(V166, V167, V168, V169, V170, V171, V172, V173)) end end end end end end end end, fun (V174) -> fun (V175) -> fun (V176) -> fun (V177) -> fun (V178) -> fun (V179) -> fun (V180) -> fun (V181) -> ('dn--un--unifyWithLazyD_Unify_NF'(V174, V175, V176, V177, V178, V179, V180, V181)) end end end end end end end end}, V2, V0, V1, V4, V5, V6))({'Idris.Core.Value.NApp', V5, {'Idris.Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Prelude.Types.List':'un--reverse'(('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V165) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V165} end, V73))))}))((V12(('Idris.Idris2.Prelude.Types.List':'un--reverse'(V75))))))(V76))), case V182 of {'Idris.Prelude.Types.Left', E71} -> (fun (V183) -> {'Idris.Prelude.Types.Left', V183} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V184) -> {'Idris.Prelude.Types.Right', ('un--union'(V154, V184))} end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E62)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V185) -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing hole application [1]"/utf8>>, V6, {'Idris.Core.Value.NApp', V5, {'Idris.Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V186) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V186} end, V10))}, (V12(V13)), V185)) end, V14)) end(E47, E48)); _ -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing hole application [2]"/utf8>>, V6, {'Idris.Core.Value.NApp', V5, {'Idris.Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V187) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V187} end, V10))}, (V12(V13)), V14)) end end(E45, E46)); _ -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing hole application [2]"/utf8>>, V6, {'Idris.Core.Value.NApp', V5, {'Idris.Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V188) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V188} end, V10))}, (V12(V13)), V14)) end; 0 -> ('un--postpone'(V2, V0, V1, V5, V4, <<"Postponing hole application [3]"/utf8>>, V6, {'Idris.Core.Value.NApp', V5, {'Idris.Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V189) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V189} end, V10))}, (V12(V13)), V14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E34)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('un--ufail'(V5, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"No such metavariable "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7)))), V14)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unifyIfEq'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> begin (V11 = begin (V10 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V10} end), case V11 of {'Idris.Prelude.Types.Left', E0} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V13) -> begin (V14 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convertInf_Convert_NF'(V0, V2, V13, V6, V7, V8, V9))), case V14 of {'Idris.Prelude.Types.Left', E2} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V16) -> case V16 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> case V3 of 1 -> ('un--postpone'(V2, V0, V1, V4, V5, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Postponing unifyIfEq "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Bool'(case V5 of {'Idris.Core.Unify.MkUnifyInfo', E4, E5} -> (fun (V17, V18) -> V17 end(E4, E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))), V6, V7, V8, V9)); 0 -> ('un--convertError'(V2, V0, V4, V6, V7, V8, V9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unifyHoleApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V11 of {'Idris.Core.Value.NTCon', E0, E1, E2, E3, E4} -> (fun (V12, V13, V14, V15, V16) -> fun (V17) -> begin (V19 = begin (V18 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V18} end), case V19 of {'Idris.Prelude.Types.Left', E5} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E5)); {'Idris.Prelude.Types.Right', E6} -> (fun (V21) -> begin (V52 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(V13, case V21 of {'Idris.Core.Context.MkDefs', E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36} -> (fun (V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51) -> V22 end(E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V17))), case V52 of {'Idris.Prelude.Types.Left', E37} -> (fun (V53) -> {'Idris.Prelude.Types.Left', V53} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V54) -> ('un--unifyInvertible'(V0, V1, V2, V3, ('un--lower'(V4)), V5, V6, V7, V8, V9, V10, V54, fun (V55) -> {'Idris.Core.Value.NTCon', V12, V13, V14, V15, V55} end, V16, V17)) end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E0, E1, E2, E3, E4)); {'Idris.Core.Value.NDCon', E39, E40, E41, E42, E43} -> (fun (V56, V57, V58, V59, V60) -> fun (V61) -> begin (V63 = begin (V62 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V62} end), case V63 of {'Idris.Prelude.Types.Left', E44} -> (fun (V64) -> {'Idris.Prelude.Types.Left', V64} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V65) -> begin (V96 = ('Idris.Idris2.Core.Context':'un--lookupTyExact'(V57, case V65 of {'Idris.Core.Context.MkDefs', E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75} -> (fun (V66, V67, V68, V69, V70, V71, V72, V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95) -> V66 end(E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69, E70, E71, E72, E73, E74, E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V61))), case V96 of {'Idris.Prelude.Types.Left', E76} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V98) -> ('un--unifyInvertible'(V0, V1, V2, V3, ('un--lower'(V4)), V5, V6, V7, V8, V9, V10, V98, fun (V99) -> {'Idris.Core.Value.NDCon', V56, V57, V58, V59, V99} end, V60, V61)) end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E39, E40, E41, E42, E43)); {'Idris.Core.Value.NApp', E78, E79, E80} -> (fun (V100, V101, V102) -> case V101 of {'Idris.Core.Value.NLocal', E81, E82} -> (fun (V103, V104) -> fun (V105) -> ('un--unifyInvertible'(V0, V1, V2, V3, ('un--lower'(V4)), V5, V6, V7, V8, V9, V10, {'Idris.Prelude.Types.Nothing'}, fun (V106) -> {'Idris.Core.Value.NApp', V100, {'Idris.Core.Value.NLocal', V103, V104}, V106} end, V102, V105)) end end(E81, E82)); {'Idris.Core.Value.NMeta', E83, E84, E85} -> (fun (V107, V108, V109) -> fun (V110) -> begin (V112 = begin (V111 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V111} end), case V112 of {'Idris.Prelude.Types.Left', E86} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V114) -> begin (V145 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'({'Idris.Core.Name.Resolved', V108}, case V114 of {'Idris.Core.Context.MkDefs', E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117} -> (fun (V115, V116, V117, V118, V119, V120, V121, V122, V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144) -> V115 end(E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V110))), case V145 of {'Idris.Prelude.Types.Left', E118} -> (fun (V146) -> {'Idris.Prelude.Types.Left', V146} end(E118)); {'Idris.Prelude.Types.Right', E119} -> (fun (V147) -> begin (V148 = {'Idris.Core.Value.NApp', V100, {'Idris.Core.Value.NMeta', V107, V108, V109}, V102}), case V147 of {'Idris.Prelude.Types.Just', E120} -> (fun (V149) -> begin (V170 = case ('nested--12576-15238--in--un--isPatName'(V2, V109, V108, V107, V102, V100, V148, V10, V9, V8, V7, V6, V5, V4, V3, V1, V0, V107)) of 1 -> 1; 0 -> case V149 of {'Idris.Core.Context.Context.MkGlobalDef', E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140} -> (fun (V150, V151, V152, V153, V154, V155, V156, V157, V158, V159, V160, V161, V162, V163, V164, V165, V166, V167, V168, V169) -> V164 end(E121, E122, E123, E124, E125, E126, E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V170 of 1 -> ('un--unifyInvertible'(V0, V1, V2, V3, ('un--lower'(V4)), V5, V6, V7, V8, V9, V10, {'Idris.Prelude.Types.Nothing'}, fun (V171) -> {'Idris.Core.Value.NApp', V100, {'Idris.Core.Value.NMeta', V107, V108, V109}, V171} end, V102, V110)); 0 -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing hole application"/utf8>>, V6, {'Idris.Core.Value.NApp', V5, {'Idris.Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V172) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V172} end, V10))}, V148, V110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E120)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, V100, V7, V110)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E119)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E83, E84, E85)); _ -> fun (V173) -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing hole application"/utf8>>, V6, {'Idris.Core.Value.NApp', V5, {'Idris.Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V174) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V174} end, V10))}, V11, V173)) end end end(E78, E79, E80)); _ -> fun (V175) -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing hole application"/utf8>>, V6, {'Idris.Core.Value.NApp', V5, {'Idris.Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V176) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V176} end, V10))}, V11, V175)) end end.
'un--unifyHole'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> begin (V15 = begin (V14 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V14} end), case V15 of {'Idris.Prelude.Types.Left', E0} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V17) -> begin (V18 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V17, V13))), case V18 of {'Idris.Prelude.Types.Left', E2} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V20) -> begin (V21 = case ('Idris.Idris2.Data.List':'un--isNil'(V11)) of 1 -> V10; 0 -> ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V10, V11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V38 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.hole"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun (V22) -> begin (V24 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V23) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalArg'(V0, V2, V20, V23)) end, V21, [], V22))), case V24 of {'Idris.Prelude.Types.Left', E4} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V26) -> begin (V29 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V27) -> fun (V28) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, V2, V20, V6, V27, V28)) end end, V26, [], V22))), case V29 of {'Idris.Prelude.Types.Left', E6} -> (fun (V30) -> {'Idris.Prelude.Types.Left', V30} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V31) -> begin (V32 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, V2, V20, V6, V12, V22))), case V32 of {'Idris.Prelude.Types.Left', E8} -> (fun (V33) -> {'Idris.Prelude.Types.Left', V33} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V34) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Unifying: "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V8)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V35) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V35)) end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V36, V37)) end end}, V31)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" with "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V34))))))))))))} end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V13))), case V38 of {'Idris.Prelude.Types.Left', E10} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V40) -> begin (V41 = ('un--patternEnv'(V0, V1, V2, V6, V21, V13))), case V41 of {'Idris.Prelude.Types.Left', E12} -> (fun (V42) -> {'Idris.Prelude.Types.Left', V42} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V43) -> case V43 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> begin (V74 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'({'Idris.Core.Name.Resolved', V9}, case V17 of {'Idris.Core.Context.MkDefs', E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43} -> (fun (V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69, V70, V71, V72, V73) -> V44 end(E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V13))), case V74 of {'Idris.Prelude.Types.Left', E44} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V76) -> case V76 of {'Idris.Prelude.Types.Just', E46} -> (fun (V77) -> case V77 of {'Idris.Core.Context.Context.MkGlobalDef', E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66} -> (fun (V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92, V93, V94, V95, V96, V97) -> case V95 of {'Idris.Core.Context.Context.Hole', E67, E68} -> (fun (V98, V99) -> case case V77 of {'Idris.Core.Context.Context.MkGlobalDef', E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88} -> (fun (V100, V101, V102, V103, V104, V105, V106, V107, V108, V109, V110, V111, V112, V113, V114, V115, V116, V117, V118, V119) -> V114 end(E69, E70, E71, E72, E73, E74, E75, E76, E77, E78, E79, E80, E81, E82, E83, E84, E85, E86, E87, E88)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyHoleApp'(V0, V1, V2, V3, V4, V5, V6, V8, V9, V10, V11, V12))(V13)); 0 -> (('un--postponePatVar'(V0, V1, V2, V3, V4, V5, V6, V8, V9, V10, V11, V12))(V13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E67, E68)); _ -> (('un--postponePatVar'(V0, V1, V2, V3, V4, V5, V6, V8, V9, V10, V11, V12))(V13)) end end(E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E46)); _ -> (('un--postponePatVar'(V0, V1, V2, V3, V4, V5, V6, V8, V9, V10, V11, V12))(V13)) end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end()); {'Idris.Prelude.Types.Just', E89} -> (fun (V120) -> case V120 of {'Idris.Builtin.DPair.MkDPair', E90, E91} -> (fun (V121, V122) -> case V122 of {'Idris.Builtin.MkPair', E92, E93} -> (fun (V123, V124) -> begin (V155 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'({'Idris.Core.Name.Resolved', V9}, case V17 of {'Idris.Core.Context.MkDefs', E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123} -> (fun (V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142, V143, V144, V145, V146, V147, V148, V149, V150, V151, V152, V153, V154) -> V125 end(E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106, E107, E108, E109, E110, E111, E112, E113, E114, E115, E116, E117, E118, E119, E120, E121, E122, E123)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V13))), case V155 of {'Idris.Prelude.Types.Left', E124} -> (fun (V156) -> {'Idris.Prelude.Types.Left', V156} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V157) -> begin (V158 = {'Idris.Prelude.Types.Just', {'Idris.Builtin.DPair.MkDPair', V121, {'Idris.Builtin.MkPair', V123, V124}}}), case V157 of {'Idris.Prelude.Types.Just', E126} -> (fun (V159) -> begin (V160 = {'Idris.Prelude.Types.Just', V159}), (('case--case block in case block in unifyHole-16459'(V2, V12, V11, V10, V9, V8, V7, V6, V5, V4, V3, V1, V0, V17, V20, V21, V121, V123, V124, V158, V159, V160, case V159 of {'Idris.Core.Context.Context.MkGlobalDef', E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146} -> (fun (V161, V162, V163, V164, V165, V166, V167, V168, V169, V170, V171, V172, V173, V174, V175, V176, V177, V178, V179, V180) -> V178 end(E127, E128, E129, E130, E131, E132, E133, E134, E135, E136, E137, E138, E139, E140, E141, E142, E143, E144, E145, E146)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V13)) end end(E126)); _ -> (('un--postponePatVar'(V0, V1, V2, V3, V4, V5, V6, V8, V9, V10, V11, V12))(V13)) end end end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E92, E93)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E90, E91)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E89)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--unifyD'(V0, V1, V2, V3, V4) -> case V0 of {'Idris.Core.Unify.dn--un--__mkUnify', E0, E1} -> (fun (V5, V6) -> fun (V7) -> fun (V8) -> fun (V9) -> fun (V10) -> ((((((((V5(V1))(V2))(V3))(V4))(V7))(V8))(V9))(V10)) end end end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--unifyBothBinders'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13) -> case V8 of {'Idris.Core.TT.Pi', E0, E1, E2, E3} -> (fun (V14, V15, V16, V17) -> fun (V18) -> case V12 of {'Idris.Core.TT.Pi', E4, E5, E6, E7} -> (fun (V19, V20, V21, V22) -> begin (V24 = begin (V23 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V23} end), case V24 of {'Idris.Prelude.Types.Left', E8} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V26) -> case ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--/=_Eq_ZeroOneOmega'(V15, V20)) of 1 -> ('un--convertError'(V2, V0, V4, V5, {'Idris.Core.Value.NBind', V6, V7, {'Idris.Core.TT.Pi', V14, V15, V16, V17}, V9}, {'Idris.Core.Value.NBind', V10, V11, {'Idris.Core.TT.Pi', V19, V20, V21, V22}, V13}, V18)); 0 -> begin (V27 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V26, V18))), case V27 of {'Idris.Prelude.Types.Left', E10} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V29) -> begin (V30 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V29, V5, V17, V18))), case V30 of {'Idris.Prelude.Types.Left', E12} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V32) -> begin (V37 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.binder"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun (V33) -> begin (V34 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V29, V5, V22, V33))), case V34 of {'Idris.Prelude.Types.Left', E14} -> (fun (V35) -> {'Idris.Prelude.Types.Left', V35} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V36) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Unifying arg types "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V32)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" and "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V36))))))))} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V18))), case V37 of {'Idris.Prelude.Types.Left', E16} -> (fun (V38) -> {'Idris.Prelude.Types.Left', V38} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V39) -> begin (V58 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> fun (V48) -> ('dn--un--unifyD_Unify_Closure'(V40, V41, V42, V43, V44, V45, V46, V47, V48)) end end end end end end end end end, fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V49, V50, V51, V52, V53, V54, V55, V56, V57)) end end end end end end end end end}, V2, V0, V1, ('un--lower'(V3)), V4, V5))(V17))(V22))(V18))), case V58 of {'Idris.Prelude.Types.Left', E18} -> (fun (V59) -> {'Idris.Prelude.Types.Left', V59} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V60) -> begin (V61 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V0, V1, <<"x"/utf8>>, V18))), case V61 of {'Idris.Prelude.Types.Left', E20} -> (fun (V62) -> {'Idris.Prelude.Types.Left', V62} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V63) -> begin (V64 = {'Idris.Core.Env.::', {'Idris.Core.TT.Pi', V19, V20, {'Idris.Core.TT.Explicit'}, V32}, V5}), ('case--case block in unifyBothBinders-19009'(V2, V17, V16, V15, V14, V22, V21, V20, V19, V13, V11, V10, V9, V7, V6, V5, V4, V3, V1, V0, V26, V29, V32, V60, V63, V64, case V60 of {'Idris.Core.Unify.MkUnifyResult', E22, E23, E24, E25} -> (fun (V65, V66, V67, V68) -> V65 end(E22, E23, E24, E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V18)) end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E4, E5, E6, E7)); _ -> ('un--convertError'(V2, V0, V4, V5, {'Idris.Core.Value.NBind', V6, V7, V8, V9}, {'Idris.Core.Value.NBind', V10, V11, V12, V13}, V18)) end end end(E0, E1, E2, E3)); {'Idris.Core.TT.Lam', E26, E27, E28, E29} -> (fun (V69, V70, V71, V72) -> fun (V73) -> case V12 of {'Idris.Core.TT.Lam', E30, E31, E32, E33} -> (fun (V74, V75, V76, V77) -> begin (V79 = begin (V78 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V78} end), case V79 of {'Idris.Prelude.Types.Left', E34} -> (fun (V80) -> {'Idris.Prelude.Types.Left', V80} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V81) -> case ('Idris.Idris2.Algebra.ZeroOneOmega':'dn--un--/=_Eq_ZeroOneOmega'(V70, V75)) of 1 -> ('un--convertError'(V2, V0, V4, V5, {'Idris.Core.Value.NBind', V6, V7, {'Idris.Core.TT.Lam', V69, V70, V71, V72}, V9}, {'Idris.Core.Value.NBind', V10, V11, {'Idris.Core.TT.Lam', V74, V75, V76, V77}, V13}, V73)); 0 -> begin (V82 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V81, V73))), case V82 of {'Idris.Prelude.Types.Left', E36} -> (fun (V83) -> {'Idris.Prelude.Types.Left', V83} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V84) -> begin (V103 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> fun (V89) -> fun (V90) -> fun (V91) -> fun (V92) -> fun (V93) -> ('dn--un--unifyD_Unify_Closure'(V85, V86, V87, V88, V89, V90, V91, V92, V93)) end end end end end end end end end, fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> fun (V102) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V94, V95, V96, V97, V98, V99, V100, V101, V102)) end end end end end end end end end}, V2, V0, V1, ('un--lower'(V3)), V4, V5))(V72))(V77))(V73))), case V103 of {'Idris.Prelude.Types.Left', E38} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E38)); {'Idris.Prelude.Types.Right', E39} -> (fun (V105) -> begin (V106 = ('Idris.Idris2.Core.UnifyState':'un--genVarName'(V0, V1, <<"x"/utf8>>, V73))), case V106 of {'Idris.Prelude.Types.Left', E40} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E40)); {'Idris.Prelude.Types.Right', E41} -> (fun (V108) -> begin (V109 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V84, V5, V72, V73))), case V109 of {'Idris.Prelude.Types.Left', E42} -> (fun (V110) -> {'Idris.Prelude.Types.Left', V110} end(E42)); {'Idris.Prelude.Types.Right', E43} -> (fun (V111) -> begin (V112 = {'Idris.Core.Env.::', {'Idris.Core.TT.Lam', V69, V70, {'Idris.Core.TT.Explicit'}, V111}, V5}), begin (V113 = (((V9(V81))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), V5, {'Idris.Core.TT.Ref', V4, {'Idris.Core.TT.Bound'}, V108}))))(V73))), case V113 of {'Idris.Prelude.Types.Left', E44} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V115) -> begin (V116 = (((V13(V81))(('Idris.Idris2.Core.Normalise.Eval':'un--toClosure'(('Idris.Idris2.Core.Value':'un--defaultOpts'()), V5, {'Idris.Core.TT.Ref', V4, {'Idris.Core.TT.Bound'}, V108}))))(V73))), case V116 of {'Idris.Prelude.Types.Left', E46} -> (fun (V117) -> {'Idris.Prelude.Types.Left', V117} end(E46)); {'Idris.Prelude.Types.Right', E47} -> (fun (V118) -> begin (V119 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, V2, V84, V5, V115, V73))), case V119 of {'Idris.Prelude.Types.Left', E48} -> (fun (V120) -> {'Idris.Prelude.Types.Left', V120} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V121) -> begin (V122 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V0, V2, V84, V5, V118, V73))), case V122 of {'Idris.Prelude.Types.Left', E50} -> (fun (V123) -> {'Idris.Prelude.Types.Left', V123} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V124) -> begin (V143 = (((('un--unify'({'Idris.Core.Unify.dn--un--__mkUnify', fun (V125) -> fun (V126) -> fun (V127) -> fun (V128) -> fun (V129) -> fun (V130) -> fun (V131) -> fun (V132) -> fun (V133) -> ('dn--un--unifyD_Unify_Term'(V125, V126, V127, V128, V129, V130, V131, V132, V133)) end end end end end end end end end, fun (V134) -> fun (V135) -> fun (V136) -> fun (V137) -> fun (V138) -> fun (V139) -> fun (V140) -> fun (V141) -> fun (V142) -> ('dn--un--unifyWithLazyD_Unify_Term'(V134, V135, V136, V137, V138, V139, V140, V141, V142)) end end end end end end end end end}, [V7 | V2], V0, V1, ('un--lower'(V3)), V4, V112))(('Idris.Idris2.Core.TT':'un--refsToLocals'({'Idris.Core.TT.Bounds.Add', V7, V108, {'Idris.Core.TT.Bounds.None'}}, V121))))(('Idris.Idris2.Core.TT':'un--refsToLocals'({'Idris.Core.TT.Bounds.Add', V7, V108, {'Idris.Core.TT.Bounds.None'}}, V124))))(V73))), case V143 of {'Idris.Prelude.Types.Left', E52} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E52)); {'Idris.Prelude.Types.Right', E53} -> (fun (V145) -> {'Idris.Prelude.Types.Right', ('un--union'(V105, V145))} end(E53)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E43)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E41)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E39)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E30, E31, E32, E33)); _ -> ('un--convertError'(V2, V0, V4, V5, {'Idris.Core.Value.NBind', V6, V7, V8, V9}, {'Idris.Core.Value.NBind', V10, V11, V12, V13}, V73)) end end end(E26, E27, E28, E29)); _ -> fun (V146) -> ('un--convertError'(V2, V0, V4, V5, {'Idris.Core.Value.NBind', V6, V7, V8, V9}, {'Idris.Core.Value.NBind', V10, V11, V12, V13}, V146)) end end.
'un--unifyBothApps'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> case V7 of {'Idris.Core.Value.NLocal', E278, E279} -> (fun (V12, V13) -> case V8 of [] -> case V10 of {'Idris.Core.Value.NLocal', E836, E837} -> (fun (V14, V15) -> case V11 of [] -> fun (V16) -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V13, V15)) of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--convertError'(V2, V0, V4, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V12, V13}, []}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V14, V15}, []}, V16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E906, E907} -> (fun (V17, V18) -> case V18 of 1 -> case V7 of {'Idris.Core.Value.NLocal', E1044, E1045} -> (fun (V19, V20) -> case V10 of {'Idris.Core.Value.NLocal', E1114, E1115} -> (fun (V21, V22) -> begin (V23 = {'Idris.Core.Unify.MkUnifyInfo', V17, 1}), case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V20, V22)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('dn--un--unifyD_Unify_Closure'(V24, V25, V26, V27, V28, V29, V30, V31, V32)) end end end end end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V33, V34, V35, V36, V37, V38, V39, V40, V41)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V42, V43, V44, V45, V46, V47)) end end end end end end, fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V48, V49, V50, V51, V52, V53)) end end end end end end, fun (V54) -> fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V54, V55, V56, V57, V58, V59, V60)) end end end end end end end, fun (V61) -> fun (V62) -> fun (V63) -> fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V61, V62, V63, V64, V65, V66, V67, V68)) end end end end end end end end}}, V2, V0, V1, V23, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V69) -> ('Idris.Idris2.Builtin':'un--snd'(V69)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V70) -> ('Idris.Idris2.Builtin':'un--snd'(V70)) end, V11)))); 0 -> fun (V71) -> ('un--postpone'(V2, V0, V1, V4, V23, <<"Postponing local app"/utf8>>, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V19, V20}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V21, V22}, V11}, V71)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1114, E1115)); _ -> case V7 of {'Idris.Core.Value.NLocal', E1069, E1070} -> (fun (V72, V73) -> case V10 of {'Idris.Core.Value.NLocal', E1094, E1095} -> (fun (V74, V75) -> fun (V76) -> begin (V77 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V76))), case V77 of {'Idris.Prelude.Types.Left', E1096} -> (fun (V78) -> {'Idris.Prelude.Types.Left', V78} end(E1096)); {'Idris.Prelude.Types.Right', E1097} -> (fun (V79) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V72, V73}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V74, V75}, V11}, V76)) end(E1097)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1094, E1095)); _ -> case V10 of {'Idris.Core.Value.NMeta', E1089, E1090, E1091} -> (fun (V80, V81, V82) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E1092, E1093} -> (fun (V83, V84) -> V84 end(E1092, E1093)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V80, V81, V82}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V80, V81, V82}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1089, E1090, E1091)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E1071, E1072} -> (fun (V85, V86) -> case V86 of 3 -> case V7 of {'Idris.Core.Value.NRef', E1073, E1074} -> (fun (V87, V88) -> case V10 of {'Idris.Core.Value.NRef', E1075, E1076} -> (fun (V89, V90) -> begin (V91 = {'Idris.Core.Unify.MkUnifyInfo', V85, 3}), begin (V92 = {'Idris.Core.Value.NRef', V87, V88}), begin (V93 = {'Idris.Core.Value.NRef', V89, V90}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V88, V90)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V94) -> fun (V95) -> fun (V96) -> fun (V97) -> fun (V98) -> fun (V99) -> fun (V100) -> fun (V101) -> fun (V102) -> ('dn--un--unifyD_Unify_Closure'(V94, V95, V96, V97, V98, V99, V100, V101, V102)) end end end end end end end end end, fun (V103) -> fun (V104) -> fun (V105) -> fun (V106) -> fun (V107) -> fun (V108) -> fun (V109) -> fun (V110) -> fun (V111) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V103, V104, V105, V106, V107, V108, V109, V110, V111)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V112) -> fun (V113) -> fun (V114) -> fun (V115) -> fun (V116) -> fun (V117) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V112, V113, V114, V115, V116, V117)) end end end end end end, fun (V118) -> fun (V119) -> fun (V120) -> fun (V121) -> fun (V122) -> fun (V123) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V118, V119, V120, V121, V122, V123)) end end end end end end, fun (V124) -> fun (V125) -> fun (V126) -> fun (V127) -> fun (V128) -> fun (V129) -> fun (V130) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V124, V125, V126, V127, V128, V129, V130)) end end end end end end end, fun (V131) -> fun (V132) -> fun (V133) -> fun (V134) -> fun (V135) -> fun (V136) -> fun (V137) -> fun (V138) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V131, V132, V133, V134, V135, V136, V137, V138)) end end end end end end end end}}, V2, V0, V1, V91, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V139) -> ('Idris.Idris2.Builtin':'un--snd'(V139)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V140) -> ('Idris.Idris2.Builtin':'un--snd'(V140)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V91, V4, V5, V6, V92, V8, {'Idris.Core.Value.NApp', V9, V93, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1075, E1076)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1073, E1074)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E1077, E1078} -> (fun (V141, V142) -> case V10 of {'Idris.Core.Value.NRef', E1079, E1080} -> (fun (V143, V144) -> begin (V145 = {'Idris.Core.Unify.MkUnifyInfo', V85, 2}), begin (V146 = {'Idris.Core.Value.NRef', V141, V142}), begin (V147 = {'Idris.Core.Value.NRef', V143, V144}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V142, V144)) of 1 -> fun (V148) -> begin (V172 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V149) -> begin (V151 = begin (V150 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V150} end), case V151 of {'Idris.Prelude.Types.Left', E1081} -> (fun (V152) -> {'Idris.Prelude.Types.Left', V152} end(E1081)); {'Idris.Prelude.Types.Right', E1082} -> (fun (V153) -> begin (V157 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V154) -> fun (V155) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V153, V5, V154, V155)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V156) -> ('Idris.Idris2.Builtin':'un--snd'(V156)) end, V8)), [], V149))), case V157 of {'Idris.Prelude.Types.Left', E1083} -> (fun (V158) -> {'Idris.Prelude.Types.Left', V158} end(E1083)); {'Idris.Prelude.Types.Right', E1084} -> (fun (V159) -> begin (V163 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V160) -> fun (V161) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V153, V5, V160, V161)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V162) -> ('Idris.Idris2.Builtin':'un--snd'(V162)) end, V11)), [], V149))), case V163 of {'Idris.Prelude.Types.Left', E1085} -> (fun (V164) -> {'Idris.Prelude.Types.Left', V164} end(E1085)); {'Idris.Prelude.Types.Right', E1086} -> (fun (V165) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V166) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V166)) end, fun (V167) -> fun (V168) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V167, V168)) end end}, V159)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V169) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V169)) end, fun (V170) -> fun (V171) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V170, V171)) end end}, V165))))))))} end(E1086)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1084)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1082)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V148))), case V172 of {'Idris.Prelude.Types.Left', E1087} -> (fun (V173) -> {'Idris.Prelude.Types.Left', V173} end(E1087)); {'Idris.Prelude.Types.Right', E1088} -> (fun (V174) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V175) -> fun (V176) -> fun (V177) -> fun (V178) -> fun (V179) -> fun (V180) -> fun (V181) -> fun (V182) -> fun (V183) -> ('dn--un--unifyD_Unify_Closure'(V175, V176, V177, V178, V179, V180, V181, V182, V183)) end end end end end end end end end, fun (V184) -> fun (V185) -> fun (V186) -> fun (V187) -> fun (V188) -> fun (V189) -> fun (V190) -> fun (V191) -> fun (V192) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V184, V185, V186, V187, V188, V189, V190, V191, V192)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V193) -> fun (V194) -> fun (V195) -> fun (V196) -> fun (V197) -> fun (V198) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V193, V194, V195, V196, V197, V198)) end end end end end end, fun (V199) -> fun (V200) -> fun (V201) -> fun (V202) -> fun (V203) -> fun (V204) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V199, V200, V201, V202, V203, V204)) end end end end end end, fun (V205) -> fun (V206) -> fun (V207) -> fun (V208) -> fun (V209) -> fun (V210) -> fun (V211) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V205, V206, V207, V208, V209, V210, V211)) end end end end end end end, fun (V212) -> fun (V213) -> fun (V214) -> fun (V215) -> fun (V216) -> fun (V217) -> fun (V218) -> fun (V219) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V212, V213, V214, V215, V216, V217, V218, V219)) end end end end end end end end}}, V2, V0, V1, V145, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V220) -> ('Idris.Idris2.Builtin':'un--snd'(V220)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V221) -> ('Idris.Idris2.Builtin':'un--snd'(V221)) end, V11))))(V148)) end(E1088)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V145, V4, V5, V6, V146, V8, {'Idris.Core.Value.NApp', V9, V147, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1079, E1080)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1077, E1078)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1071, E1072)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E1069, E1070)); {'Idris.Core.Value.NMeta', E1098, E1099, E1100} -> (fun (V222, V223, V224) -> case V10 of {'Idris.Core.Value.NMeta', E1101, E1102, E1103} -> (fun (V225, V226, V227) -> fun (V228) -> begin (V229 = ('un--isDefInvertible'(V0, V4, V223, V228))), case V229 of {'Idris.Prelude.Types.Left', E1104} -> (fun (V230) -> {'Idris.Prelude.Types.Left', V230} end(E1104)); {'Idris.Prelude.Types.Right', E1105} -> (fun (V231) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V223, V226)) of 1 -> case V231 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E1112, E1113} -> (fun (V232, V233) -> V233 end(E1112, E1113)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V234) -> fun (V235) -> fun (V236) -> fun (V237) -> fun (V238) -> fun (V239) -> fun (V240) -> fun (V241) -> fun (V242) -> ('dn--un--unifyD_Unify_Closure'(V234, V235, V236, V237, V238, V239, V240, V241, V242)) end end end end end end end end end, fun (V243) -> fun (V244) -> fun (V245) -> fun (V246) -> fun (V247) -> fun (V248) -> fun (V249) -> fun (V250) -> fun (V251) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V243, V244, V245, V246, V247, V248, V249, V250, V251)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V252) -> fun (V253) -> fun (V254) -> fun (V255) -> fun (V256) -> fun (V257) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V252, V253, V254, V255, V256, V257)) end end end end end end, fun (V258) -> fun (V259) -> fun (V260) -> fun (V261) -> fun (V262) -> fun (V263) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V258, V259, V260, V261, V262, V263)) end end end end end end, fun (V264) -> fun (V265) -> fun (V266) -> fun (V267) -> fun (V268) -> fun (V269) -> fun (V270) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V264, V265, V266, V267, V268, V269, V270)) end end end end end end end, fun (V271) -> fun (V272) -> fun (V273) -> fun (V274) -> fun (V275) -> fun (V276) -> fun (V277) -> fun (V278) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V271, V272, V273, V274, V275, V276, V277, V278)) end end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V224, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V279) -> ('Idris.Idris2.Builtin':'un--snd'(V279)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V227, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V280) -> ('Idris.Idris2.Builtin':'un--snd'(V280)) end, V11))))))(V228)); 0 -> begin (V281 = ('nested--12608-17998--in--un--localsIn'(V2, V224, V223, V222, V227, V226, V225, V11, V9, V8, V6, V5, V4, V3, V1, V0, V224, V228))), case V281 of {'Idris.Prelude.Types.Left', E1106} -> (fun (V282) -> {'Idris.Prelude.Types.Left', V282} end(E1106)); {'Idris.Prelude.Types.Right', E1107} -> (fun (V283) -> begin (V284 = ('nested--12608-17998--in--un--localsIn'(V2, V224, V223, V222, V227, V226, V225, V11, V9, V8, V6, V5, V4, V3, V1, V0, V227, V228))), case V284 of {'Idris.Prelude.Types.Left', E1108} -> (fun (V285) -> {'Idris.Prelude.Types.Left', V285} end(E1108)); {'Idris.Prelude.Types.Right', E1109} -> (fun (V286) -> begin (V287 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V283, V286)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V283, V286)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V287 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E1110, E1111} -> (fun (V288, V289) -> V289 end(E1110, E1111)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--12608-17997--in--un--pv'(V2, V224, V223, V222, V227, V226, V225, V11, V9, V8, V6, V5, V4, V3, V1, V0, V222)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V222, V223, V224}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V225, V226, V227}, V11}))(V228)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V225, V226, V227}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V222, V223, V224}, V8}))(V228)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1109)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1107)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1105)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1101, E1102, E1103)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V222, V223, V224}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1098, E1099, E1100)); _ -> case V10 of {'Idris.Core.Value.NMeta', E1064, E1065, E1066} -> (fun (V290, V291, V292) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E1067, E1068} -> (fun (V293, V294) -> V294 end(E1067, E1068)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V290, V291, V292}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V290, V291, V292}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1064, E1065, E1066)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E1046, E1047} -> (fun (V295, V296) -> case V296 of 3 -> case V7 of {'Idris.Core.Value.NRef', E1048, E1049} -> (fun (V297, V298) -> case V10 of {'Idris.Core.Value.NRef', E1050, E1051} -> (fun (V299, V300) -> begin (V301 = {'Idris.Core.Unify.MkUnifyInfo', V295, 3}), begin (V302 = {'Idris.Core.Value.NRef', V297, V298}), begin (V303 = {'Idris.Core.Value.NRef', V299, V300}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V298, V300)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V304) -> fun (V305) -> fun (V306) -> fun (V307) -> fun (V308) -> fun (V309) -> fun (V310) -> fun (V311) -> fun (V312) -> ('dn--un--unifyD_Unify_Closure'(V304, V305, V306, V307, V308, V309, V310, V311, V312)) end end end end end end end end end, fun (V313) -> fun (V314) -> fun (V315) -> fun (V316) -> fun (V317) -> fun (V318) -> fun (V319) -> fun (V320) -> fun (V321) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V313, V314, V315, V316, V317, V318, V319, V320, V321)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V322) -> fun (V323) -> fun (V324) -> fun (V325) -> fun (V326) -> fun (V327) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V322, V323, V324, V325, V326, V327)) end end end end end end, fun (V328) -> fun (V329) -> fun (V330) -> fun (V331) -> fun (V332) -> fun (V333) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V328, V329, V330, V331, V332, V333)) end end end end end end, fun (V334) -> fun (V335) -> fun (V336) -> fun (V337) -> fun (V338) -> fun (V339) -> fun (V340) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V334, V335, V336, V337, V338, V339, V340)) end end end end end end end, fun (V341) -> fun (V342) -> fun (V343) -> fun (V344) -> fun (V345) -> fun (V346) -> fun (V347) -> fun (V348) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V341, V342, V343, V344, V345, V346, V347, V348)) end end end end end end end end}}, V2, V0, V1, V301, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V349) -> ('Idris.Idris2.Builtin':'un--snd'(V349)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V350) -> ('Idris.Idris2.Builtin':'un--snd'(V350)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V301, V4, V5, V6, V302, V8, {'Idris.Core.Value.NApp', V9, V303, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1050, E1051)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1048, E1049)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E1052, E1053} -> (fun (V351, V352) -> case V10 of {'Idris.Core.Value.NRef', E1054, E1055} -> (fun (V353, V354) -> begin (V355 = {'Idris.Core.Unify.MkUnifyInfo', V295, 2}), begin (V356 = {'Idris.Core.Value.NRef', V351, V352}), begin (V357 = {'Idris.Core.Value.NRef', V353, V354}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V352, V354)) of 1 -> fun (V358) -> begin (V382 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V359) -> begin (V361 = begin (V360 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V360} end), case V361 of {'Idris.Prelude.Types.Left', E1056} -> (fun (V362) -> {'Idris.Prelude.Types.Left', V362} end(E1056)); {'Idris.Prelude.Types.Right', E1057} -> (fun (V363) -> begin (V367 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V364) -> fun (V365) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V363, V5, V364, V365)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V366) -> ('Idris.Idris2.Builtin':'un--snd'(V366)) end, V8)), [], V359))), case V367 of {'Idris.Prelude.Types.Left', E1058} -> (fun (V368) -> {'Idris.Prelude.Types.Left', V368} end(E1058)); {'Idris.Prelude.Types.Right', E1059} -> (fun (V369) -> begin (V373 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V370) -> fun (V371) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V363, V5, V370, V371)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V372) -> ('Idris.Idris2.Builtin':'un--snd'(V372)) end, V11)), [], V359))), case V373 of {'Idris.Prelude.Types.Left', E1060} -> (fun (V374) -> {'Idris.Prelude.Types.Left', V374} end(E1060)); {'Idris.Prelude.Types.Right', E1061} -> (fun (V375) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V376) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V376)) end, fun (V377) -> fun (V378) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V377, V378)) end end}, V369)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V379) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V379)) end, fun (V380) -> fun (V381) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V380, V381)) end end}, V375))))))))} end(E1061)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1059)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1057)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V358))), case V382 of {'Idris.Prelude.Types.Left', E1062} -> (fun (V383) -> {'Idris.Prelude.Types.Left', V383} end(E1062)); {'Idris.Prelude.Types.Right', E1063} -> (fun (V384) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V385) -> fun (V386) -> fun (V387) -> fun (V388) -> fun (V389) -> fun (V390) -> fun (V391) -> fun (V392) -> fun (V393) -> ('dn--un--unifyD_Unify_Closure'(V385, V386, V387, V388, V389, V390, V391, V392, V393)) end end end end end end end end end, fun (V394) -> fun (V395) -> fun (V396) -> fun (V397) -> fun (V398) -> fun (V399) -> fun (V400) -> fun (V401) -> fun (V402) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V394, V395, V396, V397, V398, V399, V400, V401, V402)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V403) -> fun (V404) -> fun (V405) -> fun (V406) -> fun (V407) -> fun (V408) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V403, V404, V405, V406, V407, V408)) end end end end end end, fun (V409) -> fun (V410) -> fun (V411) -> fun (V412) -> fun (V413) -> fun (V414) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V409, V410, V411, V412, V413, V414)) end end end end end end, fun (V415) -> fun (V416) -> fun (V417) -> fun (V418) -> fun (V419) -> fun (V420) -> fun (V421) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V415, V416, V417, V418, V419, V420, V421)) end end end end end end end, fun (V422) -> fun (V423) -> fun (V424) -> fun (V425) -> fun (V426) -> fun (V427) -> fun (V428) -> fun (V429) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V422, V423, V424, V425, V426, V427, V428, V429)) end end end end end end end end}}, V2, V0, V1, V355, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V430) -> ('Idris.Idris2.Builtin':'un--snd'(V430)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V431) -> ('Idris.Idris2.Builtin':'un--snd'(V431)) end, V11))))(V358)) end(E1063)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V355, V4, V5, V6, V356, V8, {'Idris.Core.Value.NApp', V9, V357, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1054, E1055)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1052, E1053)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1046, E1047)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end(E1044, E1045)); _ -> case V7 of {'Idris.Core.Value.NLocal', E999, E1000} -> (fun (V432, V433) -> case V10 of {'Idris.Core.Value.NLocal', E1024, E1025} -> (fun (V434, V435) -> fun (V436) -> begin (V437 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V436))), case V437 of {'Idris.Prelude.Types.Left', E1026} -> (fun (V438) -> {'Idris.Prelude.Types.Left', V438} end(E1026)); {'Idris.Prelude.Types.Right', E1027} -> (fun (V439) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V432, V433}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V434, V435}, V11}, V436)) end(E1027)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1024, E1025)); _ -> case V10 of {'Idris.Core.Value.NMeta', E1019, E1020, E1021} -> (fun (V440, V441, V442) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E1022, E1023} -> (fun (V443, V444) -> V444 end(E1022, E1023)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V440, V441, V442}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V440, V441, V442}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1019, E1020, E1021)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E1001, E1002} -> (fun (V445, V446) -> case V446 of 3 -> case V7 of {'Idris.Core.Value.NRef', E1003, E1004} -> (fun (V447, V448) -> case V10 of {'Idris.Core.Value.NRef', E1005, E1006} -> (fun (V449, V450) -> begin (V451 = {'Idris.Core.Unify.MkUnifyInfo', V445, 3}), begin (V452 = {'Idris.Core.Value.NRef', V447, V448}), begin (V453 = {'Idris.Core.Value.NRef', V449, V450}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V448, V450)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V454) -> fun (V455) -> fun (V456) -> fun (V457) -> fun (V458) -> fun (V459) -> fun (V460) -> fun (V461) -> fun (V462) -> ('dn--un--unifyD_Unify_Closure'(V454, V455, V456, V457, V458, V459, V460, V461, V462)) end end end end end end end end end, fun (V463) -> fun (V464) -> fun (V465) -> fun (V466) -> fun (V467) -> fun (V468) -> fun (V469) -> fun (V470) -> fun (V471) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V463, V464, V465, V466, V467, V468, V469, V470, V471)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V472) -> fun (V473) -> fun (V474) -> fun (V475) -> fun (V476) -> fun (V477) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V472, V473, V474, V475, V476, V477)) end end end end end end, fun (V478) -> fun (V479) -> fun (V480) -> fun (V481) -> fun (V482) -> fun (V483) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V478, V479, V480, V481, V482, V483)) end end end end end end, fun (V484) -> fun (V485) -> fun (V486) -> fun (V487) -> fun (V488) -> fun (V489) -> fun (V490) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V484, V485, V486, V487, V488, V489, V490)) end end end end end end end, fun (V491) -> fun (V492) -> fun (V493) -> fun (V494) -> fun (V495) -> fun (V496) -> fun (V497) -> fun (V498) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V491, V492, V493, V494, V495, V496, V497, V498)) end end end end end end end end}}, V2, V0, V1, V451, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V499) -> ('Idris.Idris2.Builtin':'un--snd'(V499)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V500) -> ('Idris.Idris2.Builtin':'un--snd'(V500)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V451, V4, V5, V6, V452, V8, {'Idris.Core.Value.NApp', V9, V453, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1005, E1006)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1003, E1004)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E1007, E1008} -> (fun (V501, V502) -> case V10 of {'Idris.Core.Value.NRef', E1009, E1010} -> (fun (V503, V504) -> begin (V505 = {'Idris.Core.Unify.MkUnifyInfo', V445, 2}), begin (V506 = {'Idris.Core.Value.NRef', V501, V502}), begin (V507 = {'Idris.Core.Value.NRef', V503, V504}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V502, V504)) of 1 -> fun (V508) -> begin (V532 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V509) -> begin (V511 = begin (V510 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V510} end), case V511 of {'Idris.Prelude.Types.Left', E1011} -> (fun (V512) -> {'Idris.Prelude.Types.Left', V512} end(E1011)); {'Idris.Prelude.Types.Right', E1012} -> (fun (V513) -> begin (V517 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V514) -> fun (V515) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V513, V5, V514, V515)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V516) -> ('Idris.Idris2.Builtin':'un--snd'(V516)) end, V8)), [], V509))), case V517 of {'Idris.Prelude.Types.Left', E1013} -> (fun (V518) -> {'Idris.Prelude.Types.Left', V518} end(E1013)); {'Idris.Prelude.Types.Right', E1014} -> (fun (V519) -> begin (V523 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V520) -> fun (V521) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V513, V5, V520, V521)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V522) -> ('Idris.Idris2.Builtin':'un--snd'(V522)) end, V11)), [], V509))), case V523 of {'Idris.Prelude.Types.Left', E1015} -> (fun (V524) -> {'Idris.Prelude.Types.Left', V524} end(E1015)); {'Idris.Prelude.Types.Right', E1016} -> (fun (V525) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V526) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V526)) end, fun (V527) -> fun (V528) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V527, V528)) end end}, V519)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V529) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V529)) end, fun (V530) -> fun (V531) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V530, V531)) end end}, V525))))))))} end(E1016)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1014)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1012)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V508))), case V532 of {'Idris.Prelude.Types.Left', E1017} -> (fun (V533) -> {'Idris.Prelude.Types.Left', V533} end(E1017)); {'Idris.Prelude.Types.Right', E1018} -> (fun (V534) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V535) -> fun (V536) -> fun (V537) -> fun (V538) -> fun (V539) -> fun (V540) -> fun (V541) -> fun (V542) -> fun (V543) -> ('dn--un--unifyD_Unify_Closure'(V535, V536, V537, V538, V539, V540, V541, V542, V543)) end end end end end end end end end, fun (V544) -> fun (V545) -> fun (V546) -> fun (V547) -> fun (V548) -> fun (V549) -> fun (V550) -> fun (V551) -> fun (V552) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V544, V545, V546, V547, V548, V549, V550, V551, V552)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V553) -> fun (V554) -> fun (V555) -> fun (V556) -> fun (V557) -> fun (V558) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V553, V554, V555, V556, V557, V558)) end end end end end end, fun (V559) -> fun (V560) -> fun (V561) -> fun (V562) -> fun (V563) -> fun (V564) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V559, V560, V561, V562, V563, V564)) end end end end end end, fun (V565) -> fun (V566) -> fun (V567) -> fun (V568) -> fun (V569) -> fun (V570) -> fun (V571) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V565, V566, V567, V568, V569, V570, V571)) end end end end end end end, fun (V572) -> fun (V573) -> fun (V574) -> fun (V575) -> fun (V576) -> fun (V577) -> fun (V578) -> fun (V579) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V572, V573, V574, V575, V576, V577, V578, V579)) end end end end end end end end}}, V2, V0, V1, V505, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V580) -> ('Idris.Idris2.Builtin':'un--snd'(V580)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V581) -> ('Idris.Idris2.Builtin':'un--snd'(V581)) end, V11))))(V508)) end(E1018)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V505, V4, V5, V6, V506, V8, {'Idris.Core.Value.NApp', V9, V507, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E1009, E1010)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1007, E1008)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1001, E1002)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E999, E1000)); {'Idris.Core.Value.NMeta', E1028, E1029, E1030} -> (fun (V582, V583, V584) -> case V10 of {'Idris.Core.Value.NMeta', E1031, E1032, E1033} -> (fun (V585, V586, V587) -> fun (V588) -> begin (V589 = ('un--isDefInvertible'(V0, V4, V583, V588))), case V589 of {'Idris.Prelude.Types.Left', E1034} -> (fun (V590) -> {'Idris.Prelude.Types.Left', V590} end(E1034)); {'Idris.Prelude.Types.Right', E1035} -> (fun (V591) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V583, V586)) of 1 -> case V591 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E1042, E1043} -> (fun (V592, V593) -> V593 end(E1042, E1043)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V594) -> fun (V595) -> fun (V596) -> fun (V597) -> fun (V598) -> fun (V599) -> fun (V600) -> fun (V601) -> fun (V602) -> ('dn--un--unifyD_Unify_Closure'(V594, V595, V596, V597, V598, V599, V600, V601, V602)) end end end end end end end end end, fun (V603) -> fun (V604) -> fun (V605) -> fun (V606) -> fun (V607) -> fun (V608) -> fun (V609) -> fun (V610) -> fun (V611) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V603, V604, V605, V606, V607, V608, V609, V610, V611)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V612) -> fun (V613) -> fun (V614) -> fun (V615) -> fun (V616) -> fun (V617) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V612, V613, V614, V615, V616, V617)) end end end end end end, fun (V618) -> fun (V619) -> fun (V620) -> fun (V621) -> fun (V622) -> fun (V623) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V618, V619, V620, V621, V622, V623)) end end end end end end, fun (V624) -> fun (V625) -> fun (V626) -> fun (V627) -> fun (V628) -> fun (V629) -> fun (V630) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V624, V625, V626, V627, V628, V629, V630)) end end end end end end end, fun (V631) -> fun (V632) -> fun (V633) -> fun (V634) -> fun (V635) -> fun (V636) -> fun (V637) -> fun (V638) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V631, V632, V633, V634, V635, V636, V637, V638)) end end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V584, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V639) -> ('Idris.Idris2.Builtin':'un--snd'(V639)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V587, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V640) -> ('Idris.Idris2.Builtin':'un--snd'(V640)) end, V11))))))(V588)); 0 -> begin (V641 = ('nested--12608-17998--in--un--localsIn'(V2, V584, V583, V582, V587, V586, V585, V11, V9, V8, V6, V5, V4, V3, V1, V0, V584, V588))), case V641 of {'Idris.Prelude.Types.Left', E1036} -> (fun (V642) -> {'Idris.Prelude.Types.Left', V642} end(E1036)); {'Idris.Prelude.Types.Right', E1037} -> (fun (V643) -> begin (V644 = ('nested--12608-17998--in--un--localsIn'(V2, V584, V583, V582, V587, V586, V585, V11, V9, V8, V6, V5, V4, V3, V1, V0, V587, V588))), case V644 of {'Idris.Prelude.Types.Left', E1038} -> (fun (V645) -> {'Idris.Prelude.Types.Left', V645} end(E1038)); {'Idris.Prelude.Types.Right', E1039} -> (fun (V646) -> begin (V647 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V643, V646)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V643, V646)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V647 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E1040, E1041} -> (fun (V648, V649) -> V649 end(E1040, E1041)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--12608-17997--in--un--pv'(V2, V584, V583, V582, V587, V586, V585, V11, V9, V8, V6, V5, V4, V3, V1, V0, V582)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V582, V583, V584}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V585, V586, V587}, V11}))(V588)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V585, V586, V587}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V582, V583, V584}, V8}))(V588)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1039)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1037)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E1035)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E1031, E1032, E1033)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V582, V583, V584}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E1028, E1029, E1030)); _ -> case V10 of {'Idris.Core.Value.NMeta', E994, E995, E996} -> (fun (V650, V651, V652) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E997, E998} -> (fun (V653, V654) -> V654 end(E997, E998)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V650, V651, V652}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V650, V651, V652}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E994, E995, E996)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E976, E977} -> (fun (V655, V656) -> case V656 of 3 -> case V7 of {'Idris.Core.Value.NRef', E978, E979} -> (fun (V657, V658) -> case V10 of {'Idris.Core.Value.NRef', E980, E981} -> (fun (V659, V660) -> begin (V661 = {'Idris.Core.Unify.MkUnifyInfo', V655, 3}), begin (V662 = {'Idris.Core.Value.NRef', V657, V658}), begin (V663 = {'Idris.Core.Value.NRef', V659, V660}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V658, V660)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V664) -> fun (V665) -> fun (V666) -> fun (V667) -> fun (V668) -> fun (V669) -> fun (V670) -> fun (V671) -> fun (V672) -> ('dn--un--unifyD_Unify_Closure'(V664, V665, V666, V667, V668, V669, V670, V671, V672)) end end end end end end end end end, fun (V673) -> fun (V674) -> fun (V675) -> fun (V676) -> fun (V677) -> fun (V678) -> fun (V679) -> fun (V680) -> fun (V681) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V673, V674, V675, V676, V677, V678, V679, V680, V681)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V682) -> fun (V683) -> fun (V684) -> fun (V685) -> fun (V686) -> fun (V687) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V682, V683, V684, V685, V686, V687)) end end end end end end, fun (V688) -> fun (V689) -> fun (V690) -> fun (V691) -> fun (V692) -> fun (V693) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V688, V689, V690, V691, V692, V693)) end end end end end end, fun (V694) -> fun (V695) -> fun (V696) -> fun (V697) -> fun (V698) -> fun (V699) -> fun (V700) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V694, V695, V696, V697, V698, V699, V700)) end end end end end end end, fun (V701) -> fun (V702) -> fun (V703) -> fun (V704) -> fun (V705) -> fun (V706) -> fun (V707) -> fun (V708) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V701, V702, V703, V704, V705, V706, V707, V708)) end end end end end end end end}}, V2, V0, V1, V661, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V709) -> ('Idris.Idris2.Builtin':'un--snd'(V709)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V710) -> ('Idris.Idris2.Builtin':'un--snd'(V710)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V661, V4, V5, V6, V662, V8, {'Idris.Core.Value.NApp', V9, V663, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E980, E981)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E978, E979)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E982, E983} -> (fun (V711, V712) -> case V10 of {'Idris.Core.Value.NRef', E984, E985} -> (fun (V713, V714) -> begin (V715 = {'Idris.Core.Unify.MkUnifyInfo', V655, 2}), begin (V716 = {'Idris.Core.Value.NRef', V711, V712}), begin (V717 = {'Idris.Core.Value.NRef', V713, V714}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V712, V714)) of 1 -> fun (V718) -> begin (V742 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V719) -> begin (V721 = begin (V720 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V720} end), case V721 of {'Idris.Prelude.Types.Left', E986} -> (fun (V722) -> {'Idris.Prelude.Types.Left', V722} end(E986)); {'Idris.Prelude.Types.Right', E987} -> (fun (V723) -> begin (V727 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V724) -> fun (V725) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V723, V5, V724, V725)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V726) -> ('Idris.Idris2.Builtin':'un--snd'(V726)) end, V8)), [], V719))), case V727 of {'Idris.Prelude.Types.Left', E988} -> (fun (V728) -> {'Idris.Prelude.Types.Left', V728} end(E988)); {'Idris.Prelude.Types.Right', E989} -> (fun (V729) -> begin (V733 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V730) -> fun (V731) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V723, V5, V730, V731)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V732) -> ('Idris.Idris2.Builtin':'un--snd'(V732)) end, V11)), [], V719))), case V733 of {'Idris.Prelude.Types.Left', E990} -> (fun (V734) -> {'Idris.Prelude.Types.Left', V734} end(E990)); {'Idris.Prelude.Types.Right', E991} -> (fun (V735) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V736) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V736)) end, fun (V737) -> fun (V738) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V737, V738)) end end}, V729)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V739) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V739)) end, fun (V740) -> fun (V741) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V740, V741)) end end}, V735))))))))} end(E991)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E989)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E987)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V718))), case V742 of {'Idris.Prelude.Types.Left', E992} -> (fun (V743) -> {'Idris.Prelude.Types.Left', V743} end(E992)); {'Idris.Prelude.Types.Right', E993} -> (fun (V744) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V745) -> fun (V746) -> fun (V747) -> fun (V748) -> fun (V749) -> fun (V750) -> fun (V751) -> fun (V752) -> fun (V753) -> ('dn--un--unifyD_Unify_Closure'(V745, V746, V747, V748, V749, V750, V751, V752, V753)) end end end end end end end end end, fun (V754) -> fun (V755) -> fun (V756) -> fun (V757) -> fun (V758) -> fun (V759) -> fun (V760) -> fun (V761) -> fun (V762) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V754, V755, V756, V757, V758, V759, V760, V761, V762)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V763) -> fun (V764) -> fun (V765) -> fun (V766) -> fun (V767) -> fun (V768) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V763, V764, V765, V766, V767, V768)) end end end end end end, fun (V769) -> fun (V770) -> fun (V771) -> fun (V772) -> fun (V773) -> fun (V774) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V769, V770, V771, V772, V773, V774)) end end end end end end, fun (V775) -> fun (V776) -> fun (V777) -> fun (V778) -> fun (V779) -> fun (V780) -> fun (V781) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V775, V776, V777, V778, V779, V780, V781)) end end end end end end end, fun (V782) -> fun (V783) -> fun (V784) -> fun (V785) -> fun (V786) -> fun (V787) -> fun (V788) -> fun (V789) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V782, V783, V784, V785, V786, V787, V788, V789)) end end end end end end end end}}, V2, V0, V1, V715, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V790) -> ('Idris.Idris2.Builtin':'un--snd'(V790)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V791) -> ('Idris.Idris2.Builtin':'un--snd'(V791)) end, V11))))(V718)) end(E993)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V715, V4, V5, V6, V716, V8, {'Idris.Core.Value.NApp', V9, V717, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E984, E985)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E982, E983)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E976, E977)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end; _ -> case V7 of {'Idris.Core.Value.NLocal', E931, E932} -> (fun (V792, V793) -> case V10 of {'Idris.Core.Value.NLocal', E956, E957} -> (fun (V794, V795) -> fun (V796) -> begin (V797 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V796))), case V797 of {'Idris.Prelude.Types.Left', E958} -> (fun (V798) -> {'Idris.Prelude.Types.Left', V798} end(E958)); {'Idris.Prelude.Types.Right', E959} -> (fun (V799) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V792, V793}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V794, V795}, V11}, V796)) end(E959)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E956, E957)); _ -> case V10 of {'Idris.Core.Value.NMeta', E951, E952, E953} -> (fun (V800, V801, V802) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E954, E955} -> (fun (V803, V804) -> V804 end(E954, E955)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V800, V801, V802}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V800, V801, V802}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E951, E952, E953)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E933, E934} -> (fun (V805, V806) -> case V806 of 3 -> case V7 of {'Idris.Core.Value.NRef', E935, E936} -> (fun (V807, V808) -> case V10 of {'Idris.Core.Value.NRef', E937, E938} -> (fun (V809, V810) -> begin (V811 = {'Idris.Core.Unify.MkUnifyInfo', V805, 3}), begin (V812 = {'Idris.Core.Value.NRef', V807, V808}), begin (V813 = {'Idris.Core.Value.NRef', V809, V810}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V808, V810)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V814) -> fun (V815) -> fun (V816) -> fun (V817) -> fun (V818) -> fun (V819) -> fun (V820) -> fun (V821) -> fun (V822) -> ('dn--un--unifyD_Unify_Closure'(V814, V815, V816, V817, V818, V819, V820, V821, V822)) end end end end end end end end end, fun (V823) -> fun (V824) -> fun (V825) -> fun (V826) -> fun (V827) -> fun (V828) -> fun (V829) -> fun (V830) -> fun (V831) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V823, V824, V825, V826, V827, V828, V829, V830, V831)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V832) -> fun (V833) -> fun (V834) -> fun (V835) -> fun (V836) -> fun (V837) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V832, V833, V834, V835, V836, V837)) end end end end end end, fun (V838) -> fun (V839) -> fun (V840) -> fun (V841) -> fun (V842) -> fun (V843) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V838, V839, V840, V841, V842, V843)) end end end end end end, fun (V844) -> fun (V845) -> fun (V846) -> fun (V847) -> fun (V848) -> fun (V849) -> fun (V850) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V844, V845, V846, V847, V848, V849, V850)) end end end end end end end, fun (V851) -> fun (V852) -> fun (V853) -> fun (V854) -> fun (V855) -> fun (V856) -> fun (V857) -> fun (V858) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V851, V852, V853, V854, V855, V856, V857, V858)) end end end end end end end end}}, V2, V0, V1, V811, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V859) -> ('Idris.Idris2.Builtin':'un--snd'(V859)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V860) -> ('Idris.Idris2.Builtin':'un--snd'(V860)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V811, V4, V5, V6, V812, V8, {'Idris.Core.Value.NApp', V9, V813, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E937, E938)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E935, E936)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E939, E940} -> (fun (V861, V862) -> case V10 of {'Idris.Core.Value.NRef', E941, E942} -> (fun (V863, V864) -> begin (V865 = {'Idris.Core.Unify.MkUnifyInfo', V805, 2}), begin (V866 = {'Idris.Core.Value.NRef', V861, V862}), begin (V867 = {'Idris.Core.Value.NRef', V863, V864}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V862, V864)) of 1 -> fun (V868) -> begin (V892 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V869) -> begin (V871 = begin (V870 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V870} end), case V871 of {'Idris.Prelude.Types.Left', E943} -> (fun (V872) -> {'Idris.Prelude.Types.Left', V872} end(E943)); {'Idris.Prelude.Types.Right', E944} -> (fun (V873) -> begin (V877 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V874) -> fun (V875) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V873, V5, V874, V875)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V876) -> ('Idris.Idris2.Builtin':'un--snd'(V876)) end, V8)), [], V869))), case V877 of {'Idris.Prelude.Types.Left', E945} -> (fun (V878) -> {'Idris.Prelude.Types.Left', V878} end(E945)); {'Idris.Prelude.Types.Right', E946} -> (fun (V879) -> begin (V883 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V880) -> fun (V881) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V873, V5, V880, V881)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V882) -> ('Idris.Idris2.Builtin':'un--snd'(V882)) end, V11)), [], V869))), case V883 of {'Idris.Prelude.Types.Left', E947} -> (fun (V884) -> {'Idris.Prelude.Types.Left', V884} end(E947)); {'Idris.Prelude.Types.Right', E948} -> (fun (V885) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V886) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V886)) end, fun (V887) -> fun (V888) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V887, V888)) end end}, V879)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V889) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V889)) end, fun (V890) -> fun (V891) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V890, V891)) end end}, V885))))))))} end(E948)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E946)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E944)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V868))), case V892 of {'Idris.Prelude.Types.Left', E949} -> (fun (V893) -> {'Idris.Prelude.Types.Left', V893} end(E949)); {'Idris.Prelude.Types.Right', E950} -> (fun (V894) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V895) -> fun (V896) -> fun (V897) -> fun (V898) -> fun (V899) -> fun (V900) -> fun (V901) -> fun (V902) -> fun (V903) -> ('dn--un--unifyD_Unify_Closure'(V895, V896, V897, V898, V899, V900, V901, V902, V903)) end end end end end end end end end, fun (V904) -> fun (V905) -> fun (V906) -> fun (V907) -> fun (V908) -> fun (V909) -> fun (V910) -> fun (V911) -> fun (V912) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V904, V905, V906, V907, V908, V909, V910, V911, V912)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V913) -> fun (V914) -> fun (V915) -> fun (V916) -> fun (V917) -> fun (V918) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V913, V914, V915, V916, V917, V918)) end end end end end end, fun (V919) -> fun (V920) -> fun (V921) -> fun (V922) -> fun (V923) -> fun (V924) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V919, V920, V921, V922, V923, V924)) end end end end end end, fun (V925) -> fun (V926) -> fun (V927) -> fun (V928) -> fun (V929) -> fun (V930) -> fun (V931) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V925, V926, V927, V928, V929, V930, V931)) end end end end end end end, fun (V932) -> fun (V933) -> fun (V934) -> fun (V935) -> fun (V936) -> fun (V937) -> fun (V938) -> fun (V939) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V932, V933, V934, V935, V936, V937, V938, V939)) end end end end end end end end}}, V2, V0, V1, V865, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V940) -> ('Idris.Idris2.Builtin':'un--snd'(V940)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V941) -> ('Idris.Idris2.Builtin':'un--snd'(V941)) end, V11))))(V868)) end(E950)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V865, V4, V5, V6, V866, V8, {'Idris.Core.Value.NApp', V9, V867, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E941, E942)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E939, E940)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E933, E934)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E931, E932)); {'Idris.Core.Value.NMeta', E960, E961, E962} -> (fun (V942, V943, V944) -> case V10 of {'Idris.Core.Value.NMeta', E963, E964, E965} -> (fun (V945, V946, V947) -> fun (V948) -> begin (V949 = ('un--isDefInvertible'(V0, V4, V943, V948))), case V949 of {'Idris.Prelude.Types.Left', E966} -> (fun (V950) -> {'Idris.Prelude.Types.Left', V950} end(E966)); {'Idris.Prelude.Types.Right', E967} -> (fun (V951) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V943, V946)) of 1 -> case V951 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E974, E975} -> (fun (V952, V953) -> V953 end(E974, E975)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V954) -> fun (V955) -> fun (V956) -> fun (V957) -> fun (V958) -> fun (V959) -> fun (V960) -> fun (V961) -> fun (V962) -> ('dn--un--unifyD_Unify_Closure'(V954, V955, V956, V957, V958, V959, V960, V961, V962)) end end end end end end end end end, fun (V963) -> fun (V964) -> fun (V965) -> fun (V966) -> fun (V967) -> fun (V968) -> fun (V969) -> fun (V970) -> fun (V971) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V963, V964, V965, V966, V967, V968, V969, V970, V971)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V972) -> fun (V973) -> fun (V974) -> fun (V975) -> fun (V976) -> fun (V977) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V972, V973, V974, V975, V976, V977)) end end end end end end, fun (V978) -> fun (V979) -> fun (V980) -> fun (V981) -> fun (V982) -> fun (V983) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V978, V979, V980, V981, V982, V983)) end end end end end end, fun (V984) -> fun (V985) -> fun (V986) -> fun (V987) -> fun (V988) -> fun (V989) -> fun (V990) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V984, V985, V986, V987, V988, V989, V990)) end end end end end end end, fun (V991) -> fun (V992) -> fun (V993) -> fun (V994) -> fun (V995) -> fun (V996) -> fun (V997) -> fun (V998) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V991, V992, V993, V994, V995, V996, V997, V998)) end end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V944, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V999) -> ('Idris.Idris2.Builtin':'un--snd'(V999)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V947, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1000) -> ('Idris.Idris2.Builtin':'un--snd'(V1000)) end, V11))))))(V948)); 0 -> begin (V1001 = ('nested--12608-17998--in--un--localsIn'(V2, V944, V943, V942, V947, V946, V945, V11, V9, V8, V6, V5, V4, V3, V1, V0, V944, V948))), case V1001 of {'Idris.Prelude.Types.Left', E968} -> (fun (V1002) -> {'Idris.Prelude.Types.Left', V1002} end(E968)); {'Idris.Prelude.Types.Right', E969} -> (fun (V1003) -> begin (V1004 = ('nested--12608-17998--in--un--localsIn'(V2, V944, V943, V942, V947, V946, V945, V11, V9, V8, V6, V5, V4, V3, V1, V0, V947, V948))), case V1004 of {'Idris.Prelude.Types.Left', E970} -> (fun (V1005) -> {'Idris.Prelude.Types.Left', V1005} end(E970)); {'Idris.Prelude.Types.Right', E971} -> (fun (V1006) -> begin (V1007 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V1003, V1006)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V1003, V1006)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V1007 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E972, E973} -> (fun (V1008, V1009) -> V1009 end(E972, E973)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--12608-17997--in--un--pv'(V2, V944, V943, V942, V947, V946, V945, V11, V9, V8, V6, V5, V4, V3, V1, V0, V942)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V942, V943, V944}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V945, V946, V947}, V11}))(V948)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V945, V946, V947}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V942, V943, V944}, V8}))(V948)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E971)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E969)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E967)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E963, E964, E965)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V942, V943, V944}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E960, E961, E962)); _ -> case V10 of {'Idris.Core.Value.NMeta', E926, E927, E928} -> (fun (V1010, V1011, V1012) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E929, E930} -> (fun (V1013, V1014) -> V1014 end(E929, E930)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1010, V1011, V1012}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V1010, V1011, V1012}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E926, E927, E928)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E908, E909} -> (fun (V1015, V1016) -> case V1016 of 3 -> case V7 of {'Idris.Core.Value.NRef', E910, E911} -> (fun (V1017, V1018) -> case V10 of {'Idris.Core.Value.NRef', E912, E913} -> (fun (V1019, V1020) -> begin (V1021 = {'Idris.Core.Unify.MkUnifyInfo', V1015, 3}), begin (V1022 = {'Idris.Core.Value.NRef', V1017, V1018}), begin (V1023 = {'Idris.Core.Value.NRef', V1019, V1020}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1018, V1020)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1024) -> fun (V1025) -> fun (V1026) -> fun (V1027) -> fun (V1028) -> fun (V1029) -> fun (V1030) -> fun (V1031) -> fun (V1032) -> ('dn--un--unifyD_Unify_Closure'(V1024, V1025, V1026, V1027, V1028, V1029, V1030, V1031, V1032)) end end end end end end end end end, fun (V1033) -> fun (V1034) -> fun (V1035) -> fun (V1036) -> fun (V1037) -> fun (V1038) -> fun (V1039) -> fun (V1040) -> fun (V1041) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1033, V1034, V1035, V1036, V1037, V1038, V1039, V1040, V1041)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V1042) -> fun (V1043) -> fun (V1044) -> fun (V1045) -> fun (V1046) -> fun (V1047) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1042, V1043, V1044, V1045, V1046, V1047)) end end end end end end, fun (V1048) -> fun (V1049) -> fun (V1050) -> fun (V1051) -> fun (V1052) -> fun (V1053) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1048, V1049, V1050, V1051, V1052, V1053)) end end end end end end, fun (V1054) -> fun (V1055) -> fun (V1056) -> fun (V1057) -> fun (V1058) -> fun (V1059) -> fun (V1060) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1054, V1055, V1056, V1057, V1058, V1059, V1060)) end end end end end end end, fun (V1061) -> fun (V1062) -> fun (V1063) -> fun (V1064) -> fun (V1065) -> fun (V1066) -> fun (V1067) -> fun (V1068) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1061, V1062, V1063, V1064, V1065, V1066, V1067, V1068)) end end end end end end end end}}, V2, V0, V1, V1021, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1069) -> ('Idris.Idris2.Builtin':'un--snd'(V1069)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1070) -> ('Idris.Idris2.Builtin':'un--snd'(V1070)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1021, V4, V5, V6, V1022, V8, {'Idris.Core.Value.NApp', V9, V1023, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E912, E913)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E910, E911)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E914, E915} -> (fun (V1071, V1072) -> case V10 of {'Idris.Core.Value.NRef', E916, E917} -> (fun (V1073, V1074) -> begin (V1075 = {'Idris.Core.Unify.MkUnifyInfo', V1015, 2}), begin (V1076 = {'Idris.Core.Value.NRef', V1071, V1072}), begin (V1077 = {'Idris.Core.Value.NRef', V1073, V1074}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1072, V1074)) of 1 -> fun (V1078) -> begin (V1102 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V1079) -> begin (V1081 = begin (V1080 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1080} end), case V1081 of {'Idris.Prelude.Types.Left', E918} -> (fun (V1082) -> {'Idris.Prelude.Types.Left', V1082} end(E918)); {'Idris.Prelude.Types.Right', E919} -> (fun (V1083) -> begin (V1087 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1084) -> fun (V1085) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V1083, V5, V1084, V1085)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1086) -> ('Idris.Idris2.Builtin':'un--snd'(V1086)) end, V8)), [], V1079))), case V1087 of {'Idris.Prelude.Types.Left', E920} -> (fun (V1088) -> {'Idris.Prelude.Types.Left', V1088} end(E920)); {'Idris.Prelude.Types.Right', E921} -> (fun (V1089) -> begin (V1093 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1090) -> fun (V1091) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V1083, V5, V1090, V1091)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1092) -> ('Idris.Idris2.Builtin':'un--snd'(V1092)) end, V11)), [], V1079))), case V1093 of {'Idris.Prelude.Types.Left', E922} -> (fun (V1094) -> {'Idris.Prelude.Types.Left', V1094} end(E922)); {'Idris.Prelude.Types.Right', E923} -> (fun (V1095) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1096) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1096)) end, fun (V1097) -> fun (V1098) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1097, V1098)) end end}, V1089)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1099) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1099)) end, fun (V1100) -> fun (V1101) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1100, V1101)) end end}, V1095))))))))} end(E923)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E921)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E919)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1078))), case V1102 of {'Idris.Prelude.Types.Left', E924} -> (fun (V1103) -> {'Idris.Prelude.Types.Left', V1103} end(E924)); {'Idris.Prelude.Types.Right', E925} -> (fun (V1104) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1105) -> fun (V1106) -> fun (V1107) -> fun (V1108) -> fun (V1109) -> fun (V1110) -> fun (V1111) -> fun (V1112) -> fun (V1113) -> ('dn--un--unifyD_Unify_Closure'(V1105, V1106, V1107, V1108, V1109, V1110, V1111, V1112, V1113)) end end end end end end end end end, fun (V1114) -> fun (V1115) -> fun (V1116) -> fun (V1117) -> fun (V1118) -> fun (V1119) -> fun (V1120) -> fun (V1121) -> fun (V1122) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1114, V1115, V1116, V1117, V1118, V1119, V1120, V1121, V1122)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V1123) -> fun (V1124) -> fun (V1125) -> fun (V1126) -> fun (V1127) -> fun (V1128) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1123, V1124, V1125, V1126, V1127, V1128)) end end end end end end, fun (V1129) -> fun (V1130) -> fun (V1131) -> fun (V1132) -> fun (V1133) -> fun (V1134) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1129, V1130, V1131, V1132, V1133, V1134)) end end end end end end, fun (V1135) -> fun (V1136) -> fun (V1137) -> fun (V1138) -> fun (V1139) -> fun (V1140) -> fun (V1141) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1135, V1136, V1137, V1138, V1139, V1140, V1141)) end end end end end end end, fun (V1142) -> fun (V1143) -> fun (V1144) -> fun (V1145) -> fun (V1146) -> fun (V1147) -> fun (V1148) -> fun (V1149) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1142, V1143, V1144, V1145, V1146, V1147, V1148, V1149)) end end end end end end end end}}, V2, V0, V1, V1075, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1150) -> ('Idris.Idris2.Builtin':'un--snd'(V1150)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1151) -> ('Idris.Idris2.Builtin':'un--snd'(V1151)) end, V11))))(V1078)) end(E925)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1075, V4, V5, V6, V1076, V8, {'Idris.Core.Value.NApp', V9, V1077, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E916, E917)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E914, E915)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E908, E909)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end(E906, E907)); _ -> case V7 of {'Idris.Core.Value.NLocal', E861, E862} -> (fun (V1152, V1153) -> case V10 of {'Idris.Core.Value.NLocal', E886, E887} -> (fun (V1154, V1155) -> fun (V1156) -> begin (V1157 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V1156))), case V1157 of {'Idris.Prelude.Types.Left', E888} -> (fun (V1158) -> {'Idris.Prelude.Types.Left', V1158} end(E888)); {'Idris.Prelude.Types.Right', E889} -> (fun (V1159) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V1152, V1153}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V1154, V1155}, V11}, V1156)) end(E889)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E886, E887)); _ -> case V10 of {'Idris.Core.Value.NMeta', E881, E882, E883} -> (fun (V1160, V1161, V1162) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E884, E885} -> (fun (V1163, V1164) -> V1164 end(E884, E885)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1160, V1161, V1162}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V1160, V1161, V1162}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E881, E882, E883)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E863, E864} -> (fun (V1165, V1166) -> case V1166 of 3 -> case V7 of {'Idris.Core.Value.NRef', E865, E866} -> (fun (V1167, V1168) -> case V10 of {'Idris.Core.Value.NRef', E867, E868} -> (fun (V1169, V1170) -> begin (V1171 = {'Idris.Core.Unify.MkUnifyInfo', V1165, 3}), begin (V1172 = {'Idris.Core.Value.NRef', V1167, V1168}), begin (V1173 = {'Idris.Core.Value.NRef', V1169, V1170}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1168, V1170)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1174) -> fun (V1175) -> fun (V1176) -> fun (V1177) -> fun (V1178) -> fun (V1179) -> fun (V1180) -> fun (V1181) -> fun (V1182) -> ('dn--un--unifyD_Unify_Closure'(V1174, V1175, V1176, V1177, V1178, V1179, V1180, V1181, V1182)) end end end end end end end end end, fun (V1183) -> fun (V1184) -> fun (V1185) -> fun (V1186) -> fun (V1187) -> fun (V1188) -> fun (V1189) -> fun (V1190) -> fun (V1191) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1183, V1184, V1185, V1186, V1187, V1188, V1189, V1190, V1191)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V1192) -> fun (V1193) -> fun (V1194) -> fun (V1195) -> fun (V1196) -> fun (V1197) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1192, V1193, V1194, V1195, V1196, V1197)) end end end end end end, fun (V1198) -> fun (V1199) -> fun (V1200) -> fun (V1201) -> fun (V1202) -> fun (V1203) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1198, V1199, V1200, V1201, V1202, V1203)) end end end end end end, fun (V1204) -> fun (V1205) -> fun (V1206) -> fun (V1207) -> fun (V1208) -> fun (V1209) -> fun (V1210) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1204, V1205, V1206, V1207, V1208, V1209, V1210)) end end end end end end end, fun (V1211) -> fun (V1212) -> fun (V1213) -> fun (V1214) -> fun (V1215) -> fun (V1216) -> fun (V1217) -> fun (V1218) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1211, V1212, V1213, V1214, V1215, V1216, V1217, V1218)) end end end end end end end end}}, V2, V0, V1, V1171, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1219) -> ('Idris.Idris2.Builtin':'un--snd'(V1219)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1220) -> ('Idris.Idris2.Builtin':'un--snd'(V1220)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1171, V4, V5, V6, V1172, V8, {'Idris.Core.Value.NApp', V9, V1173, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E867, E868)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E865, E866)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E869, E870} -> (fun (V1221, V1222) -> case V10 of {'Idris.Core.Value.NRef', E871, E872} -> (fun (V1223, V1224) -> begin (V1225 = {'Idris.Core.Unify.MkUnifyInfo', V1165, 2}), begin (V1226 = {'Idris.Core.Value.NRef', V1221, V1222}), begin (V1227 = {'Idris.Core.Value.NRef', V1223, V1224}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1222, V1224)) of 1 -> fun (V1228) -> begin (V1252 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V1229) -> begin (V1231 = begin (V1230 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1230} end), case V1231 of {'Idris.Prelude.Types.Left', E873} -> (fun (V1232) -> {'Idris.Prelude.Types.Left', V1232} end(E873)); {'Idris.Prelude.Types.Right', E874} -> (fun (V1233) -> begin (V1237 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1234) -> fun (V1235) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V1233, V5, V1234, V1235)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1236) -> ('Idris.Idris2.Builtin':'un--snd'(V1236)) end, V8)), [], V1229))), case V1237 of {'Idris.Prelude.Types.Left', E875} -> (fun (V1238) -> {'Idris.Prelude.Types.Left', V1238} end(E875)); {'Idris.Prelude.Types.Right', E876} -> (fun (V1239) -> begin (V1243 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1240) -> fun (V1241) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V1233, V5, V1240, V1241)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1242) -> ('Idris.Idris2.Builtin':'un--snd'(V1242)) end, V11)), [], V1229))), case V1243 of {'Idris.Prelude.Types.Left', E877} -> (fun (V1244) -> {'Idris.Prelude.Types.Left', V1244} end(E877)); {'Idris.Prelude.Types.Right', E878} -> (fun (V1245) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1246) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1246)) end, fun (V1247) -> fun (V1248) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1247, V1248)) end end}, V1239)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1249) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1249)) end, fun (V1250) -> fun (V1251) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1250, V1251)) end end}, V1245))))))))} end(E878)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E876)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E874)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1228))), case V1252 of {'Idris.Prelude.Types.Left', E879} -> (fun (V1253) -> {'Idris.Prelude.Types.Left', V1253} end(E879)); {'Idris.Prelude.Types.Right', E880} -> (fun (V1254) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1255) -> fun (V1256) -> fun (V1257) -> fun (V1258) -> fun (V1259) -> fun (V1260) -> fun (V1261) -> fun (V1262) -> fun (V1263) -> ('dn--un--unifyD_Unify_Closure'(V1255, V1256, V1257, V1258, V1259, V1260, V1261, V1262, V1263)) end end end end end end end end end, fun (V1264) -> fun (V1265) -> fun (V1266) -> fun (V1267) -> fun (V1268) -> fun (V1269) -> fun (V1270) -> fun (V1271) -> fun (V1272) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1264, V1265, V1266, V1267, V1268, V1269, V1270, V1271, V1272)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V1273) -> fun (V1274) -> fun (V1275) -> fun (V1276) -> fun (V1277) -> fun (V1278) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1273, V1274, V1275, V1276, V1277, V1278)) end end end end end end, fun (V1279) -> fun (V1280) -> fun (V1281) -> fun (V1282) -> fun (V1283) -> fun (V1284) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1279, V1280, V1281, V1282, V1283, V1284)) end end end end end end, fun (V1285) -> fun (V1286) -> fun (V1287) -> fun (V1288) -> fun (V1289) -> fun (V1290) -> fun (V1291) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1285, V1286, V1287, V1288, V1289, V1290, V1291)) end end end end end end end, fun (V1292) -> fun (V1293) -> fun (V1294) -> fun (V1295) -> fun (V1296) -> fun (V1297) -> fun (V1298) -> fun (V1299) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1292, V1293, V1294, V1295, V1296, V1297, V1298, V1299)) end end end end end end end end}}, V2, V0, V1, V1225, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1300) -> ('Idris.Idris2.Builtin':'un--snd'(V1300)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1301) -> ('Idris.Idris2.Builtin':'un--snd'(V1301)) end, V11))))(V1228)) end(E880)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1225, V4, V5, V6, V1226, V8, {'Idris.Core.Value.NApp', V9, V1227, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E871, E872)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E869, E870)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E863, E864)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E861, E862)); {'Idris.Core.Value.NMeta', E890, E891, E892} -> (fun (V1302, V1303, V1304) -> case V10 of {'Idris.Core.Value.NMeta', E893, E894, E895} -> (fun (V1305, V1306, V1307) -> fun (V1308) -> begin (V1309 = ('un--isDefInvertible'(V0, V4, V1303, V1308))), case V1309 of {'Idris.Prelude.Types.Left', E896} -> (fun (V1310) -> {'Idris.Prelude.Types.Left', V1310} end(E896)); {'Idris.Prelude.Types.Right', E897} -> (fun (V1311) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V1303, V1306)) of 1 -> case V1311 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E904, E905} -> (fun (V1312, V1313) -> V1313 end(E904, E905)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1314) -> fun (V1315) -> fun (V1316) -> fun (V1317) -> fun (V1318) -> fun (V1319) -> fun (V1320) -> fun (V1321) -> fun (V1322) -> ('dn--un--unifyD_Unify_Closure'(V1314, V1315, V1316, V1317, V1318, V1319, V1320, V1321, V1322)) end end end end end end end end end, fun (V1323) -> fun (V1324) -> fun (V1325) -> fun (V1326) -> fun (V1327) -> fun (V1328) -> fun (V1329) -> fun (V1330) -> fun (V1331) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1323, V1324, V1325, V1326, V1327, V1328, V1329, V1330, V1331)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V1332) -> fun (V1333) -> fun (V1334) -> fun (V1335) -> fun (V1336) -> fun (V1337) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1332, V1333, V1334, V1335, V1336, V1337)) end end end end end end, fun (V1338) -> fun (V1339) -> fun (V1340) -> fun (V1341) -> fun (V1342) -> fun (V1343) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1338, V1339, V1340, V1341, V1342, V1343)) end end end end end end, fun (V1344) -> fun (V1345) -> fun (V1346) -> fun (V1347) -> fun (V1348) -> fun (V1349) -> fun (V1350) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1344, V1345, V1346, V1347, V1348, V1349, V1350)) end end end end end end end, fun (V1351) -> fun (V1352) -> fun (V1353) -> fun (V1354) -> fun (V1355) -> fun (V1356) -> fun (V1357) -> fun (V1358) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1351, V1352, V1353, V1354, V1355, V1356, V1357, V1358)) end end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V1304, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1359) -> ('Idris.Idris2.Builtin':'un--snd'(V1359)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V1307, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1360) -> ('Idris.Idris2.Builtin':'un--snd'(V1360)) end, V11))))))(V1308)); 0 -> begin (V1361 = ('nested--12608-17998--in--un--localsIn'(V2, V1304, V1303, V1302, V1307, V1306, V1305, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1304, V1308))), case V1361 of {'Idris.Prelude.Types.Left', E898} -> (fun (V1362) -> {'Idris.Prelude.Types.Left', V1362} end(E898)); {'Idris.Prelude.Types.Right', E899} -> (fun (V1363) -> begin (V1364 = ('nested--12608-17998--in--un--localsIn'(V2, V1304, V1303, V1302, V1307, V1306, V1305, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1307, V1308))), case V1364 of {'Idris.Prelude.Types.Left', E900} -> (fun (V1365) -> {'Idris.Prelude.Types.Left', V1365} end(E900)); {'Idris.Prelude.Types.Right', E901} -> (fun (V1366) -> begin (V1367 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V1363, V1366)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V1363, V1366)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V1367 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E902, E903} -> (fun (V1368, V1369) -> V1369 end(E902, E903)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--12608-17997--in--un--pv'(V2, V1304, V1303, V1302, V1307, V1306, V1305, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1302)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1302, V1303, V1304}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V1305, V1306, V1307}, V11}))(V1308)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V1305, V1306, V1307}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V1302, V1303, V1304}, V8}))(V1308)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E901)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E899)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E897)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E893, E894, E895)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1302, V1303, V1304}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E890, E891, E892)); _ -> case V10 of {'Idris.Core.Value.NMeta', E856, E857, E858} -> (fun (V1370, V1371, V1372) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E859, E860} -> (fun (V1373, V1374) -> V1374 end(E859, E860)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1370, V1371, V1372}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V1370, V1371, V1372}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E856, E857, E858)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E838, E839} -> (fun (V1375, V1376) -> case V1376 of 3 -> case V7 of {'Idris.Core.Value.NRef', E840, E841} -> (fun (V1377, V1378) -> case V10 of {'Idris.Core.Value.NRef', E842, E843} -> (fun (V1379, V1380) -> begin (V1381 = {'Idris.Core.Unify.MkUnifyInfo', V1375, 3}), begin (V1382 = {'Idris.Core.Value.NRef', V1377, V1378}), begin (V1383 = {'Idris.Core.Value.NRef', V1379, V1380}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1378, V1380)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1384) -> fun (V1385) -> fun (V1386) -> fun (V1387) -> fun (V1388) -> fun (V1389) -> fun (V1390) -> fun (V1391) -> fun (V1392) -> ('dn--un--unifyD_Unify_Closure'(V1384, V1385, V1386, V1387, V1388, V1389, V1390, V1391, V1392)) end end end end end end end end end, fun (V1393) -> fun (V1394) -> fun (V1395) -> fun (V1396) -> fun (V1397) -> fun (V1398) -> fun (V1399) -> fun (V1400) -> fun (V1401) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1393, V1394, V1395, V1396, V1397, V1398, V1399, V1400, V1401)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V1402) -> fun (V1403) -> fun (V1404) -> fun (V1405) -> fun (V1406) -> fun (V1407) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1402, V1403, V1404, V1405, V1406, V1407)) end end end end end end, fun (V1408) -> fun (V1409) -> fun (V1410) -> fun (V1411) -> fun (V1412) -> fun (V1413) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1408, V1409, V1410, V1411, V1412, V1413)) end end end end end end, fun (V1414) -> fun (V1415) -> fun (V1416) -> fun (V1417) -> fun (V1418) -> fun (V1419) -> fun (V1420) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1414, V1415, V1416, V1417, V1418, V1419, V1420)) end end end end end end end, fun (V1421) -> fun (V1422) -> fun (V1423) -> fun (V1424) -> fun (V1425) -> fun (V1426) -> fun (V1427) -> fun (V1428) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1421, V1422, V1423, V1424, V1425, V1426, V1427, V1428)) end end end end end end end end}}, V2, V0, V1, V1381, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1429) -> ('Idris.Idris2.Builtin':'un--snd'(V1429)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1430) -> ('Idris.Idris2.Builtin':'un--snd'(V1430)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1381, V4, V5, V6, V1382, V8, {'Idris.Core.Value.NApp', V9, V1383, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E842, E843)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E840, E841)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E844, E845} -> (fun (V1431, V1432) -> case V10 of {'Idris.Core.Value.NRef', E846, E847} -> (fun (V1433, V1434) -> begin (V1435 = {'Idris.Core.Unify.MkUnifyInfo', V1375, 2}), begin (V1436 = {'Idris.Core.Value.NRef', V1431, V1432}), begin (V1437 = {'Idris.Core.Value.NRef', V1433, V1434}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1432, V1434)) of 1 -> fun (V1438) -> begin (V1462 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V1439) -> begin (V1441 = begin (V1440 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1440} end), case V1441 of {'Idris.Prelude.Types.Left', E848} -> (fun (V1442) -> {'Idris.Prelude.Types.Left', V1442} end(E848)); {'Idris.Prelude.Types.Right', E849} -> (fun (V1443) -> begin (V1447 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1444) -> fun (V1445) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V1443, V5, V1444, V1445)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1446) -> ('Idris.Idris2.Builtin':'un--snd'(V1446)) end, V8)), [], V1439))), case V1447 of {'Idris.Prelude.Types.Left', E850} -> (fun (V1448) -> {'Idris.Prelude.Types.Left', V1448} end(E850)); {'Idris.Prelude.Types.Right', E851} -> (fun (V1449) -> begin (V1453 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1450) -> fun (V1451) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V1443, V5, V1450, V1451)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1452) -> ('Idris.Idris2.Builtin':'un--snd'(V1452)) end, V11)), [], V1439))), case V1453 of {'Idris.Prelude.Types.Left', E852} -> (fun (V1454) -> {'Idris.Prelude.Types.Left', V1454} end(E852)); {'Idris.Prelude.Types.Right', E853} -> (fun (V1455) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1456) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1456)) end, fun (V1457) -> fun (V1458) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1457, V1458)) end end}, V1449)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1459) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1459)) end, fun (V1460) -> fun (V1461) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1460, V1461)) end end}, V1455))))))))} end(E853)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E851)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E849)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1438))), case V1462 of {'Idris.Prelude.Types.Left', E854} -> (fun (V1463) -> {'Idris.Prelude.Types.Left', V1463} end(E854)); {'Idris.Prelude.Types.Right', E855} -> (fun (V1464) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1465) -> fun (V1466) -> fun (V1467) -> fun (V1468) -> fun (V1469) -> fun (V1470) -> fun (V1471) -> fun (V1472) -> fun (V1473) -> ('dn--un--unifyD_Unify_Closure'(V1465, V1466, V1467, V1468, V1469, V1470, V1471, V1472, V1473)) end end end end end end end end end, fun (V1474) -> fun (V1475) -> fun (V1476) -> fun (V1477) -> fun (V1478) -> fun (V1479) -> fun (V1480) -> fun (V1481) -> fun (V1482) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1474, V1475, V1476, V1477, V1478, V1479, V1480, V1481, V1482)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V1483) -> fun (V1484) -> fun (V1485) -> fun (V1486) -> fun (V1487) -> fun (V1488) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1483, V1484, V1485, V1486, V1487, V1488)) end end end end end end, fun (V1489) -> fun (V1490) -> fun (V1491) -> fun (V1492) -> fun (V1493) -> fun (V1494) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1489, V1490, V1491, V1492, V1493, V1494)) end end end end end end, fun (V1495) -> fun (V1496) -> fun (V1497) -> fun (V1498) -> fun (V1499) -> fun (V1500) -> fun (V1501) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1495, V1496, V1497, V1498, V1499, V1500, V1501)) end end end end end end end, fun (V1502) -> fun (V1503) -> fun (V1504) -> fun (V1505) -> fun (V1506) -> fun (V1507) -> fun (V1508) -> fun (V1509) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1502, V1503, V1504, V1505, V1506, V1507, V1508, V1509)) end end end end end end end end}}, V2, V0, V1, V1435, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1510) -> ('Idris.Idris2.Builtin':'un--snd'(V1510)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1511) -> ('Idris.Idris2.Builtin':'un--snd'(V1511)) end, V11))))(V1438)) end(E855)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1435, V4, V5, V6, V1436, V8, {'Idris.Core.Value.NApp', V9, V1437, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E846, E847)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E844, E845)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E838, E839)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end end(E836, E837)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E626, E627} -> (fun (V1512, V1513) -> case V1513 of 1 -> case V7 of {'Idris.Core.Value.NLocal', E764, E765} -> (fun (V1514, V1515) -> case V10 of {'Idris.Core.Value.NLocal', E834, E835} -> (fun (V1516, V1517) -> begin (V1518 = {'Idris.Core.Unify.MkUnifyInfo', V1512, 1}), case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V1515, V1517)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1519) -> fun (V1520) -> fun (V1521) -> fun (V1522) -> fun (V1523) -> fun (V1524) -> fun (V1525) -> fun (V1526) -> fun (V1527) -> ('dn--un--unifyD_Unify_Closure'(V1519, V1520, V1521, V1522, V1523, V1524, V1525, V1526, V1527)) end end end end end end end end end, fun (V1528) -> fun (V1529) -> fun (V1530) -> fun (V1531) -> fun (V1532) -> fun (V1533) -> fun (V1534) -> fun (V1535) -> fun (V1536) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1528, V1529, V1530, V1531, V1532, V1533, V1534, V1535, V1536)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V1537) -> fun (V1538) -> fun (V1539) -> fun (V1540) -> fun (V1541) -> fun (V1542) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1537, V1538, V1539, V1540, V1541, V1542)) end end end end end end, fun (V1543) -> fun (V1544) -> fun (V1545) -> fun (V1546) -> fun (V1547) -> fun (V1548) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1543, V1544, V1545, V1546, V1547, V1548)) end end end end end end, fun (V1549) -> fun (V1550) -> fun (V1551) -> fun (V1552) -> fun (V1553) -> fun (V1554) -> fun (V1555) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1549, V1550, V1551, V1552, V1553, V1554, V1555)) end end end end end end end, fun (V1556) -> fun (V1557) -> fun (V1558) -> fun (V1559) -> fun (V1560) -> fun (V1561) -> fun (V1562) -> fun (V1563) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1556, V1557, V1558, V1559, V1560, V1561, V1562, V1563)) end end end end end end end end}}, V2, V0, V1, V1518, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1564) -> ('Idris.Idris2.Builtin':'un--snd'(V1564)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1565) -> ('Idris.Idris2.Builtin':'un--snd'(V1565)) end, V11)))); 0 -> fun (V1566) -> ('un--postpone'(V2, V0, V1, V4, V1518, <<"Postponing local app"/utf8>>, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V1514, V1515}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V1516, V1517}, V11}, V1566)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E834, E835)); _ -> case V7 of {'Idris.Core.Value.NLocal', E789, E790} -> (fun (V1567, V1568) -> case V10 of {'Idris.Core.Value.NLocal', E814, E815} -> (fun (V1569, V1570) -> fun (V1571) -> begin (V1572 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V1571))), case V1572 of {'Idris.Prelude.Types.Left', E816} -> (fun (V1573) -> {'Idris.Prelude.Types.Left', V1573} end(E816)); {'Idris.Prelude.Types.Right', E817} -> (fun (V1574) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V1567, V1568}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V1569, V1570}, V11}, V1571)) end(E817)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E814, E815)); _ -> case V10 of {'Idris.Core.Value.NMeta', E809, E810, E811} -> (fun (V1575, V1576, V1577) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E812, E813} -> (fun (V1578, V1579) -> V1579 end(E812, E813)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1575, V1576, V1577}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V1575, V1576, V1577}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E809, E810, E811)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E791, E792} -> (fun (V1580, V1581) -> case V1581 of 3 -> case V7 of {'Idris.Core.Value.NRef', E793, E794} -> (fun (V1582, V1583) -> case V10 of {'Idris.Core.Value.NRef', E795, E796} -> (fun (V1584, V1585) -> begin (V1586 = {'Idris.Core.Unify.MkUnifyInfo', V1580, 3}), begin (V1587 = {'Idris.Core.Value.NRef', V1582, V1583}), begin (V1588 = {'Idris.Core.Value.NRef', V1584, V1585}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1583, V1585)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1589) -> fun (V1590) -> fun (V1591) -> fun (V1592) -> fun (V1593) -> fun (V1594) -> fun (V1595) -> fun (V1596) -> fun (V1597) -> ('dn--un--unifyD_Unify_Closure'(V1589, V1590, V1591, V1592, V1593, V1594, V1595, V1596, V1597)) end end end end end end end end end, fun (V1598) -> fun (V1599) -> fun (V1600) -> fun (V1601) -> fun (V1602) -> fun (V1603) -> fun (V1604) -> fun (V1605) -> fun (V1606) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1598, V1599, V1600, V1601, V1602, V1603, V1604, V1605, V1606)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V1607) -> fun (V1608) -> fun (V1609) -> fun (V1610) -> fun (V1611) -> fun (V1612) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1607, V1608, V1609, V1610, V1611, V1612)) end end end end end end, fun (V1613) -> fun (V1614) -> fun (V1615) -> fun (V1616) -> fun (V1617) -> fun (V1618) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1613, V1614, V1615, V1616, V1617, V1618)) end end end end end end, fun (V1619) -> fun (V1620) -> fun (V1621) -> fun (V1622) -> fun (V1623) -> fun (V1624) -> fun (V1625) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1619, V1620, V1621, V1622, V1623, V1624, V1625)) end end end end end end end, fun (V1626) -> fun (V1627) -> fun (V1628) -> fun (V1629) -> fun (V1630) -> fun (V1631) -> fun (V1632) -> fun (V1633) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1626, V1627, V1628, V1629, V1630, V1631, V1632, V1633)) end end end end end end end end}}, V2, V0, V1, V1586, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1634) -> ('Idris.Idris2.Builtin':'un--snd'(V1634)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1635) -> ('Idris.Idris2.Builtin':'un--snd'(V1635)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1586, V4, V5, V6, V1587, V8, {'Idris.Core.Value.NApp', V9, V1588, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E795, E796)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E793, E794)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E797, E798} -> (fun (V1636, V1637) -> case V10 of {'Idris.Core.Value.NRef', E799, E800} -> (fun (V1638, V1639) -> begin (V1640 = {'Idris.Core.Unify.MkUnifyInfo', V1580, 2}), begin (V1641 = {'Idris.Core.Value.NRef', V1636, V1637}), begin (V1642 = {'Idris.Core.Value.NRef', V1638, V1639}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1637, V1639)) of 1 -> fun (V1643) -> begin (V1667 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V1644) -> begin (V1646 = begin (V1645 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1645} end), case V1646 of {'Idris.Prelude.Types.Left', E801} -> (fun (V1647) -> {'Idris.Prelude.Types.Left', V1647} end(E801)); {'Idris.Prelude.Types.Right', E802} -> (fun (V1648) -> begin (V1652 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1649) -> fun (V1650) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V1648, V5, V1649, V1650)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1651) -> ('Idris.Idris2.Builtin':'un--snd'(V1651)) end, V8)), [], V1644))), case V1652 of {'Idris.Prelude.Types.Left', E803} -> (fun (V1653) -> {'Idris.Prelude.Types.Left', V1653} end(E803)); {'Idris.Prelude.Types.Right', E804} -> (fun (V1654) -> begin (V1658 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1655) -> fun (V1656) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V1648, V5, V1655, V1656)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1657) -> ('Idris.Idris2.Builtin':'un--snd'(V1657)) end, V11)), [], V1644))), case V1658 of {'Idris.Prelude.Types.Left', E805} -> (fun (V1659) -> {'Idris.Prelude.Types.Left', V1659} end(E805)); {'Idris.Prelude.Types.Right', E806} -> (fun (V1660) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1661) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1661)) end, fun (V1662) -> fun (V1663) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1662, V1663)) end end}, V1654)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1664) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1664)) end, fun (V1665) -> fun (V1666) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1665, V1666)) end end}, V1660))))))))} end(E806)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E804)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E802)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1643))), case V1667 of {'Idris.Prelude.Types.Left', E807} -> (fun (V1668) -> {'Idris.Prelude.Types.Left', V1668} end(E807)); {'Idris.Prelude.Types.Right', E808} -> (fun (V1669) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1670) -> fun (V1671) -> fun (V1672) -> fun (V1673) -> fun (V1674) -> fun (V1675) -> fun (V1676) -> fun (V1677) -> fun (V1678) -> ('dn--un--unifyD_Unify_Closure'(V1670, V1671, V1672, V1673, V1674, V1675, V1676, V1677, V1678)) end end end end end end end end end, fun (V1679) -> fun (V1680) -> fun (V1681) -> fun (V1682) -> fun (V1683) -> fun (V1684) -> fun (V1685) -> fun (V1686) -> fun (V1687) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1679, V1680, V1681, V1682, V1683, V1684, V1685, V1686, V1687)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V1688) -> fun (V1689) -> fun (V1690) -> fun (V1691) -> fun (V1692) -> fun (V1693) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1688, V1689, V1690, V1691, V1692, V1693)) end end end end end end, fun (V1694) -> fun (V1695) -> fun (V1696) -> fun (V1697) -> fun (V1698) -> fun (V1699) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1694, V1695, V1696, V1697, V1698, V1699)) end end end end end end, fun (V1700) -> fun (V1701) -> fun (V1702) -> fun (V1703) -> fun (V1704) -> fun (V1705) -> fun (V1706) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1700, V1701, V1702, V1703, V1704, V1705, V1706)) end end end end end end end, fun (V1707) -> fun (V1708) -> fun (V1709) -> fun (V1710) -> fun (V1711) -> fun (V1712) -> fun (V1713) -> fun (V1714) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1707, V1708, V1709, V1710, V1711, V1712, V1713, V1714)) end end end end end end end end}}, V2, V0, V1, V1640, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1715) -> ('Idris.Idris2.Builtin':'un--snd'(V1715)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1716) -> ('Idris.Idris2.Builtin':'un--snd'(V1716)) end, V11))))(V1643)) end(E808)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1640, V4, V5, V6, V1641, V8, {'Idris.Core.Value.NApp', V9, V1642, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E799, E800)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E797, E798)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E791, E792)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E789, E790)); {'Idris.Core.Value.NMeta', E818, E819, E820} -> (fun (V1717, V1718, V1719) -> case V10 of {'Idris.Core.Value.NMeta', E821, E822, E823} -> (fun (V1720, V1721, V1722) -> fun (V1723) -> begin (V1724 = ('un--isDefInvertible'(V0, V4, V1718, V1723))), case V1724 of {'Idris.Prelude.Types.Left', E824} -> (fun (V1725) -> {'Idris.Prelude.Types.Left', V1725} end(E824)); {'Idris.Prelude.Types.Right', E825} -> (fun (V1726) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V1718, V1721)) of 1 -> case V1726 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E832, E833} -> (fun (V1727, V1728) -> V1728 end(E832, E833)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1729) -> fun (V1730) -> fun (V1731) -> fun (V1732) -> fun (V1733) -> fun (V1734) -> fun (V1735) -> fun (V1736) -> fun (V1737) -> ('dn--un--unifyD_Unify_Closure'(V1729, V1730, V1731, V1732, V1733, V1734, V1735, V1736, V1737)) end end end end end end end end end, fun (V1738) -> fun (V1739) -> fun (V1740) -> fun (V1741) -> fun (V1742) -> fun (V1743) -> fun (V1744) -> fun (V1745) -> fun (V1746) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1738, V1739, V1740, V1741, V1742, V1743, V1744, V1745, V1746)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V1747) -> fun (V1748) -> fun (V1749) -> fun (V1750) -> fun (V1751) -> fun (V1752) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1747, V1748, V1749, V1750, V1751, V1752)) end end end end end end, fun (V1753) -> fun (V1754) -> fun (V1755) -> fun (V1756) -> fun (V1757) -> fun (V1758) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1753, V1754, V1755, V1756, V1757, V1758)) end end end end end end, fun (V1759) -> fun (V1760) -> fun (V1761) -> fun (V1762) -> fun (V1763) -> fun (V1764) -> fun (V1765) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1759, V1760, V1761, V1762, V1763, V1764, V1765)) end end end end end end end, fun (V1766) -> fun (V1767) -> fun (V1768) -> fun (V1769) -> fun (V1770) -> fun (V1771) -> fun (V1772) -> fun (V1773) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1766, V1767, V1768, V1769, V1770, V1771, V1772, V1773)) end end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V1719, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1774) -> ('Idris.Idris2.Builtin':'un--snd'(V1774)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V1722, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1775) -> ('Idris.Idris2.Builtin':'un--snd'(V1775)) end, V11))))))(V1723)); 0 -> begin (V1776 = ('nested--12608-17998--in--un--localsIn'(V2, V1719, V1718, V1717, V1722, V1721, V1720, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1719, V1723))), case V1776 of {'Idris.Prelude.Types.Left', E826} -> (fun (V1777) -> {'Idris.Prelude.Types.Left', V1777} end(E826)); {'Idris.Prelude.Types.Right', E827} -> (fun (V1778) -> begin (V1779 = ('nested--12608-17998--in--un--localsIn'(V2, V1719, V1718, V1717, V1722, V1721, V1720, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1722, V1723))), case V1779 of {'Idris.Prelude.Types.Left', E828} -> (fun (V1780) -> {'Idris.Prelude.Types.Left', V1780} end(E828)); {'Idris.Prelude.Types.Right', E829} -> (fun (V1781) -> begin (V1782 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V1778, V1781)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V1778, V1781)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V1782 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E830, E831} -> (fun (V1783, V1784) -> V1784 end(E830, E831)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--12608-17997--in--un--pv'(V2, V1719, V1718, V1717, V1722, V1721, V1720, V11, V9, V8, V6, V5, V4, V3, V1, V0, V1717)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1717, V1718, V1719}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V1720, V1721, V1722}, V11}))(V1723)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V1720, V1721, V1722}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V1717, V1718, V1719}, V8}))(V1723)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E829)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E827)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E825)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E821, E822, E823)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1717, V1718, V1719}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E818, E819, E820)); _ -> case V10 of {'Idris.Core.Value.NMeta', E784, E785, E786} -> (fun (V1785, V1786, V1787) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E787, E788} -> (fun (V1788, V1789) -> V1789 end(E787, E788)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1785, V1786, V1787}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V1785, V1786, V1787}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E784, E785, E786)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E766, E767} -> (fun (V1790, V1791) -> case V1791 of 3 -> case V7 of {'Idris.Core.Value.NRef', E768, E769} -> (fun (V1792, V1793) -> case V10 of {'Idris.Core.Value.NRef', E770, E771} -> (fun (V1794, V1795) -> begin (V1796 = {'Idris.Core.Unify.MkUnifyInfo', V1790, 3}), begin (V1797 = {'Idris.Core.Value.NRef', V1792, V1793}), begin (V1798 = {'Idris.Core.Value.NRef', V1794, V1795}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1793, V1795)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1799) -> fun (V1800) -> fun (V1801) -> fun (V1802) -> fun (V1803) -> fun (V1804) -> fun (V1805) -> fun (V1806) -> fun (V1807) -> ('dn--un--unifyD_Unify_Closure'(V1799, V1800, V1801, V1802, V1803, V1804, V1805, V1806, V1807)) end end end end end end end end end, fun (V1808) -> fun (V1809) -> fun (V1810) -> fun (V1811) -> fun (V1812) -> fun (V1813) -> fun (V1814) -> fun (V1815) -> fun (V1816) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1808, V1809, V1810, V1811, V1812, V1813, V1814, V1815, V1816)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V1817) -> fun (V1818) -> fun (V1819) -> fun (V1820) -> fun (V1821) -> fun (V1822) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1817, V1818, V1819, V1820, V1821, V1822)) end end end end end end, fun (V1823) -> fun (V1824) -> fun (V1825) -> fun (V1826) -> fun (V1827) -> fun (V1828) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1823, V1824, V1825, V1826, V1827, V1828)) end end end end end end, fun (V1829) -> fun (V1830) -> fun (V1831) -> fun (V1832) -> fun (V1833) -> fun (V1834) -> fun (V1835) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1829, V1830, V1831, V1832, V1833, V1834, V1835)) end end end end end end end, fun (V1836) -> fun (V1837) -> fun (V1838) -> fun (V1839) -> fun (V1840) -> fun (V1841) -> fun (V1842) -> fun (V1843) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1836, V1837, V1838, V1839, V1840, V1841, V1842, V1843)) end end end end end end end end}}, V2, V0, V1, V1796, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1844) -> ('Idris.Idris2.Builtin':'un--snd'(V1844)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1845) -> ('Idris.Idris2.Builtin':'un--snd'(V1845)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1796, V4, V5, V6, V1797, V8, {'Idris.Core.Value.NApp', V9, V1798, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E770, E771)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E768, E769)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E772, E773} -> (fun (V1846, V1847) -> case V10 of {'Idris.Core.Value.NRef', E774, E775} -> (fun (V1848, V1849) -> begin (V1850 = {'Idris.Core.Unify.MkUnifyInfo', V1790, 2}), begin (V1851 = {'Idris.Core.Value.NRef', V1846, V1847}), begin (V1852 = {'Idris.Core.Value.NRef', V1848, V1849}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1847, V1849)) of 1 -> fun (V1853) -> begin (V1877 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V1854) -> begin (V1856 = begin (V1855 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V1855} end), case V1856 of {'Idris.Prelude.Types.Left', E776} -> (fun (V1857) -> {'Idris.Prelude.Types.Left', V1857} end(E776)); {'Idris.Prelude.Types.Right', E777} -> (fun (V1858) -> begin (V1862 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1859) -> fun (V1860) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V1858, V5, V1859, V1860)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1861) -> ('Idris.Idris2.Builtin':'un--snd'(V1861)) end, V8)), [], V1854))), case V1862 of {'Idris.Prelude.Types.Left', E778} -> (fun (V1863) -> {'Idris.Prelude.Types.Left', V1863} end(E778)); {'Idris.Prelude.Types.Right', E779} -> (fun (V1864) -> begin (V1868 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V1865) -> fun (V1866) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V1858, V5, V1865, V1866)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1867) -> ('Idris.Idris2.Builtin':'un--snd'(V1867)) end, V11)), [], V1854))), case V1868 of {'Idris.Prelude.Types.Left', E780} -> (fun (V1869) -> {'Idris.Prelude.Types.Left', V1869} end(E780)); {'Idris.Prelude.Types.Right', E781} -> (fun (V1870) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1871) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1871)) end, fun (V1872) -> fun (V1873) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1872, V1873)) end end}, V1864)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V1874) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V1874)) end, fun (V1875) -> fun (V1876) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V1875, V1876)) end end}, V1870))))))))} end(E781)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E779)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E777)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V1853))), case V1877 of {'Idris.Prelude.Types.Left', E782} -> (fun (V1878) -> {'Idris.Prelude.Types.Left', V1878} end(E782)); {'Idris.Prelude.Types.Right', E783} -> (fun (V1879) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1880) -> fun (V1881) -> fun (V1882) -> fun (V1883) -> fun (V1884) -> fun (V1885) -> fun (V1886) -> fun (V1887) -> fun (V1888) -> ('dn--un--unifyD_Unify_Closure'(V1880, V1881, V1882, V1883, V1884, V1885, V1886, V1887, V1888)) end end end end end end end end end, fun (V1889) -> fun (V1890) -> fun (V1891) -> fun (V1892) -> fun (V1893) -> fun (V1894) -> fun (V1895) -> fun (V1896) -> fun (V1897) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1889, V1890, V1891, V1892, V1893, V1894, V1895, V1896, V1897)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V1898) -> fun (V1899) -> fun (V1900) -> fun (V1901) -> fun (V1902) -> fun (V1903) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1898, V1899, V1900, V1901, V1902, V1903)) end end end end end end, fun (V1904) -> fun (V1905) -> fun (V1906) -> fun (V1907) -> fun (V1908) -> fun (V1909) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1904, V1905, V1906, V1907, V1908, V1909)) end end end end end end, fun (V1910) -> fun (V1911) -> fun (V1912) -> fun (V1913) -> fun (V1914) -> fun (V1915) -> fun (V1916) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1910, V1911, V1912, V1913, V1914, V1915, V1916)) end end end end end end end, fun (V1917) -> fun (V1918) -> fun (V1919) -> fun (V1920) -> fun (V1921) -> fun (V1922) -> fun (V1923) -> fun (V1924) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1917, V1918, V1919, V1920, V1921, V1922, V1923, V1924)) end end end end end end end end}}, V2, V0, V1, V1850, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1925) -> ('Idris.Idris2.Builtin':'un--snd'(V1925)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1926) -> ('Idris.Idris2.Builtin':'un--snd'(V1926)) end, V11))))(V1853)) end(E783)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1850, V4, V5, V6, V1851, V8, {'Idris.Core.Value.NApp', V9, V1852, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E774, E775)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E772, E773)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E766, E767)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end(E764, E765)); _ -> case V7 of {'Idris.Core.Value.NLocal', E719, E720} -> (fun (V1927, V1928) -> case V10 of {'Idris.Core.Value.NLocal', E744, E745} -> (fun (V1929, V1930) -> fun (V1931) -> begin (V1932 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V1931))), case V1932 of {'Idris.Prelude.Types.Left', E746} -> (fun (V1933) -> {'Idris.Prelude.Types.Left', V1933} end(E746)); {'Idris.Prelude.Types.Right', E747} -> (fun (V1934) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V1927, V1928}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V1929, V1930}, V11}, V1931)) end(E747)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E744, E745)); _ -> case V10 of {'Idris.Core.Value.NMeta', E739, E740, E741} -> (fun (V1935, V1936, V1937) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E742, E743} -> (fun (V1938, V1939) -> V1939 end(E742, E743)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V1935, V1936, V1937}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V1935, V1936, V1937}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E739, E740, E741)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E721, E722} -> (fun (V1940, V1941) -> case V1941 of 3 -> case V7 of {'Idris.Core.Value.NRef', E723, E724} -> (fun (V1942, V1943) -> case V10 of {'Idris.Core.Value.NRef', E725, E726} -> (fun (V1944, V1945) -> begin (V1946 = {'Idris.Core.Unify.MkUnifyInfo', V1940, 3}), begin (V1947 = {'Idris.Core.Value.NRef', V1942, V1943}), begin (V1948 = {'Idris.Core.Value.NRef', V1944, V1945}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1943, V1945)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V1949) -> fun (V1950) -> fun (V1951) -> fun (V1952) -> fun (V1953) -> fun (V1954) -> fun (V1955) -> fun (V1956) -> fun (V1957) -> ('dn--un--unifyD_Unify_Closure'(V1949, V1950, V1951, V1952, V1953, V1954, V1955, V1956, V1957)) end end end end end end end end end, fun (V1958) -> fun (V1959) -> fun (V1960) -> fun (V1961) -> fun (V1962) -> fun (V1963) -> fun (V1964) -> fun (V1965) -> fun (V1966) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V1958, V1959, V1960, V1961, V1962, V1963, V1964, V1965, V1966)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V1967) -> fun (V1968) -> fun (V1969) -> fun (V1970) -> fun (V1971) -> fun (V1972) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V1967, V1968, V1969, V1970, V1971, V1972)) end end end end end end, fun (V1973) -> fun (V1974) -> fun (V1975) -> fun (V1976) -> fun (V1977) -> fun (V1978) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V1973, V1974, V1975, V1976, V1977, V1978)) end end end end end end, fun (V1979) -> fun (V1980) -> fun (V1981) -> fun (V1982) -> fun (V1983) -> fun (V1984) -> fun (V1985) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V1979, V1980, V1981, V1982, V1983, V1984, V1985)) end end end end end end end, fun (V1986) -> fun (V1987) -> fun (V1988) -> fun (V1989) -> fun (V1990) -> fun (V1991) -> fun (V1992) -> fun (V1993) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V1986, V1987, V1988, V1989, V1990, V1991, V1992, V1993)) end end end end end end end end}}, V2, V0, V1, V1946, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1994) -> ('Idris.Idris2.Builtin':'un--snd'(V1994)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V1995) -> ('Idris.Idris2.Builtin':'un--snd'(V1995)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V1946, V4, V5, V6, V1947, V8, {'Idris.Core.Value.NApp', V9, V1948, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E725, E726)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E723, E724)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E727, E728} -> (fun (V1996, V1997) -> case V10 of {'Idris.Core.Value.NRef', E729, E730} -> (fun (V1998, V1999) -> begin (V2000 = {'Idris.Core.Unify.MkUnifyInfo', V1940, 2}), begin (V2001 = {'Idris.Core.Value.NRef', V1996, V1997}), begin (V2002 = {'Idris.Core.Value.NRef', V1998, V1999}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V1997, V1999)) of 1 -> fun (V2003) -> begin (V2027 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V2004) -> begin (V2006 = begin (V2005 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2005} end), case V2006 of {'Idris.Prelude.Types.Left', E731} -> (fun (V2007) -> {'Idris.Prelude.Types.Left', V2007} end(E731)); {'Idris.Prelude.Types.Right', E732} -> (fun (V2008) -> begin (V2012 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2009) -> fun (V2010) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V2008, V5, V2009, V2010)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2011) -> ('Idris.Idris2.Builtin':'un--snd'(V2011)) end, V8)), [], V2004))), case V2012 of {'Idris.Prelude.Types.Left', E733} -> (fun (V2013) -> {'Idris.Prelude.Types.Left', V2013} end(E733)); {'Idris.Prelude.Types.Right', E734} -> (fun (V2014) -> begin (V2018 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2015) -> fun (V2016) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V2008, V5, V2015, V2016)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2017) -> ('Idris.Idris2.Builtin':'un--snd'(V2017)) end, V11)), [], V2004))), case V2018 of {'Idris.Prelude.Types.Left', E735} -> (fun (V2019) -> {'Idris.Prelude.Types.Left', V2019} end(E735)); {'Idris.Prelude.Types.Right', E736} -> (fun (V2020) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2021) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2021)) end, fun (V2022) -> fun (V2023) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2022, V2023)) end end}, V2014)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2024) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2024)) end, fun (V2025) -> fun (V2026) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2025, V2026)) end end}, V2020))))))))} end(E736)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E734)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E732)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2003))), case V2027 of {'Idris.Prelude.Types.Left', E737} -> (fun (V2028) -> {'Idris.Prelude.Types.Left', V2028} end(E737)); {'Idris.Prelude.Types.Right', E738} -> (fun (V2029) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2030) -> fun (V2031) -> fun (V2032) -> fun (V2033) -> fun (V2034) -> fun (V2035) -> fun (V2036) -> fun (V2037) -> fun (V2038) -> ('dn--un--unifyD_Unify_Closure'(V2030, V2031, V2032, V2033, V2034, V2035, V2036, V2037, V2038)) end end end end end end end end end, fun (V2039) -> fun (V2040) -> fun (V2041) -> fun (V2042) -> fun (V2043) -> fun (V2044) -> fun (V2045) -> fun (V2046) -> fun (V2047) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2039, V2040, V2041, V2042, V2043, V2044, V2045, V2046, V2047)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V2048) -> fun (V2049) -> fun (V2050) -> fun (V2051) -> fun (V2052) -> fun (V2053) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2048, V2049, V2050, V2051, V2052, V2053)) end end end end end end, fun (V2054) -> fun (V2055) -> fun (V2056) -> fun (V2057) -> fun (V2058) -> fun (V2059) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2054, V2055, V2056, V2057, V2058, V2059)) end end end end end end, fun (V2060) -> fun (V2061) -> fun (V2062) -> fun (V2063) -> fun (V2064) -> fun (V2065) -> fun (V2066) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2060, V2061, V2062, V2063, V2064, V2065, V2066)) end end end end end end end, fun (V2067) -> fun (V2068) -> fun (V2069) -> fun (V2070) -> fun (V2071) -> fun (V2072) -> fun (V2073) -> fun (V2074) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2067, V2068, V2069, V2070, V2071, V2072, V2073, V2074)) end end end end end end end end}}, V2, V0, V1, V2000, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2075) -> ('Idris.Idris2.Builtin':'un--snd'(V2075)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2076) -> ('Idris.Idris2.Builtin':'un--snd'(V2076)) end, V11))))(V2003)) end(E738)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2000, V4, V5, V6, V2001, V8, {'Idris.Core.Value.NApp', V9, V2002, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E729, E730)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E727, E728)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E721, E722)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E719, E720)); {'Idris.Core.Value.NMeta', E748, E749, E750} -> (fun (V2077, V2078, V2079) -> case V10 of {'Idris.Core.Value.NMeta', E751, E752, E753} -> (fun (V2080, V2081, V2082) -> fun (V2083) -> begin (V2084 = ('un--isDefInvertible'(V0, V4, V2078, V2083))), case V2084 of {'Idris.Prelude.Types.Left', E754} -> (fun (V2085) -> {'Idris.Prelude.Types.Left', V2085} end(E754)); {'Idris.Prelude.Types.Right', E755} -> (fun (V2086) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V2078, V2081)) of 1 -> case V2086 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E762, E763} -> (fun (V2087, V2088) -> V2088 end(E762, E763)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2089) -> fun (V2090) -> fun (V2091) -> fun (V2092) -> fun (V2093) -> fun (V2094) -> fun (V2095) -> fun (V2096) -> fun (V2097) -> ('dn--un--unifyD_Unify_Closure'(V2089, V2090, V2091, V2092, V2093, V2094, V2095, V2096, V2097)) end end end end end end end end end, fun (V2098) -> fun (V2099) -> fun (V2100) -> fun (V2101) -> fun (V2102) -> fun (V2103) -> fun (V2104) -> fun (V2105) -> fun (V2106) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2098, V2099, V2100, V2101, V2102, V2103, V2104, V2105, V2106)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V2107) -> fun (V2108) -> fun (V2109) -> fun (V2110) -> fun (V2111) -> fun (V2112) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2107, V2108, V2109, V2110, V2111, V2112)) end end end end end end, fun (V2113) -> fun (V2114) -> fun (V2115) -> fun (V2116) -> fun (V2117) -> fun (V2118) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2113, V2114, V2115, V2116, V2117, V2118)) end end end end end end, fun (V2119) -> fun (V2120) -> fun (V2121) -> fun (V2122) -> fun (V2123) -> fun (V2124) -> fun (V2125) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2119, V2120, V2121, V2122, V2123, V2124, V2125)) end end end end end end end, fun (V2126) -> fun (V2127) -> fun (V2128) -> fun (V2129) -> fun (V2130) -> fun (V2131) -> fun (V2132) -> fun (V2133) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2126, V2127, V2128, V2129, V2130, V2131, V2132, V2133)) end end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V2079, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2134) -> ('Idris.Idris2.Builtin':'un--snd'(V2134)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V2082, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2135) -> ('Idris.Idris2.Builtin':'un--snd'(V2135)) end, V11))))))(V2083)); 0 -> begin (V2136 = ('nested--12608-17998--in--un--localsIn'(V2, V2079, V2078, V2077, V2082, V2081, V2080, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2079, V2083))), case V2136 of {'Idris.Prelude.Types.Left', E756} -> (fun (V2137) -> {'Idris.Prelude.Types.Left', V2137} end(E756)); {'Idris.Prelude.Types.Right', E757} -> (fun (V2138) -> begin (V2139 = ('nested--12608-17998--in--un--localsIn'(V2, V2079, V2078, V2077, V2082, V2081, V2080, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2082, V2083))), case V2139 of {'Idris.Prelude.Types.Left', E758} -> (fun (V2140) -> {'Idris.Prelude.Types.Left', V2140} end(E758)); {'Idris.Prelude.Types.Right', E759} -> (fun (V2141) -> begin (V2142 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V2138, V2141)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V2138, V2141)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V2142 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E760, E761} -> (fun (V2143, V2144) -> V2144 end(E760, E761)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--12608-17997--in--un--pv'(V2, V2079, V2078, V2077, V2082, V2081, V2080, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2077)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2077, V2078, V2079}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V2080, V2081, V2082}, V11}))(V2083)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V2080, V2081, V2082}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V2077, V2078, V2079}, V8}))(V2083)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E759)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E757)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E755)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E751, E752, E753)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2077, V2078, V2079}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E748, E749, E750)); _ -> case V10 of {'Idris.Core.Value.NMeta', E714, E715, E716} -> (fun (V2145, V2146, V2147) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E717, E718} -> (fun (V2148, V2149) -> V2149 end(E717, E718)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2145, V2146, V2147}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V2145, V2146, V2147}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E714, E715, E716)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E696, E697} -> (fun (V2150, V2151) -> case V2151 of 3 -> case V7 of {'Idris.Core.Value.NRef', E698, E699} -> (fun (V2152, V2153) -> case V10 of {'Idris.Core.Value.NRef', E700, E701} -> (fun (V2154, V2155) -> begin (V2156 = {'Idris.Core.Unify.MkUnifyInfo', V2150, 3}), begin (V2157 = {'Idris.Core.Value.NRef', V2152, V2153}), begin (V2158 = {'Idris.Core.Value.NRef', V2154, V2155}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2153, V2155)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2159) -> fun (V2160) -> fun (V2161) -> fun (V2162) -> fun (V2163) -> fun (V2164) -> fun (V2165) -> fun (V2166) -> fun (V2167) -> ('dn--un--unifyD_Unify_Closure'(V2159, V2160, V2161, V2162, V2163, V2164, V2165, V2166, V2167)) end end end end end end end end end, fun (V2168) -> fun (V2169) -> fun (V2170) -> fun (V2171) -> fun (V2172) -> fun (V2173) -> fun (V2174) -> fun (V2175) -> fun (V2176) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2168, V2169, V2170, V2171, V2172, V2173, V2174, V2175, V2176)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V2177) -> fun (V2178) -> fun (V2179) -> fun (V2180) -> fun (V2181) -> fun (V2182) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2177, V2178, V2179, V2180, V2181, V2182)) end end end end end end, fun (V2183) -> fun (V2184) -> fun (V2185) -> fun (V2186) -> fun (V2187) -> fun (V2188) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2183, V2184, V2185, V2186, V2187, V2188)) end end end end end end, fun (V2189) -> fun (V2190) -> fun (V2191) -> fun (V2192) -> fun (V2193) -> fun (V2194) -> fun (V2195) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2189, V2190, V2191, V2192, V2193, V2194, V2195)) end end end end end end end, fun (V2196) -> fun (V2197) -> fun (V2198) -> fun (V2199) -> fun (V2200) -> fun (V2201) -> fun (V2202) -> fun (V2203) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2196, V2197, V2198, V2199, V2200, V2201, V2202, V2203)) end end end end end end end end}}, V2, V0, V1, V2156, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2204) -> ('Idris.Idris2.Builtin':'un--snd'(V2204)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2205) -> ('Idris.Idris2.Builtin':'un--snd'(V2205)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2156, V4, V5, V6, V2157, V8, {'Idris.Core.Value.NApp', V9, V2158, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E700, E701)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E698, E699)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E702, E703} -> (fun (V2206, V2207) -> case V10 of {'Idris.Core.Value.NRef', E704, E705} -> (fun (V2208, V2209) -> begin (V2210 = {'Idris.Core.Unify.MkUnifyInfo', V2150, 2}), begin (V2211 = {'Idris.Core.Value.NRef', V2206, V2207}), begin (V2212 = {'Idris.Core.Value.NRef', V2208, V2209}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2207, V2209)) of 1 -> fun (V2213) -> begin (V2237 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V2214) -> begin (V2216 = begin (V2215 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2215} end), case V2216 of {'Idris.Prelude.Types.Left', E706} -> (fun (V2217) -> {'Idris.Prelude.Types.Left', V2217} end(E706)); {'Idris.Prelude.Types.Right', E707} -> (fun (V2218) -> begin (V2222 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2219) -> fun (V2220) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V2218, V5, V2219, V2220)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2221) -> ('Idris.Idris2.Builtin':'un--snd'(V2221)) end, V8)), [], V2214))), case V2222 of {'Idris.Prelude.Types.Left', E708} -> (fun (V2223) -> {'Idris.Prelude.Types.Left', V2223} end(E708)); {'Idris.Prelude.Types.Right', E709} -> (fun (V2224) -> begin (V2228 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2225) -> fun (V2226) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V2218, V5, V2225, V2226)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2227) -> ('Idris.Idris2.Builtin':'un--snd'(V2227)) end, V11)), [], V2214))), case V2228 of {'Idris.Prelude.Types.Left', E710} -> (fun (V2229) -> {'Idris.Prelude.Types.Left', V2229} end(E710)); {'Idris.Prelude.Types.Right', E711} -> (fun (V2230) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2231) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2231)) end, fun (V2232) -> fun (V2233) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2232, V2233)) end end}, V2224)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2234) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2234)) end, fun (V2235) -> fun (V2236) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2235, V2236)) end end}, V2230))))))))} end(E711)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E709)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E707)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2213))), case V2237 of {'Idris.Prelude.Types.Left', E712} -> (fun (V2238) -> {'Idris.Prelude.Types.Left', V2238} end(E712)); {'Idris.Prelude.Types.Right', E713} -> (fun (V2239) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2240) -> fun (V2241) -> fun (V2242) -> fun (V2243) -> fun (V2244) -> fun (V2245) -> fun (V2246) -> fun (V2247) -> fun (V2248) -> ('dn--un--unifyD_Unify_Closure'(V2240, V2241, V2242, V2243, V2244, V2245, V2246, V2247, V2248)) end end end end end end end end end, fun (V2249) -> fun (V2250) -> fun (V2251) -> fun (V2252) -> fun (V2253) -> fun (V2254) -> fun (V2255) -> fun (V2256) -> fun (V2257) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2249, V2250, V2251, V2252, V2253, V2254, V2255, V2256, V2257)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V2258) -> fun (V2259) -> fun (V2260) -> fun (V2261) -> fun (V2262) -> fun (V2263) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2258, V2259, V2260, V2261, V2262, V2263)) end end end end end end, fun (V2264) -> fun (V2265) -> fun (V2266) -> fun (V2267) -> fun (V2268) -> fun (V2269) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2264, V2265, V2266, V2267, V2268, V2269)) end end end end end end, fun (V2270) -> fun (V2271) -> fun (V2272) -> fun (V2273) -> fun (V2274) -> fun (V2275) -> fun (V2276) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2270, V2271, V2272, V2273, V2274, V2275, V2276)) end end end end end end end, fun (V2277) -> fun (V2278) -> fun (V2279) -> fun (V2280) -> fun (V2281) -> fun (V2282) -> fun (V2283) -> fun (V2284) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2277, V2278, V2279, V2280, V2281, V2282, V2283, V2284)) end end end end end end end end}}, V2, V0, V1, V2210, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2285) -> ('Idris.Idris2.Builtin':'un--snd'(V2285)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2286) -> ('Idris.Idris2.Builtin':'un--snd'(V2286)) end, V11))))(V2213)) end(E713)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2210, V4, V5, V6, V2211, V8, {'Idris.Core.Value.NApp', V9, V2212, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E704, E705)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E702, E703)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E696, E697)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end; _ -> case V7 of {'Idris.Core.Value.NLocal', E651, E652} -> (fun (V2287, V2288) -> case V10 of {'Idris.Core.Value.NLocal', E676, E677} -> (fun (V2289, V2290) -> fun (V2291) -> begin (V2292 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V2291))), case V2292 of {'Idris.Prelude.Types.Left', E678} -> (fun (V2293) -> {'Idris.Prelude.Types.Left', V2293} end(E678)); {'Idris.Prelude.Types.Right', E679} -> (fun (V2294) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V2287, V2288}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V2289, V2290}, V11}, V2291)) end(E679)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E676, E677)); _ -> case V10 of {'Idris.Core.Value.NMeta', E671, E672, E673} -> (fun (V2295, V2296, V2297) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E674, E675} -> (fun (V2298, V2299) -> V2299 end(E674, E675)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2295, V2296, V2297}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V2295, V2296, V2297}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E671, E672, E673)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E653, E654} -> (fun (V2300, V2301) -> case V2301 of 3 -> case V7 of {'Idris.Core.Value.NRef', E655, E656} -> (fun (V2302, V2303) -> case V10 of {'Idris.Core.Value.NRef', E657, E658} -> (fun (V2304, V2305) -> begin (V2306 = {'Idris.Core.Unify.MkUnifyInfo', V2300, 3}), begin (V2307 = {'Idris.Core.Value.NRef', V2302, V2303}), begin (V2308 = {'Idris.Core.Value.NRef', V2304, V2305}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2303, V2305)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2309) -> fun (V2310) -> fun (V2311) -> fun (V2312) -> fun (V2313) -> fun (V2314) -> fun (V2315) -> fun (V2316) -> fun (V2317) -> ('dn--un--unifyD_Unify_Closure'(V2309, V2310, V2311, V2312, V2313, V2314, V2315, V2316, V2317)) end end end end end end end end end, fun (V2318) -> fun (V2319) -> fun (V2320) -> fun (V2321) -> fun (V2322) -> fun (V2323) -> fun (V2324) -> fun (V2325) -> fun (V2326) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2318, V2319, V2320, V2321, V2322, V2323, V2324, V2325, V2326)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V2327) -> fun (V2328) -> fun (V2329) -> fun (V2330) -> fun (V2331) -> fun (V2332) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2327, V2328, V2329, V2330, V2331, V2332)) end end end end end end, fun (V2333) -> fun (V2334) -> fun (V2335) -> fun (V2336) -> fun (V2337) -> fun (V2338) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2333, V2334, V2335, V2336, V2337, V2338)) end end end end end end, fun (V2339) -> fun (V2340) -> fun (V2341) -> fun (V2342) -> fun (V2343) -> fun (V2344) -> fun (V2345) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2339, V2340, V2341, V2342, V2343, V2344, V2345)) end end end end end end end, fun (V2346) -> fun (V2347) -> fun (V2348) -> fun (V2349) -> fun (V2350) -> fun (V2351) -> fun (V2352) -> fun (V2353) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2346, V2347, V2348, V2349, V2350, V2351, V2352, V2353)) end end end end end end end end}}, V2, V0, V1, V2306, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2354) -> ('Idris.Idris2.Builtin':'un--snd'(V2354)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2355) -> ('Idris.Idris2.Builtin':'un--snd'(V2355)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2306, V4, V5, V6, V2307, V8, {'Idris.Core.Value.NApp', V9, V2308, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E657, E658)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E655, E656)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E659, E660} -> (fun (V2356, V2357) -> case V10 of {'Idris.Core.Value.NRef', E661, E662} -> (fun (V2358, V2359) -> begin (V2360 = {'Idris.Core.Unify.MkUnifyInfo', V2300, 2}), begin (V2361 = {'Idris.Core.Value.NRef', V2356, V2357}), begin (V2362 = {'Idris.Core.Value.NRef', V2358, V2359}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2357, V2359)) of 1 -> fun (V2363) -> begin (V2387 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V2364) -> begin (V2366 = begin (V2365 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2365} end), case V2366 of {'Idris.Prelude.Types.Left', E663} -> (fun (V2367) -> {'Idris.Prelude.Types.Left', V2367} end(E663)); {'Idris.Prelude.Types.Right', E664} -> (fun (V2368) -> begin (V2372 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2369) -> fun (V2370) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V2368, V5, V2369, V2370)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2371) -> ('Idris.Idris2.Builtin':'un--snd'(V2371)) end, V8)), [], V2364))), case V2372 of {'Idris.Prelude.Types.Left', E665} -> (fun (V2373) -> {'Idris.Prelude.Types.Left', V2373} end(E665)); {'Idris.Prelude.Types.Right', E666} -> (fun (V2374) -> begin (V2378 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2375) -> fun (V2376) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V2368, V5, V2375, V2376)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2377) -> ('Idris.Idris2.Builtin':'un--snd'(V2377)) end, V11)), [], V2364))), case V2378 of {'Idris.Prelude.Types.Left', E667} -> (fun (V2379) -> {'Idris.Prelude.Types.Left', V2379} end(E667)); {'Idris.Prelude.Types.Right', E668} -> (fun (V2380) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2381) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2381)) end, fun (V2382) -> fun (V2383) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2382, V2383)) end end}, V2374)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2384) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2384)) end, fun (V2385) -> fun (V2386) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2385, V2386)) end end}, V2380))))))))} end(E668)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E666)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E664)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2363))), case V2387 of {'Idris.Prelude.Types.Left', E669} -> (fun (V2388) -> {'Idris.Prelude.Types.Left', V2388} end(E669)); {'Idris.Prelude.Types.Right', E670} -> (fun (V2389) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2390) -> fun (V2391) -> fun (V2392) -> fun (V2393) -> fun (V2394) -> fun (V2395) -> fun (V2396) -> fun (V2397) -> fun (V2398) -> ('dn--un--unifyD_Unify_Closure'(V2390, V2391, V2392, V2393, V2394, V2395, V2396, V2397, V2398)) end end end end end end end end end, fun (V2399) -> fun (V2400) -> fun (V2401) -> fun (V2402) -> fun (V2403) -> fun (V2404) -> fun (V2405) -> fun (V2406) -> fun (V2407) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2399, V2400, V2401, V2402, V2403, V2404, V2405, V2406, V2407)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V2408) -> fun (V2409) -> fun (V2410) -> fun (V2411) -> fun (V2412) -> fun (V2413) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2408, V2409, V2410, V2411, V2412, V2413)) end end end end end end, fun (V2414) -> fun (V2415) -> fun (V2416) -> fun (V2417) -> fun (V2418) -> fun (V2419) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2414, V2415, V2416, V2417, V2418, V2419)) end end end end end end, fun (V2420) -> fun (V2421) -> fun (V2422) -> fun (V2423) -> fun (V2424) -> fun (V2425) -> fun (V2426) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2420, V2421, V2422, V2423, V2424, V2425, V2426)) end end end end end end end, fun (V2427) -> fun (V2428) -> fun (V2429) -> fun (V2430) -> fun (V2431) -> fun (V2432) -> fun (V2433) -> fun (V2434) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2427, V2428, V2429, V2430, V2431, V2432, V2433, V2434)) end end end end end end end end}}, V2, V0, V1, V2360, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2435) -> ('Idris.Idris2.Builtin':'un--snd'(V2435)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2436) -> ('Idris.Idris2.Builtin':'un--snd'(V2436)) end, V11))))(V2363)) end(E670)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2360, V4, V5, V6, V2361, V8, {'Idris.Core.Value.NApp', V9, V2362, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E661, E662)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E659, E660)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E653, E654)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E651, E652)); {'Idris.Core.Value.NMeta', E680, E681, E682} -> (fun (V2437, V2438, V2439) -> case V10 of {'Idris.Core.Value.NMeta', E683, E684, E685} -> (fun (V2440, V2441, V2442) -> fun (V2443) -> begin (V2444 = ('un--isDefInvertible'(V0, V4, V2438, V2443))), case V2444 of {'Idris.Prelude.Types.Left', E686} -> (fun (V2445) -> {'Idris.Prelude.Types.Left', V2445} end(E686)); {'Idris.Prelude.Types.Right', E687} -> (fun (V2446) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V2438, V2441)) of 1 -> case V2446 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E694, E695} -> (fun (V2447, V2448) -> V2448 end(E694, E695)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2449) -> fun (V2450) -> fun (V2451) -> fun (V2452) -> fun (V2453) -> fun (V2454) -> fun (V2455) -> fun (V2456) -> fun (V2457) -> ('dn--un--unifyD_Unify_Closure'(V2449, V2450, V2451, V2452, V2453, V2454, V2455, V2456, V2457)) end end end end end end end end end, fun (V2458) -> fun (V2459) -> fun (V2460) -> fun (V2461) -> fun (V2462) -> fun (V2463) -> fun (V2464) -> fun (V2465) -> fun (V2466) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2458, V2459, V2460, V2461, V2462, V2463, V2464, V2465, V2466)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V2467) -> fun (V2468) -> fun (V2469) -> fun (V2470) -> fun (V2471) -> fun (V2472) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2467, V2468, V2469, V2470, V2471, V2472)) end end end end end end, fun (V2473) -> fun (V2474) -> fun (V2475) -> fun (V2476) -> fun (V2477) -> fun (V2478) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2473, V2474, V2475, V2476, V2477, V2478)) end end end end end end, fun (V2479) -> fun (V2480) -> fun (V2481) -> fun (V2482) -> fun (V2483) -> fun (V2484) -> fun (V2485) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2479, V2480, V2481, V2482, V2483, V2484, V2485)) end end end end end end end, fun (V2486) -> fun (V2487) -> fun (V2488) -> fun (V2489) -> fun (V2490) -> fun (V2491) -> fun (V2492) -> fun (V2493) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2486, V2487, V2488, V2489, V2490, V2491, V2492, V2493)) end end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V2439, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2494) -> ('Idris.Idris2.Builtin':'un--snd'(V2494)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V2442, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2495) -> ('Idris.Idris2.Builtin':'un--snd'(V2495)) end, V11))))))(V2443)); 0 -> begin (V2496 = ('nested--12608-17998--in--un--localsIn'(V2, V2439, V2438, V2437, V2442, V2441, V2440, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2439, V2443))), case V2496 of {'Idris.Prelude.Types.Left', E688} -> (fun (V2497) -> {'Idris.Prelude.Types.Left', V2497} end(E688)); {'Idris.Prelude.Types.Right', E689} -> (fun (V2498) -> begin (V2499 = ('nested--12608-17998--in--un--localsIn'(V2, V2439, V2438, V2437, V2442, V2441, V2440, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2442, V2443))), case V2499 of {'Idris.Prelude.Types.Left', E690} -> (fun (V2500) -> {'Idris.Prelude.Types.Left', V2500} end(E690)); {'Idris.Prelude.Types.Right', E691} -> (fun (V2501) -> begin (V2502 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V2498, V2501)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V2498, V2501)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V2502 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E692, E693} -> (fun (V2503, V2504) -> V2504 end(E692, E693)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--12608-17997--in--un--pv'(V2, V2439, V2438, V2437, V2442, V2441, V2440, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2437)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2437, V2438, V2439}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V2440, V2441, V2442}, V11}))(V2443)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V2440, V2441, V2442}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V2437, V2438, V2439}, V8}))(V2443)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E691)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E689)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E687)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E683, E684, E685)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2437, V2438, V2439}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E680, E681, E682)); _ -> case V10 of {'Idris.Core.Value.NMeta', E646, E647, E648} -> (fun (V2505, V2506, V2507) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E649, E650} -> (fun (V2508, V2509) -> V2509 end(E649, E650)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2505, V2506, V2507}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V2505, V2506, V2507}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E646, E647, E648)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E628, E629} -> (fun (V2510, V2511) -> case V2511 of 3 -> case V7 of {'Idris.Core.Value.NRef', E630, E631} -> (fun (V2512, V2513) -> case V10 of {'Idris.Core.Value.NRef', E632, E633} -> (fun (V2514, V2515) -> begin (V2516 = {'Idris.Core.Unify.MkUnifyInfo', V2510, 3}), begin (V2517 = {'Idris.Core.Value.NRef', V2512, V2513}), begin (V2518 = {'Idris.Core.Value.NRef', V2514, V2515}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2513, V2515)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2519) -> fun (V2520) -> fun (V2521) -> fun (V2522) -> fun (V2523) -> fun (V2524) -> fun (V2525) -> fun (V2526) -> fun (V2527) -> ('dn--un--unifyD_Unify_Closure'(V2519, V2520, V2521, V2522, V2523, V2524, V2525, V2526, V2527)) end end end end end end end end end, fun (V2528) -> fun (V2529) -> fun (V2530) -> fun (V2531) -> fun (V2532) -> fun (V2533) -> fun (V2534) -> fun (V2535) -> fun (V2536) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2528, V2529, V2530, V2531, V2532, V2533, V2534, V2535, V2536)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V2537) -> fun (V2538) -> fun (V2539) -> fun (V2540) -> fun (V2541) -> fun (V2542) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2537, V2538, V2539, V2540, V2541, V2542)) end end end end end end, fun (V2543) -> fun (V2544) -> fun (V2545) -> fun (V2546) -> fun (V2547) -> fun (V2548) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2543, V2544, V2545, V2546, V2547, V2548)) end end end end end end, fun (V2549) -> fun (V2550) -> fun (V2551) -> fun (V2552) -> fun (V2553) -> fun (V2554) -> fun (V2555) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2549, V2550, V2551, V2552, V2553, V2554, V2555)) end end end end end end end, fun (V2556) -> fun (V2557) -> fun (V2558) -> fun (V2559) -> fun (V2560) -> fun (V2561) -> fun (V2562) -> fun (V2563) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2556, V2557, V2558, V2559, V2560, V2561, V2562, V2563)) end end end end end end end end}}, V2, V0, V1, V2516, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2564) -> ('Idris.Idris2.Builtin':'un--snd'(V2564)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2565) -> ('Idris.Idris2.Builtin':'un--snd'(V2565)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2516, V4, V5, V6, V2517, V8, {'Idris.Core.Value.NApp', V9, V2518, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E632, E633)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E630, E631)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E634, E635} -> (fun (V2566, V2567) -> case V10 of {'Idris.Core.Value.NRef', E636, E637} -> (fun (V2568, V2569) -> begin (V2570 = {'Idris.Core.Unify.MkUnifyInfo', V2510, 2}), begin (V2571 = {'Idris.Core.Value.NRef', V2566, V2567}), begin (V2572 = {'Idris.Core.Value.NRef', V2568, V2569}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2567, V2569)) of 1 -> fun (V2573) -> begin (V2597 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V2574) -> begin (V2576 = begin (V2575 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2575} end), case V2576 of {'Idris.Prelude.Types.Left', E638} -> (fun (V2577) -> {'Idris.Prelude.Types.Left', V2577} end(E638)); {'Idris.Prelude.Types.Right', E639} -> (fun (V2578) -> begin (V2582 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2579) -> fun (V2580) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V2578, V5, V2579, V2580)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2581) -> ('Idris.Idris2.Builtin':'un--snd'(V2581)) end, V8)), [], V2574))), case V2582 of {'Idris.Prelude.Types.Left', E640} -> (fun (V2583) -> {'Idris.Prelude.Types.Left', V2583} end(E640)); {'Idris.Prelude.Types.Right', E641} -> (fun (V2584) -> begin (V2588 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2585) -> fun (V2586) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V2578, V5, V2585, V2586)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2587) -> ('Idris.Idris2.Builtin':'un--snd'(V2587)) end, V11)), [], V2574))), case V2588 of {'Idris.Prelude.Types.Left', E642} -> (fun (V2589) -> {'Idris.Prelude.Types.Left', V2589} end(E642)); {'Idris.Prelude.Types.Right', E643} -> (fun (V2590) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2591) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2591)) end, fun (V2592) -> fun (V2593) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2592, V2593)) end end}, V2584)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2594) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2594)) end, fun (V2595) -> fun (V2596) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2595, V2596)) end end}, V2590))))))))} end(E643)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E641)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E639)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2573))), case V2597 of {'Idris.Prelude.Types.Left', E644} -> (fun (V2598) -> {'Idris.Prelude.Types.Left', V2598} end(E644)); {'Idris.Prelude.Types.Right', E645} -> (fun (V2599) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2600) -> fun (V2601) -> fun (V2602) -> fun (V2603) -> fun (V2604) -> fun (V2605) -> fun (V2606) -> fun (V2607) -> fun (V2608) -> ('dn--un--unifyD_Unify_Closure'(V2600, V2601, V2602, V2603, V2604, V2605, V2606, V2607, V2608)) end end end end end end end end end, fun (V2609) -> fun (V2610) -> fun (V2611) -> fun (V2612) -> fun (V2613) -> fun (V2614) -> fun (V2615) -> fun (V2616) -> fun (V2617) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2609, V2610, V2611, V2612, V2613, V2614, V2615, V2616, V2617)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V2618) -> fun (V2619) -> fun (V2620) -> fun (V2621) -> fun (V2622) -> fun (V2623) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2618, V2619, V2620, V2621, V2622, V2623)) end end end end end end, fun (V2624) -> fun (V2625) -> fun (V2626) -> fun (V2627) -> fun (V2628) -> fun (V2629) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2624, V2625, V2626, V2627, V2628, V2629)) end end end end end end, fun (V2630) -> fun (V2631) -> fun (V2632) -> fun (V2633) -> fun (V2634) -> fun (V2635) -> fun (V2636) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2630, V2631, V2632, V2633, V2634, V2635, V2636)) end end end end end end end, fun (V2637) -> fun (V2638) -> fun (V2639) -> fun (V2640) -> fun (V2641) -> fun (V2642) -> fun (V2643) -> fun (V2644) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2637, V2638, V2639, V2640, V2641, V2642, V2643, V2644)) end end end end end end end end}}, V2, V0, V1, V2570, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2645) -> ('Idris.Idris2.Builtin':'un--snd'(V2645)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2646) -> ('Idris.Idris2.Builtin':'un--snd'(V2646)) end, V11))))(V2573)) end(E645)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2570, V4, V5, V6, V2571, V8, {'Idris.Core.Value.NApp', V9, V2572, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E636, E637)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E634, E635)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E628, E629)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end(E626, E627)); _ -> case V7 of {'Idris.Core.Value.NLocal', E581, E582} -> (fun (V2647, V2648) -> case V10 of {'Idris.Core.Value.NLocal', E606, E607} -> (fun (V2649, V2650) -> fun (V2651) -> begin (V2652 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V2651))), case V2652 of {'Idris.Prelude.Types.Left', E608} -> (fun (V2653) -> {'Idris.Prelude.Types.Left', V2653} end(E608)); {'Idris.Prelude.Types.Right', E609} -> (fun (V2654) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V2647, V2648}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V2649, V2650}, V11}, V2651)) end(E609)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E606, E607)); _ -> case V10 of {'Idris.Core.Value.NMeta', E601, E602, E603} -> (fun (V2655, V2656, V2657) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E604, E605} -> (fun (V2658, V2659) -> V2659 end(E604, E605)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2655, V2656, V2657}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V2655, V2656, V2657}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E601, E602, E603)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E583, E584} -> (fun (V2660, V2661) -> case V2661 of 3 -> case V7 of {'Idris.Core.Value.NRef', E585, E586} -> (fun (V2662, V2663) -> case V10 of {'Idris.Core.Value.NRef', E587, E588} -> (fun (V2664, V2665) -> begin (V2666 = {'Idris.Core.Unify.MkUnifyInfo', V2660, 3}), begin (V2667 = {'Idris.Core.Value.NRef', V2662, V2663}), begin (V2668 = {'Idris.Core.Value.NRef', V2664, V2665}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2663, V2665)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2669) -> fun (V2670) -> fun (V2671) -> fun (V2672) -> fun (V2673) -> fun (V2674) -> fun (V2675) -> fun (V2676) -> fun (V2677) -> ('dn--un--unifyD_Unify_Closure'(V2669, V2670, V2671, V2672, V2673, V2674, V2675, V2676, V2677)) end end end end end end end end end, fun (V2678) -> fun (V2679) -> fun (V2680) -> fun (V2681) -> fun (V2682) -> fun (V2683) -> fun (V2684) -> fun (V2685) -> fun (V2686) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2678, V2679, V2680, V2681, V2682, V2683, V2684, V2685, V2686)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V2687) -> fun (V2688) -> fun (V2689) -> fun (V2690) -> fun (V2691) -> fun (V2692) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2687, V2688, V2689, V2690, V2691, V2692)) end end end end end end, fun (V2693) -> fun (V2694) -> fun (V2695) -> fun (V2696) -> fun (V2697) -> fun (V2698) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2693, V2694, V2695, V2696, V2697, V2698)) end end end end end end, fun (V2699) -> fun (V2700) -> fun (V2701) -> fun (V2702) -> fun (V2703) -> fun (V2704) -> fun (V2705) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2699, V2700, V2701, V2702, V2703, V2704, V2705)) end end end end end end end, fun (V2706) -> fun (V2707) -> fun (V2708) -> fun (V2709) -> fun (V2710) -> fun (V2711) -> fun (V2712) -> fun (V2713) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2706, V2707, V2708, V2709, V2710, V2711, V2712, V2713)) end end end end end end end end}}, V2, V0, V1, V2666, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2714) -> ('Idris.Idris2.Builtin':'un--snd'(V2714)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2715) -> ('Idris.Idris2.Builtin':'un--snd'(V2715)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2666, V4, V5, V6, V2667, V8, {'Idris.Core.Value.NApp', V9, V2668, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E587, E588)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E585, E586)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E589, E590} -> (fun (V2716, V2717) -> case V10 of {'Idris.Core.Value.NRef', E591, E592} -> (fun (V2718, V2719) -> begin (V2720 = {'Idris.Core.Unify.MkUnifyInfo', V2660, 2}), begin (V2721 = {'Idris.Core.Value.NRef', V2716, V2717}), begin (V2722 = {'Idris.Core.Value.NRef', V2718, V2719}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2717, V2719)) of 1 -> fun (V2723) -> begin (V2747 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V2724) -> begin (V2726 = begin (V2725 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2725} end), case V2726 of {'Idris.Prelude.Types.Left', E593} -> (fun (V2727) -> {'Idris.Prelude.Types.Left', V2727} end(E593)); {'Idris.Prelude.Types.Right', E594} -> (fun (V2728) -> begin (V2732 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2729) -> fun (V2730) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V2728, V5, V2729, V2730)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2731) -> ('Idris.Idris2.Builtin':'un--snd'(V2731)) end, V8)), [], V2724))), case V2732 of {'Idris.Prelude.Types.Left', E595} -> (fun (V2733) -> {'Idris.Prelude.Types.Left', V2733} end(E595)); {'Idris.Prelude.Types.Right', E596} -> (fun (V2734) -> begin (V2738 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2735) -> fun (V2736) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V2728, V5, V2735, V2736)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2737) -> ('Idris.Idris2.Builtin':'un--snd'(V2737)) end, V11)), [], V2724))), case V2738 of {'Idris.Prelude.Types.Left', E597} -> (fun (V2739) -> {'Idris.Prelude.Types.Left', V2739} end(E597)); {'Idris.Prelude.Types.Right', E598} -> (fun (V2740) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2741) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2741)) end, fun (V2742) -> fun (V2743) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2742, V2743)) end end}, V2734)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2744) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2744)) end, fun (V2745) -> fun (V2746) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2745, V2746)) end end}, V2740))))))))} end(E598)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E596)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E594)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2723))), case V2747 of {'Idris.Prelude.Types.Left', E599} -> (fun (V2748) -> {'Idris.Prelude.Types.Left', V2748} end(E599)); {'Idris.Prelude.Types.Right', E600} -> (fun (V2749) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2750) -> fun (V2751) -> fun (V2752) -> fun (V2753) -> fun (V2754) -> fun (V2755) -> fun (V2756) -> fun (V2757) -> fun (V2758) -> ('dn--un--unifyD_Unify_Closure'(V2750, V2751, V2752, V2753, V2754, V2755, V2756, V2757, V2758)) end end end end end end end end end, fun (V2759) -> fun (V2760) -> fun (V2761) -> fun (V2762) -> fun (V2763) -> fun (V2764) -> fun (V2765) -> fun (V2766) -> fun (V2767) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2759, V2760, V2761, V2762, V2763, V2764, V2765, V2766, V2767)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V2768) -> fun (V2769) -> fun (V2770) -> fun (V2771) -> fun (V2772) -> fun (V2773) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2768, V2769, V2770, V2771, V2772, V2773)) end end end end end end, fun (V2774) -> fun (V2775) -> fun (V2776) -> fun (V2777) -> fun (V2778) -> fun (V2779) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2774, V2775, V2776, V2777, V2778, V2779)) end end end end end end, fun (V2780) -> fun (V2781) -> fun (V2782) -> fun (V2783) -> fun (V2784) -> fun (V2785) -> fun (V2786) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2780, V2781, V2782, V2783, V2784, V2785, V2786)) end end end end end end end, fun (V2787) -> fun (V2788) -> fun (V2789) -> fun (V2790) -> fun (V2791) -> fun (V2792) -> fun (V2793) -> fun (V2794) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2787, V2788, V2789, V2790, V2791, V2792, V2793, V2794)) end end end end end end end end}}, V2, V0, V1, V2720, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2795) -> ('Idris.Idris2.Builtin':'un--snd'(V2795)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2796) -> ('Idris.Idris2.Builtin':'un--snd'(V2796)) end, V11))))(V2723)) end(E600)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2720, V4, V5, V6, V2721, V8, {'Idris.Core.Value.NApp', V9, V2722, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E591, E592)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E589, E590)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E583, E584)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E581, E582)); {'Idris.Core.Value.NMeta', E610, E611, E612} -> (fun (V2797, V2798, V2799) -> case V10 of {'Idris.Core.Value.NMeta', E613, E614, E615} -> (fun (V2800, V2801, V2802) -> fun (V2803) -> begin (V2804 = ('un--isDefInvertible'(V0, V4, V2798, V2803))), case V2804 of {'Idris.Prelude.Types.Left', E616} -> (fun (V2805) -> {'Idris.Prelude.Types.Left', V2805} end(E616)); {'Idris.Prelude.Types.Right', E617} -> (fun (V2806) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V2798, V2801)) of 1 -> case V2806 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E624, E625} -> (fun (V2807, V2808) -> V2808 end(E624, E625)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2809) -> fun (V2810) -> fun (V2811) -> fun (V2812) -> fun (V2813) -> fun (V2814) -> fun (V2815) -> fun (V2816) -> fun (V2817) -> ('dn--un--unifyD_Unify_Closure'(V2809, V2810, V2811, V2812, V2813, V2814, V2815, V2816, V2817)) end end end end end end end end end, fun (V2818) -> fun (V2819) -> fun (V2820) -> fun (V2821) -> fun (V2822) -> fun (V2823) -> fun (V2824) -> fun (V2825) -> fun (V2826) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2818, V2819, V2820, V2821, V2822, V2823, V2824, V2825, V2826)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V2827) -> fun (V2828) -> fun (V2829) -> fun (V2830) -> fun (V2831) -> fun (V2832) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2827, V2828, V2829, V2830, V2831, V2832)) end end end end end end, fun (V2833) -> fun (V2834) -> fun (V2835) -> fun (V2836) -> fun (V2837) -> fun (V2838) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2833, V2834, V2835, V2836, V2837, V2838)) end end end end end end, fun (V2839) -> fun (V2840) -> fun (V2841) -> fun (V2842) -> fun (V2843) -> fun (V2844) -> fun (V2845) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2839, V2840, V2841, V2842, V2843, V2844, V2845)) end end end end end end end, fun (V2846) -> fun (V2847) -> fun (V2848) -> fun (V2849) -> fun (V2850) -> fun (V2851) -> fun (V2852) -> fun (V2853) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2846, V2847, V2848, V2849, V2850, V2851, V2852, V2853)) end end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V2799, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2854) -> ('Idris.Idris2.Builtin':'un--snd'(V2854)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V2802, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2855) -> ('Idris.Idris2.Builtin':'un--snd'(V2855)) end, V11))))))(V2803)); 0 -> begin (V2856 = ('nested--12608-17998--in--un--localsIn'(V2, V2799, V2798, V2797, V2802, V2801, V2800, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2799, V2803))), case V2856 of {'Idris.Prelude.Types.Left', E618} -> (fun (V2857) -> {'Idris.Prelude.Types.Left', V2857} end(E618)); {'Idris.Prelude.Types.Right', E619} -> (fun (V2858) -> begin (V2859 = ('nested--12608-17998--in--un--localsIn'(V2, V2799, V2798, V2797, V2802, V2801, V2800, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2802, V2803))), case V2859 of {'Idris.Prelude.Types.Left', E620} -> (fun (V2860) -> {'Idris.Prelude.Types.Left', V2860} end(E620)); {'Idris.Prelude.Types.Right', E621} -> (fun (V2861) -> begin (V2862 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V2858, V2861)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V2858, V2861)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V2862 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E622, E623} -> (fun (V2863, V2864) -> V2864 end(E622, E623)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--12608-17997--in--un--pv'(V2, V2799, V2798, V2797, V2802, V2801, V2800, V11, V9, V8, V6, V5, V4, V3, V1, V0, V2797)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2797, V2798, V2799}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V2800, V2801, V2802}, V11}))(V2803)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V2800, V2801, V2802}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V2797, V2798, V2799}, V8}))(V2803)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E621)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E619)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E617)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E613, E614, E615)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2797, V2798, V2799}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E610, E611, E612)); _ -> case V10 of {'Idris.Core.Value.NMeta', E576, E577, E578} -> (fun (V2865, V2866, V2867) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E579, E580} -> (fun (V2868, V2869) -> V2869 end(E579, E580)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V2865, V2866, V2867}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V2865, V2866, V2867}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E576, E577, E578)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E558, E559} -> (fun (V2870, V2871) -> case V2871 of 3 -> case V7 of {'Idris.Core.Value.NRef', E560, E561} -> (fun (V2872, V2873) -> case V10 of {'Idris.Core.Value.NRef', E562, E563} -> (fun (V2874, V2875) -> begin (V2876 = {'Idris.Core.Unify.MkUnifyInfo', V2870, 3}), begin (V2877 = {'Idris.Core.Value.NRef', V2872, V2873}), begin (V2878 = {'Idris.Core.Value.NRef', V2874, V2875}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2873, V2875)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2879) -> fun (V2880) -> fun (V2881) -> fun (V2882) -> fun (V2883) -> fun (V2884) -> fun (V2885) -> fun (V2886) -> fun (V2887) -> ('dn--un--unifyD_Unify_Closure'(V2879, V2880, V2881, V2882, V2883, V2884, V2885, V2886, V2887)) end end end end end end end end end, fun (V2888) -> fun (V2889) -> fun (V2890) -> fun (V2891) -> fun (V2892) -> fun (V2893) -> fun (V2894) -> fun (V2895) -> fun (V2896) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2888, V2889, V2890, V2891, V2892, V2893, V2894, V2895, V2896)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V2897) -> fun (V2898) -> fun (V2899) -> fun (V2900) -> fun (V2901) -> fun (V2902) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2897, V2898, V2899, V2900, V2901, V2902)) end end end end end end, fun (V2903) -> fun (V2904) -> fun (V2905) -> fun (V2906) -> fun (V2907) -> fun (V2908) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2903, V2904, V2905, V2906, V2907, V2908)) end end end end end end, fun (V2909) -> fun (V2910) -> fun (V2911) -> fun (V2912) -> fun (V2913) -> fun (V2914) -> fun (V2915) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2909, V2910, V2911, V2912, V2913, V2914, V2915)) end end end end end end end, fun (V2916) -> fun (V2917) -> fun (V2918) -> fun (V2919) -> fun (V2920) -> fun (V2921) -> fun (V2922) -> fun (V2923) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2916, V2917, V2918, V2919, V2920, V2921, V2922, V2923)) end end end end end end end end}}, V2, V0, V1, V2876, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2924) -> ('Idris.Idris2.Builtin':'un--snd'(V2924)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2925) -> ('Idris.Idris2.Builtin':'un--snd'(V2925)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2876, V4, V5, V6, V2877, V8, {'Idris.Core.Value.NApp', V9, V2878, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E562, E563)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E560, E561)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E564, E565} -> (fun (V2926, V2927) -> case V10 of {'Idris.Core.Value.NRef', E566, E567} -> (fun (V2928, V2929) -> begin (V2930 = {'Idris.Core.Unify.MkUnifyInfo', V2870, 2}), begin (V2931 = {'Idris.Core.Value.NRef', V2926, V2927}), begin (V2932 = {'Idris.Core.Value.NRef', V2928, V2929}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V2927, V2929)) of 1 -> fun (V2933) -> begin (V2957 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V2934) -> begin (V2936 = begin (V2935 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V2935} end), case V2936 of {'Idris.Prelude.Types.Left', E568} -> (fun (V2937) -> {'Idris.Prelude.Types.Left', V2937} end(E568)); {'Idris.Prelude.Types.Right', E569} -> (fun (V2938) -> begin (V2942 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2939) -> fun (V2940) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V2938, V5, V2939, V2940)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2941) -> ('Idris.Idris2.Builtin':'un--snd'(V2941)) end, V8)), [], V2934))), case V2942 of {'Idris.Prelude.Types.Left', E570} -> (fun (V2943) -> {'Idris.Prelude.Types.Left', V2943} end(E570)); {'Idris.Prelude.Types.Right', E571} -> (fun (V2944) -> begin (V2948 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V2945) -> fun (V2946) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V2938, V5, V2945, V2946)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V2947) -> ('Idris.Idris2.Builtin':'un--snd'(V2947)) end, V11)), [], V2934))), case V2948 of {'Idris.Prelude.Types.Left', E572} -> (fun (V2949) -> {'Idris.Prelude.Types.Left', V2949} end(E572)); {'Idris.Prelude.Types.Right', E573} -> (fun (V2950) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2951) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2951)) end, fun (V2952) -> fun (V2953) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2952, V2953)) end end}, V2944)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V2954) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V2954)) end, fun (V2955) -> fun (V2956) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V2955, V2956)) end end}, V2950))))))))} end(E573)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E571)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E569)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V2933))), case V2957 of {'Idris.Prelude.Types.Left', E574} -> (fun (V2958) -> {'Idris.Prelude.Types.Left', V2958} end(E574)); {'Idris.Prelude.Types.Right', E575} -> (fun (V2959) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V2960) -> fun (V2961) -> fun (V2962) -> fun (V2963) -> fun (V2964) -> fun (V2965) -> fun (V2966) -> fun (V2967) -> fun (V2968) -> ('dn--un--unifyD_Unify_Closure'(V2960, V2961, V2962, V2963, V2964, V2965, V2966, V2967, V2968)) end end end end end end end end end, fun (V2969) -> fun (V2970) -> fun (V2971) -> fun (V2972) -> fun (V2973) -> fun (V2974) -> fun (V2975) -> fun (V2976) -> fun (V2977) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V2969, V2970, V2971, V2972, V2973, V2974, V2975, V2976, V2977)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V2978) -> fun (V2979) -> fun (V2980) -> fun (V2981) -> fun (V2982) -> fun (V2983) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V2978, V2979, V2980, V2981, V2982, V2983)) end end end end end end, fun (V2984) -> fun (V2985) -> fun (V2986) -> fun (V2987) -> fun (V2988) -> fun (V2989) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V2984, V2985, V2986, V2987, V2988, V2989)) end end end end end end, fun (V2990) -> fun (V2991) -> fun (V2992) -> fun (V2993) -> fun (V2994) -> fun (V2995) -> fun (V2996) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V2990, V2991, V2992, V2993, V2994, V2995, V2996)) end end end end end end end, fun (V2997) -> fun (V2998) -> fun (V2999) -> fun (V3000) -> fun (V3001) -> fun (V3002) -> fun (V3003) -> fun (V3004) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V2997, V2998, V2999, V3000, V3001, V3002, V3003, V3004)) end end end end end end end end}}, V2, V0, V1, V2930, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3005) -> ('Idris.Idris2.Builtin':'un--snd'(V3005)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3006) -> ('Idris.Idris2.Builtin':'un--snd'(V3006)) end, V11))))(V2933)) end(E575)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V2930, V4, V5, V6, V2931, V8, {'Idris.Core.Value.NApp', V9, V2932, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E566, E567)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E564, E565)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E558, E559)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end; _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E348, E349} -> (fun (V3007, V3008) -> case V3008 of 1 -> case V7 of {'Idris.Core.Value.NLocal', E486, E487} -> (fun (V3009, V3010) -> case V10 of {'Idris.Core.Value.NLocal', E556, E557} -> (fun (V3011, V3012) -> begin (V3013 = {'Idris.Core.Unify.MkUnifyInfo', V3007, 1}), case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V3010, V3012)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3014) -> fun (V3015) -> fun (V3016) -> fun (V3017) -> fun (V3018) -> fun (V3019) -> fun (V3020) -> fun (V3021) -> fun (V3022) -> ('dn--un--unifyD_Unify_Closure'(V3014, V3015, V3016, V3017, V3018, V3019, V3020, V3021, V3022)) end end end end end end end end end, fun (V3023) -> fun (V3024) -> fun (V3025) -> fun (V3026) -> fun (V3027) -> fun (V3028) -> fun (V3029) -> fun (V3030) -> fun (V3031) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3023, V3024, V3025, V3026, V3027, V3028, V3029, V3030, V3031)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V3032) -> fun (V3033) -> fun (V3034) -> fun (V3035) -> fun (V3036) -> fun (V3037) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3032, V3033, V3034, V3035, V3036, V3037)) end end end end end end, fun (V3038) -> fun (V3039) -> fun (V3040) -> fun (V3041) -> fun (V3042) -> fun (V3043) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3038, V3039, V3040, V3041, V3042, V3043)) end end end end end end, fun (V3044) -> fun (V3045) -> fun (V3046) -> fun (V3047) -> fun (V3048) -> fun (V3049) -> fun (V3050) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3044, V3045, V3046, V3047, V3048, V3049, V3050)) end end end end end end end, fun (V3051) -> fun (V3052) -> fun (V3053) -> fun (V3054) -> fun (V3055) -> fun (V3056) -> fun (V3057) -> fun (V3058) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3051, V3052, V3053, V3054, V3055, V3056, V3057, V3058)) end end end end end end end end}}, V2, V0, V1, V3013, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3059) -> ('Idris.Idris2.Builtin':'un--snd'(V3059)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3060) -> ('Idris.Idris2.Builtin':'un--snd'(V3060)) end, V11)))); 0 -> fun (V3061) -> ('un--postpone'(V2, V0, V1, V4, V3013, <<"Postponing local app"/utf8>>, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V3009, V3010}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V3011, V3012}, V11}, V3061)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E556, E557)); _ -> case V7 of {'Idris.Core.Value.NLocal', E511, E512} -> (fun (V3062, V3063) -> case V10 of {'Idris.Core.Value.NLocal', E536, E537} -> (fun (V3064, V3065) -> fun (V3066) -> begin (V3067 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V3066))), case V3067 of {'Idris.Prelude.Types.Left', E538} -> (fun (V3068) -> {'Idris.Prelude.Types.Left', V3068} end(E538)); {'Idris.Prelude.Types.Right', E539} -> (fun (V3069) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V3062, V3063}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V3064, V3065}, V11}, V3066)) end(E539)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E536, E537)); _ -> case V10 of {'Idris.Core.Value.NMeta', E531, E532, E533} -> (fun (V3070, V3071, V3072) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E534, E535} -> (fun (V3073, V3074) -> V3074 end(E534, E535)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3070, V3071, V3072}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V3070, V3071, V3072}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E531, E532, E533)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E513, E514} -> (fun (V3075, V3076) -> case V3076 of 3 -> case V7 of {'Idris.Core.Value.NRef', E515, E516} -> (fun (V3077, V3078) -> case V10 of {'Idris.Core.Value.NRef', E517, E518} -> (fun (V3079, V3080) -> begin (V3081 = {'Idris.Core.Unify.MkUnifyInfo', V3075, 3}), begin (V3082 = {'Idris.Core.Value.NRef', V3077, V3078}), begin (V3083 = {'Idris.Core.Value.NRef', V3079, V3080}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3078, V3080)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3084) -> fun (V3085) -> fun (V3086) -> fun (V3087) -> fun (V3088) -> fun (V3089) -> fun (V3090) -> fun (V3091) -> fun (V3092) -> ('dn--un--unifyD_Unify_Closure'(V3084, V3085, V3086, V3087, V3088, V3089, V3090, V3091, V3092)) end end end end end end end end end, fun (V3093) -> fun (V3094) -> fun (V3095) -> fun (V3096) -> fun (V3097) -> fun (V3098) -> fun (V3099) -> fun (V3100) -> fun (V3101) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3093, V3094, V3095, V3096, V3097, V3098, V3099, V3100, V3101)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V3102) -> fun (V3103) -> fun (V3104) -> fun (V3105) -> fun (V3106) -> fun (V3107) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3102, V3103, V3104, V3105, V3106, V3107)) end end end end end end, fun (V3108) -> fun (V3109) -> fun (V3110) -> fun (V3111) -> fun (V3112) -> fun (V3113) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3108, V3109, V3110, V3111, V3112, V3113)) end end end end end end, fun (V3114) -> fun (V3115) -> fun (V3116) -> fun (V3117) -> fun (V3118) -> fun (V3119) -> fun (V3120) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3114, V3115, V3116, V3117, V3118, V3119, V3120)) end end end end end end end, fun (V3121) -> fun (V3122) -> fun (V3123) -> fun (V3124) -> fun (V3125) -> fun (V3126) -> fun (V3127) -> fun (V3128) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3121, V3122, V3123, V3124, V3125, V3126, V3127, V3128)) end end end end end end end end}}, V2, V0, V1, V3081, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3129) -> ('Idris.Idris2.Builtin':'un--snd'(V3129)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3130) -> ('Idris.Idris2.Builtin':'un--snd'(V3130)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3081, V4, V5, V6, V3082, V8, {'Idris.Core.Value.NApp', V9, V3083, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E517, E518)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E515, E516)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E519, E520} -> (fun (V3131, V3132) -> case V10 of {'Idris.Core.Value.NRef', E521, E522} -> (fun (V3133, V3134) -> begin (V3135 = {'Idris.Core.Unify.MkUnifyInfo', V3075, 2}), begin (V3136 = {'Idris.Core.Value.NRef', V3131, V3132}), begin (V3137 = {'Idris.Core.Value.NRef', V3133, V3134}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3132, V3134)) of 1 -> fun (V3138) -> begin (V3162 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V3139) -> begin (V3141 = begin (V3140 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3140} end), case V3141 of {'Idris.Prelude.Types.Left', E523} -> (fun (V3142) -> {'Idris.Prelude.Types.Left', V3142} end(E523)); {'Idris.Prelude.Types.Right', E524} -> (fun (V3143) -> begin (V3147 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3144) -> fun (V3145) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V3143, V5, V3144, V3145)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3146) -> ('Idris.Idris2.Builtin':'un--snd'(V3146)) end, V8)), [], V3139))), case V3147 of {'Idris.Prelude.Types.Left', E525} -> (fun (V3148) -> {'Idris.Prelude.Types.Left', V3148} end(E525)); {'Idris.Prelude.Types.Right', E526} -> (fun (V3149) -> begin (V3153 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3150) -> fun (V3151) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V3143, V5, V3150, V3151)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3152) -> ('Idris.Idris2.Builtin':'un--snd'(V3152)) end, V11)), [], V3139))), case V3153 of {'Idris.Prelude.Types.Left', E527} -> (fun (V3154) -> {'Idris.Prelude.Types.Left', V3154} end(E527)); {'Idris.Prelude.Types.Right', E528} -> (fun (V3155) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3156) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3156)) end, fun (V3157) -> fun (V3158) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3157, V3158)) end end}, V3149)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3159) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3159)) end, fun (V3160) -> fun (V3161) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3160, V3161)) end end}, V3155))))))))} end(E528)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E526)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E524)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3138))), case V3162 of {'Idris.Prelude.Types.Left', E529} -> (fun (V3163) -> {'Idris.Prelude.Types.Left', V3163} end(E529)); {'Idris.Prelude.Types.Right', E530} -> (fun (V3164) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3165) -> fun (V3166) -> fun (V3167) -> fun (V3168) -> fun (V3169) -> fun (V3170) -> fun (V3171) -> fun (V3172) -> fun (V3173) -> ('dn--un--unifyD_Unify_Closure'(V3165, V3166, V3167, V3168, V3169, V3170, V3171, V3172, V3173)) end end end end end end end end end, fun (V3174) -> fun (V3175) -> fun (V3176) -> fun (V3177) -> fun (V3178) -> fun (V3179) -> fun (V3180) -> fun (V3181) -> fun (V3182) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3174, V3175, V3176, V3177, V3178, V3179, V3180, V3181, V3182)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V3183) -> fun (V3184) -> fun (V3185) -> fun (V3186) -> fun (V3187) -> fun (V3188) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3183, V3184, V3185, V3186, V3187, V3188)) end end end end end end, fun (V3189) -> fun (V3190) -> fun (V3191) -> fun (V3192) -> fun (V3193) -> fun (V3194) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3189, V3190, V3191, V3192, V3193, V3194)) end end end end end end, fun (V3195) -> fun (V3196) -> fun (V3197) -> fun (V3198) -> fun (V3199) -> fun (V3200) -> fun (V3201) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3195, V3196, V3197, V3198, V3199, V3200, V3201)) end end end end end end end, fun (V3202) -> fun (V3203) -> fun (V3204) -> fun (V3205) -> fun (V3206) -> fun (V3207) -> fun (V3208) -> fun (V3209) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3202, V3203, V3204, V3205, V3206, V3207, V3208, V3209)) end end end end end end end end}}, V2, V0, V1, V3135, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3210) -> ('Idris.Idris2.Builtin':'un--snd'(V3210)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3211) -> ('Idris.Idris2.Builtin':'un--snd'(V3211)) end, V11))))(V3138)) end(E530)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3135, V4, V5, V6, V3136, V8, {'Idris.Core.Value.NApp', V9, V3137, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E521, E522)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E519, E520)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E513, E514)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E511, E512)); {'Idris.Core.Value.NMeta', E540, E541, E542} -> (fun (V3212, V3213, V3214) -> case V10 of {'Idris.Core.Value.NMeta', E543, E544, E545} -> (fun (V3215, V3216, V3217) -> fun (V3218) -> begin (V3219 = ('un--isDefInvertible'(V0, V4, V3213, V3218))), case V3219 of {'Idris.Prelude.Types.Left', E546} -> (fun (V3220) -> {'Idris.Prelude.Types.Left', V3220} end(E546)); {'Idris.Prelude.Types.Right', E547} -> (fun (V3221) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V3213, V3216)) of 1 -> case V3221 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E554, E555} -> (fun (V3222, V3223) -> V3223 end(E554, E555)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3224) -> fun (V3225) -> fun (V3226) -> fun (V3227) -> fun (V3228) -> fun (V3229) -> fun (V3230) -> fun (V3231) -> fun (V3232) -> ('dn--un--unifyD_Unify_Closure'(V3224, V3225, V3226, V3227, V3228, V3229, V3230, V3231, V3232)) end end end end end end end end end, fun (V3233) -> fun (V3234) -> fun (V3235) -> fun (V3236) -> fun (V3237) -> fun (V3238) -> fun (V3239) -> fun (V3240) -> fun (V3241) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3233, V3234, V3235, V3236, V3237, V3238, V3239, V3240, V3241)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V3242) -> fun (V3243) -> fun (V3244) -> fun (V3245) -> fun (V3246) -> fun (V3247) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3242, V3243, V3244, V3245, V3246, V3247)) end end end end end end, fun (V3248) -> fun (V3249) -> fun (V3250) -> fun (V3251) -> fun (V3252) -> fun (V3253) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3248, V3249, V3250, V3251, V3252, V3253)) end end end end end end, fun (V3254) -> fun (V3255) -> fun (V3256) -> fun (V3257) -> fun (V3258) -> fun (V3259) -> fun (V3260) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3254, V3255, V3256, V3257, V3258, V3259, V3260)) end end end end end end end, fun (V3261) -> fun (V3262) -> fun (V3263) -> fun (V3264) -> fun (V3265) -> fun (V3266) -> fun (V3267) -> fun (V3268) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3261, V3262, V3263, V3264, V3265, V3266, V3267, V3268)) end end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V3214, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3269) -> ('Idris.Idris2.Builtin':'un--snd'(V3269)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V3217, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3270) -> ('Idris.Idris2.Builtin':'un--snd'(V3270)) end, V11))))))(V3218)); 0 -> begin (V3271 = ('nested--12608-17998--in--un--localsIn'(V2, V3214, V3213, V3212, V3217, V3216, V3215, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3214, V3218))), case V3271 of {'Idris.Prelude.Types.Left', E548} -> (fun (V3272) -> {'Idris.Prelude.Types.Left', V3272} end(E548)); {'Idris.Prelude.Types.Right', E549} -> (fun (V3273) -> begin (V3274 = ('nested--12608-17998--in--un--localsIn'(V2, V3214, V3213, V3212, V3217, V3216, V3215, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3217, V3218))), case V3274 of {'Idris.Prelude.Types.Left', E550} -> (fun (V3275) -> {'Idris.Prelude.Types.Left', V3275} end(E550)); {'Idris.Prelude.Types.Right', E551} -> (fun (V3276) -> begin (V3277 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V3273, V3276)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V3273, V3276)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V3277 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E552, E553} -> (fun (V3278, V3279) -> V3279 end(E552, E553)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--12608-17997--in--un--pv'(V2, V3214, V3213, V3212, V3217, V3216, V3215, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3212)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3212, V3213, V3214}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V3215, V3216, V3217}, V11}))(V3218)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V3215, V3216, V3217}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V3212, V3213, V3214}, V8}))(V3218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E551)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E549)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E547)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E543, E544, E545)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3212, V3213, V3214}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E540, E541, E542)); _ -> case V10 of {'Idris.Core.Value.NMeta', E506, E507, E508} -> (fun (V3280, V3281, V3282) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E509, E510} -> (fun (V3283, V3284) -> V3284 end(E509, E510)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3280, V3281, V3282}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V3280, V3281, V3282}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E506, E507, E508)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E488, E489} -> (fun (V3285, V3286) -> case V3286 of 3 -> case V7 of {'Idris.Core.Value.NRef', E490, E491} -> (fun (V3287, V3288) -> case V10 of {'Idris.Core.Value.NRef', E492, E493} -> (fun (V3289, V3290) -> begin (V3291 = {'Idris.Core.Unify.MkUnifyInfo', V3285, 3}), begin (V3292 = {'Idris.Core.Value.NRef', V3287, V3288}), begin (V3293 = {'Idris.Core.Value.NRef', V3289, V3290}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3288, V3290)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3294) -> fun (V3295) -> fun (V3296) -> fun (V3297) -> fun (V3298) -> fun (V3299) -> fun (V3300) -> fun (V3301) -> fun (V3302) -> ('dn--un--unifyD_Unify_Closure'(V3294, V3295, V3296, V3297, V3298, V3299, V3300, V3301, V3302)) end end end end end end end end end, fun (V3303) -> fun (V3304) -> fun (V3305) -> fun (V3306) -> fun (V3307) -> fun (V3308) -> fun (V3309) -> fun (V3310) -> fun (V3311) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3303, V3304, V3305, V3306, V3307, V3308, V3309, V3310, V3311)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V3312) -> fun (V3313) -> fun (V3314) -> fun (V3315) -> fun (V3316) -> fun (V3317) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3312, V3313, V3314, V3315, V3316, V3317)) end end end end end end, fun (V3318) -> fun (V3319) -> fun (V3320) -> fun (V3321) -> fun (V3322) -> fun (V3323) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3318, V3319, V3320, V3321, V3322, V3323)) end end end end end end, fun (V3324) -> fun (V3325) -> fun (V3326) -> fun (V3327) -> fun (V3328) -> fun (V3329) -> fun (V3330) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3324, V3325, V3326, V3327, V3328, V3329, V3330)) end end end end end end end, fun (V3331) -> fun (V3332) -> fun (V3333) -> fun (V3334) -> fun (V3335) -> fun (V3336) -> fun (V3337) -> fun (V3338) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3331, V3332, V3333, V3334, V3335, V3336, V3337, V3338)) end end end end end end end end}}, V2, V0, V1, V3291, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3339) -> ('Idris.Idris2.Builtin':'un--snd'(V3339)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3340) -> ('Idris.Idris2.Builtin':'un--snd'(V3340)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3291, V4, V5, V6, V3292, V8, {'Idris.Core.Value.NApp', V9, V3293, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E492, E493)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E490, E491)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E494, E495} -> (fun (V3341, V3342) -> case V10 of {'Idris.Core.Value.NRef', E496, E497} -> (fun (V3343, V3344) -> begin (V3345 = {'Idris.Core.Unify.MkUnifyInfo', V3285, 2}), begin (V3346 = {'Idris.Core.Value.NRef', V3341, V3342}), begin (V3347 = {'Idris.Core.Value.NRef', V3343, V3344}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3342, V3344)) of 1 -> fun (V3348) -> begin (V3372 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V3349) -> begin (V3351 = begin (V3350 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3350} end), case V3351 of {'Idris.Prelude.Types.Left', E498} -> (fun (V3352) -> {'Idris.Prelude.Types.Left', V3352} end(E498)); {'Idris.Prelude.Types.Right', E499} -> (fun (V3353) -> begin (V3357 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3354) -> fun (V3355) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V3353, V5, V3354, V3355)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3356) -> ('Idris.Idris2.Builtin':'un--snd'(V3356)) end, V8)), [], V3349))), case V3357 of {'Idris.Prelude.Types.Left', E500} -> (fun (V3358) -> {'Idris.Prelude.Types.Left', V3358} end(E500)); {'Idris.Prelude.Types.Right', E501} -> (fun (V3359) -> begin (V3363 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3360) -> fun (V3361) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V3353, V5, V3360, V3361)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3362) -> ('Idris.Idris2.Builtin':'un--snd'(V3362)) end, V11)), [], V3349))), case V3363 of {'Idris.Prelude.Types.Left', E502} -> (fun (V3364) -> {'Idris.Prelude.Types.Left', V3364} end(E502)); {'Idris.Prelude.Types.Right', E503} -> (fun (V3365) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3366) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3366)) end, fun (V3367) -> fun (V3368) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3367, V3368)) end end}, V3359)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3369) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3369)) end, fun (V3370) -> fun (V3371) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3370, V3371)) end end}, V3365))))))))} end(E503)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E501)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E499)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3348))), case V3372 of {'Idris.Prelude.Types.Left', E504} -> (fun (V3373) -> {'Idris.Prelude.Types.Left', V3373} end(E504)); {'Idris.Prelude.Types.Right', E505} -> (fun (V3374) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3375) -> fun (V3376) -> fun (V3377) -> fun (V3378) -> fun (V3379) -> fun (V3380) -> fun (V3381) -> fun (V3382) -> fun (V3383) -> ('dn--un--unifyD_Unify_Closure'(V3375, V3376, V3377, V3378, V3379, V3380, V3381, V3382, V3383)) end end end end end end end end end, fun (V3384) -> fun (V3385) -> fun (V3386) -> fun (V3387) -> fun (V3388) -> fun (V3389) -> fun (V3390) -> fun (V3391) -> fun (V3392) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3384, V3385, V3386, V3387, V3388, V3389, V3390, V3391, V3392)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V3393) -> fun (V3394) -> fun (V3395) -> fun (V3396) -> fun (V3397) -> fun (V3398) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3393, V3394, V3395, V3396, V3397, V3398)) end end end end end end, fun (V3399) -> fun (V3400) -> fun (V3401) -> fun (V3402) -> fun (V3403) -> fun (V3404) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3399, V3400, V3401, V3402, V3403, V3404)) end end end end end end, fun (V3405) -> fun (V3406) -> fun (V3407) -> fun (V3408) -> fun (V3409) -> fun (V3410) -> fun (V3411) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3405, V3406, V3407, V3408, V3409, V3410, V3411)) end end end end end end end, fun (V3412) -> fun (V3413) -> fun (V3414) -> fun (V3415) -> fun (V3416) -> fun (V3417) -> fun (V3418) -> fun (V3419) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3412, V3413, V3414, V3415, V3416, V3417, V3418, V3419)) end end end end end end end end}}, V2, V0, V1, V3345, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3420) -> ('Idris.Idris2.Builtin':'un--snd'(V3420)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3421) -> ('Idris.Idris2.Builtin':'un--snd'(V3421)) end, V11))))(V3348)) end(E505)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3345, V4, V5, V6, V3346, V8, {'Idris.Core.Value.NApp', V9, V3347, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E496, E497)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E494, E495)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E488, E489)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end(E486, E487)); _ -> case V7 of {'Idris.Core.Value.NLocal', E441, E442} -> (fun (V3422, V3423) -> case V10 of {'Idris.Core.Value.NLocal', E466, E467} -> (fun (V3424, V3425) -> fun (V3426) -> begin (V3427 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V3426))), case V3427 of {'Idris.Prelude.Types.Left', E468} -> (fun (V3428) -> {'Idris.Prelude.Types.Left', V3428} end(E468)); {'Idris.Prelude.Types.Right', E469} -> (fun (V3429) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V3422, V3423}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V3424, V3425}, V11}, V3426)) end(E469)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E466, E467)); _ -> case V10 of {'Idris.Core.Value.NMeta', E461, E462, E463} -> (fun (V3430, V3431, V3432) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E464, E465} -> (fun (V3433, V3434) -> V3434 end(E464, E465)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3430, V3431, V3432}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V3430, V3431, V3432}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E461, E462, E463)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E443, E444} -> (fun (V3435, V3436) -> case V3436 of 3 -> case V7 of {'Idris.Core.Value.NRef', E445, E446} -> (fun (V3437, V3438) -> case V10 of {'Idris.Core.Value.NRef', E447, E448} -> (fun (V3439, V3440) -> begin (V3441 = {'Idris.Core.Unify.MkUnifyInfo', V3435, 3}), begin (V3442 = {'Idris.Core.Value.NRef', V3437, V3438}), begin (V3443 = {'Idris.Core.Value.NRef', V3439, V3440}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3438, V3440)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3444) -> fun (V3445) -> fun (V3446) -> fun (V3447) -> fun (V3448) -> fun (V3449) -> fun (V3450) -> fun (V3451) -> fun (V3452) -> ('dn--un--unifyD_Unify_Closure'(V3444, V3445, V3446, V3447, V3448, V3449, V3450, V3451, V3452)) end end end end end end end end end, fun (V3453) -> fun (V3454) -> fun (V3455) -> fun (V3456) -> fun (V3457) -> fun (V3458) -> fun (V3459) -> fun (V3460) -> fun (V3461) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3453, V3454, V3455, V3456, V3457, V3458, V3459, V3460, V3461)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V3462) -> fun (V3463) -> fun (V3464) -> fun (V3465) -> fun (V3466) -> fun (V3467) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3462, V3463, V3464, V3465, V3466, V3467)) end end end end end end, fun (V3468) -> fun (V3469) -> fun (V3470) -> fun (V3471) -> fun (V3472) -> fun (V3473) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3468, V3469, V3470, V3471, V3472, V3473)) end end end end end end, fun (V3474) -> fun (V3475) -> fun (V3476) -> fun (V3477) -> fun (V3478) -> fun (V3479) -> fun (V3480) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3474, V3475, V3476, V3477, V3478, V3479, V3480)) end end end end end end end, fun (V3481) -> fun (V3482) -> fun (V3483) -> fun (V3484) -> fun (V3485) -> fun (V3486) -> fun (V3487) -> fun (V3488) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3481, V3482, V3483, V3484, V3485, V3486, V3487, V3488)) end end end end end end end end}}, V2, V0, V1, V3441, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3489) -> ('Idris.Idris2.Builtin':'un--snd'(V3489)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3490) -> ('Idris.Idris2.Builtin':'un--snd'(V3490)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3441, V4, V5, V6, V3442, V8, {'Idris.Core.Value.NApp', V9, V3443, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E447, E448)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E445, E446)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E449, E450} -> (fun (V3491, V3492) -> case V10 of {'Idris.Core.Value.NRef', E451, E452} -> (fun (V3493, V3494) -> begin (V3495 = {'Idris.Core.Unify.MkUnifyInfo', V3435, 2}), begin (V3496 = {'Idris.Core.Value.NRef', V3491, V3492}), begin (V3497 = {'Idris.Core.Value.NRef', V3493, V3494}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3492, V3494)) of 1 -> fun (V3498) -> begin (V3522 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V3499) -> begin (V3501 = begin (V3500 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3500} end), case V3501 of {'Idris.Prelude.Types.Left', E453} -> (fun (V3502) -> {'Idris.Prelude.Types.Left', V3502} end(E453)); {'Idris.Prelude.Types.Right', E454} -> (fun (V3503) -> begin (V3507 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3504) -> fun (V3505) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V3503, V5, V3504, V3505)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3506) -> ('Idris.Idris2.Builtin':'un--snd'(V3506)) end, V8)), [], V3499))), case V3507 of {'Idris.Prelude.Types.Left', E455} -> (fun (V3508) -> {'Idris.Prelude.Types.Left', V3508} end(E455)); {'Idris.Prelude.Types.Right', E456} -> (fun (V3509) -> begin (V3513 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3510) -> fun (V3511) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V3503, V5, V3510, V3511)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3512) -> ('Idris.Idris2.Builtin':'un--snd'(V3512)) end, V11)), [], V3499))), case V3513 of {'Idris.Prelude.Types.Left', E457} -> (fun (V3514) -> {'Idris.Prelude.Types.Left', V3514} end(E457)); {'Idris.Prelude.Types.Right', E458} -> (fun (V3515) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3516) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3516)) end, fun (V3517) -> fun (V3518) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3517, V3518)) end end}, V3509)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3519) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3519)) end, fun (V3520) -> fun (V3521) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3520, V3521)) end end}, V3515))))))))} end(E458)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E456)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E454)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3498))), case V3522 of {'Idris.Prelude.Types.Left', E459} -> (fun (V3523) -> {'Idris.Prelude.Types.Left', V3523} end(E459)); {'Idris.Prelude.Types.Right', E460} -> (fun (V3524) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3525) -> fun (V3526) -> fun (V3527) -> fun (V3528) -> fun (V3529) -> fun (V3530) -> fun (V3531) -> fun (V3532) -> fun (V3533) -> ('dn--un--unifyD_Unify_Closure'(V3525, V3526, V3527, V3528, V3529, V3530, V3531, V3532, V3533)) end end end end end end end end end, fun (V3534) -> fun (V3535) -> fun (V3536) -> fun (V3537) -> fun (V3538) -> fun (V3539) -> fun (V3540) -> fun (V3541) -> fun (V3542) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3534, V3535, V3536, V3537, V3538, V3539, V3540, V3541, V3542)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V3543) -> fun (V3544) -> fun (V3545) -> fun (V3546) -> fun (V3547) -> fun (V3548) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3543, V3544, V3545, V3546, V3547, V3548)) end end end end end end, fun (V3549) -> fun (V3550) -> fun (V3551) -> fun (V3552) -> fun (V3553) -> fun (V3554) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3549, V3550, V3551, V3552, V3553, V3554)) end end end end end end, fun (V3555) -> fun (V3556) -> fun (V3557) -> fun (V3558) -> fun (V3559) -> fun (V3560) -> fun (V3561) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3555, V3556, V3557, V3558, V3559, V3560, V3561)) end end end end end end end, fun (V3562) -> fun (V3563) -> fun (V3564) -> fun (V3565) -> fun (V3566) -> fun (V3567) -> fun (V3568) -> fun (V3569) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3562, V3563, V3564, V3565, V3566, V3567, V3568, V3569)) end end end end end end end end}}, V2, V0, V1, V3495, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3570) -> ('Idris.Idris2.Builtin':'un--snd'(V3570)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3571) -> ('Idris.Idris2.Builtin':'un--snd'(V3571)) end, V11))))(V3498)) end(E460)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3495, V4, V5, V6, V3496, V8, {'Idris.Core.Value.NApp', V9, V3497, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E451, E452)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E449, E450)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E443, E444)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E441, E442)); {'Idris.Core.Value.NMeta', E470, E471, E472} -> (fun (V3572, V3573, V3574) -> case V10 of {'Idris.Core.Value.NMeta', E473, E474, E475} -> (fun (V3575, V3576, V3577) -> fun (V3578) -> begin (V3579 = ('un--isDefInvertible'(V0, V4, V3573, V3578))), case V3579 of {'Idris.Prelude.Types.Left', E476} -> (fun (V3580) -> {'Idris.Prelude.Types.Left', V3580} end(E476)); {'Idris.Prelude.Types.Right', E477} -> (fun (V3581) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V3573, V3576)) of 1 -> case V3581 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E484, E485} -> (fun (V3582, V3583) -> V3583 end(E484, E485)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3584) -> fun (V3585) -> fun (V3586) -> fun (V3587) -> fun (V3588) -> fun (V3589) -> fun (V3590) -> fun (V3591) -> fun (V3592) -> ('dn--un--unifyD_Unify_Closure'(V3584, V3585, V3586, V3587, V3588, V3589, V3590, V3591, V3592)) end end end end end end end end end, fun (V3593) -> fun (V3594) -> fun (V3595) -> fun (V3596) -> fun (V3597) -> fun (V3598) -> fun (V3599) -> fun (V3600) -> fun (V3601) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3593, V3594, V3595, V3596, V3597, V3598, V3599, V3600, V3601)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V3602) -> fun (V3603) -> fun (V3604) -> fun (V3605) -> fun (V3606) -> fun (V3607) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3602, V3603, V3604, V3605, V3606, V3607)) end end end end end end, fun (V3608) -> fun (V3609) -> fun (V3610) -> fun (V3611) -> fun (V3612) -> fun (V3613) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3608, V3609, V3610, V3611, V3612, V3613)) end end end end end end, fun (V3614) -> fun (V3615) -> fun (V3616) -> fun (V3617) -> fun (V3618) -> fun (V3619) -> fun (V3620) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3614, V3615, V3616, V3617, V3618, V3619, V3620)) end end end end end end end, fun (V3621) -> fun (V3622) -> fun (V3623) -> fun (V3624) -> fun (V3625) -> fun (V3626) -> fun (V3627) -> fun (V3628) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3621, V3622, V3623, V3624, V3625, V3626, V3627, V3628)) end end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V3574, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3629) -> ('Idris.Idris2.Builtin':'un--snd'(V3629)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V3577, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3630) -> ('Idris.Idris2.Builtin':'un--snd'(V3630)) end, V11))))))(V3578)); 0 -> begin (V3631 = ('nested--12608-17998--in--un--localsIn'(V2, V3574, V3573, V3572, V3577, V3576, V3575, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3574, V3578))), case V3631 of {'Idris.Prelude.Types.Left', E478} -> (fun (V3632) -> {'Idris.Prelude.Types.Left', V3632} end(E478)); {'Idris.Prelude.Types.Right', E479} -> (fun (V3633) -> begin (V3634 = ('nested--12608-17998--in--un--localsIn'(V2, V3574, V3573, V3572, V3577, V3576, V3575, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3577, V3578))), case V3634 of {'Idris.Prelude.Types.Left', E480} -> (fun (V3635) -> {'Idris.Prelude.Types.Left', V3635} end(E480)); {'Idris.Prelude.Types.Right', E481} -> (fun (V3636) -> begin (V3637 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V3633, V3636)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V3633, V3636)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V3637 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E482, E483} -> (fun (V3638, V3639) -> V3639 end(E482, E483)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--12608-17997--in--un--pv'(V2, V3574, V3573, V3572, V3577, V3576, V3575, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3572)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3572, V3573, V3574}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V3575, V3576, V3577}, V11}))(V3578)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V3575, V3576, V3577}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V3572, V3573, V3574}, V8}))(V3578)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E481)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E479)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E477)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E473, E474, E475)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3572, V3573, V3574}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E470, E471, E472)); _ -> case V10 of {'Idris.Core.Value.NMeta', E436, E437, E438} -> (fun (V3640, V3641, V3642) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E439, E440} -> (fun (V3643, V3644) -> V3644 end(E439, E440)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3640, V3641, V3642}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V3640, V3641, V3642}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E436, E437, E438)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E418, E419} -> (fun (V3645, V3646) -> case V3646 of 3 -> case V7 of {'Idris.Core.Value.NRef', E420, E421} -> (fun (V3647, V3648) -> case V10 of {'Idris.Core.Value.NRef', E422, E423} -> (fun (V3649, V3650) -> begin (V3651 = {'Idris.Core.Unify.MkUnifyInfo', V3645, 3}), begin (V3652 = {'Idris.Core.Value.NRef', V3647, V3648}), begin (V3653 = {'Idris.Core.Value.NRef', V3649, V3650}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3648, V3650)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3654) -> fun (V3655) -> fun (V3656) -> fun (V3657) -> fun (V3658) -> fun (V3659) -> fun (V3660) -> fun (V3661) -> fun (V3662) -> ('dn--un--unifyD_Unify_Closure'(V3654, V3655, V3656, V3657, V3658, V3659, V3660, V3661, V3662)) end end end end end end end end end, fun (V3663) -> fun (V3664) -> fun (V3665) -> fun (V3666) -> fun (V3667) -> fun (V3668) -> fun (V3669) -> fun (V3670) -> fun (V3671) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3663, V3664, V3665, V3666, V3667, V3668, V3669, V3670, V3671)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V3672) -> fun (V3673) -> fun (V3674) -> fun (V3675) -> fun (V3676) -> fun (V3677) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3672, V3673, V3674, V3675, V3676, V3677)) end end end end end end, fun (V3678) -> fun (V3679) -> fun (V3680) -> fun (V3681) -> fun (V3682) -> fun (V3683) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3678, V3679, V3680, V3681, V3682, V3683)) end end end end end end, fun (V3684) -> fun (V3685) -> fun (V3686) -> fun (V3687) -> fun (V3688) -> fun (V3689) -> fun (V3690) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3684, V3685, V3686, V3687, V3688, V3689, V3690)) end end end end end end end, fun (V3691) -> fun (V3692) -> fun (V3693) -> fun (V3694) -> fun (V3695) -> fun (V3696) -> fun (V3697) -> fun (V3698) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3691, V3692, V3693, V3694, V3695, V3696, V3697, V3698)) end end end end end end end end}}, V2, V0, V1, V3651, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3699) -> ('Idris.Idris2.Builtin':'un--snd'(V3699)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3700) -> ('Idris.Idris2.Builtin':'un--snd'(V3700)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3651, V4, V5, V6, V3652, V8, {'Idris.Core.Value.NApp', V9, V3653, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E422, E423)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E420, E421)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E424, E425} -> (fun (V3701, V3702) -> case V10 of {'Idris.Core.Value.NRef', E426, E427} -> (fun (V3703, V3704) -> begin (V3705 = {'Idris.Core.Unify.MkUnifyInfo', V3645, 2}), begin (V3706 = {'Idris.Core.Value.NRef', V3701, V3702}), begin (V3707 = {'Idris.Core.Value.NRef', V3703, V3704}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3702, V3704)) of 1 -> fun (V3708) -> begin (V3732 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V3709) -> begin (V3711 = begin (V3710 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3710} end), case V3711 of {'Idris.Prelude.Types.Left', E428} -> (fun (V3712) -> {'Idris.Prelude.Types.Left', V3712} end(E428)); {'Idris.Prelude.Types.Right', E429} -> (fun (V3713) -> begin (V3717 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3714) -> fun (V3715) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V3713, V5, V3714, V3715)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3716) -> ('Idris.Idris2.Builtin':'un--snd'(V3716)) end, V8)), [], V3709))), case V3717 of {'Idris.Prelude.Types.Left', E430} -> (fun (V3718) -> {'Idris.Prelude.Types.Left', V3718} end(E430)); {'Idris.Prelude.Types.Right', E431} -> (fun (V3719) -> begin (V3723 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3720) -> fun (V3721) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V3713, V5, V3720, V3721)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3722) -> ('Idris.Idris2.Builtin':'un--snd'(V3722)) end, V11)), [], V3709))), case V3723 of {'Idris.Prelude.Types.Left', E432} -> (fun (V3724) -> {'Idris.Prelude.Types.Left', V3724} end(E432)); {'Idris.Prelude.Types.Right', E433} -> (fun (V3725) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3726) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3726)) end, fun (V3727) -> fun (V3728) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3727, V3728)) end end}, V3719)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3729) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3729)) end, fun (V3730) -> fun (V3731) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3730, V3731)) end end}, V3725))))))))} end(E433)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E431)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E429)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3708))), case V3732 of {'Idris.Prelude.Types.Left', E434} -> (fun (V3733) -> {'Idris.Prelude.Types.Left', V3733} end(E434)); {'Idris.Prelude.Types.Right', E435} -> (fun (V3734) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3735) -> fun (V3736) -> fun (V3737) -> fun (V3738) -> fun (V3739) -> fun (V3740) -> fun (V3741) -> fun (V3742) -> fun (V3743) -> ('dn--un--unifyD_Unify_Closure'(V3735, V3736, V3737, V3738, V3739, V3740, V3741, V3742, V3743)) end end end end end end end end end, fun (V3744) -> fun (V3745) -> fun (V3746) -> fun (V3747) -> fun (V3748) -> fun (V3749) -> fun (V3750) -> fun (V3751) -> fun (V3752) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3744, V3745, V3746, V3747, V3748, V3749, V3750, V3751, V3752)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V3753) -> fun (V3754) -> fun (V3755) -> fun (V3756) -> fun (V3757) -> fun (V3758) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3753, V3754, V3755, V3756, V3757, V3758)) end end end end end end, fun (V3759) -> fun (V3760) -> fun (V3761) -> fun (V3762) -> fun (V3763) -> fun (V3764) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3759, V3760, V3761, V3762, V3763, V3764)) end end end end end end, fun (V3765) -> fun (V3766) -> fun (V3767) -> fun (V3768) -> fun (V3769) -> fun (V3770) -> fun (V3771) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3765, V3766, V3767, V3768, V3769, V3770, V3771)) end end end end end end end, fun (V3772) -> fun (V3773) -> fun (V3774) -> fun (V3775) -> fun (V3776) -> fun (V3777) -> fun (V3778) -> fun (V3779) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3772, V3773, V3774, V3775, V3776, V3777, V3778, V3779)) end end end end end end end end}}, V2, V0, V1, V3705, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3780) -> ('Idris.Idris2.Builtin':'un--snd'(V3780)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3781) -> ('Idris.Idris2.Builtin':'un--snd'(V3781)) end, V11))))(V3708)) end(E435)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3705, V4, V5, V6, V3706, V8, {'Idris.Core.Value.NApp', V9, V3707, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E426, E427)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E424, E425)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E418, E419)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end; _ -> case V7 of {'Idris.Core.Value.NLocal', E373, E374} -> (fun (V3782, V3783) -> case V10 of {'Idris.Core.Value.NLocal', E398, E399} -> (fun (V3784, V3785) -> fun (V3786) -> begin (V3787 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V3786))), case V3787 of {'Idris.Prelude.Types.Left', E400} -> (fun (V3788) -> {'Idris.Prelude.Types.Left', V3788} end(E400)); {'Idris.Prelude.Types.Right', E401} -> (fun (V3789) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V3782, V3783}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V3784, V3785}, V11}, V3786)) end(E401)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E398, E399)); _ -> case V10 of {'Idris.Core.Value.NMeta', E393, E394, E395} -> (fun (V3790, V3791, V3792) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E396, E397} -> (fun (V3793, V3794) -> V3794 end(E396, E397)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3790, V3791, V3792}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V3790, V3791, V3792}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E393, E394, E395)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E375, E376} -> (fun (V3795, V3796) -> case V3796 of 3 -> case V7 of {'Idris.Core.Value.NRef', E377, E378} -> (fun (V3797, V3798) -> case V10 of {'Idris.Core.Value.NRef', E379, E380} -> (fun (V3799, V3800) -> begin (V3801 = {'Idris.Core.Unify.MkUnifyInfo', V3795, 3}), begin (V3802 = {'Idris.Core.Value.NRef', V3797, V3798}), begin (V3803 = {'Idris.Core.Value.NRef', V3799, V3800}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3798, V3800)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3804) -> fun (V3805) -> fun (V3806) -> fun (V3807) -> fun (V3808) -> fun (V3809) -> fun (V3810) -> fun (V3811) -> fun (V3812) -> ('dn--un--unifyD_Unify_Closure'(V3804, V3805, V3806, V3807, V3808, V3809, V3810, V3811, V3812)) end end end end end end end end end, fun (V3813) -> fun (V3814) -> fun (V3815) -> fun (V3816) -> fun (V3817) -> fun (V3818) -> fun (V3819) -> fun (V3820) -> fun (V3821) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3813, V3814, V3815, V3816, V3817, V3818, V3819, V3820, V3821)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V3822) -> fun (V3823) -> fun (V3824) -> fun (V3825) -> fun (V3826) -> fun (V3827) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3822, V3823, V3824, V3825, V3826, V3827)) end end end end end end, fun (V3828) -> fun (V3829) -> fun (V3830) -> fun (V3831) -> fun (V3832) -> fun (V3833) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3828, V3829, V3830, V3831, V3832, V3833)) end end end end end end, fun (V3834) -> fun (V3835) -> fun (V3836) -> fun (V3837) -> fun (V3838) -> fun (V3839) -> fun (V3840) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3834, V3835, V3836, V3837, V3838, V3839, V3840)) end end end end end end end, fun (V3841) -> fun (V3842) -> fun (V3843) -> fun (V3844) -> fun (V3845) -> fun (V3846) -> fun (V3847) -> fun (V3848) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3841, V3842, V3843, V3844, V3845, V3846, V3847, V3848)) end end end end end end end end}}, V2, V0, V1, V3801, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3849) -> ('Idris.Idris2.Builtin':'un--snd'(V3849)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3850) -> ('Idris.Idris2.Builtin':'un--snd'(V3850)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3801, V4, V5, V6, V3802, V8, {'Idris.Core.Value.NApp', V9, V3803, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E379, E380)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E377, E378)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E381, E382} -> (fun (V3851, V3852) -> case V10 of {'Idris.Core.Value.NRef', E383, E384} -> (fun (V3853, V3854) -> begin (V3855 = {'Idris.Core.Unify.MkUnifyInfo', V3795, 2}), begin (V3856 = {'Idris.Core.Value.NRef', V3851, V3852}), begin (V3857 = {'Idris.Core.Value.NRef', V3853, V3854}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V3852, V3854)) of 1 -> fun (V3858) -> begin (V3882 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V3859) -> begin (V3861 = begin (V3860 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3860} end), case V3861 of {'Idris.Prelude.Types.Left', E385} -> (fun (V3862) -> {'Idris.Prelude.Types.Left', V3862} end(E385)); {'Idris.Prelude.Types.Right', E386} -> (fun (V3863) -> begin (V3867 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3864) -> fun (V3865) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V3863, V5, V3864, V3865)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3866) -> ('Idris.Idris2.Builtin':'un--snd'(V3866)) end, V8)), [], V3859))), case V3867 of {'Idris.Prelude.Types.Left', E387} -> (fun (V3868) -> {'Idris.Prelude.Types.Left', V3868} end(E387)); {'Idris.Prelude.Types.Right', E388} -> (fun (V3869) -> begin (V3873 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V3870) -> fun (V3871) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V3863, V5, V3870, V3871)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3872) -> ('Idris.Idris2.Builtin':'un--snd'(V3872)) end, V11)), [], V3859))), case V3873 of {'Idris.Prelude.Types.Left', E389} -> (fun (V3874) -> {'Idris.Prelude.Types.Left', V3874} end(E389)); {'Idris.Prelude.Types.Right', E390} -> (fun (V3875) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3876) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3876)) end, fun (V3877) -> fun (V3878) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3877, V3878)) end end}, V3869)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V3879) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V3879)) end, fun (V3880) -> fun (V3881) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V3880, V3881)) end end}, V3875))))))))} end(E390)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E388)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E386)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V3858))), case V3882 of {'Idris.Prelude.Types.Left', E391} -> (fun (V3883) -> {'Idris.Prelude.Types.Left', V3883} end(E391)); {'Idris.Prelude.Types.Right', E392} -> (fun (V3884) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3885) -> fun (V3886) -> fun (V3887) -> fun (V3888) -> fun (V3889) -> fun (V3890) -> fun (V3891) -> fun (V3892) -> fun (V3893) -> ('dn--un--unifyD_Unify_Closure'(V3885, V3886, V3887, V3888, V3889, V3890, V3891, V3892, V3893)) end end end end end end end end end, fun (V3894) -> fun (V3895) -> fun (V3896) -> fun (V3897) -> fun (V3898) -> fun (V3899) -> fun (V3900) -> fun (V3901) -> fun (V3902) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3894, V3895, V3896, V3897, V3898, V3899, V3900, V3901, V3902)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V3903) -> fun (V3904) -> fun (V3905) -> fun (V3906) -> fun (V3907) -> fun (V3908) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3903, V3904, V3905, V3906, V3907, V3908)) end end end end end end, fun (V3909) -> fun (V3910) -> fun (V3911) -> fun (V3912) -> fun (V3913) -> fun (V3914) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3909, V3910, V3911, V3912, V3913, V3914)) end end end end end end, fun (V3915) -> fun (V3916) -> fun (V3917) -> fun (V3918) -> fun (V3919) -> fun (V3920) -> fun (V3921) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3915, V3916, V3917, V3918, V3919, V3920, V3921)) end end end end end end end, fun (V3922) -> fun (V3923) -> fun (V3924) -> fun (V3925) -> fun (V3926) -> fun (V3927) -> fun (V3928) -> fun (V3929) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3922, V3923, V3924, V3925, V3926, V3927, V3928, V3929)) end end end end end end end end}}, V2, V0, V1, V3855, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3930) -> ('Idris.Idris2.Builtin':'un--snd'(V3930)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3931) -> ('Idris.Idris2.Builtin':'un--snd'(V3931)) end, V11))))(V3858)) end(E392)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3855, V4, V5, V6, V3856, V8, {'Idris.Core.Value.NApp', V9, V3857, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E383, E384)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E381, E382)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E375, E376)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E373, E374)); {'Idris.Core.Value.NMeta', E402, E403, E404} -> (fun (V3932, V3933, V3934) -> case V10 of {'Idris.Core.Value.NMeta', E405, E406, E407} -> (fun (V3935, V3936, V3937) -> fun (V3938) -> begin (V3939 = ('un--isDefInvertible'(V0, V4, V3933, V3938))), case V3939 of {'Idris.Prelude.Types.Left', E408} -> (fun (V3940) -> {'Idris.Prelude.Types.Left', V3940} end(E408)); {'Idris.Prelude.Types.Right', E409} -> (fun (V3941) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V3933, V3936)) of 1 -> case V3941 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E416, E417} -> (fun (V3942, V3943) -> V3943 end(E416, E417)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V3944) -> fun (V3945) -> fun (V3946) -> fun (V3947) -> fun (V3948) -> fun (V3949) -> fun (V3950) -> fun (V3951) -> fun (V3952) -> ('dn--un--unifyD_Unify_Closure'(V3944, V3945, V3946, V3947, V3948, V3949, V3950, V3951, V3952)) end end end end end end end end end, fun (V3953) -> fun (V3954) -> fun (V3955) -> fun (V3956) -> fun (V3957) -> fun (V3958) -> fun (V3959) -> fun (V3960) -> fun (V3961) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V3953, V3954, V3955, V3956, V3957, V3958, V3959, V3960, V3961)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V3962) -> fun (V3963) -> fun (V3964) -> fun (V3965) -> fun (V3966) -> fun (V3967) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V3962, V3963, V3964, V3965, V3966, V3967)) end end end end end end, fun (V3968) -> fun (V3969) -> fun (V3970) -> fun (V3971) -> fun (V3972) -> fun (V3973) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V3968, V3969, V3970, V3971, V3972, V3973)) end end end end end end, fun (V3974) -> fun (V3975) -> fun (V3976) -> fun (V3977) -> fun (V3978) -> fun (V3979) -> fun (V3980) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V3974, V3975, V3976, V3977, V3978, V3979, V3980)) end end end end end end end, fun (V3981) -> fun (V3982) -> fun (V3983) -> fun (V3984) -> fun (V3985) -> fun (V3986) -> fun (V3987) -> fun (V3988) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V3981, V3982, V3983, V3984, V3985, V3986, V3987, V3988)) end end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V3934, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3989) -> ('Idris.Idris2.Builtin':'un--snd'(V3989)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V3937, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V3990) -> ('Idris.Idris2.Builtin':'un--snd'(V3990)) end, V11))))))(V3938)); 0 -> begin (V3991 = ('nested--12608-17998--in--un--localsIn'(V2, V3934, V3933, V3932, V3937, V3936, V3935, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3934, V3938))), case V3991 of {'Idris.Prelude.Types.Left', E410} -> (fun (V3992) -> {'Idris.Prelude.Types.Left', V3992} end(E410)); {'Idris.Prelude.Types.Right', E411} -> (fun (V3993) -> begin (V3994 = ('nested--12608-17998--in--un--localsIn'(V2, V3934, V3933, V3932, V3937, V3936, V3935, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3937, V3938))), case V3994 of {'Idris.Prelude.Types.Left', E412} -> (fun (V3995) -> {'Idris.Prelude.Types.Left', V3995} end(E412)); {'Idris.Prelude.Types.Right', E413} -> (fun (V3996) -> begin (V3997 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V3993, V3996)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V3993, V3996)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V3997 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E414, E415} -> (fun (V3998, V3999) -> V3999 end(E414, E415)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--12608-17997--in--un--pv'(V2, V3934, V3933, V3932, V3937, V3936, V3935, V11, V9, V8, V6, V5, V4, V3, V1, V0, V3932)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3932, V3933, V3934}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V3935, V3936, V3937}, V11}))(V3938)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V3935, V3936, V3937}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V3932, V3933, V3934}, V8}))(V3938)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E413)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E411)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E409)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E405, E406, E407)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V3932, V3933, V3934}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E402, E403, E404)); _ -> case V10 of {'Idris.Core.Value.NMeta', E368, E369, E370} -> (fun (V4000, V4001, V4002) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E371, E372} -> (fun (V4003, V4004) -> V4004 end(E371, E372)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V4000, V4001, V4002}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V4000, V4001, V4002}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E368, E369, E370)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E350, E351} -> (fun (V4005, V4006) -> case V4006 of 3 -> case V7 of {'Idris.Core.Value.NRef', E352, E353} -> (fun (V4007, V4008) -> case V10 of {'Idris.Core.Value.NRef', E354, E355} -> (fun (V4009, V4010) -> begin (V4011 = {'Idris.Core.Unify.MkUnifyInfo', V4005, 3}), begin (V4012 = {'Idris.Core.Value.NRef', V4007, V4008}), begin (V4013 = {'Idris.Core.Value.NRef', V4009, V4010}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4008, V4010)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4014) -> fun (V4015) -> fun (V4016) -> fun (V4017) -> fun (V4018) -> fun (V4019) -> fun (V4020) -> fun (V4021) -> fun (V4022) -> ('dn--un--unifyD_Unify_Closure'(V4014, V4015, V4016, V4017, V4018, V4019, V4020, V4021, V4022)) end end end end end end end end end, fun (V4023) -> fun (V4024) -> fun (V4025) -> fun (V4026) -> fun (V4027) -> fun (V4028) -> fun (V4029) -> fun (V4030) -> fun (V4031) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4023, V4024, V4025, V4026, V4027, V4028, V4029, V4030, V4031)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V4032) -> fun (V4033) -> fun (V4034) -> fun (V4035) -> fun (V4036) -> fun (V4037) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4032, V4033, V4034, V4035, V4036, V4037)) end end end end end end, fun (V4038) -> fun (V4039) -> fun (V4040) -> fun (V4041) -> fun (V4042) -> fun (V4043) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4038, V4039, V4040, V4041, V4042, V4043)) end end end end end end, fun (V4044) -> fun (V4045) -> fun (V4046) -> fun (V4047) -> fun (V4048) -> fun (V4049) -> fun (V4050) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4044, V4045, V4046, V4047, V4048, V4049, V4050)) end end end end end end end, fun (V4051) -> fun (V4052) -> fun (V4053) -> fun (V4054) -> fun (V4055) -> fun (V4056) -> fun (V4057) -> fun (V4058) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4051, V4052, V4053, V4054, V4055, V4056, V4057, V4058)) end end end end end end end end}}, V2, V0, V1, V4011, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4059) -> ('Idris.Idris2.Builtin':'un--snd'(V4059)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4060) -> ('Idris.Idris2.Builtin':'un--snd'(V4060)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4011, V4, V5, V6, V4012, V8, {'Idris.Core.Value.NApp', V9, V4013, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E354, E355)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E352, E353)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E356, E357} -> (fun (V4061, V4062) -> case V10 of {'Idris.Core.Value.NRef', E358, E359} -> (fun (V4063, V4064) -> begin (V4065 = {'Idris.Core.Unify.MkUnifyInfo', V4005, 2}), begin (V4066 = {'Idris.Core.Value.NRef', V4061, V4062}), begin (V4067 = {'Idris.Core.Value.NRef', V4063, V4064}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4062, V4064)) of 1 -> fun (V4068) -> begin (V4092 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V4069) -> begin (V4071 = begin (V4070 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4070} end), case V4071 of {'Idris.Prelude.Types.Left', E360} -> (fun (V4072) -> {'Idris.Prelude.Types.Left', V4072} end(E360)); {'Idris.Prelude.Types.Right', E361} -> (fun (V4073) -> begin (V4077 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4074) -> fun (V4075) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4073, V5, V4074, V4075)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4076) -> ('Idris.Idris2.Builtin':'un--snd'(V4076)) end, V8)), [], V4069))), case V4077 of {'Idris.Prelude.Types.Left', E362} -> (fun (V4078) -> {'Idris.Prelude.Types.Left', V4078} end(E362)); {'Idris.Prelude.Types.Right', E363} -> (fun (V4079) -> begin (V4083 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4080) -> fun (V4081) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4073, V5, V4080, V4081)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4082) -> ('Idris.Idris2.Builtin':'un--snd'(V4082)) end, V11)), [], V4069))), case V4083 of {'Idris.Prelude.Types.Left', E364} -> (fun (V4084) -> {'Idris.Prelude.Types.Left', V4084} end(E364)); {'Idris.Prelude.Types.Right', E365} -> (fun (V4085) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4086) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4086)) end, fun (V4087) -> fun (V4088) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4087, V4088)) end end}, V4079)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4089) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4089)) end, fun (V4090) -> fun (V4091) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4090, V4091)) end end}, V4085))))))))} end(E365)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E363)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E361)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4068))), case V4092 of {'Idris.Prelude.Types.Left', E366} -> (fun (V4093) -> {'Idris.Prelude.Types.Left', V4093} end(E366)); {'Idris.Prelude.Types.Right', E367} -> (fun (V4094) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4095) -> fun (V4096) -> fun (V4097) -> fun (V4098) -> fun (V4099) -> fun (V4100) -> fun (V4101) -> fun (V4102) -> fun (V4103) -> ('dn--un--unifyD_Unify_Closure'(V4095, V4096, V4097, V4098, V4099, V4100, V4101, V4102, V4103)) end end end end end end end end end, fun (V4104) -> fun (V4105) -> fun (V4106) -> fun (V4107) -> fun (V4108) -> fun (V4109) -> fun (V4110) -> fun (V4111) -> fun (V4112) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4104, V4105, V4106, V4107, V4108, V4109, V4110, V4111, V4112)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V4113) -> fun (V4114) -> fun (V4115) -> fun (V4116) -> fun (V4117) -> fun (V4118) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4113, V4114, V4115, V4116, V4117, V4118)) end end end end end end, fun (V4119) -> fun (V4120) -> fun (V4121) -> fun (V4122) -> fun (V4123) -> fun (V4124) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4119, V4120, V4121, V4122, V4123, V4124)) end end end end end end, fun (V4125) -> fun (V4126) -> fun (V4127) -> fun (V4128) -> fun (V4129) -> fun (V4130) -> fun (V4131) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4125, V4126, V4127, V4128, V4129, V4130, V4131)) end end end end end end end, fun (V4132) -> fun (V4133) -> fun (V4134) -> fun (V4135) -> fun (V4136) -> fun (V4137) -> fun (V4138) -> fun (V4139) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4132, V4133, V4134, V4135, V4136, V4137, V4138, V4139)) end end end end end end end end}}, V2, V0, V1, V4065, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4140) -> ('Idris.Idris2.Builtin':'un--snd'(V4140)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4141) -> ('Idris.Idris2.Builtin':'un--snd'(V4141)) end, V11))))(V4068)) end(E367)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4065, V4, V5, V6, V4066, V8, {'Idris.Core.Value.NApp', V9, V4067, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E358, E359)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E356, E357)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E350, E351)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end(E348, E349)); _ -> case V7 of {'Idris.Core.Value.NLocal', E303, E304} -> (fun (V4142, V4143) -> case V10 of {'Idris.Core.Value.NLocal', E328, E329} -> (fun (V4144, V4145) -> fun (V4146) -> begin (V4147 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V4146))), case V4147 of {'Idris.Prelude.Types.Left', E330} -> (fun (V4148) -> {'Idris.Prelude.Types.Left', V4148} end(E330)); {'Idris.Prelude.Types.Right', E331} -> (fun (V4149) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V4142, V4143}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V4144, V4145}, V11}, V4146)) end(E331)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E328, E329)); _ -> case V10 of {'Idris.Core.Value.NMeta', E323, E324, E325} -> (fun (V4150, V4151, V4152) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E326, E327} -> (fun (V4153, V4154) -> V4154 end(E326, E327)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V4150, V4151, V4152}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V4150, V4151, V4152}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E323, E324, E325)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E305, E306} -> (fun (V4155, V4156) -> case V4156 of 3 -> case V7 of {'Idris.Core.Value.NRef', E307, E308} -> (fun (V4157, V4158) -> case V10 of {'Idris.Core.Value.NRef', E309, E310} -> (fun (V4159, V4160) -> begin (V4161 = {'Idris.Core.Unify.MkUnifyInfo', V4155, 3}), begin (V4162 = {'Idris.Core.Value.NRef', V4157, V4158}), begin (V4163 = {'Idris.Core.Value.NRef', V4159, V4160}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4158, V4160)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4164) -> fun (V4165) -> fun (V4166) -> fun (V4167) -> fun (V4168) -> fun (V4169) -> fun (V4170) -> fun (V4171) -> fun (V4172) -> ('dn--un--unifyD_Unify_Closure'(V4164, V4165, V4166, V4167, V4168, V4169, V4170, V4171, V4172)) end end end end end end end end end, fun (V4173) -> fun (V4174) -> fun (V4175) -> fun (V4176) -> fun (V4177) -> fun (V4178) -> fun (V4179) -> fun (V4180) -> fun (V4181) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4173, V4174, V4175, V4176, V4177, V4178, V4179, V4180, V4181)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V4182) -> fun (V4183) -> fun (V4184) -> fun (V4185) -> fun (V4186) -> fun (V4187) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4182, V4183, V4184, V4185, V4186, V4187)) end end end end end end, fun (V4188) -> fun (V4189) -> fun (V4190) -> fun (V4191) -> fun (V4192) -> fun (V4193) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4188, V4189, V4190, V4191, V4192, V4193)) end end end end end end, fun (V4194) -> fun (V4195) -> fun (V4196) -> fun (V4197) -> fun (V4198) -> fun (V4199) -> fun (V4200) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4194, V4195, V4196, V4197, V4198, V4199, V4200)) end end end end end end end, fun (V4201) -> fun (V4202) -> fun (V4203) -> fun (V4204) -> fun (V4205) -> fun (V4206) -> fun (V4207) -> fun (V4208) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4201, V4202, V4203, V4204, V4205, V4206, V4207, V4208)) end end end end end end end end}}, V2, V0, V1, V4161, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4209) -> ('Idris.Idris2.Builtin':'un--snd'(V4209)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4210) -> ('Idris.Idris2.Builtin':'un--snd'(V4210)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4161, V4, V5, V6, V4162, V8, {'Idris.Core.Value.NApp', V9, V4163, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E309, E310)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E307, E308)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E311, E312} -> (fun (V4211, V4212) -> case V10 of {'Idris.Core.Value.NRef', E313, E314} -> (fun (V4213, V4214) -> begin (V4215 = {'Idris.Core.Unify.MkUnifyInfo', V4155, 2}), begin (V4216 = {'Idris.Core.Value.NRef', V4211, V4212}), begin (V4217 = {'Idris.Core.Value.NRef', V4213, V4214}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4212, V4214)) of 1 -> fun (V4218) -> begin (V4242 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V4219) -> begin (V4221 = begin (V4220 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4220} end), case V4221 of {'Idris.Prelude.Types.Left', E315} -> (fun (V4222) -> {'Idris.Prelude.Types.Left', V4222} end(E315)); {'Idris.Prelude.Types.Right', E316} -> (fun (V4223) -> begin (V4227 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4224) -> fun (V4225) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4223, V5, V4224, V4225)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4226) -> ('Idris.Idris2.Builtin':'un--snd'(V4226)) end, V8)), [], V4219))), case V4227 of {'Idris.Prelude.Types.Left', E317} -> (fun (V4228) -> {'Idris.Prelude.Types.Left', V4228} end(E317)); {'Idris.Prelude.Types.Right', E318} -> (fun (V4229) -> begin (V4233 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4230) -> fun (V4231) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4223, V5, V4230, V4231)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4232) -> ('Idris.Idris2.Builtin':'un--snd'(V4232)) end, V11)), [], V4219))), case V4233 of {'Idris.Prelude.Types.Left', E319} -> (fun (V4234) -> {'Idris.Prelude.Types.Left', V4234} end(E319)); {'Idris.Prelude.Types.Right', E320} -> (fun (V4235) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4236) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4236)) end, fun (V4237) -> fun (V4238) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4237, V4238)) end end}, V4229)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4239) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4239)) end, fun (V4240) -> fun (V4241) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4240, V4241)) end end}, V4235))))))))} end(E320)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E318)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E316)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4218))), case V4242 of {'Idris.Prelude.Types.Left', E321} -> (fun (V4243) -> {'Idris.Prelude.Types.Left', V4243} end(E321)); {'Idris.Prelude.Types.Right', E322} -> (fun (V4244) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4245) -> fun (V4246) -> fun (V4247) -> fun (V4248) -> fun (V4249) -> fun (V4250) -> fun (V4251) -> fun (V4252) -> fun (V4253) -> ('dn--un--unifyD_Unify_Closure'(V4245, V4246, V4247, V4248, V4249, V4250, V4251, V4252, V4253)) end end end end end end end end end, fun (V4254) -> fun (V4255) -> fun (V4256) -> fun (V4257) -> fun (V4258) -> fun (V4259) -> fun (V4260) -> fun (V4261) -> fun (V4262) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4254, V4255, V4256, V4257, V4258, V4259, V4260, V4261, V4262)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V4263) -> fun (V4264) -> fun (V4265) -> fun (V4266) -> fun (V4267) -> fun (V4268) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4263, V4264, V4265, V4266, V4267, V4268)) end end end end end end, fun (V4269) -> fun (V4270) -> fun (V4271) -> fun (V4272) -> fun (V4273) -> fun (V4274) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4269, V4270, V4271, V4272, V4273, V4274)) end end end end end end, fun (V4275) -> fun (V4276) -> fun (V4277) -> fun (V4278) -> fun (V4279) -> fun (V4280) -> fun (V4281) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4275, V4276, V4277, V4278, V4279, V4280, V4281)) end end end end end end end, fun (V4282) -> fun (V4283) -> fun (V4284) -> fun (V4285) -> fun (V4286) -> fun (V4287) -> fun (V4288) -> fun (V4289) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4282, V4283, V4284, V4285, V4286, V4287, V4288, V4289)) end end end end end end end end}}, V2, V0, V1, V4215, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4290) -> ('Idris.Idris2.Builtin':'un--snd'(V4290)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4291) -> ('Idris.Idris2.Builtin':'un--snd'(V4291)) end, V11))))(V4218)) end(E322)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4215, V4, V5, V6, V4216, V8, {'Idris.Core.Value.NApp', V9, V4217, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E313, E314)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E311, E312)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E305, E306)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E303, E304)); {'Idris.Core.Value.NMeta', E332, E333, E334} -> (fun (V4292, V4293, V4294) -> case V10 of {'Idris.Core.Value.NMeta', E335, E336, E337} -> (fun (V4295, V4296, V4297) -> fun (V4298) -> begin (V4299 = ('un--isDefInvertible'(V0, V4, V4293, V4298))), case V4299 of {'Idris.Prelude.Types.Left', E338} -> (fun (V4300) -> {'Idris.Prelude.Types.Left', V4300} end(E338)); {'Idris.Prelude.Types.Right', E339} -> (fun (V4301) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V4293, V4296)) of 1 -> case V4301 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E346, E347} -> (fun (V4302, V4303) -> V4303 end(E346, E347)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4304) -> fun (V4305) -> fun (V4306) -> fun (V4307) -> fun (V4308) -> fun (V4309) -> fun (V4310) -> fun (V4311) -> fun (V4312) -> ('dn--un--unifyD_Unify_Closure'(V4304, V4305, V4306, V4307, V4308, V4309, V4310, V4311, V4312)) end end end end end end end end end, fun (V4313) -> fun (V4314) -> fun (V4315) -> fun (V4316) -> fun (V4317) -> fun (V4318) -> fun (V4319) -> fun (V4320) -> fun (V4321) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4313, V4314, V4315, V4316, V4317, V4318, V4319, V4320, V4321)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V4322) -> fun (V4323) -> fun (V4324) -> fun (V4325) -> fun (V4326) -> fun (V4327) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4322, V4323, V4324, V4325, V4326, V4327)) end end end end end end, fun (V4328) -> fun (V4329) -> fun (V4330) -> fun (V4331) -> fun (V4332) -> fun (V4333) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4328, V4329, V4330, V4331, V4332, V4333)) end end end end end end, fun (V4334) -> fun (V4335) -> fun (V4336) -> fun (V4337) -> fun (V4338) -> fun (V4339) -> fun (V4340) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4334, V4335, V4336, V4337, V4338, V4339, V4340)) end end end end end end end, fun (V4341) -> fun (V4342) -> fun (V4343) -> fun (V4344) -> fun (V4345) -> fun (V4346) -> fun (V4347) -> fun (V4348) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4341, V4342, V4343, V4344, V4345, V4346, V4347, V4348)) end end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V4294, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4349) -> ('Idris.Idris2.Builtin':'un--snd'(V4349)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V4297, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4350) -> ('Idris.Idris2.Builtin':'un--snd'(V4350)) end, V11))))))(V4298)); 0 -> begin (V4351 = ('nested--12608-17998--in--un--localsIn'(V2, V4294, V4293, V4292, V4297, V4296, V4295, V11, V9, V8, V6, V5, V4, V3, V1, V0, V4294, V4298))), case V4351 of {'Idris.Prelude.Types.Left', E340} -> (fun (V4352) -> {'Idris.Prelude.Types.Left', V4352} end(E340)); {'Idris.Prelude.Types.Right', E341} -> (fun (V4353) -> begin (V4354 = ('nested--12608-17998--in--un--localsIn'(V2, V4294, V4293, V4292, V4297, V4296, V4295, V11, V9, V8, V6, V5, V4, V3, V1, V0, V4297, V4298))), case V4354 of {'Idris.Prelude.Types.Left', E342} -> (fun (V4355) -> {'Idris.Prelude.Types.Left', V4355} end(E342)); {'Idris.Prelude.Types.Right', E343} -> (fun (V4356) -> begin (V4357 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V4353, V4356)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V4353, V4356)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V4357 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E344, E345} -> (fun (V4358, V4359) -> V4359 end(E344, E345)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--12608-17997--in--un--pv'(V2, V4294, V4293, V4292, V4297, V4296, V4295, V11, V9, V8, V6, V5, V4, V3, V1, V0, V4292)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V4292, V4293, V4294}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V4295, V4296, V4297}, V11}))(V4298)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V4295, V4296, V4297}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V4292, V4293, V4294}, V8}))(V4298)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E343)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E341)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E339)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E335, E336, E337)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V4292, V4293, V4294}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E332, E333, E334)); _ -> case V10 of {'Idris.Core.Value.NMeta', E298, E299, E300} -> (fun (V4360, V4361, V4362) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E301, E302} -> (fun (V4363, V4364) -> V4364 end(E301, E302)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V4360, V4361, V4362}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V4360, V4361, V4362}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E298, E299, E300)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E280, E281} -> (fun (V4365, V4366) -> case V4366 of 3 -> case V7 of {'Idris.Core.Value.NRef', E282, E283} -> (fun (V4367, V4368) -> case V10 of {'Idris.Core.Value.NRef', E284, E285} -> (fun (V4369, V4370) -> begin (V4371 = {'Idris.Core.Unify.MkUnifyInfo', V4365, 3}), begin (V4372 = {'Idris.Core.Value.NRef', V4367, V4368}), begin (V4373 = {'Idris.Core.Value.NRef', V4369, V4370}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4368, V4370)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4374) -> fun (V4375) -> fun (V4376) -> fun (V4377) -> fun (V4378) -> fun (V4379) -> fun (V4380) -> fun (V4381) -> fun (V4382) -> ('dn--un--unifyD_Unify_Closure'(V4374, V4375, V4376, V4377, V4378, V4379, V4380, V4381, V4382)) end end end end end end end end end, fun (V4383) -> fun (V4384) -> fun (V4385) -> fun (V4386) -> fun (V4387) -> fun (V4388) -> fun (V4389) -> fun (V4390) -> fun (V4391) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4383, V4384, V4385, V4386, V4387, V4388, V4389, V4390, V4391)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V4392) -> fun (V4393) -> fun (V4394) -> fun (V4395) -> fun (V4396) -> fun (V4397) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4392, V4393, V4394, V4395, V4396, V4397)) end end end end end end, fun (V4398) -> fun (V4399) -> fun (V4400) -> fun (V4401) -> fun (V4402) -> fun (V4403) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4398, V4399, V4400, V4401, V4402, V4403)) end end end end end end, fun (V4404) -> fun (V4405) -> fun (V4406) -> fun (V4407) -> fun (V4408) -> fun (V4409) -> fun (V4410) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4404, V4405, V4406, V4407, V4408, V4409, V4410)) end end end end end end end, fun (V4411) -> fun (V4412) -> fun (V4413) -> fun (V4414) -> fun (V4415) -> fun (V4416) -> fun (V4417) -> fun (V4418) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4411, V4412, V4413, V4414, V4415, V4416, V4417, V4418)) end end end end end end end end}}, V2, V0, V1, V4371, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4419) -> ('Idris.Idris2.Builtin':'un--snd'(V4419)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4420) -> ('Idris.Idris2.Builtin':'un--snd'(V4420)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4371, V4, V5, V6, V4372, V8, {'Idris.Core.Value.NApp', V9, V4373, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E284, E285)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E282, E283)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E286, E287} -> (fun (V4421, V4422) -> case V10 of {'Idris.Core.Value.NRef', E288, E289} -> (fun (V4423, V4424) -> begin (V4425 = {'Idris.Core.Unify.MkUnifyInfo', V4365, 2}), begin (V4426 = {'Idris.Core.Value.NRef', V4421, V4422}), begin (V4427 = {'Idris.Core.Value.NRef', V4423, V4424}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4422, V4424)) of 1 -> fun (V4428) -> begin (V4452 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V4429) -> begin (V4431 = begin (V4430 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4430} end), case V4431 of {'Idris.Prelude.Types.Left', E290} -> (fun (V4432) -> {'Idris.Prelude.Types.Left', V4432} end(E290)); {'Idris.Prelude.Types.Right', E291} -> (fun (V4433) -> begin (V4437 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4434) -> fun (V4435) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4433, V5, V4434, V4435)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4436) -> ('Idris.Idris2.Builtin':'un--snd'(V4436)) end, V8)), [], V4429))), case V4437 of {'Idris.Prelude.Types.Left', E292} -> (fun (V4438) -> {'Idris.Prelude.Types.Left', V4438} end(E292)); {'Idris.Prelude.Types.Right', E293} -> (fun (V4439) -> begin (V4443 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4440) -> fun (V4441) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4433, V5, V4440, V4441)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4442) -> ('Idris.Idris2.Builtin':'un--snd'(V4442)) end, V11)), [], V4429))), case V4443 of {'Idris.Prelude.Types.Left', E294} -> (fun (V4444) -> {'Idris.Prelude.Types.Left', V4444} end(E294)); {'Idris.Prelude.Types.Right', E295} -> (fun (V4445) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4446) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4446)) end, fun (V4447) -> fun (V4448) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4447, V4448)) end end}, V4439)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4449) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4449)) end, fun (V4450) -> fun (V4451) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4450, V4451)) end end}, V4445))))))))} end(E295)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E293)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E291)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4428))), case V4452 of {'Idris.Prelude.Types.Left', E296} -> (fun (V4453) -> {'Idris.Prelude.Types.Left', V4453} end(E296)); {'Idris.Prelude.Types.Right', E297} -> (fun (V4454) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4455) -> fun (V4456) -> fun (V4457) -> fun (V4458) -> fun (V4459) -> fun (V4460) -> fun (V4461) -> fun (V4462) -> fun (V4463) -> ('dn--un--unifyD_Unify_Closure'(V4455, V4456, V4457, V4458, V4459, V4460, V4461, V4462, V4463)) end end end end end end end end end, fun (V4464) -> fun (V4465) -> fun (V4466) -> fun (V4467) -> fun (V4468) -> fun (V4469) -> fun (V4470) -> fun (V4471) -> fun (V4472) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4464, V4465, V4466, V4467, V4468, V4469, V4470, V4471, V4472)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V4473) -> fun (V4474) -> fun (V4475) -> fun (V4476) -> fun (V4477) -> fun (V4478) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4473, V4474, V4475, V4476, V4477, V4478)) end end end end end end, fun (V4479) -> fun (V4480) -> fun (V4481) -> fun (V4482) -> fun (V4483) -> fun (V4484) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4479, V4480, V4481, V4482, V4483, V4484)) end end end end end end, fun (V4485) -> fun (V4486) -> fun (V4487) -> fun (V4488) -> fun (V4489) -> fun (V4490) -> fun (V4491) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4485, V4486, V4487, V4488, V4489, V4490, V4491)) end end end end end end end, fun (V4492) -> fun (V4493) -> fun (V4494) -> fun (V4495) -> fun (V4496) -> fun (V4497) -> fun (V4498) -> fun (V4499) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4492, V4493, V4494, V4495, V4496, V4497, V4498, V4499)) end end end end end end end end}}, V2, V0, V1, V4425, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4500) -> ('Idris.Idris2.Builtin':'un--snd'(V4500)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4501) -> ('Idris.Idris2.Builtin':'un--snd'(V4501)) end, V11))))(V4428)) end(E297)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4425, V4, V5, V6, V4426, V8, {'Idris.Core.Value.NApp', V9, V4427, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E288, E289)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E286, E287)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E280, E281)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end end(E278, E279)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E68, E69} -> (fun (V4502, V4503) -> case V4503 of 1 -> case V7 of {'Idris.Core.Value.NLocal', E206, E207} -> (fun (V4504, V4505) -> case V10 of {'Idris.Core.Value.NLocal', E276, E277} -> (fun (V4506, V4507) -> begin (V4508 = {'Idris.Core.Unify.MkUnifyInfo', V4502, 1}), case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V4505, V4507)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4509) -> fun (V4510) -> fun (V4511) -> fun (V4512) -> fun (V4513) -> fun (V4514) -> fun (V4515) -> fun (V4516) -> fun (V4517) -> ('dn--un--unifyD_Unify_Closure'(V4509, V4510, V4511, V4512, V4513, V4514, V4515, V4516, V4517)) end end end end end end end end end, fun (V4518) -> fun (V4519) -> fun (V4520) -> fun (V4521) -> fun (V4522) -> fun (V4523) -> fun (V4524) -> fun (V4525) -> fun (V4526) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4518, V4519, V4520, V4521, V4522, V4523, V4524, V4525, V4526)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V4527) -> fun (V4528) -> fun (V4529) -> fun (V4530) -> fun (V4531) -> fun (V4532) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4527, V4528, V4529, V4530, V4531, V4532)) end end end end end end, fun (V4533) -> fun (V4534) -> fun (V4535) -> fun (V4536) -> fun (V4537) -> fun (V4538) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4533, V4534, V4535, V4536, V4537, V4538)) end end end end end end, fun (V4539) -> fun (V4540) -> fun (V4541) -> fun (V4542) -> fun (V4543) -> fun (V4544) -> fun (V4545) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4539, V4540, V4541, V4542, V4543, V4544, V4545)) end end end end end end end, fun (V4546) -> fun (V4547) -> fun (V4548) -> fun (V4549) -> fun (V4550) -> fun (V4551) -> fun (V4552) -> fun (V4553) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4546, V4547, V4548, V4549, V4550, V4551, V4552, V4553)) end end end end end end end end}}, V2, V0, V1, V4508, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4554) -> ('Idris.Idris2.Builtin':'un--snd'(V4554)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4555) -> ('Idris.Idris2.Builtin':'un--snd'(V4555)) end, V11)))); 0 -> fun (V4556) -> ('un--postpone'(V2, V0, V1, V4, V4508, <<"Postponing local app"/utf8>>, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V4504, V4505}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V4506, V4507}, V11}, V4556)) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E276, E277)); _ -> case V7 of {'Idris.Core.Value.NLocal', E231, E232} -> (fun (V4557, V4558) -> case V10 of {'Idris.Core.Value.NLocal', E256, E257} -> (fun (V4559, V4560) -> fun (V4561) -> begin (V4562 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V4561))), case V4562 of {'Idris.Prelude.Types.Left', E258} -> (fun (V4563) -> {'Idris.Prelude.Types.Left', V4563} end(E258)); {'Idris.Prelude.Types.Right', E259} -> (fun (V4564) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V4557, V4558}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V4559, V4560}, V11}, V4561)) end(E259)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E256, E257)); _ -> case V10 of {'Idris.Core.Value.NMeta', E251, E252, E253} -> (fun (V4565, V4566, V4567) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E254, E255} -> (fun (V4568, V4569) -> V4569 end(E254, E255)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V4565, V4566, V4567}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V4565, V4566, V4567}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E251, E252, E253)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E233, E234} -> (fun (V4570, V4571) -> case V4571 of 3 -> case V7 of {'Idris.Core.Value.NRef', E235, E236} -> (fun (V4572, V4573) -> case V10 of {'Idris.Core.Value.NRef', E237, E238} -> (fun (V4574, V4575) -> begin (V4576 = {'Idris.Core.Unify.MkUnifyInfo', V4570, 3}), begin (V4577 = {'Idris.Core.Value.NRef', V4572, V4573}), begin (V4578 = {'Idris.Core.Value.NRef', V4574, V4575}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4573, V4575)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4579) -> fun (V4580) -> fun (V4581) -> fun (V4582) -> fun (V4583) -> fun (V4584) -> fun (V4585) -> fun (V4586) -> fun (V4587) -> ('dn--un--unifyD_Unify_Closure'(V4579, V4580, V4581, V4582, V4583, V4584, V4585, V4586, V4587)) end end end end end end end end end, fun (V4588) -> fun (V4589) -> fun (V4590) -> fun (V4591) -> fun (V4592) -> fun (V4593) -> fun (V4594) -> fun (V4595) -> fun (V4596) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4588, V4589, V4590, V4591, V4592, V4593, V4594, V4595, V4596)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V4597) -> fun (V4598) -> fun (V4599) -> fun (V4600) -> fun (V4601) -> fun (V4602) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4597, V4598, V4599, V4600, V4601, V4602)) end end end end end end, fun (V4603) -> fun (V4604) -> fun (V4605) -> fun (V4606) -> fun (V4607) -> fun (V4608) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4603, V4604, V4605, V4606, V4607, V4608)) end end end end end end, fun (V4609) -> fun (V4610) -> fun (V4611) -> fun (V4612) -> fun (V4613) -> fun (V4614) -> fun (V4615) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4609, V4610, V4611, V4612, V4613, V4614, V4615)) end end end end end end end, fun (V4616) -> fun (V4617) -> fun (V4618) -> fun (V4619) -> fun (V4620) -> fun (V4621) -> fun (V4622) -> fun (V4623) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4616, V4617, V4618, V4619, V4620, V4621, V4622, V4623)) end end end end end end end end}}, V2, V0, V1, V4576, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4624) -> ('Idris.Idris2.Builtin':'un--snd'(V4624)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4625) -> ('Idris.Idris2.Builtin':'un--snd'(V4625)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4576, V4, V5, V6, V4577, V8, {'Idris.Core.Value.NApp', V9, V4578, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E237, E238)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E235, E236)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E239, E240} -> (fun (V4626, V4627) -> case V10 of {'Idris.Core.Value.NRef', E241, E242} -> (fun (V4628, V4629) -> begin (V4630 = {'Idris.Core.Unify.MkUnifyInfo', V4570, 2}), begin (V4631 = {'Idris.Core.Value.NRef', V4626, V4627}), begin (V4632 = {'Idris.Core.Value.NRef', V4628, V4629}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4627, V4629)) of 1 -> fun (V4633) -> begin (V4657 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V4634) -> begin (V4636 = begin (V4635 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4635} end), case V4636 of {'Idris.Prelude.Types.Left', E243} -> (fun (V4637) -> {'Idris.Prelude.Types.Left', V4637} end(E243)); {'Idris.Prelude.Types.Right', E244} -> (fun (V4638) -> begin (V4642 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4639) -> fun (V4640) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4638, V5, V4639, V4640)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4641) -> ('Idris.Idris2.Builtin':'un--snd'(V4641)) end, V8)), [], V4634))), case V4642 of {'Idris.Prelude.Types.Left', E245} -> (fun (V4643) -> {'Idris.Prelude.Types.Left', V4643} end(E245)); {'Idris.Prelude.Types.Right', E246} -> (fun (V4644) -> begin (V4648 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4645) -> fun (V4646) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4638, V5, V4645, V4646)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4647) -> ('Idris.Idris2.Builtin':'un--snd'(V4647)) end, V11)), [], V4634))), case V4648 of {'Idris.Prelude.Types.Left', E247} -> (fun (V4649) -> {'Idris.Prelude.Types.Left', V4649} end(E247)); {'Idris.Prelude.Types.Right', E248} -> (fun (V4650) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4651) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4651)) end, fun (V4652) -> fun (V4653) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4652, V4653)) end end}, V4644)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4654) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4654)) end, fun (V4655) -> fun (V4656) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4655, V4656)) end end}, V4650))))))))} end(E248)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E246)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E244)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4633))), case V4657 of {'Idris.Prelude.Types.Left', E249} -> (fun (V4658) -> {'Idris.Prelude.Types.Left', V4658} end(E249)); {'Idris.Prelude.Types.Right', E250} -> (fun (V4659) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4660) -> fun (V4661) -> fun (V4662) -> fun (V4663) -> fun (V4664) -> fun (V4665) -> fun (V4666) -> fun (V4667) -> fun (V4668) -> ('dn--un--unifyD_Unify_Closure'(V4660, V4661, V4662, V4663, V4664, V4665, V4666, V4667, V4668)) end end end end end end end end end, fun (V4669) -> fun (V4670) -> fun (V4671) -> fun (V4672) -> fun (V4673) -> fun (V4674) -> fun (V4675) -> fun (V4676) -> fun (V4677) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4669, V4670, V4671, V4672, V4673, V4674, V4675, V4676, V4677)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V4678) -> fun (V4679) -> fun (V4680) -> fun (V4681) -> fun (V4682) -> fun (V4683) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4678, V4679, V4680, V4681, V4682, V4683)) end end end end end end, fun (V4684) -> fun (V4685) -> fun (V4686) -> fun (V4687) -> fun (V4688) -> fun (V4689) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4684, V4685, V4686, V4687, V4688, V4689)) end end end end end end, fun (V4690) -> fun (V4691) -> fun (V4692) -> fun (V4693) -> fun (V4694) -> fun (V4695) -> fun (V4696) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4690, V4691, V4692, V4693, V4694, V4695, V4696)) end end end end end end end, fun (V4697) -> fun (V4698) -> fun (V4699) -> fun (V4700) -> fun (V4701) -> fun (V4702) -> fun (V4703) -> fun (V4704) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4697, V4698, V4699, V4700, V4701, V4702, V4703, V4704)) end end end end end end end end}}, V2, V0, V1, V4630, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4705) -> ('Idris.Idris2.Builtin':'un--snd'(V4705)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4706) -> ('Idris.Idris2.Builtin':'un--snd'(V4706)) end, V11))))(V4633)) end(E250)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4630, V4, V5, V6, V4631, V8, {'Idris.Core.Value.NApp', V9, V4632, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E241, E242)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E239, E240)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E233, E234)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E231, E232)); {'Idris.Core.Value.NMeta', E260, E261, E262} -> (fun (V4707, V4708, V4709) -> case V10 of {'Idris.Core.Value.NMeta', E263, E264, E265} -> (fun (V4710, V4711, V4712) -> fun (V4713) -> begin (V4714 = ('un--isDefInvertible'(V0, V4, V4708, V4713))), case V4714 of {'Idris.Prelude.Types.Left', E266} -> (fun (V4715) -> {'Idris.Prelude.Types.Left', V4715} end(E266)); {'Idris.Prelude.Types.Right', E267} -> (fun (V4716) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V4708, V4711)) of 1 -> case V4716 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E274, E275} -> (fun (V4717, V4718) -> V4718 end(E274, E275)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4719) -> fun (V4720) -> fun (V4721) -> fun (V4722) -> fun (V4723) -> fun (V4724) -> fun (V4725) -> fun (V4726) -> fun (V4727) -> ('dn--un--unifyD_Unify_Closure'(V4719, V4720, V4721, V4722, V4723, V4724, V4725, V4726, V4727)) end end end end end end end end end, fun (V4728) -> fun (V4729) -> fun (V4730) -> fun (V4731) -> fun (V4732) -> fun (V4733) -> fun (V4734) -> fun (V4735) -> fun (V4736) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4728, V4729, V4730, V4731, V4732, V4733, V4734, V4735, V4736)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V4737) -> fun (V4738) -> fun (V4739) -> fun (V4740) -> fun (V4741) -> fun (V4742) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4737, V4738, V4739, V4740, V4741, V4742)) end end end end end end, fun (V4743) -> fun (V4744) -> fun (V4745) -> fun (V4746) -> fun (V4747) -> fun (V4748) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4743, V4744, V4745, V4746, V4747, V4748)) end end end end end end, fun (V4749) -> fun (V4750) -> fun (V4751) -> fun (V4752) -> fun (V4753) -> fun (V4754) -> fun (V4755) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4749, V4750, V4751, V4752, V4753, V4754, V4755)) end end end end end end end, fun (V4756) -> fun (V4757) -> fun (V4758) -> fun (V4759) -> fun (V4760) -> fun (V4761) -> fun (V4762) -> fun (V4763) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4756, V4757, V4758, V4759, V4760, V4761, V4762, V4763)) end end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V4709, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4764) -> ('Idris.Idris2.Builtin':'un--snd'(V4764)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V4712, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4765) -> ('Idris.Idris2.Builtin':'un--snd'(V4765)) end, V11))))))(V4713)); 0 -> begin (V4766 = ('nested--12608-17998--in--un--localsIn'(V2, V4709, V4708, V4707, V4712, V4711, V4710, V11, V9, V8, V6, V5, V4, V3, V1, V0, V4709, V4713))), case V4766 of {'Idris.Prelude.Types.Left', E268} -> (fun (V4767) -> {'Idris.Prelude.Types.Left', V4767} end(E268)); {'Idris.Prelude.Types.Right', E269} -> (fun (V4768) -> begin (V4769 = ('nested--12608-17998--in--un--localsIn'(V2, V4709, V4708, V4707, V4712, V4711, V4710, V11, V9, V8, V6, V5, V4, V3, V1, V0, V4712, V4713))), case V4769 of {'Idris.Prelude.Types.Left', E270} -> (fun (V4770) -> {'Idris.Prelude.Types.Left', V4770} end(E270)); {'Idris.Prelude.Types.Right', E271} -> (fun (V4771) -> begin (V4772 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V4768, V4771)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V4768, V4771)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V4772 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E272, E273} -> (fun (V4773, V4774) -> V4774 end(E272, E273)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--12608-17997--in--un--pv'(V2, V4709, V4708, V4707, V4712, V4711, V4710, V11, V9, V8, V6, V5, V4, V3, V1, V0, V4707)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V4707, V4708, V4709}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V4710, V4711, V4712}, V11}))(V4713)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V4710, V4711, V4712}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V4707, V4708, V4709}, V8}))(V4713)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E271)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E269)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E267)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E263, E264, E265)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V4707, V4708, V4709}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E260, E261, E262)); _ -> case V10 of {'Idris.Core.Value.NMeta', E226, E227, E228} -> (fun (V4775, V4776, V4777) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E229, E230} -> (fun (V4778, V4779) -> V4779 end(E229, E230)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V4775, V4776, V4777}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V4775, V4776, V4777}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E226, E227, E228)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E208, E209} -> (fun (V4780, V4781) -> case V4781 of 3 -> case V7 of {'Idris.Core.Value.NRef', E210, E211} -> (fun (V4782, V4783) -> case V10 of {'Idris.Core.Value.NRef', E212, E213} -> (fun (V4784, V4785) -> begin (V4786 = {'Idris.Core.Unify.MkUnifyInfo', V4780, 3}), begin (V4787 = {'Idris.Core.Value.NRef', V4782, V4783}), begin (V4788 = {'Idris.Core.Value.NRef', V4784, V4785}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4783, V4785)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4789) -> fun (V4790) -> fun (V4791) -> fun (V4792) -> fun (V4793) -> fun (V4794) -> fun (V4795) -> fun (V4796) -> fun (V4797) -> ('dn--un--unifyD_Unify_Closure'(V4789, V4790, V4791, V4792, V4793, V4794, V4795, V4796, V4797)) end end end end end end end end end, fun (V4798) -> fun (V4799) -> fun (V4800) -> fun (V4801) -> fun (V4802) -> fun (V4803) -> fun (V4804) -> fun (V4805) -> fun (V4806) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4798, V4799, V4800, V4801, V4802, V4803, V4804, V4805, V4806)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V4807) -> fun (V4808) -> fun (V4809) -> fun (V4810) -> fun (V4811) -> fun (V4812) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4807, V4808, V4809, V4810, V4811, V4812)) end end end end end end, fun (V4813) -> fun (V4814) -> fun (V4815) -> fun (V4816) -> fun (V4817) -> fun (V4818) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4813, V4814, V4815, V4816, V4817, V4818)) end end end end end end, fun (V4819) -> fun (V4820) -> fun (V4821) -> fun (V4822) -> fun (V4823) -> fun (V4824) -> fun (V4825) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4819, V4820, V4821, V4822, V4823, V4824, V4825)) end end end end end end end, fun (V4826) -> fun (V4827) -> fun (V4828) -> fun (V4829) -> fun (V4830) -> fun (V4831) -> fun (V4832) -> fun (V4833) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4826, V4827, V4828, V4829, V4830, V4831, V4832, V4833)) end end end end end end end end}}, V2, V0, V1, V4786, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4834) -> ('Idris.Idris2.Builtin':'un--snd'(V4834)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4835) -> ('Idris.Idris2.Builtin':'un--snd'(V4835)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4786, V4, V5, V6, V4787, V8, {'Idris.Core.Value.NApp', V9, V4788, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E212, E213)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E210, E211)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E214, E215} -> (fun (V4836, V4837) -> case V10 of {'Idris.Core.Value.NRef', E216, E217} -> (fun (V4838, V4839) -> begin (V4840 = {'Idris.Core.Unify.MkUnifyInfo', V4780, 2}), begin (V4841 = {'Idris.Core.Value.NRef', V4836, V4837}), begin (V4842 = {'Idris.Core.Value.NRef', V4838, V4839}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4837, V4839)) of 1 -> fun (V4843) -> begin (V4867 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V4844) -> begin (V4846 = begin (V4845 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4845} end), case V4846 of {'Idris.Prelude.Types.Left', E218} -> (fun (V4847) -> {'Idris.Prelude.Types.Left', V4847} end(E218)); {'Idris.Prelude.Types.Right', E219} -> (fun (V4848) -> begin (V4852 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4849) -> fun (V4850) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4848, V5, V4849, V4850)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4851) -> ('Idris.Idris2.Builtin':'un--snd'(V4851)) end, V8)), [], V4844))), case V4852 of {'Idris.Prelude.Types.Left', E220} -> (fun (V4853) -> {'Idris.Prelude.Types.Left', V4853} end(E220)); {'Idris.Prelude.Types.Right', E221} -> (fun (V4854) -> begin (V4858 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4855) -> fun (V4856) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4848, V5, V4855, V4856)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4857) -> ('Idris.Idris2.Builtin':'un--snd'(V4857)) end, V11)), [], V4844))), case V4858 of {'Idris.Prelude.Types.Left', E222} -> (fun (V4859) -> {'Idris.Prelude.Types.Left', V4859} end(E222)); {'Idris.Prelude.Types.Right', E223} -> (fun (V4860) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4861) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4861)) end, fun (V4862) -> fun (V4863) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4862, V4863)) end end}, V4854)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V4864) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V4864)) end, fun (V4865) -> fun (V4866) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V4865, V4866)) end end}, V4860))))))))} end(E223)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E219)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4843))), case V4867 of {'Idris.Prelude.Types.Left', E224} -> (fun (V4868) -> {'Idris.Prelude.Types.Left', V4868} end(E224)); {'Idris.Prelude.Types.Right', E225} -> (fun (V4869) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4870) -> fun (V4871) -> fun (V4872) -> fun (V4873) -> fun (V4874) -> fun (V4875) -> fun (V4876) -> fun (V4877) -> fun (V4878) -> ('dn--un--unifyD_Unify_Closure'(V4870, V4871, V4872, V4873, V4874, V4875, V4876, V4877, V4878)) end end end end end end end end end, fun (V4879) -> fun (V4880) -> fun (V4881) -> fun (V4882) -> fun (V4883) -> fun (V4884) -> fun (V4885) -> fun (V4886) -> fun (V4887) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4879, V4880, V4881, V4882, V4883, V4884, V4885, V4886, V4887)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V4888) -> fun (V4889) -> fun (V4890) -> fun (V4891) -> fun (V4892) -> fun (V4893) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4888, V4889, V4890, V4891, V4892, V4893)) end end end end end end, fun (V4894) -> fun (V4895) -> fun (V4896) -> fun (V4897) -> fun (V4898) -> fun (V4899) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4894, V4895, V4896, V4897, V4898, V4899)) end end end end end end, fun (V4900) -> fun (V4901) -> fun (V4902) -> fun (V4903) -> fun (V4904) -> fun (V4905) -> fun (V4906) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4900, V4901, V4902, V4903, V4904, V4905, V4906)) end end end end end end end, fun (V4907) -> fun (V4908) -> fun (V4909) -> fun (V4910) -> fun (V4911) -> fun (V4912) -> fun (V4913) -> fun (V4914) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4907, V4908, V4909, V4910, V4911, V4912, V4913, V4914)) end end end end end end end end}}, V2, V0, V1, V4840, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4915) -> ('Idris.Idris2.Builtin':'un--snd'(V4915)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4916) -> ('Idris.Idris2.Builtin':'un--snd'(V4916)) end, V11))))(V4843)) end(E225)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4840, V4, V5, V6, V4841, V8, {'Idris.Core.Value.NApp', V9, V4842, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E216, E217)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E214, E215)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E208, E209)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end(E206, E207)); _ -> case V7 of {'Idris.Core.Value.NLocal', E161, E162} -> (fun (V4917, V4918) -> case V10 of {'Idris.Core.Value.NLocal', E186, E187} -> (fun (V4919, V4920) -> fun (V4921) -> begin (V4922 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V4921))), case V4922 of {'Idris.Prelude.Types.Left', E188} -> (fun (V4923) -> {'Idris.Prelude.Types.Left', V4923} end(E188)); {'Idris.Prelude.Types.Right', E189} -> (fun (V4924) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V4917, V4918}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V4919, V4920}, V11}, V4921)) end(E189)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E186, E187)); _ -> case V10 of {'Idris.Core.Value.NMeta', E181, E182, E183} -> (fun (V4925, V4926, V4927) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E184, E185} -> (fun (V4928, V4929) -> V4929 end(E184, E185)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V4925, V4926, V4927}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V4925, V4926, V4927}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E181, E182, E183)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E163, E164} -> (fun (V4930, V4931) -> case V4931 of 3 -> case V7 of {'Idris.Core.Value.NRef', E165, E166} -> (fun (V4932, V4933) -> case V10 of {'Idris.Core.Value.NRef', E167, E168} -> (fun (V4934, V4935) -> begin (V4936 = {'Idris.Core.Unify.MkUnifyInfo', V4930, 3}), begin (V4937 = {'Idris.Core.Value.NRef', V4932, V4933}), begin (V4938 = {'Idris.Core.Value.NRef', V4934, V4935}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4933, V4935)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V4939) -> fun (V4940) -> fun (V4941) -> fun (V4942) -> fun (V4943) -> fun (V4944) -> fun (V4945) -> fun (V4946) -> fun (V4947) -> ('dn--un--unifyD_Unify_Closure'(V4939, V4940, V4941, V4942, V4943, V4944, V4945, V4946, V4947)) end end end end end end end end end, fun (V4948) -> fun (V4949) -> fun (V4950) -> fun (V4951) -> fun (V4952) -> fun (V4953) -> fun (V4954) -> fun (V4955) -> fun (V4956) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V4948, V4949, V4950, V4951, V4952, V4953, V4954, V4955, V4956)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V4957) -> fun (V4958) -> fun (V4959) -> fun (V4960) -> fun (V4961) -> fun (V4962) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V4957, V4958, V4959, V4960, V4961, V4962)) end end end end end end, fun (V4963) -> fun (V4964) -> fun (V4965) -> fun (V4966) -> fun (V4967) -> fun (V4968) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V4963, V4964, V4965, V4966, V4967, V4968)) end end end end end end, fun (V4969) -> fun (V4970) -> fun (V4971) -> fun (V4972) -> fun (V4973) -> fun (V4974) -> fun (V4975) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V4969, V4970, V4971, V4972, V4973, V4974, V4975)) end end end end end end end, fun (V4976) -> fun (V4977) -> fun (V4978) -> fun (V4979) -> fun (V4980) -> fun (V4981) -> fun (V4982) -> fun (V4983) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V4976, V4977, V4978, V4979, V4980, V4981, V4982, V4983)) end end end end end end end end}}, V2, V0, V1, V4936, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4984) -> ('Idris.Idris2.Builtin':'un--snd'(V4984)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V4985) -> ('Idris.Idris2.Builtin':'un--snd'(V4985)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4936, V4, V5, V6, V4937, V8, {'Idris.Core.Value.NApp', V9, V4938, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E167, E168)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E165, E166)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E169, E170} -> (fun (V4986, V4987) -> case V10 of {'Idris.Core.Value.NRef', E171, E172} -> (fun (V4988, V4989) -> begin (V4990 = {'Idris.Core.Unify.MkUnifyInfo', V4930, 2}), begin (V4991 = {'Idris.Core.Value.NRef', V4986, V4987}), begin (V4992 = {'Idris.Core.Value.NRef', V4988, V4989}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V4987, V4989)) of 1 -> fun (V4993) -> begin (V5017 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V4994) -> begin (V4996 = begin (V4995 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4995} end), case V4996 of {'Idris.Prelude.Types.Left', E173} -> (fun (V4997) -> {'Idris.Prelude.Types.Left', V4997} end(E173)); {'Idris.Prelude.Types.Right', E174} -> (fun (V4998) -> begin (V5002 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V4999) -> fun (V5000) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4998, V5, V4999, V5000)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5001) -> ('Idris.Idris2.Builtin':'un--snd'(V5001)) end, V8)), [], V4994))), case V5002 of {'Idris.Prelude.Types.Left', E175} -> (fun (V5003) -> {'Idris.Prelude.Types.Left', V5003} end(E175)); {'Idris.Prelude.Types.Right', E176} -> (fun (V5004) -> begin (V5008 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5005) -> fun (V5006) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V4998, V5, V5005, V5006)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5007) -> ('Idris.Idris2.Builtin':'un--snd'(V5007)) end, V11)), [], V4994))), case V5008 of {'Idris.Prelude.Types.Left', E177} -> (fun (V5009) -> {'Idris.Prelude.Types.Left', V5009} end(E177)); {'Idris.Prelude.Types.Right', E178} -> (fun (V5010) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V5011) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V5011)) end, fun (V5012) -> fun (V5013) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V5012, V5013)) end end}, V5004)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V5014) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V5014)) end, fun (V5015) -> fun (V5016) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V5015, V5016)) end end}, V5010))))))))} end(E178)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E176)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E174)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V4993))), case V5017 of {'Idris.Prelude.Types.Left', E179} -> (fun (V5018) -> {'Idris.Prelude.Types.Left', V5018} end(E179)); {'Idris.Prelude.Types.Right', E180} -> (fun (V5019) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V5020) -> fun (V5021) -> fun (V5022) -> fun (V5023) -> fun (V5024) -> fun (V5025) -> fun (V5026) -> fun (V5027) -> fun (V5028) -> ('dn--un--unifyD_Unify_Closure'(V5020, V5021, V5022, V5023, V5024, V5025, V5026, V5027, V5028)) end end end end end end end end end, fun (V5029) -> fun (V5030) -> fun (V5031) -> fun (V5032) -> fun (V5033) -> fun (V5034) -> fun (V5035) -> fun (V5036) -> fun (V5037) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5029, V5030, V5031, V5032, V5033, V5034, V5035, V5036, V5037)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V5038) -> fun (V5039) -> fun (V5040) -> fun (V5041) -> fun (V5042) -> fun (V5043) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5038, V5039, V5040, V5041, V5042, V5043)) end end end end end end, fun (V5044) -> fun (V5045) -> fun (V5046) -> fun (V5047) -> fun (V5048) -> fun (V5049) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5044, V5045, V5046, V5047, V5048, V5049)) end end end end end end, fun (V5050) -> fun (V5051) -> fun (V5052) -> fun (V5053) -> fun (V5054) -> fun (V5055) -> fun (V5056) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5050, V5051, V5052, V5053, V5054, V5055, V5056)) end end end end end end end, fun (V5057) -> fun (V5058) -> fun (V5059) -> fun (V5060) -> fun (V5061) -> fun (V5062) -> fun (V5063) -> fun (V5064) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5057, V5058, V5059, V5060, V5061, V5062, V5063, V5064)) end end end end end end end end}}, V2, V0, V1, V4990, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5065) -> ('Idris.Idris2.Builtin':'un--snd'(V5065)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5066) -> ('Idris.Idris2.Builtin':'un--snd'(V5066)) end, V11))))(V4993)) end(E180)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V4990, V4, V5, V6, V4991, V8, {'Idris.Core.Value.NApp', V9, V4992, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E171, E172)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E169, E170)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E163, E164)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E161, E162)); {'Idris.Core.Value.NMeta', E190, E191, E192} -> (fun (V5067, V5068, V5069) -> case V10 of {'Idris.Core.Value.NMeta', E193, E194, E195} -> (fun (V5070, V5071, V5072) -> fun (V5073) -> begin (V5074 = ('un--isDefInvertible'(V0, V4, V5068, V5073))), case V5074 of {'Idris.Prelude.Types.Left', E196} -> (fun (V5075) -> {'Idris.Prelude.Types.Left', V5075} end(E196)); {'Idris.Prelude.Types.Right', E197} -> (fun (V5076) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V5068, V5071)) of 1 -> case V5076 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E204, E205} -> (fun (V5077, V5078) -> V5078 end(E204, E205)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V5079) -> fun (V5080) -> fun (V5081) -> fun (V5082) -> fun (V5083) -> fun (V5084) -> fun (V5085) -> fun (V5086) -> fun (V5087) -> ('dn--un--unifyD_Unify_Closure'(V5079, V5080, V5081, V5082, V5083, V5084, V5085, V5086, V5087)) end end end end end end end end end, fun (V5088) -> fun (V5089) -> fun (V5090) -> fun (V5091) -> fun (V5092) -> fun (V5093) -> fun (V5094) -> fun (V5095) -> fun (V5096) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5088, V5089, V5090, V5091, V5092, V5093, V5094, V5095, V5096)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V5097) -> fun (V5098) -> fun (V5099) -> fun (V5100) -> fun (V5101) -> fun (V5102) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5097, V5098, V5099, V5100, V5101, V5102)) end end end end end end, fun (V5103) -> fun (V5104) -> fun (V5105) -> fun (V5106) -> fun (V5107) -> fun (V5108) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5103, V5104, V5105, V5106, V5107, V5108)) end end end end end end, fun (V5109) -> fun (V5110) -> fun (V5111) -> fun (V5112) -> fun (V5113) -> fun (V5114) -> fun (V5115) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5109, V5110, V5111, V5112, V5113, V5114, V5115)) end end end end end end end, fun (V5116) -> fun (V5117) -> fun (V5118) -> fun (V5119) -> fun (V5120) -> fun (V5121) -> fun (V5122) -> fun (V5123) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5116, V5117, V5118, V5119, V5120, V5121, V5122, V5123)) end end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V5069, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5124) -> ('Idris.Idris2.Builtin':'un--snd'(V5124)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V5072, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5125) -> ('Idris.Idris2.Builtin':'un--snd'(V5125)) end, V11))))))(V5073)); 0 -> begin (V5126 = ('nested--12608-17998--in--un--localsIn'(V2, V5069, V5068, V5067, V5072, V5071, V5070, V11, V9, V8, V6, V5, V4, V3, V1, V0, V5069, V5073))), case V5126 of {'Idris.Prelude.Types.Left', E198} -> (fun (V5127) -> {'Idris.Prelude.Types.Left', V5127} end(E198)); {'Idris.Prelude.Types.Right', E199} -> (fun (V5128) -> begin (V5129 = ('nested--12608-17998--in--un--localsIn'(V2, V5069, V5068, V5067, V5072, V5071, V5070, V11, V9, V8, V6, V5, V4, V3, V1, V0, V5072, V5073))), case V5129 of {'Idris.Prelude.Types.Left', E200} -> (fun (V5130) -> {'Idris.Prelude.Types.Left', V5130} end(E200)); {'Idris.Prelude.Types.Right', E201} -> (fun (V5131) -> begin (V5132 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V5128, V5131)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V5128, V5131)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V5132 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E202, E203} -> (fun (V5133, V5134) -> V5134 end(E202, E203)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--12608-17997--in--un--pv'(V2, V5069, V5068, V5067, V5072, V5071, V5070, V11, V9, V8, V6, V5, V4, V3, V1, V0, V5067)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V5067, V5068, V5069}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V5070, V5071, V5072}, V11}))(V5073)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V5070, V5071, V5072}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V5067, V5068, V5069}, V8}))(V5073)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E201)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E199)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E197)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E193, E194, E195)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V5067, V5068, V5069}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E190, E191, E192)); _ -> case V10 of {'Idris.Core.Value.NMeta', E156, E157, E158} -> (fun (V5135, V5136, V5137) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E159, E160} -> (fun (V5138, V5139) -> V5139 end(E159, E160)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V5135, V5136, V5137}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V5135, V5136, V5137}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E156, E157, E158)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E138, E139} -> (fun (V5140, V5141) -> case V5141 of 3 -> case V7 of {'Idris.Core.Value.NRef', E140, E141} -> (fun (V5142, V5143) -> case V10 of {'Idris.Core.Value.NRef', E142, E143} -> (fun (V5144, V5145) -> begin (V5146 = {'Idris.Core.Unify.MkUnifyInfo', V5140, 3}), begin (V5147 = {'Idris.Core.Value.NRef', V5142, V5143}), begin (V5148 = {'Idris.Core.Value.NRef', V5144, V5145}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V5143, V5145)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V5149) -> fun (V5150) -> fun (V5151) -> fun (V5152) -> fun (V5153) -> fun (V5154) -> fun (V5155) -> fun (V5156) -> fun (V5157) -> ('dn--un--unifyD_Unify_Closure'(V5149, V5150, V5151, V5152, V5153, V5154, V5155, V5156, V5157)) end end end end end end end end end, fun (V5158) -> fun (V5159) -> fun (V5160) -> fun (V5161) -> fun (V5162) -> fun (V5163) -> fun (V5164) -> fun (V5165) -> fun (V5166) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5158, V5159, V5160, V5161, V5162, V5163, V5164, V5165, V5166)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V5167) -> fun (V5168) -> fun (V5169) -> fun (V5170) -> fun (V5171) -> fun (V5172) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5167, V5168, V5169, V5170, V5171, V5172)) end end end end end end, fun (V5173) -> fun (V5174) -> fun (V5175) -> fun (V5176) -> fun (V5177) -> fun (V5178) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5173, V5174, V5175, V5176, V5177, V5178)) end end end end end end, fun (V5179) -> fun (V5180) -> fun (V5181) -> fun (V5182) -> fun (V5183) -> fun (V5184) -> fun (V5185) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5179, V5180, V5181, V5182, V5183, V5184, V5185)) end end end end end end end, fun (V5186) -> fun (V5187) -> fun (V5188) -> fun (V5189) -> fun (V5190) -> fun (V5191) -> fun (V5192) -> fun (V5193) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5186, V5187, V5188, V5189, V5190, V5191, V5192, V5193)) end end end end end end end end}}, V2, V0, V1, V5146, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5194) -> ('Idris.Idris2.Builtin':'un--snd'(V5194)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5195) -> ('Idris.Idris2.Builtin':'un--snd'(V5195)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V5146, V4, V5, V6, V5147, V8, {'Idris.Core.Value.NApp', V9, V5148, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E142, E143)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E140, E141)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E144, E145} -> (fun (V5196, V5197) -> case V10 of {'Idris.Core.Value.NRef', E146, E147} -> (fun (V5198, V5199) -> begin (V5200 = {'Idris.Core.Unify.MkUnifyInfo', V5140, 2}), begin (V5201 = {'Idris.Core.Value.NRef', V5196, V5197}), begin (V5202 = {'Idris.Core.Value.NRef', V5198, V5199}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V5197, V5199)) of 1 -> fun (V5203) -> begin (V5227 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V5204) -> begin (V5206 = begin (V5205 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5205} end), case V5206 of {'Idris.Prelude.Types.Left', E148} -> (fun (V5207) -> {'Idris.Prelude.Types.Left', V5207} end(E148)); {'Idris.Prelude.Types.Right', E149} -> (fun (V5208) -> begin (V5212 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5209) -> fun (V5210) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V5208, V5, V5209, V5210)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5211) -> ('Idris.Idris2.Builtin':'un--snd'(V5211)) end, V8)), [], V5204))), case V5212 of {'Idris.Prelude.Types.Left', E150} -> (fun (V5213) -> {'Idris.Prelude.Types.Left', V5213} end(E150)); {'Idris.Prelude.Types.Right', E151} -> (fun (V5214) -> begin (V5218 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5215) -> fun (V5216) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V5208, V5, V5215, V5216)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5217) -> ('Idris.Idris2.Builtin':'un--snd'(V5217)) end, V11)), [], V5204))), case V5218 of {'Idris.Prelude.Types.Left', E152} -> (fun (V5219) -> {'Idris.Prelude.Types.Left', V5219} end(E152)); {'Idris.Prelude.Types.Right', E153} -> (fun (V5220) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V5221) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V5221)) end, fun (V5222) -> fun (V5223) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V5222, V5223)) end end}, V5214)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V5224) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V5224)) end, fun (V5225) -> fun (V5226) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V5225, V5226)) end end}, V5220))))))))} end(E153)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E151)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E149)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5203))), case V5227 of {'Idris.Prelude.Types.Left', E154} -> (fun (V5228) -> {'Idris.Prelude.Types.Left', V5228} end(E154)); {'Idris.Prelude.Types.Right', E155} -> (fun (V5229) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V5230) -> fun (V5231) -> fun (V5232) -> fun (V5233) -> fun (V5234) -> fun (V5235) -> fun (V5236) -> fun (V5237) -> fun (V5238) -> ('dn--un--unifyD_Unify_Closure'(V5230, V5231, V5232, V5233, V5234, V5235, V5236, V5237, V5238)) end end end end end end end end end, fun (V5239) -> fun (V5240) -> fun (V5241) -> fun (V5242) -> fun (V5243) -> fun (V5244) -> fun (V5245) -> fun (V5246) -> fun (V5247) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5239, V5240, V5241, V5242, V5243, V5244, V5245, V5246, V5247)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V5248) -> fun (V5249) -> fun (V5250) -> fun (V5251) -> fun (V5252) -> fun (V5253) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5248, V5249, V5250, V5251, V5252, V5253)) end end end end end end, fun (V5254) -> fun (V5255) -> fun (V5256) -> fun (V5257) -> fun (V5258) -> fun (V5259) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5254, V5255, V5256, V5257, V5258, V5259)) end end end end end end, fun (V5260) -> fun (V5261) -> fun (V5262) -> fun (V5263) -> fun (V5264) -> fun (V5265) -> fun (V5266) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5260, V5261, V5262, V5263, V5264, V5265, V5266)) end end end end end end end, fun (V5267) -> fun (V5268) -> fun (V5269) -> fun (V5270) -> fun (V5271) -> fun (V5272) -> fun (V5273) -> fun (V5274) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5267, V5268, V5269, V5270, V5271, V5272, V5273, V5274)) end end end end end end end end}}, V2, V0, V1, V5200, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5275) -> ('Idris.Idris2.Builtin':'un--snd'(V5275)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5276) -> ('Idris.Idris2.Builtin':'un--snd'(V5276)) end, V11))))(V5203)) end(E155)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V5200, V4, V5, V6, V5201, V8, {'Idris.Core.Value.NApp', V9, V5202, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E146, E147)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E144, E145)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E138, E139)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end; _ -> case V7 of {'Idris.Core.Value.NLocal', E93, E94} -> (fun (V5277, V5278) -> case V10 of {'Idris.Core.Value.NLocal', E118, E119} -> (fun (V5279, V5280) -> fun (V5281) -> begin (V5282 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V5281))), case V5282 of {'Idris.Prelude.Types.Left', E120} -> (fun (V5283) -> {'Idris.Prelude.Types.Left', V5283} end(E120)); {'Idris.Prelude.Types.Right', E121} -> (fun (V5284) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V5277, V5278}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V5279, V5280}, V11}, V5281)) end(E121)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E118, E119)); _ -> case V10 of {'Idris.Core.Value.NMeta', E113, E114, E115} -> (fun (V5285, V5286, V5287) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E116, E117} -> (fun (V5288, V5289) -> V5289 end(E116, E117)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V5285, V5286, V5287}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V5285, V5286, V5287}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E113, E114, E115)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E95, E96} -> (fun (V5290, V5291) -> case V5291 of 3 -> case V7 of {'Idris.Core.Value.NRef', E97, E98} -> (fun (V5292, V5293) -> case V10 of {'Idris.Core.Value.NRef', E99, E100} -> (fun (V5294, V5295) -> begin (V5296 = {'Idris.Core.Unify.MkUnifyInfo', V5290, 3}), begin (V5297 = {'Idris.Core.Value.NRef', V5292, V5293}), begin (V5298 = {'Idris.Core.Value.NRef', V5294, V5295}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V5293, V5295)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V5299) -> fun (V5300) -> fun (V5301) -> fun (V5302) -> fun (V5303) -> fun (V5304) -> fun (V5305) -> fun (V5306) -> fun (V5307) -> ('dn--un--unifyD_Unify_Closure'(V5299, V5300, V5301, V5302, V5303, V5304, V5305, V5306, V5307)) end end end end end end end end end, fun (V5308) -> fun (V5309) -> fun (V5310) -> fun (V5311) -> fun (V5312) -> fun (V5313) -> fun (V5314) -> fun (V5315) -> fun (V5316) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5308, V5309, V5310, V5311, V5312, V5313, V5314, V5315, V5316)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V5317) -> fun (V5318) -> fun (V5319) -> fun (V5320) -> fun (V5321) -> fun (V5322) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5317, V5318, V5319, V5320, V5321, V5322)) end end end end end end, fun (V5323) -> fun (V5324) -> fun (V5325) -> fun (V5326) -> fun (V5327) -> fun (V5328) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5323, V5324, V5325, V5326, V5327, V5328)) end end end end end end, fun (V5329) -> fun (V5330) -> fun (V5331) -> fun (V5332) -> fun (V5333) -> fun (V5334) -> fun (V5335) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5329, V5330, V5331, V5332, V5333, V5334, V5335)) end end end end end end end, fun (V5336) -> fun (V5337) -> fun (V5338) -> fun (V5339) -> fun (V5340) -> fun (V5341) -> fun (V5342) -> fun (V5343) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5336, V5337, V5338, V5339, V5340, V5341, V5342, V5343)) end end end end end end end end}}, V2, V0, V1, V5296, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5344) -> ('Idris.Idris2.Builtin':'un--snd'(V5344)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5345) -> ('Idris.Idris2.Builtin':'un--snd'(V5345)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V5296, V4, V5, V6, V5297, V8, {'Idris.Core.Value.NApp', V9, V5298, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E99, E100)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E97, E98)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E101, E102} -> (fun (V5346, V5347) -> case V10 of {'Idris.Core.Value.NRef', E103, E104} -> (fun (V5348, V5349) -> begin (V5350 = {'Idris.Core.Unify.MkUnifyInfo', V5290, 2}), begin (V5351 = {'Idris.Core.Value.NRef', V5346, V5347}), begin (V5352 = {'Idris.Core.Value.NRef', V5348, V5349}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V5347, V5349)) of 1 -> fun (V5353) -> begin (V5377 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V5354) -> begin (V5356 = begin (V5355 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5355} end), case V5356 of {'Idris.Prelude.Types.Left', E105} -> (fun (V5357) -> {'Idris.Prelude.Types.Left', V5357} end(E105)); {'Idris.Prelude.Types.Right', E106} -> (fun (V5358) -> begin (V5362 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5359) -> fun (V5360) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V5358, V5, V5359, V5360)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5361) -> ('Idris.Idris2.Builtin':'un--snd'(V5361)) end, V8)), [], V5354))), case V5362 of {'Idris.Prelude.Types.Left', E107} -> (fun (V5363) -> {'Idris.Prelude.Types.Left', V5363} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V5364) -> begin (V5368 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5365) -> fun (V5366) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V5358, V5, V5365, V5366)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5367) -> ('Idris.Idris2.Builtin':'un--snd'(V5367)) end, V11)), [], V5354))), case V5368 of {'Idris.Prelude.Types.Left', E109} -> (fun (V5369) -> {'Idris.Prelude.Types.Left', V5369} end(E109)); {'Idris.Prelude.Types.Right', E110} -> (fun (V5370) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V5371) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V5371)) end, fun (V5372) -> fun (V5373) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V5372, V5373)) end end}, V5364)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V5374) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V5374)) end, fun (V5375) -> fun (V5376) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V5375, V5376)) end end}, V5370))))))))} end(E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5353))), case V5377 of {'Idris.Prelude.Types.Left', E111} -> (fun (V5378) -> {'Idris.Prelude.Types.Left', V5378} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V5379) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V5380) -> fun (V5381) -> fun (V5382) -> fun (V5383) -> fun (V5384) -> fun (V5385) -> fun (V5386) -> fun (V5387) -> fun (V5388) -> ('dn--un--unifyD_Unify_Closure'(V5380, V5381, V5382, V5383, V5384, V5385, V5386, V5387, V5388)) end end end end end end end end end, fun (V5389) -> fun (V5390) -> fun (V5391) -> fun (V5392) -> fun (V5393) -> fun (V5394) -> fun (V5395) -> fun (V5396) -> fun (V5397) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5389, V5390, V5391, V5392, V5393, V5394, V5395, V5396, V5397)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V5398) -> fun (V5399) -> fun (V5400) -> fun (V5401) -> fun (V5402) -> fun (V5403) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5398, V5399, V5400, V5401, V5402, V5403)) end end end end end end, fun (V5404) -> fun (V5405) -> fun (V5406) -> fun (V5407) -> fun (V5408) -> fun (V5409) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5404, V5405, V5406, V5407, V5408, V5409)) end end end end end end, fun (V5410) -> fun (V5411) -> fun (V5412) -> fun (V5413) -> fun (V5414) -> fun (V5415) -> fun (V5416) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5410, V5411, V5412, V5413, V5414, V5415, V5416)) end end end end end end end, fun (V5417) -> fun (V5418) -> fun (V5419) -> fun (V5420) -> fun (V5421) -> fun (V5422) -> fun (V5423) -> fun (V5424) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5417, V5418, V5419, V5420, V5421, V5422, V5423, V5424)) end end end end end end end end}}, V2, V0, V1, V5350, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5425) -> ('Idris.Idris2.Builtin':'un--snd'(V5425)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5426) -> ('Idris.Idris2.Builtin':'un--snd'(V5426)) end, V11))))(V5353)) end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V5350, V4, V5, V6, V5351, V8, {'Idris.Core.Value.NApp', V9, V5352, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E103, E104)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E101, E102)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E95, E96)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E93, E94)); {'Idris.Core.Value.NMeta', E122, E123, E124} -> (fun (V5427, V5428, V5429) -> case V10 of {'Idris.Core.Value.NMeta', E125, E126, E127} -> (fun (V5430, V5431, V5432) -> fun (V5433) -> begin (V5434 = ('un--isDefInvertible'(V0, V4, V5428, V5433))), case V5434 of {'Idris.Prelude.Types.Left', E128} -> (fun (V5435) -> {'Idris.Prelude.Types.Left', V5435} end(E128)); {'Idris.Prelude.Types.Right', E129} -> (fun (V5436) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V5428, V5431)) of 1 -> case V5436 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E136, E137} -> (fun (V5437, V5438) -> V5438 end(E136, E137)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V5439) -> fun (V5440) -> fun (V5441) -> fun (V5442) -> fun (V5443) -> fun (V5444) -> fun (V5445) -> fun (V5446) -> fun (V5447) -> ('dn--un--unifyD_Unify_Closure'(V5439, V5440, V5441, V5442, V5443, V5444, V5445, V5446, V5447)) end end end end end end end end end, fun (V5448) -> fun (V5449) -> fun (V5450) -> fun (V5451) -> fun (V5452) -> fun (V5453) -> fun (V5454) -> fun (V5455) -> fun (V5456) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5448, V5449, V5450, V5451, V5452, V5453, V5454, V5455, V5456)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V5457) -> fun (V5458) -> fun (V5459) -> fun (V5460) -> fun (V5461) -> fun (V5462) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5457, V5458, V5459, V5460, V5461, V5462)) end end end end end end, fun (V5463) -> fun (V5464) -> fun (V5465) -> fun (V5466) -> fun (V5467) -> fun (V5468) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5463, V5464, V5465, V5466, V5467, V5468)) end end end end end end, fun (V5469) -> fun (V5470) -> fun (V5471) -> fun (V5472) -> fun (V5473) -> fun (V5474) -> fun (V5475) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5469, V5470, V5471, V5472, V5473, V5474, V5475)) end end end end end end end, fun (V5476) -> fun (V5477) -> fun (V5478) -> fun (V5479) -> fun (V5480) -> fun (V5481) -> fun (V5482) -> fun (V5483) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5476, V5477, V5478, V5479, V5480, V5481, V5482, V5483)) end end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V5429, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5484) -> ('Idris.Idris2.Builtin':'un--snd'(V5484)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V5432, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5485) -> ('Idris.Idris2.Builtin':'un--snd'(V5485)) end, V11))))))(V5433)); 0 -> begin (V5486 = ('nested--12608-17998--in--un--localsIn'(V2, V5429, V5428, V5427, V5432, V5431, V5430, V11, V9, V8, V6, V5, V4, V3, V1, V0, V5429, V5433))), case V5486 of {'Idris.Prelude.Types.Left', E130} -> (fun (V5487) -> {'Idris.Prelude.Types.Left', V5487} end(E130)); {'Idris.Prelude.Types.Right', E131} -> (fun (V5488) -> begin (V5489 = ('nested--12608-17998--in--un--localsIn'(V2, V5429, V5428, V5427, V5432, V5431, V5430, V11, V9, V8, V6, V5, V4, V3, V1, V0, V5432, V5433))), case V5489 of {'Idris.Prelude.Types.Left', E132} -> (fun (V5490) -> {'Idris.Prelude.Types.Left', V5490} end(E132)); {'Idris.Prelude.Types.Right', E133} -> (fun (V5491) -> begin (V5492 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V5488, V5491)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V5488, V5491)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V5492 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E134, E135} -> (fun (V5493, V5494) -> V5494 end(E134, E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--12608-17997--in--un--pv'(V2, V5429, V5428, V5427, V5432, V5431, V5430, V11, V9, V8, V6, V5, V4, V3, V1, V0, V5427)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V5427, V5428, V5429}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V5430, V5431, V5432}, V11}))(V5433)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V5430, V5431, V5432}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V5427, V5428, V5429}, V8}))(V5433)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E133)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E125, E126, E127)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V5427, V5428, V5429}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E122, E123, E124)); _ -> case V10 of {'Idris.Core.Value.NMeta', E88, E89, E90} -> (fun (V5495, V5496, V5497) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E91, E92} -> (fun (V5498, V5499) -> V5499 end(E91, E92)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V5495, V5496, V5497}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V5495, V5496, V5497}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E88, E89, E90)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E70, E71} -> (fun (V5500, V5501) -> case V5501 of 3 -> case V7 of {'Idris.Core.Value.NRef', E72, E73} -> (fun (V5502, V5503) -> case V10 of {'Idris.Core.Value.NRef', E74, E75} -> (fun (V5504, V5505) -> begin (V5506 = {'Idris.Core.Unify.MkUnifyInfo', V5500, 3}), begin (V5507 = {'Idris.Core.Value.NRef', V5502, V5503}), begin (V5508 = {'Idris.Core.Value.NRef', V5504, V5505}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V5503, V5505)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V5509) -> fun (V5510) -> fun (V5511) -> fun (V5512) -> fun (V5513) -> fun (V5514) -> fun (V5515) -> fun (V5516) -> fun (V5517) -> ('dn--un--unifyD_Unify_Closure'(V5509, V5510, V5511, V5512, V5513, V5514, V5515, V5516, V5517)) end end end end end end end end end, fun (V5518) -> fun (V5519) -> fun (V5520) -> fun (V5521) -> fun (V5522) -> fun (V5523) -> fun (V5524) -> fun (V5525) -> fun (V5526) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5518, V5519, V5520, V5521, V5522, V5523, V5524, V5525, V5526)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V5527) -> fun (V5528) -> fun (V5529) -> fun (V5530) -> fun (V5531) -> fun (V5532) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5527, V5528, V5529, V5530, V5531, V5532)) end end end end end end, fun (V5533) -> fun (V5534) -> fun (V5535) -> fun (V5536) -> fun (V5537) -> fun (V5538) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5533, V5534, V5535, V5536, V5537, V5538)) end end end end end end, fun (V5539) -> fun (V5540) -> fun (V5541) -> fun (V5542) -> fun (V5543) -> fun (V5544) -> fun (V5545) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5539, V5540, V5541, V5542, V5543, V5544, V5545)) end end end end end end end, fun (V5546) -> fun (V5547) -> fun (V5548) -> fun (V5549) -> fun (V5550) -> fun (V5551) -> fun (V5552) -> fun (V5553) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5546, V5547, V5548, V5549, V5550, V5551, V5552, V5553)) end end end end end end end end}}, V2, V0, V1, V5506, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5554) -> ('Idris.Idris2.Builtin':'un--snd'(V5554)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5555) -> ('Idris.Idris2.Builtin':'un--snd'(V5555)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V5506, V4, V5, V6, V5507, V8, {'Idris.Core.Value.NApp', V9, V5508, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E74, E75)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E72, E73)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E76, E77} -> (fun (V5556, V5557) -> case V10 of {'Idris.Core.Value.NRef', E78, E79} -> (fun (V5558, V5559) -> begin (V5560 = {'Idris.Core.Unify.MkUnifyInfo', V5500, 2}), begin (V5561 = {'Idris.Core.Value.NRef', V5556, V5557}), begin (V5562 = {'Idris.Core.Value.NRef', V5558, V5559}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V5557, V5559)) of 1 -> fun (V5563) -> begin (V5587 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V5564) -> begin (V5566 = begin (V5565 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5565} end), case V5566 of {'Idris.Prelude.Types.Left', E80} -> (fun (V5567) -> {'Idris.Prelude.Types.Left', V5567} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V5568) -> begin (V5572 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5569) -> fun (V5570) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V5568, V5, V5569, V5570)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5571) -> ('Idris.Idris2.Builtin':'un--snd'(V5571)) end, V8)), [], V5564))), case V5572 of {'Idris.Prelude.Types.Left', E82} -> (fun (V5573) -> {'Idris.Prelude.Types.Left', V5573} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V5574) -> begin (V5578 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5575) -> fun (V5576) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V5568, V5, V5575, V5576)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5577) -> ('Idris.Idris2.Builtin':'un--snd'(V5577)) end, V11)), [], V5564))), case V5578 of {'Idris.Prelude.Types.Left', E84} -> (fun (V5579) -> {'Idris.Prelude.Types.Left', V5579} end(E84)); {'Idris.Prelude.Types.Right', E85} -> (fun (V5580) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V5581) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V5581)) end, fun (V5582) -> fun (V5583) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V5582, V5583)) end end}, V5574)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V5584) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V5584)) end, fun (V5585) -> fun (V5586) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V5585, V5586)) end end}, V5580))))))))} end(E85)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5563))), case V5587 of {'Idris.Prelude.Types.Left', E86} -> (fun (V5588) -> {'Idris.Prelude.Types.Left', V5588} end(E86)); {'Idris.Prelude.Types.Right', E87} -> (fun (V5589) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V5590) -> fun (V5591) -> fun (V5592) -> fun (V5593) -> fun (V5594) -> fun (V5595) -> fun (V5596) -> fun (V5597) -> fun (V5598) -> ('dn--un--unifyD_Unify_Closure'(V5590, V5591, V5592, V5593, V5594, V5595, V5596, V5597, V5598)) end end end end end end end end end, fun (V5599) -> fun (V5600) -> fun (V5601) -> fun (V5602) -> fun (V5603) -> fun (V5604) -> fun (V5605) -> fun (V5606) -> fun (V5607) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5599, V5600, V5601, V5602, V5603, V5604, V5605, V5606, V5607)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V5608) -> fun (V5609) -> fun (V5610) -> fun (V5611) -> fun (V5612) -> fun (V5613) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5608, V5609, V5610, V5611, V5612, V5613)) end end end end end end, fun (V5614) -> fun (V5615) -> fun (V5616) -> fun (V5617) -> fun (V5618) -> fun (V5619) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5614, V5615, V5616, V5617, V5618, V5619)) end end end end end end, fun (V5620) -> fun (V5621) -> fun (V5622) -> fun (V5623) -> fun (V5624) -> fun (V5625) -> fun (V5626) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5620, V5621, V5622, V5623, V5624, V5625, V5626)) end end end end end end end, fun (V5627) -> fun (V5628) -> fun (V5629) -> fun (V5630) -> fun (V5631) -> fun (V5632) -> fun (V5633) -> fun (V5634) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5627, V5628, V5629, V5630, V5631, V5632, V5633, V5634)) end end end end end end end end}}, V2, V0, V1, V5560, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5635) -> ('Idris.Idris2.Builtin':'un--snd'(V5635)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5636) -> ('Idris.Idris2.Builtin':'un--snd'(V5636)) end, V11))))(V5563)) end(E87)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V5560, V4, V5, V6, V5561, V8, {'Idris.Core.Value.NApp', V9, V5562, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E78, E79)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E76, E77)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E70, E71)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end(E68, E69)); _ -> case V7 of {'Idris.Core.Value.NLocal', E23, E24} -> (fun (V5637, V5638) -> case V10 of {'Idris.Core.Value.NLocal', E48, E49} -> (fun (V5639, V5640) -> fun (V5641) -> begin (V5642 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Both local apps, unifyIfEq"/utf8>> end, V5641))), case V5642 of {'Idris.Prelude.Types.Left', E50} -> (fun (V5643) -> {'Idris.Prelude.Types.Left', V5643} end(E50)); {'Idris.Prelude.Types.Right', E51} -> (fun (V5644) -> ('un--unifyIfEq'(V0, V1, V2, 1, V4, V3, V5, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NLocal', V5637, V5638}, V8}, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NLocal', V5639, V5640}, V11}, V5641)) end(E51)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E48, E49)); _ -> case V10 of {'Idris.Core.Value.NMeta', E43, E44, E45} -> (fun (V5645, V5646, V5647) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E46, E47} -> (fun (V5648, V5649) -> V5649 end(E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V5645, V5646, V5647}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V5645, V5646, V5647}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E43, E44, E45)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E25, E26} -> (fun (V5650, V5651) -> case V5651 of 3 -> case V7 of {'Idris.Core.Value.NRef', E27, E28} -> (fun (V5652, V5653) -> case V10 of {'Idris.Core.Value.NRef', E29, E30} -> (fun (V5654, V5655) -> begin (V5656 = {'Idris.Core.Unify.MkUnifyInfo', V5650, 3}), begin (V5657 = {'Idris.Core.Value.NRef', V5652, V5653}), begin (V5658 = {'Idris.Core.Value.NRef', V5654, V5655}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V5653, V5655)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V5659) -> fun (V5660) -> fun (V5661) -> fun (V5662) -> fun (V5663) -> fun (V5664) -> fun (V5665) -> fun (V5666) -> fun (V5667) -> ('dn--un--unifyD_Unify_Closure'(V5659, V5660, V5661, V5662, V5663, V5664, V5665, V5666, V5667)) end end end end end end end end end, fun (V5668) -> fun (V5669) -> fun (V5670) -> fun (V5671) -> fun (V5672) -> fun (V5673) -> fun (V5674) -> fun (V5675) -> fun (V5676) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5668, V5669, V5670, V5671, V5672, V5673, V5674, V5675, V5676)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V5677) -> fun (V5678) -> fun (V5679) -> fun (V5680) -> fun (V5681) -> fun (V5682) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5677, V5678, V5679, V5680, V5681, V5682)) end end end end end end, fun (V5683) -> fun (V5684) -> fun (V5685) -> fun (V5686) -> fun (V5687) -> fun (V5688) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5683, V5684, V5685, V5686, V5687, V5688)) end end end end end end, fun (V5689) -> fun (V5690) -> fun (V5691) -> fun (V5692) -> fun (V5693) -> fun (V5694) -> fun (V5695) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5689, V5690, V5691, V5692, V5693, V5694, V5695)) end end end end end end end, fun (V5696) -> fun (V5697) -> fun (V5698) -> fun (V5699) -> fun (V5700) -> fun (V5701) -> fun (V5702) -> fun (V5703) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5696, V5697, V5698, V5699, V5700, V5701, V5702, V5703)) end end end end end end end end}}, V2, V0, V1, V5656, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5704) -> ('Idris.Idris2.Builtin':'un--snd'(V5704)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5705) -> ('Idris.Idris2.Builtin':'un--snd'(V5705)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V5656, V4, V5, V6, V5657, V8, {'Idris.Core.Value.NApp', V9, V5658, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E29, E30)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E27, E28)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E31, E32} -> (fun (V5706, V5707) -> case V10 of {'Idris.Core.Value.NRef', E33, E34} -> (fun (V5708, V5709) -> begin (V5710 = {'Idris.Core.Unify.MkUnifyInfo', V5650, 2}), begin (V5711 = {'Idris.Core.Value.NRef', V5706, V5707}), begin (V5712 = {'Idris.Core.Value.NRef', V5708, V5709}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V5707, V5709)) of 1 -> fun (V5713) -> begin (V5737 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V5714) -> begin (V5716 = begin (V5715 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5715} end), case V5716 of {'Idris.Prelude.Types.Left', E35} -> (fun (V5717) -> {'Idris.Prelude.Types.Left', V5717} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V5718) -> begin (V5722 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5719) -> fun (V5720) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V5718, V5, V5719, V5720)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5721) -> ('Idris.Idris2.Builtin':'un--snd'(V5721)) end, V8)), [], V5714))), case V5722 of {'Idris.Prelude.Types.Left', E37} -> (fun (V5723) -> {'Idris.Prelude.Types.Left', V5723} end(E37)); {'Idris.Prelude.Types.Right', E38} -> (fun (V5724) -> begin (V5728 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5725) -> fun (V5726) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V5718, V5, V5725, V5726)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5727) -> ('Idris.Idris2.Builtin':'un--snd'(V5727)) end, V11)), [], V5714))), case V5728 of {'Idris.Prelude.Types.Left', E39} -> (fun (V5729) -> {'Idris.Prelude.Types.Left', V5729} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V5730) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V5731) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V5731)) end, fun (V5732) -> fun (V5733) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V5732, V5733)) end end}, V5724)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V5734) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V5734)) end, fun (V5735) -> fun (V5736) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V5735, V5736)) end end}, V5730))))))))} end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5713))), case V5737 of {'Idris.Prelude.Types.Left', E41} -> (fun (V5738) -> {'Idris.Prelude.Types.Left', V5738} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V5739) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V5740) -> fun (V5741) -> fun (V5742) -> fun (V5743) -> fun (V5744) -> fun (V5745) -> fun (V5746) -> fun (V5747) -> fun (V5748) -> ('dn--un--unifyD_Unify_Closure'(V5740, V5741, V5742, V5743, V5744, V5745, V5746, V5747, V5748)) end end end end end end end end end, fun (V5749) -> fun (V5750) -> fun (V5751) -> fun (V5752) -> fun (V5753) -> fun (V5754) -> fun (V5755) -> fun (V5756) -> fun (V5757) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5749, V5750, V5751, V5752, V5753, V5754, V5755, V5756, V5757)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V5758) -> fun (V5759) -> fun (V5760) -> fun (V5761) -> fun (V5762) -> fun (V5763) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5758, V5759, V5760, V5761, V5762, V5763)) end end end end end end, fun (V5764) -> fun (V5765) -> fun (V5766) -> fun (V5767) -> fun (V5768) -> fun (V5769) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5764, V5765, V5766, V5767, V5768, V5769)) end end end end end end, fun (V5770) -> fun (V5771) -> fun (V5772) -> fun (V5773) -> fun (V5774) -> fun (V5775) -> fun (V5776) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5770, V5771, V5772, V5773, V5774, V5775, V5776)) end end end end end end end, fun (V5777) -> fun (V5778) -> fun (V5779) -> fun (V5780) -> fun (V5781) -> fun (V5782) -> fun (V5783) -> fun (V5784) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5777, V5778, V5779, V5780, V5781, V5782, V5783, V5784)) end end end end end end end end}}, V2, V0, V1, V5710, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5785) -> ('Idris.Idris2.Builtin':'un--snd'(V5785)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5786) -> ('Idris.Idris2.Builtin':'un--snd'(V5786)) end, V11))))(V5713)) end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V5710, V4, V5, V6, V5711, V8, {'Idris.Core.Value.NApp', V9, V5712, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E33, E34)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E31, E32)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E25, E26)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end(E23, E24)); {'Idris.Core.Value.NMeta', E52, E53, E54} -> (fun (V5787, V5788, V5789) -> case V10 of {'Idris.Core.Value.NMeta', E55, E56, E57} -> (fun (V5790, V5791, V5792) -> fun (V5793) -> begin (V5794 = ('un--isDefInvertible'(V0, V4, V5788, V5793))), case V5794 of {'Idris.Prelude.Types.Left', E58} -> (fun (V5795) -> {'Idris.Prelude.Types.Left', V5795} end(E58)); {'Idris.Prelude.Types.Right', E59} -> (fun (V5796) -> case case ('Idris.Idris2.Prelude.EqOrd':'dn--un--==_Eq_Int'(V5788, V5791)) of 1 -> case V5796 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E66, E67} -> (fun (V5797, V5798) -> V5798 end(E66, E67)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V5799) -> fun (V5800) -> fun (V5801) -> fun (V5802) -> fun (V5803) -> fun (V5804) -> fun (V5805) -> fun (V5806) -> fun (V5807) -> ('dn--un--unifyD_Unify_Closure'(V5799, V5800, V5801, V5802, V5803, V5804, V5805, V5806, V5807)) end end end end end end end end end, fun (V5808) -> fun (V5809) -> fun (V5810) -> fun (V5811) -> fun (V5812) -> fun (V5813) -> fun (V5814) -> fun (V5815) -> fun (V5816) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5808, V5809, V5810, V5811, V5812, V5813, V5814, V5815, V5816)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V5817) -> fun (V5818) -> fun (V5819) -> fun (V5820) -> fun (V5821) -> fun (V5822) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5817, V5818, V5819, V5820, V5821, V5822)) end end end end end end, fun (V5823) -> fun (V5824) -> fun (V5825) -> fun (V5826) -> fun (V5827) -> fun (V5828) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5823, V5824, V5825, V5826, V5827, V5828)) end end end end end end, fun (V5829) -> fun (V5830) -> fun (V5831) -> fun (V5832) -> fun (V5833) -> fun (V5834) -> fun (V5835) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5829, V5830, V5831, V5832, V5833, V5834, V5835)) end end end end end end end, fun (V5836) -> fun (V5837) -> fun (V5838) -> fun (V5839) -> fun (V5840) -> fun (V5841) -> fun (V5842) -> fun (V5843) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5836, V5837, V5838, V5839, V5840, V5841, V5842, V5843)) end end end end end end end end}}, V2, V0, V1, V3, V4, V5, ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V5789, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5844) -> ('Idris.Idris2.Builtin':'un--snd'(V5844)) end, V8)))), ('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V5792, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5845) -> ('Idris.Idris2.Builtin':'un--snd'(V5845)) end, V11))))))(V5793)); 0 -> begin (V5846 = ('nested--12608-17998--in--un--localsIn'(V2, V5789, V5788, V5787, V5792, V5791, V5790, V11, V9, V8, V6, V5, V4, V3, V1, V0, V5789, V5793))), case V5846 of {'Idris.Prelude.Types.Left', E60} -> (fun (V5847) -> {'Idris.Prelude.Types.Left', V5847} end(E60)); {'Idris.Prelude.Types.Right', E61} -> (fun (V5848) -> begin (V5849 = ('nested--12608-17998--in--un--localsIn'(V2, V5789, V5788, V5787, V5792, V5791, V5790, V11, V9, V8, V6, V5, V4, V3, V1, V0, V5792, V5793))), case V5849 of {'Idris.Prelude.Types.Left', E62} -> (fun (V5850) -> {'Idris.Prelude.Types.Left', V5850} end(E62)); {'Idris.Prelude.Types.Right', E63} -> (fun (V5851) -> begin (V5852 = case ('Idris.Idris2.Prelude.Types':'dn--un-->_Ord_Nat'(V5848, V5851)) of 1 -> 1; 0 -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V5848, V5851)) of 1 -> ('Idris.Idris2.Prelude.Types':'dn--un--<=_Ord_Nat'(('Idris.Idris2.Prelude.Types.List':'un--length'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--length'(V11)))); 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case case case V5852 of 1 -> 1; 0 -> ('dn--un--==_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E64, E65} -> (fun (V5853, V5854) -> V5854 end(E64, E65)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> case ('nested--12608-17997--in--un--pv'(V2, V5789, V5788, V5787, V5792, V5791, V5790, V11, V9, V8, V6, V5, V4, V3, V1, V0, V5787)) of 1 -> 0; 0 -> 1; _ -> ('erlang':'throw'("Error: Unreachable branch")) end; 0 -> 0; _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> (('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V5787, V5788, V5789}, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V5790, V5791, V5792}, V11}))(V5793)); 0 -> (('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V9, {'Idris.Core.Value.NMeta', V5790, V5791, V5792}, V11, {'Idris.Core.Value.NApp', V6, {'Idris.Core.Value.NMeta', V5787, V5788, V5789}, V8}))(V5793)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E63)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E61)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E59)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E55, E56, E57)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V5787, V5788, V5789}, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E52, E53, E54)); _ -> case V10 of {'Idris.Core.Value.NMeta', E18, E19, E20} -> (fun (V5855, V5856, V5857) -> case ('dn--un--/=_Eq_UnifyMode'(case V3 of {'Idris.Core.Unify.MkUnifyInfo', E21, E22} -> (fun (V5858, V5859) -> V5859 end(E21, E22)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 2)) of 1 -> ('un--unifyApp'(V0, V1, V2, 1, V3, V4, V5, V6, {'Idris.Core.Value.NMeta', V5855, V5856, V5857}, V11, {'Idris.Core.Value.NApp', V6, V7, V8})); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, {'Idris.Core.Value.NMeta', V5855, V5856, V5857}, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E18, E19, E20)); _ -> case V3 of {'Idris.Core.Unify.MkUnifyInfo', E0, E1} -> (fun (V5860, V5861) -> case V5861 of 3 -> case V7 of {'Idris.Core.Value.NRef', E2, E3} -> (fun (V5862, V5863) -> case V10 of {'Idris.Core.Value.NRef', E4, E5} -> (fun (V5864, V5865) -> begin (V5866 = {'Idris.Core.Unify.MkUnifyInfo', V5860, 3}), begin (V5867 = {'Idris.Core.Value.NRef', V5862, V5863}), begin (V5868 = {'Idris.Core.Value.NRef', V5864, V5865}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V5863, V5865)) of 1 -> ('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V5869) -> fun (V5870) -> fun (V5871) -> fun (V5872) -> fun (V5873) -> fun (V5874) -> fun (V5875) -> fun (V5876) -> fun (V5877) -> ('dn--un--unifyD_Unify_Closure'(V5869, V5870, V5871, V5872, V5873, V5874, V5875, V5876, V5877)) end end end end end end end end end, fun (V5878) -> fun (V5879) -> fun (V5880) -> fun (V5881) -> fun (V5882) -> fun (V5883) -> fun (V5884) -> fun (V5885) -> fun (V5886) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5878, V5879, V5880, V5881, V5882, V5883, V5884, V5885, V5886)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V5887) -> fun (V5888) -> fun (V5889) -> fun (V5890) -> fun (V5891) -> fun (V5892) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5887, V5888, V5889, V5890, V5891, V5892)) end end end end end end, fun (V5893) -> fun (V5894) -> fun (V5895) -> fun (V5896) -> fun (V5897) -> fun (V5898) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5893, V5894, V5895, V5896, V5897, V5898)) end end end end end end, fun (V5899) -> fun (V5900) -> fun (V5901) -> fun (V5902) -> fun (V5903) -> fun (V5904) -> fun (V5905) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5899, V5900, V5901, V5902, V5903, V5904, V5905)) end end end end end end end, fun (V5906) -> fun (V5907) -> fun (V5908) -> fun (V5909) -> fun (V5910) -> fun (V5911) -> fun (V5912) -> fun (V5913) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5906, V5907, V5908, V5909, V5910, V5911, V5912, V5913)) end end end end end end end end}}, V2, V0, V1, V5866, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5914) -> ('Idris.Idris2.Builtin':'un--snd'(V5914)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5915) -> ('Idris.Idris2.Builtin':'un--snd'(V5915)) end, V11)))); 0 -> ('un--unifyApp'(V0, V1, V2, 0, V5866, V4, V5, V6, V5867, V8, {'Idris.Core.Value.NApp', V9, V5868, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E4, E5)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E2, E3)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; 2 -> case V7 of {'Idris.Core.Value.NRef', E6, E7} -> (fun (V5916, V5917) -> case V10 of {'Idris.Core.Value.NRef', E8, E9} -> (fun (V5918, V5919) -> begin (V5920 = {'Idris.Core.Unify.MkUnifyInfo', V5860, 2}), begin (V5921 = {'Idris.Core.Value.NRef', V5916, V5917}), begin (V5922 = {'Idris.Core.Value.NRef', V5918, V5919}), case ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V5917, V5919)) of 1 -> fun (V5923) -> begin (V5947 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun (V5924) -> begin (V5926 = begin (V5925 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V5925} end), case V5926 of {'Idris.Prelude.Types.Left', E10} -> (fun (V5927) -> {'Idris.Prelude.Types.Left', V5927} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V5928) -> begin (V5932 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5929) -> fun (V5930) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V5928, V5, V5929, V5930)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5931) -> ('Idris.Idris2.Builtin':'un--snd'(V5931)) end, V8)), [], V5924))), case V5932 of {'Idris.Prelude.Types.Left', E12} -> (fun (V5933) -> {'Idris.Prelude.Types.Left', V5933} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V5934) -> begin (V5938 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V5935) -> fun (V5936) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V0, V2, V5928, V5, V5935, V5936)) end end, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5937) -> ('Idris.Idris2.Builtin':'un--snd'(V5937)) end, V11)), [], V5924))), case V5938 of {'Idris.Prelude.Types.Left', E14} -> (fun (V5939) -> {'Idris.Prelude.Types.Left', V5939} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V5940) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Matching args "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V5941) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V5941)) end, fun (V5942) -> fun (V5943) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V5942, V5943)) end end}, V5934)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V5944) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V2, V5944)) end, fun (V5945) -> fun (V5946) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Term $vars)'(V2, V5945, V5946)) end end}, V5940))))))))} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V5923))), case V5947 of {'Idris.Prelude.Types.Left', E16} -> (fun (V5948) -> {'Idris.Prelude.Types.Left', V5948} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V5949) -> (('un--unifyArgs'({'Idris.Builtin.MkPair', {'Idris.Core.Unify.dn--un--__mkUnify', fun (V5950) -> fun (V5951) -> fun (V5952) -> fun (V5953) -> fun (V5954) -> fun (V5955) -> fun (V5956) -> fun (V5957) -> fun (V5958) -> ('dn--un--unifyD_Unify_Closure'(V5950, V5951, V5952, V5953, V5954, V5955, V5956, V5957, V5958)) end end end end end end end end end, fun (V5959) -> fun (V5960) -> fun (V5961) -> fun (V5962) -> fun (V5963) -> fun (V5964) -> fun (V5965) -> fun (V5966) -> fun (V5967) -> ('dn--un--unifyWithLazyD_Unify_Closure'(V5959, V5960, V5961, V5962, V5963, V5964, V5965, V5966, V5967)) end end end end end end end end end}, {'Idris.Core.Normalise.Quote.dn--un--__mkQuote', fun (V5968) -> fun (V5969) -> fun (V5970) -> fun (V5971) -> fun (V5972) -> fun (V5973) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_Closure'(V5968, V5969, V5970, V5971, V5972, V5973)) end end end end end end, fun (V5974) -> fun (V5975) -> fun (V5976) -> fun (V5977) -> fun (V5978) -> fun (V5979) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteLHS_Quote_Closure'(V5974, V5975, V5976, V5977, V5978, V5979)) end end end end end end, fun (V5980) -> fun (V5981) -> fun (V5982) -> fun (V5983) -> fun (V5984) -> fun (V5985) -> fun (V5986) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteOpts_Quote_Closure'(V5980, V5981, V5982, V5983, V5984, V5985, V5986)) end end end end end end end, fun (V5987) -> fun (V5988) -> fun (V5989) -> fun (V5990) -> fun (V5991) -> fun (V5992) -> fun (V5993) -> fun (V5994) -> ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quoteGen_Quote_Closure'(V5987, V5988, V5989, V5990, V5991, V5992, V5993, V5994)) end end end end end end end end}}, V2, V0, V1, V5920, V4, V5, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5995) -> ('Idris.Idris2.Builtin':'un--snd'(V5995)) end, V8)), ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V5996) -> ('Idris.Idris2.Builtin':'un--snd'(V5996)) end, V11))))(V5923)) end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; 0 -> ('un--unifyApp'(V0, V1, V2, 0, V5920, V4, V5, V6, V5921, V8, {'Idris.Core.Value.NApp', V9, V5922, V11})); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E8, E9)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E6, E7)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end; _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end(E0, E1)); _ -> ('un--unifyApp'(V0, V1, V2, 0, V3, V4, V5, V6, V7, V8, {'Idris.Core.Value.NApp', V9, V10, V11})) end end end end end.
'un--unifyArgs'(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> case V7 of [] -> fun (V9) -> case V8 of [] -> {'Idris.Prelude.Types.Right', ('un--success'())}; _ -> ('un--ufail'(V5, <<""/utf8>>, V9)) end end; [E0 | E1] -> (fun (V10, V11) -> fun (V12) -> case V8 of [E2 | E3] -> (fun (V13, V14) -> begin (V15 = (('un--unifyArgs'(V0, V1, V2, V3, V4, V5, V6, V11, V14))(V12))), case V15 of {'Idris.Prelude.Types.Left', E4} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V17) -> begin (V18 = (((('un--unify'(('Idris.Idris2.Builtin':'un--fst'(V0)), V1, V2, V3, ('un--lower'(V4)), V5, V6))(V10))(V13))(V12))), case V18 of {'Idris.Prelude.Types.Left', E6} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V20) -> {'Idris.Prelude.Types.Right', ('un--union'(V20, V17))} end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('un--ufail'(V5, <<""/utf8>>, V12)) end end end(E0, E1)); _ -> fun (V21) -> ('un--ufail'(V5, <<""/utf8>>, V21)) end end.
'un--unifyApp'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V8 of {'Idris.Core.Value.NMeta', E248, E249, E250} -> (fun (V11, V12, V13) -> fun (V14) -> ('un--unifyHole'(V0, V1, V2, V3, V4, V5, V6, V7, V11, V12, V13, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V15) -> ('Idris.Idris2.Builtin':'un--snd'(V15)) end, V9)), V10, V14)) end end(E248, E249, E250)); _ -> case V10 of {'Idris.Core.Value.NApp', E121, E122, E123} -> (fun (V16, V17, V18) -> case V17 of {'Idris.Core.Value.NMeta', E245, E246, E247} -> (fun (V19, V20, V21) -> fun (V22) -> ('un--unifyHole'(V0, V1, V2, V3, V4, V5, V6, V16, V19, V20, V21, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V23) -> ('Idris.Idris2.Builtin':'un--snd'(V23)) end, V18)), {'Idris.Core.Value.NApp', V7, V8, V9}, V22)) end end(E245, E246, E247)); _ -> case V8 of {'Idris.Core.Value.NRef', E132, E133} -> (fun (V24, V25) -> fun (V26) -> begin (V27 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Name against app, unifyIfEq"/utf8>> end, V26))), case V27 of {'Idris.Prelude.Types.Left', E134} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E134)); {'Idris.Prelude.Types.Right', E135} -> (fun (V29) -> case V3 of 1 -> ('un--unifyIfEq'(V0, V1, V2, 1, V5, V4, V6, V10, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NRef', V24, V25}, V9}, V26)); 0 -> ('un--unifyIfEq'(V0, V1, V2, 1, V5, V4, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NRef', V24, V25}, V9}, V10, V26)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E135)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E132, E133)); {'Idris.Core.Value.NLocal', E136, E137} -> (fun (V30, V31) -> case V9 of [] -> case V10 of {'Idris.Core.Value.NApp', E188, E189, E190} -> (fun (V32, V33, V34) -> case V33 of {'Idris.Core.Value.NLocal', E216, E217} -> (fun (V35, V36) -> case V34 of [] -> fun (V37) -> begin (V39 = begin (V38 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V38} end), case V39 of {'Idris.Prelude.Types.Left', E243} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E243)); {'Idris.Prelude.Types.Right', E244} -> (fun (V41) -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V31, V36)) of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing var"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, []}, {'Idris.Core.Value.NApp', V32, {'Idris.Core.Value.NLocal', V35, V36}, []}, V37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E244)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> case V10 of {'Idris.Core.Value.NBind', E226, E227, E228, E229} -> (fun (V42, V43, V44, V45) -> fun (V46) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V46)) end end(E226, E227, E228, E229)); {'Idris.Core.Value.NDCon', E230, E231, E232, E233, E234} -> (fun (V47, V48, V49, V50, V51) -> fun (V52) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V52)) end end(E230, E231, E232, E233, E234)); {'Idris.Core.Value.NTCon', E235, E236, E237, E238, E239} -> (fun (V53, V54, V55, V56, V57) -> fun (V58) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V58)) end end(E235, E236, E237, E238, E239)); {'Idris.Core.Value.NPrimVal', E240, E241} -> (fun (V59, V60) -> fun (V61) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V61)) end end(E240, E241)); {'Idris.Core.Value.NType', E242} -> (fun (V62) -> fun (V63) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V63)) end end(E242)); _ -> fun (V64) -> case V3 of 0 -> begin (V66 = begin (V65 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V65} end), case V66 of {'Idris.Prelude.Types.Left', E218} -> (fun (V67) -> {'Idris.Prelude.Types.Left', V67} end(E218)); {'Idris.Prelude.Types.Right', E219} -> (fun (V68) -> begin (V69 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V68, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V64))), case V69 of {'Idris.Prelude.Types.Left', E220} -> (fun (V70) -> {'Idris.Prelude.Types.Left', V70} end(E220)); {'Idris.Prelude.Types.Right', E221} -> (fun (V71) -> case V71 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E221)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E219)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V73 = begin (V72 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V72} end), case V73 of {'Idris.Prelude.Types.Left', E222} -> (fun (V74) -> {'Idris.Prelude.Types.Left', V74} end(E222)); {'Idris.Prelude.Types.Right', E223} -> (fun (V75) -> begin (V76 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V75, V6, V10, {'Idris.Core.Value.NApp', V7, V8, V9}, V64))), case V76 of {'Idris.Prelude.Types.Left', E224} -> (fun (V77) -> {'Idris.Prelude.Types.Left', V77} end(E224)); {'Idris.Prelude.Types.Right', E225} -> (fun (V78) -> case V78 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V64)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E225)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E223)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E216, E217)); _ -> case V10 of {'Idris.Core.Value.NBind', E199, E200, E201, E202} -> (fun (V79, V80, V81, V82) -> fun (V83) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V83)) end end(E199, E200, E201, E202)); {'Idris.Core.Value.NDCon', E203, E204, E205, E206, E207} -> (fun (V84, V85, V86, V87, V88) -> fun (V89) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V89)) end end(E203, E204, E205, E206, E207)); {'Idris.Core.Value.NTCon', E208, E209, E210, E211, E212} -> (fun (V90, V91, V92, V93, V94) -> fun (V95) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V95)) end end(E208, E209, E210, E211, E212)); {'Idris.Core.Value.NPrimVal', E213, E214} -> (fun (V96, V97) -> fun (V98) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V98)) end end(E213, E214)); {'Idris.Core.Value.NType', E215} -> (fun (V99) -> fun (V100) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V100)) end end(E215)); _ -> fun (V101) -> case V3 of 0 -> begin (V103 = begin (V102 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V102} end), case V103 of {'Idris.Prelude.Types.Left', E191} -> (fun (V104) -> {'Idris.Prelude.Types.Left', V104} end(E191)); {'Idris.Prelude.Types.Right', E192} -> (fun (V105) -> begin (V106 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V105, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V101))), case V106 of {'Idris.Prelude.Types.Left', E193} -> (fun (V107) -> {'Idris.Prelude.Types.Left', V107} end(E193)); {'Idris.Prelude.Types.Right', E194} -> (fun (V108) -> case V108 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E194)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E192)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V110 = begin (V109 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V109} end), case V110 of {'Idris.Prelude.Types.Left', E195} -> (fun (V111) -> {'Idris.Prelude.Types.Left', V111} end(E195)); {'Idris.Prelude.Types.Right', E196} -> (fun (V112) -> begin (V113 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V112, V6, V10, {'Idris.Core.Value.NApp', V7, V8, V9}, V101))), case V113 of {'Idris.Prelude.Types.Left', E197} -> (fun (V114) -> {'Idris.Prelude.Types.Left', V114} end(E197)); {'Idris.Prelude.Types.Right', E198} -> (fun (V115) -> case V115 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E198)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E196)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E188, E189, E190)); _ -> case V10 of {'Idris.Core.Value.NBind', E171, E172, E173, E174} -> (fun (V116, V117, V118, V119) -> fun (V120) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V120)) end end(E171, E172, E173, E174)); {'Idris.Core.Value.NDCon', E175, E176, E177, E178, E179} -> (fun (V121, V122, V123, V124, V125) -> fun (V126) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V126)) end end(E175, E176, E177, E178, E179)); {'Idris.Core.Value.NTCon', E180, E181, E182, E183, E184} -> (fun (V127, V128, V129, V130, V131) -> fun (V132) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V132)) end end(E180, E181, E182, E183, E184)); {'Idris.Core.Value.NPrimVal', E185, E186} -> (fun (V133, V134) -> fun (V135) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V135)) end end(E185, E186)); {'Idris.Core.Value.NType', E187} -> (fun (V136) -> fun (V137) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V137)) end end(E187)); _ -> fun (V138) -> case V3 of 0 -> begin (V140 = begin (V139 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V139} end), case V140 of {'Idris.Prelude.Types.Left', E163} -> (fun (V141) -> {'Idris.Prelude.Types.Left', V141} end(E163)); {'Idris.Prelude.Types.Right', E164} -> (fun (V142) -> begin (V143 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V142, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V138))), case V143 of {'Idris.Prelude.Types.Left', E165} -> (fun (V144) -> {'Idris.Prelude.Types.Left', V144} end(E165)); {'Idris.Prelude.Types.Right', E166} -> (fun (V145) -> case V145 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E166)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E164)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V147 = begin (V146 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V146} end), case V147 of {'Idris.Prelude.Types.Left', E167} -> (fun (V148) -> {'Idris.Prelude.Types.Left', V148} end(E167)); {'Idris.Prelude.Types.Right', E168} -> (fun (V149) -> begin (V150 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V149, V6, V10, {'Idris.Core.Value.NApp', V7, V8, V9}, V138))), case V150 of {'Idris.Prelude.Types.Left', E169} -> (fun (V151) -> {'Idris.Prelude.Types.Left', V151} end(E169)); {'Idris.Prelude.Types.Right', E170} -> (fun (V152) -> case V152 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V138)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E170)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E168)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> case V10 of {'Idris.Core.Value.NBind', E146, E147, E148, E149} -> (fun (V153, V154, V155, V156) -> fun (V157) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V157)) end end(E146, E147, E148, E149)); {'Idris.Core.Value.NDCon', E150, E151, E152, E153, E154} -> (fun (V158, V159, V160, V161, V162) -> fun (V163) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V163)) end end(E150, E151, E152, E153, E154)); {'Idris.Core.Value.NTCon', E155, E156, E157, E158, E159} -> (fun (V164, V165, V166, V167, V168) -> fun (V169) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V169)) end end(E155, E156, E157, E158, E159)); {'Idris.Core.Value.NPrimVal', E160, E161} -> (fun (V170, V171) -> fun (V172) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V172)) end end(E160, E161)); {'Idris.Core.Value.NType', E162} -> (fun (V173) -> fun (V174) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V30, V31}, V9}, V10, V174)) end end(E162)); _ -> fun (V175) -> case V3 of 0 -> begin (V177 = begin (V176 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V176} end), case V177 of {'Idris.Prelude.Types.Left', E138} -> (fun (V178) -> {'Idris.Prelude.Types.Left', V178} end(E138)); {'Idris.Prelude.Types.Right', E139} -> (fun (V179) -> begin (V180 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V179, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V175))), case V180 of {'Idris.Prelude.Types.Left', E140} -> (fun (V181) -> {'Idris.Prelude.Types.Left', V181} end(E140)); {'Idris.Prelude.Types.Right', E141} -> (fun (V182) -> case V182 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V175)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E141)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E139)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V184 = begin (V183 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V183} end), case V184 of {'Idris.Prelude.Types.Left', E142} -> (fun (V185) -> {'Idris.Prelude.Types.Left', V185} end(E142)); {'Idris.Prelude.Types.Right', E143} -> (fun (V186) -> begin (V187 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V186, V6, V10, {'Idris.Core.Value.NApp', V7, V8, V9}, V175))), case V187 of {'Idris.Prelude.Types.Left', E144} -> (fun (V188) -> {'Idris.Prelude.Types.Left', V188} end(E144)); {'Idris.Prelude.Types.Right', E145} -> (fun (V189) -> case V189 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V175)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E145)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E143)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E136, E137)); _ -> fun (V190) -> case V3 of 0 -> begin (V192 = begin (V191 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V191} end), case V192 of {'Idris.Prelude.Types.Left', E124} -> (fun (V193) -> {'Idris.Prelude.Types.Left', V193} end(E124)); {'Idris.Prelude.Types.Right', E125} -> (fun (V194) -> begin (V195 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V194, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V190))), case V195 of {'Idris.Prelude.Types.Left', E126} -> (fun (V196) -> {'Idris.Prelude.Types.Left', V196} end(E126)); {'Idris.Prelude.Types.Right', E127} -> (fun (V197) -> case V197 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E127)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E125)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V199 = begin (V198 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V198} end), case V199 of {'Idris.Prelude.Types.Left', E128} -> (fun (V200) -> {'Idris.Prelude.Types.Left', V200} end(E128)); {'Idris.Prelude.Types.Right', E129} -> (fun (V201) -> begin (V202 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V201, V6, V10, {'Idris.Core.Value.NApp', V7, V8, V9}, V190))), case V202 of {'Idris.Prelude.Types.Left', E130} -> (fun (V203) -> {'Idris.Prelude.Types.Left', V203} end(E130)); {'Idris.Prelude.Types.Right', E131} -> (fun (V204) -> case V204 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V190)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E131)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E129)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E121, E122, E123)); _ -> case V8 of {'Idris.Core.Value.NRef', E8, E9} -> (fun (V205, V206) -> fun (V207) -> begin (V208 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.application"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Name against app, unifyIfEq"/utf8>> end, V207))), case V208 of {'Idris.Prelude.Types.Left', E10} -> (fun (V209) -> {'Idris.Prelude.Types.Left', V209} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V210) -> case V3 of 1 -> ('un--unifyIfEq'(V0, V1, V2, 1, V5, V4, V6, V10, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NRef', V205, V206}, V9}, V207)); 0 -> ('un--unifyIfEq'(V0, V1, V2, 1, V5, V4, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NRef', V205, V206}, V9}, V10, V207)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E8, E9)); {'Idris.Core.Value.NLocal', E12, E13} -> (fun (V211, V212) -> case V9 of [] -> case V10 of {'Idris.Core.Value.NApp', E64, E65, E66} -> (fun (V213, V214, V215) -> case V214 of {'Idris.Core.Value.NLocal', E92, E93} -> (fun (V216, V217) -> case V215 of [] -> fun (V218) -> begin (V220 = begin (V219 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V219} end), case V220 of {'Idris.Prelude.Types.Left', E119} -> (fun (V221) -> {'Idris.Prelude.Types.Left', V221} end(E119)); {'Idris.Prelude.Types.Right', E120} -> (fun (V222) -> case ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V212, V217)) of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Postponing var"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, []}, {'Idris.Core.Value.NApp', V213, {'Idris.Core.Value.NLocal', V216, V217}, []}, V218)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E120)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end; _ -> case V10 of {'Idris.Core.Value.NBind', E102, E103, E104, E105} -> (fun (V223, V224, V225, V226) -> fun (V227) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V227)) end end(E102, E103, E104, E105)); {'Idris.Core.Value.NDCon', E106, E107, E108, E109, E110} -> (fun (V228, V229, V230, V231, V232) -> fun (V233) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V233)) end end(E106, E107, E108, E109, E110)); {'Idris.Core.Value.NTCon', E111, E112, E113, E114, E115} -> (fun (V234, V235, V236, V237, V238) -> fun (V239) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V239)) end end(E111, E112, E113, E114, E115)); {'Idris.Core.Value.NPrimVal', E116, E117} -> (fun (V240, V241) -> fun (V242) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V242)) end end(E116, E117)); {'Idris.Core.Value.NType', E118} -> (fun (V243) -> fun (V244) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V244)) end end(E118)); _ -> fun (V245) -> case V3 of 0 -> begin (V247 = begin (V246 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V246} end), case V247 of {'Idris.Prelude.Types.Left', E94} -> (fun (V248) -> {'Idris.Prelude.Types.Left', V248} end(E94)); {'Idris.Prelude.Types.Right', E95} -> (fun (V249) -> begin (V250 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V249, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V245))), case V250 of {'Idris.Prelude.Types.Left', E96} -> (fun (V251) -> {'Idris.Prelude.Types.Left', V251} end(E96)); {'Idris.Prelude.Types.Right', E97} -> (fun (V252) -> case V252 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V245)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E97)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E95)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V254 = begin (V253 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V253} end), case V254 of {'Idris.Prelude.Types.Left', E98} -> (fun (V255) -> {'Idris.Prelude.Types.Left', V255} end(E98)); {'Idris.Prelude.Types.Right', E99} -> (fun (V256) -> begin (V257 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V256, V6, V10, {'Idris.Core.Value.NApp', V7, V8, V9}, V245))), case V257 of {'Idris.Prelude.Types.Left', E100} -> (fun (V258) -> {'Idris.Prelude.Types.Left', V258} end(E100)); {'Idris.Prelude.Types.Right', E101} -> (fun (V259) -> case V259 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V245)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E101)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E99)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E92, E93)); _ -> case V10 of {'Idris.Core.Value.NBind', E75, E76, E77, E78} -> (fun (V260, V261, V262, V263) -> fun (V264) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V264)) end end(E75, E76, E77, E78)); {'Idris.Core.Value.NDCon', E79, E80, E81, E82, E83} -> (fun (V265, V266, V267, V268, V269) -> fun (V270) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V270)) end end(E79, E80, E81, E82, E83)); {'Idris.Core.Value.NTCon', E84, E85, E86, E87, E88} -> (fun (V271, V272, V273, V274, V275) -> fun (V276) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V276)) end end(E84, E85, E86, E87, E88)); {'Idris.Core.Value.NPrimVal', E89, E90} -> (fun (V277, V278) -> fun (V279) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V279)) end end(E89, E90)); {'Idris.Core.Value.NType', E91} -> (fun (V280) -> fun (V281) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V281)) end end(E91)); _ -> fun (V282) -> case V3 of 0 -> begin (V284 = begin (V283 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V283} end), case V284 of {'Idris.Prelude.Types.Left', E67} -> (fun (V285) -> {'Idris.Prelude.Types.Left', V285} end(E67)); {'Idris.Prelude.Types.Right', E68} -> (fun (V286) -> begin (V287 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V286, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V282))), case V287 of {'Idris.Prelude.Types.Left', E69} -> (fun (V288) -> {'Idris.Prelude.Types.Left', V288} end(E69)); {'Idris.Prelude.Types.Right', E70} -> (fun (V289) -> case V289 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V282)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E70)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E68)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V291 = begin (V290 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V290} end), case V291 of {'Idris.Prelude.Types.Left', E71} -> (fun (V292) -> {'Idris.Prelude.Types.Left', V292} end(E71)); {'Idris.Prelude.Types.Right', E72} -> (fun (V293) -> begin (V294 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V293, V6, V10, {'Idris.Core.Value.NApp', V7, V8, V9}, V282))), case V294 of {'Idris.Prelude.Types.Left', E73} -> (fun (V295) -> {'Idris.Prelude.Types.Left', V295} end(E73)); {'Idris.Prelude.Types.Right', E74} -> (fun (V296) -> case V296 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V282)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E74)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E72)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E64, E65, E66)); _ -> case V10 of {'Idris.Core.Value.NBind', E47, E48, E49, E50} -> (fun (V297, V298, V299, V300) -> fun (V301) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V301)) end end(E47, E48, E49, E50)); {'Idris.Core.Value.NDCon', E51, E52, E53, E54, E55} -> (fun (V302, V303, V304, V305, V306) -> fun (V307) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V307)) end end(E51, E52, E53, E54, E55)); {'Idris.Core.Value.NTCon', E56, E57, E58, E59, E60} -> (fun (V308, V309, V310, V311, V312) -> fun (V313) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V313)) end end(E56, E57, E58, E59, E60)); {'Idris.Core.Value.NPrimVal', E61, E62} -> (fun (V314, V315) -> fun (V316) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V316)) end end(E61, E62)); {'Idris.Core.Value.NType', E63} -> (fun (V317) -> fun (V318) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V318)) end end(E63)); _ -> fun (V319) -> case V3 of 0 -> begin (V321 = begin (V320 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V320} end), case V321 of {'Idris.Prelude.Types.Left', E39} -> (fun (V322) -> {'Idris.Prelude.Types.Left', V322} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V323) -> begin (V324 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V323, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V319))), case V324 of {'Idris.Prelude.Types.Left', E41} -> (fun (V325) -> {'Idris.Prelude.Types.Left', V325} end(E41)); {'Idris.Prelude.Types.Right', E42} -> (fun (V326) -> case V326 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V319)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E42)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V328 = begin (V327 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V327} end), case V328 of {'Idris.Prelude.Types.Left', E43} -> (fun (V329) -> {'Idris.Prelude.Types.Left', V329} end(E43)); {'Idris.Prelude.Types.Right', E44} -> (fun (V330) -> begin (V331 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V330, V6, V10, {'Idris.Core.Value.NApp', V7, V8, V9}, V319))), case V331 of {'Idris.Prelude.Types.Left', E45} -> (fun (V332) -> {'Idris.Prelude.Types.Left', V332} end(E45)); {'Idris.Prelude.Types.Right', E46} -> (fun (V333) -> case V333 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V319)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E46)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E44)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end; _ -> case V10 of {'Idris.Core.Value.NBind', E22, E23, E24, E25} -> (fun (V334, V335, V336, V337) -> fun (V338) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V338)) end end(E22, E23, E24, E25)); {'Idris.Core.Value.NDCon', E26, E27, E28, E29, E30} -> (fun (V339, V340, V341, V342, V343) -> fun (V344) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V344)) end end(E26, E27, E28, E29, E30)); {'Idris.Core.Value.NTCon', E31, E32, E33, E34, E35} -> (fun (V345, V346, V347, V348, V349) -> fun (V350) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V350)) end end(E31, E32, E33, E34, E35)); {'Idris.Core.Value.NPrimVal', E36, E37} -> (fun (V351, V352) -> fun (V353) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V353)) end end(E36, E37)); {'Idris.Core.Value.NType', E38} -> (fun (V354) -> fun (V355) -> ('un--convertErrorS'(V2, V0, V3, V5, V6, {'Idris.Core.Value.NApp', V7, {'Idris.Core.Value.NLocal', V211, V212}, V9}, V10, V355)) end end(E38)); _ -> fun (V356) -> case V3 of 0 -> begin (V358 = begin (V357 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V357} end), case V358 of {'Idris.Prelude.Types.Left', E14} -> (fun (V359) -> {'Idris.Prelude.Types.Left', V359} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V360) -> begin (V361 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V360, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V356))), case V361 of {'Idris.Prelude.Types.Left', E16} -> (fun (V362) -> {'Idris.Prelude.Types.Left', V362} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V363) -> case V363 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V356)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V365 = begin (V364 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V364} end), case V365 of {'Idris.Prelude.Types.Left', E18} -> (fun (V366) -> {'Idris.Prelude.Types.Left', V366} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V367) -> begin (V368 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V367, V6, V10, {'Idris.Core.Value.NApp', V7, V8, V9}, V356))), case V368 of {'Idris.Prelude.Types.Left', E20} -> (fun (V369) -> {'Idris.Prelude.Types.Left', V369} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V370) -> case V370 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V356)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E12, E13)); _ -> fun (V371) -> case V3 of 0 -> begin (V373 = begin (V372 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V372} end), case V373 of {'Idris.Prelude.Types.Left', E0} -> (fun (V374) -> {'Idris.Prelude.Types.Left', V374} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V375) -> begin (V376 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V375, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V371))), case V376 of {'Idris.Prelude.Types.Left', E2} -> (fun (V377) -> {'Idris.Prelude.Types.Left', V377} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V378) -> case V378 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 0, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V371)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; 1 -> begin (V380 = begin (V379 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V379} end), case V380 of {'Idris.Prelude.Types.Left', E4} -> (fun (V381) -> {'Idris.Prelude.Types.Left', V381} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V382) -> begin (V383 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V382, V6, V10, {'Idris.Core.Value.NApp', V7, V8, V9}, V371))), case V383 of {'Idris.Prelude.Types.Left', E6} -> (fun (V384) -> {'Idris.Prelude.Types.Left', V384} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V385) -> case V385 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, 1, V5, V4, <<"Postponing constraint"/utf8>>, V6, {'Idris.Core.Value.NApp', V7, V8, V9}, V10, V371)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end.
'un--unify'(V0, V1, V2, V3, V4, V5, V6) -> case V0 of {'Idris.Core.Unify.dn--un--__mkUnify', E0, E1} -> (fun (V7, V8) -> fun (V9) -> fun (V10) -> ((((((((V7(V1))(V2))(V3))(V4))(V5))(V6))(V9))(V10)) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--ufail'(V0, V1, V2) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V0, V1}, V2)).
'un--tryInstantiate'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14) -> begin (V18 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'(V3, V0, <<"unify.instantiate"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Instantiating in "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V15) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V15)) end, fun (V16) -> fun (V17) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V16, V17)) end end}, V3)))) end, V13, V14))), case V18 of {'Idris.Prelude.Types.Left', E0} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V20) -> begin (V43 = case V10 of {'Idris.Core.Context.Context.MkGlobalDef', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21} -> (fun (V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40) -> case V22 of {'Idris.Core.Name.PV', E22, E23} -> (fun (V41, V42) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.PatternVariableUnifies', V2, V4, V6, {'Idris.Core.Name.PV', V41, V42}, V12}, V14)) end(E22, E23)); _ -> {'Idris.Prelude.Types.Right', 0} end end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V43 of {'Idris.Prelude.Types.Left', E24} -> (fun (V44) -> {'Idris.Prelude.Types.Left', V44} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V45) -> begin (V47 = begin (V46 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V46} end), case V47 of {'Idris.Prelude.Types.Left', E26} -> (fun (V48) -> {'Idris.Prelude.Types.Left', V48} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V49) -> begin (V70 = ('Idris.Idris2.Core.Normalise':'un--normalisePis'(V0, [], V49, {'Idris.Core.Env.Nil'}, case V10 of {'Idris.Core.Context.Context.MkGlobalDef', E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47} -> (fun (V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69) -> V52 end(E28, E29, E30, E31, E32, E33, E34, E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V14))), case V70 of {'Idris.Prelude.Types.Left', E48} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E48)); {'Idris.Prelude.Types.Right', E49} -> (fun (V72) -> begin (V93 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V0, <<"unify.instantiate"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Type: "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7)))) end, case V10 of {'Idris.Core.Context.Context.MkGlobalDef', E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69} -> (fun (V73, V74, V75, V76, V77, V78, V79, V80, V81, V82, V83, V84, V85, V86, V87, V88, V89, V90, V91, V92) -> V75 end(E50, E51, E52, E53, E54, E55, E56, E57, E58, E59, E60, E61, E62, E63, E64, E65, E66, E67, E68, E69)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V14))), case V93 of {'Idris.Prelude.Types.Left', E70} -> (fun (V94) -> {'Idris.Prelude.Types.Left', V94} end(E70)); {'Idris.Prelude.Types.Right', E71} -> (fun (V95) -> begin (V96 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V0, <<"unify.instantiate"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Type: "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7)))) end, V72, V14))), case V96 of {'Idris.Prelude.Types.Left', E72} -> (fun (V97) -> {'Idris.Prelude.Types.Left', V97} end(E72)); {'Idris.Prelude.Types.Right', E73} -> (fun (V98) -> begin (V102 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.instantiate"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"With locs: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V99) -> ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Var $ns)'(V99)) end, fun (V100) -> fun (V101) -> ('Idris.Idris2.Core.TT':'dn--un--showPrec_Show_(Var $ns)'(V100, V101)) end end}, V11)))) end, V14))), case V102 of {'Idris.Prelude.Types.Left', E74} -> (fun (V103) -> {'Idris.Prelude.Types.Left', V103} end(E74)); {'Idris.Prelude.Types.Right', E75} -> (fun (V104) -> begin (V108 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.instantiate"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"From vars: "/utf8>>, ('Idris.Idris2.Prelude.Show':'dn--un--show_Show_(List $a)'({'Idris.Prelude.Show.MkShow', fun (V105) -> ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V105)) end, fun (V106) -> fun (V107) -> ('Idris.Idris2.Core.Name':'dn--un--showPrec_Show_Name'(V106, V107)) end end}, V3)))) end, V14))), case V108 of {'Idris.Prelude.Types.Left', E76} -> (fun (V109) -> {'Idris.Prelude.Types.Left', V109} end(E76)); {'Idris.Prelude.Types.Right', E77} -> (fun (V110) -> begin (V112 = begin (V111 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V111} end), case V112 of {'Idris.Prelude.Types.Left', E78} -> (fun (V113) -> {'Idris.Prelude.Types.Left', V113} end(E78)); {'Idris.Prelude.Types.Right', E79} -> (fun (V114) -> begin (V115 = (('nested--9807-11612--in--un--mkDef'(V2, V3, V13, V12, V11, V10, V9, V8, V7, V6, V5, V4, V1, V0, [], V3, V11, {'Idris.Core.Unify.INil'}, V13, V72))(V14))), case V115 of {'Idris.Prelude.Types.Left', E80} -> (fun (V116) -> {'Idris.Prelude.Types.Left', V116} end(E80)); {'Idris.Prelude.Types.Right', E81} -> (fun (V117) -> case V117 of {'Idris.Prelude.Types.Just', E84} -> (fun (V118) -> begin (V119 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'([], V0, <<"unify.instantiate"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> <<"Definition"/utf8>> end, V118, V14))), case V119 of {'Idris.Prelude.Types.Left', E85} -> (fun (V120) -> {'Idris.Prelude.Types.Left', V120} end(E85)); {'Idris.Prelude.Types.Right', E86} -> (fun (V121) -> begin (V122 = {'Idris.Core.Context.Context.MkPMDefInfo', {'Idris.Core.Context.Context.SolvedHole', V9}, case ('Idris.Idris2.Core.Name':'un--isUserName'(V7)) of 1 -> 0; 0 -> ('nested--9807-11609--in--un--isSimple'(V2, V3, V13, V12, V11, V10, V9, V8, V7, V6, V5, V4, V1, V0, V118)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, 0}), begin (V143 = case V10 of {'Idris.Core.Context.Context.MkGlobalDef', E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106} -> (fun (V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, V140, V141, V142) -> {'Idris.Core.Context.Context.MkGlobalDef', V123, V124, V125, V126, V127, V128, V129, V130, V131, V132, V133, V134, V135, V136, V137, V138, V139, {'Idris.Core.Context.Context.PMDef', V122, [], {'Idris.Core.CaseTree.STerm', 0, V118}, {'Idris.Core.CaseTree.STerm', 0, V118}, []}, V141, V142} end(E87, E88, E89, E90, E91, E92, E93, E94, E95, E96, E97, E98, E99, E100, E101, E102, E103, E104, E105, E106)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), begin (V148 = ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V144) -> case V144 of {'Idris.Prelude.Types.Left', E107} -> (fun (V145) -> {'Idris.Prelude.Types.Left', V145} end(E107)); {'Idris.Prelude.Types.Right', E108} -> (fun (V146) -> {'Idris.Prelude.Types.Right', 0} end(E108)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V147) -> ('Idris.Idris2.Core.Context':'un--addDef'(V0, {'Idris.Core.Name.Resolved', V8}, V143, V147)) end, V14))), case V148 of {'Idris.Prelude.Types.Left', E109} -> (fun (V149) -> {'Idris.Prelude.Types.Left', V149} end(E109)); {'Idris.Prelude.Types.Right', E110} -> (fun (V150) -> begin (V151 = ('Idris.Idris2.Core.UnifyState':'un--removeHole'(V1, V8, V14))), case V151 of {'Idris.Prelude.Types.Left', E111} -> (fun (V152) -> {'Idris.Prelude.Types.Left', V152} end(E111)); {'Idris.Prelude.Types.Right', E112} -> (fun (V153) -> {'Idris.Prelude.Types.Right', 1} end(E112)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E110)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E86)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E84)); _ -> begin (V154 = ('Idris.Idris2.Core.Context.Log':'un--log'(V0, <<"unify.instantiate"/utf8>>, (1 + (1 + (1 + (1 + (1 + 0))))), fun () -> <<"Postponed"/utf8>> end, V14))), case V154 of {'Idris.Prelude.Types.Left', E82} -> (fun (V155) -> {'Idris.Prelude.Types.Left', V155} end(E82)); {'Idris.Prelude.Types.Right', E83} -> (fun (V156) -> {'Idris.Prelude.Types.Right', 0} end(E83)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E81)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E79)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E77)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E75)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E73)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E71)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E49)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--tooBig'(V0, V1, V2, V3) -> case V1 of 0 -> 1; _ -> case V3 of {'Idris.Core.TT.App', E8, E9, E10} -> (fun (V4, V5, V6) -> ('un--tooBig'(V0, V1, [V6 | V2], V5)) end(E8, E9, E10)); _ -> case V1 of 0 -> 0; _ -> begin (V7 = (V1 - 1)), case V3 of {'Idris.Core.TT.Bind', E0, E1, E2, E3} -> (fun (V8, V9, V10, V11) -> case ('un--tooBig'(V0, (1 + V7), [], V11)) of 1 -> 1; 0 -> ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V12) -> fun (V13) -> fun (V14) -> fun (V15) -> fun (V16) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V14, V15, V16)) end end end end end, fun (V17) -> fun (V18) -> fun (V19) -> fun (V20) -> fun (V21) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V19, V20, V21)) end end end end end, fun (V22) -> fun (V23) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V23)) end end, fun (V24) -> fun (V25) -> fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V27, V28, V29, V30)) end end end end end end end, fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V32)) end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V35, V36, V37)) end end end end end}, fun (V38) -> ('un--tooBig'(V0, V7, [], V38)) end, V2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1, E2, E3)); {'Idris.Core.TT.Meta', E4, E5, E6, E7} -> (fun (V39, V40, V41, V42) -> case ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> fun (V47) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V45, V46, V47)) end end end end end, fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V50, V51, V52)) end end end end end, fun (V53) -> fun (V54) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V54)) end end, fun (V55) -> fun (V56) -> fun (V57) -> fun (V58) -> fun (V59) -> fun (V60) -> fun (V61) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V58, V59, V60, V61)) end end end end end end end, fun (V62) -> fun (V63) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V63)) end end, fun (V64) -> fun (V65) -> fun (V66) -> fun (V67) -> fun (V68) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V66, V67, V68)) end end end end end}, fun (V69) -> ('un--tooBig'(V0, V7, [], V69)) end, V42)) of 1 -> 1; 0 -> ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V70) -> fun (V71) -> fun (V72) -> fun (V73) -> fun (V74) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V72, V73, V74)) end end end end end, fun (V75) -> fun (V76) -> fun (V77) -> fun (V78) -> fun (V79) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V77, V78, V79)) end end end end end, fun (V80) -> fun (V81) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V81)) end end, fun (V82) -> fun (V83) -> fun (V84) -> fun (V85) -> fun (V86) -> fun (V87) -> fun (V88) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V85, V86, V87, V88)) end end end end end end end, fun (V89) -> fun (V90) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V90)) end end, fun (V91) -> fun (V92) -> fun (V93) -> fun (V94) -> fun (V95) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V93, V94, V95)) end end end end end}, fun (V96) -> ('un--tooBig'(V0, V7, [], V96)) end, V2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E4, E5, E6, E7)); _ -> case case V0 of 1 -> 1; 0 -> ('nested--12355-13880--in--un--isFn'(V7, V3, V2, V0, V3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> ('nested--12355-13881--in--un--tooBigArgs'(V7, V3, V2, V0, 1, V7, V2)); 0 -> ('nested--12355-13881--in--un--tooBigArgs'(V7, V3, V2, V0, V0, (1 + V7), V2)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end end.
'un--toSubVars'(V0, V1) -> case V0 of [] -> {'Idris.Builtin.DPair.MkDPair', [], {'Idris.Core.TT.SubRefl'}}; [E0 | E1] -> (fun (V2, V3) -> case ('un--toSubVars'(V3, ('Idris.Idris2.Core.TT':'un--dropFirst'(V1)))) of {'Idris.Builtin.DPair.MkDPair', E2, E3} -> (fun (V4, V5) -> case ('nested--8539-10490--in--un--anyFirst'(V2, V3, V1, V1)) of 1 -> {'Idris.Builtin.DPair.MkDPair', [V2 | V4], {'Idris.Core.TT.KeepCons', V5}}; 0 -> {'Idris.Builtin.DPair.MkDPair', V4, {'Idris.Core.TT.DropCons', V5}}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--success'() -> {'Idris.Core.Unify.MkUnifyResult', [], 0, [], {'Idris.Core.Unify.NoLazy'}}.
'un--solvedHole'(V0) -> {'Idris.Core.Unify.MkUnifyResult', [], 1, [V0 | []], {'Idris.Core.Unify.NoLazy'}}.
'un--solveIfUndefined'(V0, V1, V2, V3, V4, V5, V6) -> case V4 of {'Idris.Core.TT.Meta', E0, E1, E2, E3} -> (fun (V7, V8, V9, V10) -> begin (V12 = begin (V11 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V11} end), case V12 of {'Idris.Prelude.Types.Left', E4} -> (fun (V13) -> {'Idris.Prelude.Types.Left', V13} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V14) -> begin (V45 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'({'Idris.Core.Name.Resolved', V9}, case V14 of {'Idris.Core.Context.MkDefs', E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35} -> (fun (V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44) -> V15 end(E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6))), case V45 of {'Idris.Prelude.Types.Left', E36} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V47) -> begin (V48 = {'Idris.Core.TT.Meta', V7, V8, V9, V10}), case V47 of {'Idris.Prelude.Types.Just', E38} -> (fun (V49) -> case V49 of {'Idris.Core.Context.Context.Hole', E39, E40} -> (fun (V50, V51) -> ('un--updateSolution'(V0, V1, V2, V3, V48, V5, V6)) end(E39, E40)); _ -> {'Idris.Prelude.Types.Right', 0} end end(E38)); _ -> {'Idris.Prelude.Types.Right', 0} end end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1, E2, E3)); _ -> {'Idris.Prelude.Types.Right', 0} end.
'un--solveHole'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15, V16) -> begin (V18 = begin (V17 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V17} end), case V18 of {'Idris.Prelude.Types.Left', E0} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V20) -> begin (V22 = begin (V21 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V21} end), case V22 of {'Idris.Prelude.Types.Left', E2} -> (fun (V23) -> {'Idris.Prelude.Types.Left', V23} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V24) -> begin (V25 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V20, V16))), case V25 of {'Idris.Prelude.Types.Left', E4} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V27) -> case case ('nested--12588-15581--in--un--solutionHeadSame'(V2, V3, V15, V14, V13, V12, V11, V10, V9, V8, V7, V6, V5, V4, V1, V0, V15)) of 1 -> 1; 0 -> ('nested--12588-15580--in--un--inNoSolve'(V2, V3, V15, V14, V13, V12, V11, V10, V9, V8, V7, V6, V5, V4, V1, V0, V8, case V24 of {'Idris.Core.UnifyState.MkUState', E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52} -> (fun (V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V33 end(E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end of 1 -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', ('un--success'())}}; 0 -> begin (V70 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'({'Idris.Core.Name.Resolved', V8}, case V20 of {'Idris.Core.Context.MkDefs', E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35} -> (fun (V40, V41, V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68, V69) -> V40 end(E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V16))), case V70 of {'Idris.Prelude.Types.Left', E36} -> (fun (V71) -> {'Idris.Prelude.Types.Left', V71} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V72) -> case V72 of {'Idris.Prelude.Types.Just', E38} -> (fun (V73) -> begin (V74 = ('un--tryInstantiate'(V0, V1, V3, V2, V4, V5, V6, V7, V8, ('Idris.Idris2.Prelude.Types.List':'un--length'(V9)), V73, V11, V13, V14, V16))), case V74 of {'Idris.Prelude.Types.Left', E39} -> (fun (V75) -> {'Idris.Prelude.Types.Left', V75} end(E39)); {'Idris.Prelude.Types.Right', E40} -> (fun (V76) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Data.Maybe':'un--toMaybe'(V76, fun () -> ('un--solvedHole'(V8)) end))} end(E40)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E38)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.InternalError', ('Idris.Idris2.Prelude.Types.String':'un--++'(<<"Can\x{27}t happen: Lost hole "/utf8>>, ('Idris.Idris2.Core.Name':'dn--un--show_Show_Name'(V7))))}, V16)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--solveConstraintsAfter'(V0, V1, V2, V3, V4, V5) -> begin (V7 = begin (V6 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V6} end), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> begin (V25 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V10) -> fun (V11) -> ('un--retryGuess'(V0, V1, V3, V4, V10, V11)) end end, ('Idris.Idris2.Data.List':'un--filter'(fun (V12) -> ('nested--24419-24544--in--un--afterStart'(V4, V3, V2, V1, V0, V12)) end, ('Idris.Idris2.Libraries.Data.IntMap':'un--toList'(case V9 of {'Idris.Core.UnifyState.MkUState', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24) -> V14 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)))), [], V5))), case V25 of {'Idris.Prelude.Types.Left', E14} -> (fun (V26) -> {'Idris.Prelude.Types.Left', V26} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V27) -> case ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V28) -> fun (V29) -> fun (V30) -> fun (V31) -> fun (V32) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V30, V31, V32)) end end end end end, fun (V33) -> fun (V34) -> fun (V35) -> fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V35, V36, V37)) end end end end end, fun (V38) -> fun (V39) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V39)) end end, fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> fun (V45) -> fun (V46) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V43, V44, V45, V46)) end end end end end end end, fun (V47) -> fun (V48) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V48)) end end, fun (V49) -> fun (V50) -> fun (V51) -> fun (V52) -> fun (V53) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V51, V52, V53)) end end end end end}, fun (V54) -> V54 end, V27)) of 1 -> ('un--solveConstraintsAfter'(V0, V1, V2, V3, 0, V5)); 0 -> {'Idris.Prelude.Types.Right', 0}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--solveConstraints'(V0, V1, V2, V3, V4) -> begin (V6 = begin (V5 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V5} end), case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V8) -> begin (V23 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V9) -> fun (V10) -> ('un--retryGuess'(V0, V1, V2, V3, V9, V10)) end end, ('Idris.Idris2.Libraries.Data.IntMap':'un--toList'(case V8 of {'Idris.Core.UnifyState.MkUState', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> V12 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), [], V4))), case V23 of {'Idris.Prelude.Types.Left', E14} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V25) -> case ('Idris.Idris2.Prelude.Interfaces':'un--any'({'Idris.Prelude.Interfaces.MkFoldable', fun (V26) -> fun (V27) -> fun (V28) -> fun (V29) -> fun (V30) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldr_Foldable_List'(V28, V29, V30)) end end end end end, fun (V31) -> fun (V32) -> fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldl_Foldable_List'(V33, V34, V35)) end end end end end, fun (V36) -> fun (V37) -> ('Idris.Idris2.Prelude.Types':'dn--un--null_Foldable_List'(V37)) end end, fun (V38) -> fun (V39) -> fun (V40) -> fun (V41) -> fun (V42) -> fun (V43) -> fun (V44) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldlM_Foldable_List'(V41, V42, V43, V44)) end end end end end end end, fun (V45) -> fun (V46) -> ('Idris.Idris2.Prelude.Types':'dn--un--toList_Foldable_List'(V46)) end end, fun (V47) -> fun (V48) -> fun (V49) -> fun (V50) -> fun (V51) -> ('Idris.Idris2.Prelude.Types':'dn--un--foldMap_Foldable_List'(V49, V50, V51)) end end end end end}, fun (V52) -> V52 end, V25)) of 1 -> ('un--solveConstraints'(V0, V1, V2, 0, V4)); 0 -> {'Idris.Prelude.Types.Right', 0}; _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--setInvertible'(V0, V1, V2, V3) -> begin (V5 = begin (V4 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4} end), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> begin (V38 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'(V2, case V7 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V8 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V3))), case V38 of {'Idris.Prelude.Types.Left', E32} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V40) -> case V40 of {'Idris.Prelude.Types.Just', E34} -> (fun (V41) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V42) -> case V42 of {'Idris.Prelude.Types.Left', E35} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E35)); {'Idris.Prelude.Types.Right', E36} -> (fun (V44) -> {'Idris.Prelude.Types.Right', 0} end(E36)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V45) -> ('Idris.Idris2.Core.Context':'un--addDef'(V0, V2, case V41 of {'Idris.Core.Context.Context.MkGlobalDef', E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56} -> (fun (V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65) -> {'Idris.Core.Context.Context.MkGlobalDef', V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, 1, V61, V62, V63, V64, V65} end(E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V45)) end, V3)) end(E34)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Context':'un--undefinedName'(V0, V1, V2, V3)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--retryGuess'(V0, V1, V2, V3, V4, V5) -> case V4 of {'Idris.Builtin.MkPair', E0, E1} -> (fun (V6, V7) -> case V7 of {'Idris.Builtin.MkPair', E2, E3} -> (fun (V8, V9) -> begin (V11 = begin (V10 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V10} end), case V11 of {'Idris.Prelude.Types.Left', E4} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V13) -> begin (V44 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'({'Idris.Core.Name.Resolved', V6}, case V13 of {'Idris.Core.Context.MkDefs', E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35} -> (fun (V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43) -> V14 end(E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V5))), case V44 of {'Idris.Prelude.Types.Left', E36} -> (fun (V45) -> {'Idris.Prelude.Types.Left', V45} end(E36)); {'Idris.Prelude.Types.Right', E37} -> (fun (V46) -> case V46 of {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', 0} end()); {'Idris.Prelude.Types.Just', E38} -> (fun (V47) -> begin (V48 = {'Idris.Prelude.Types.Just', V47}), (('case--case block in retryGuess-23155'(V6, V8, V9, V3, V2, V1, V0, V13, V47, V48, case V47 of {'Idris.Core.Context.Context.MkGlobalDef', E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58} -> (fun (V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61, V62, V63, V64, V65, V66, V67, V68) -> V66 end(E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54, E55, E56, E57, E58)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V5)) end end(E38)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E2, E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--retry'(V0, V1, V2, V3, V4) -> begin (V6 = begin (V5 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V5} end), case V6 of {'Idris.Prelude.Types.Left', E0} -> (fun (V7) -> {'Idris.Prelude.Types.Left', V7} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V8) -> ('case--retry-22527'(V0, V3, V2, V1, V8, ('Idris.Idris2.Libraries.Data.IntMap':'un--lookup'(V3, case V8 of {'Idris.Core.UnifyState.MkUState', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> V13 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V4)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--recoverable'(V0) -> case V0 of {'Idris.Core.Core.UndefinedName', E0, E1} -> (fun (V1, V2) -> 0 end(E0, E1)); {'Idris.Core.Core.InType', E2, E3, E4} -> (fun (V3, V4, V5) -> ('un--recoverable'(V5)) end(E2, E3, E4)); {'Idris.Core.Core.InCon', E5, E6, E7} -> (fun (V6, V7, V8) -> ('un--recoverable'(V8)) end(E5, E6, E7)); {'Idris.Core.Core.InLHS', E8, E9, E10} -> (fun (V9, V10, V11) -> ('un--recoverable'(V11)) end(E8, E9, E10)); {'Idris.Core.Core.InRHS', E11, E12, E13} -> (fun (V12, V13, V14) -> ('un--recoverable'(V14)) end(E11, E12, E13)); {'Idris.Core.Core.WhenUnifying', E14, E15, E16, E17, E18, E19, E20} -> (fun (V15, V16, V17, V18, V19, V20, V21) -> ('un--recoverable'(V21)) end(E14, E15, E16, E17, E18, E19, E20)); _ -> 1 end.
'un--postponeS'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10) -> case V3 of 1 -> ('un--postpone'(V0, V1, V2, V4, ('un--lower'(V5)), V6, V7, V9, V8, V10)); 0 -> ('un--postpone'(V0, V1, V2, V4, V5, V6, V7, V8, V9, V10)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--postponePatVar'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9, V10, V11) -> begin (V13 = {'Idris.Core.Value.NApp', V5, {'Idris.Core.Value.NMeta', V7, V8, V9}, ('Idris.Idris2.Prelude.Types':'dn--un--map_Functor_List'(fun (V12) -> {'Idris.Builtin.MkPair', {'Idris.Core.FC.EmptyFC'}, V12} end, V10))}), fun (V14) -> begin (V16 = begin (V15 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V15} end), case V16 of {'Idris.Prelude.Types.Left', E0} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V18) -> begin (V19 = ('Idris.Idris2.Core.Normalise.Convert':'dn--un--convert_Convert_NF'(V0, V2, V18, V6, V13, V11, V14))), case V19 of {'Idris.Prelude.Types.Left', E2} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V21) -> case V21 of 1 -> {'Idris.Prelude.Types.Right', ('un--success'())}; 0 -> ('un--postponeS'(V2, V0, V1, V3, V5, V4, <<"Not in pattern fragment"/utf8>>, V6, V13, V11, V14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--postpone'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> begin (V11 = begin (V10 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V10} end), case V11 of {'Idris.Prelude.Types.Left', E0} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V13) -> begin (V14 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V13, V9))), case V14 of {'Idris.Prelude.Types.Left', E2} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V16) -> begin (V42 = ('Idris.Idris2.Core.Context.Log':'un--unverifiedLogC'(V1, <<"unify.postpone"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun (V17) -> begin (V18 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V13, V6, V7, V17))), case V18 of {'Idris.Prelude.Types.Left', E4} -> (fun (V19) -> {'Idris.Prelude.Types.Left', V19} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V20) -> begin (V21 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V13, V6, V8, V17))), case V21 of {'Idris.Prelude.Types.Left', E6} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V23) -> begin (V30 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V1, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V24) -> fun (V25) -> fun (V26) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V24, V25, V26)) end end end, fun (V27) -> fun (V28) -> fun (V29) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V27, V28, V29)) end end end}, V20, V17))), case V30 of {'Idris.Prelude.Types.Left', E8} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V32) -> begin (V39 = ('Idris.Idris2.Core.Context':'un--toFullNames'(V1, {'Idris.Core.Context.dn--un--__mkHasNames', fun (V33) -> fun (V34) -> fun (V35) -> ('Idris.Idris2.Core.Context':'dn--un--full_HasNames_(Term $vars)'(V33, V34, V35)) end end end, fun (V36) -> fun (V37) -> fun (V38) -> ('Idris.Idris2.Core.Context':'dn--un--resolved_HasNames_(Term $vars)'(V36, V37, V38)) end end end}, V23, V17))), case V39 of {'Idris.Prelude.Types.Left', E10} -> (fun (V40) -> {'Idris.Prelude.Types.Left', V40} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V41) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Prelude.Types.String':'un--++'(V5, ('Idris.Idris2.Prelude.Types.String':'un--++'(<<": "/utf8>>, ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V0, V32)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" =?= "/utf8>>, ('Idris.Idris2.Core.TT':'dn--un--show_Show_(Term $vars)'(V0, V41))))))))))} end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end, V9))), case V42 of {'Idris.Prelude.Types.Left', E12} -> (fun (V43) -> {'Idris.Prelude.Types.Left', V43} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V44) -> begin (V45 = ('nested--7850-9855--in--un--checkDefined'(V0, V8, V7, V6, V5, V4, V3, V2, V1, V13, V7, V9))), case V45 of {'Idris.Prelude.Types.Left', E14} -> (fun (V46) -> {'Idris.Prelude.Types.Left', V46} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V47) -> begin (V48 = ('nested--7850-9855--in--un--checkDefined'(V0, V8, V7, V6, V5, V4, V3, V2, V1, V13, V8, V9))), case V48 of {'Idris.Prelude.Types.Left', E16} -> (fun (V49) -> {'Idris.Prelude.Types.Left', V49} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V50) -> begin (V53 = ('Idris.Idris2.Core.UnifyState':'un--addConstraint'(V2, V1, {'Idris.Core.UnifyState.MkConstraint', V0, V3, case V4 of {'Idris.Core.Unify.MkUnifyInfo', E18, E19} -> (fun (V51, V52) -> V51 end(E18, E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V6, V7, V8}, V9))), case V53 of {'Idris.Prelude.Types.Left', E20} -> (fun (V54) -> {'Idris.Prelude.Types.Left', V54} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V55) -> begin (V56 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"unify.postpone"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> ('Idris.Idris2.Prelude.Types.String':'un--++'(('Idris.Idris2.Prelude.Show':'dn--un--show_Show_Int'(V55)), ('Idris.Idris2.Prelude.Types.String':'un--++'(<<" NEW CONSTRAINT "/utf8>>, ('Idris.Idris2.Core.FC':'dn--un--show_Show_FC'(V3)))))) end, V9))), case V56 of {'Idris.Prelude.Types.Left', E22} -> (fun (V57) -> {'Idris.Prelude.Types.Left', V57} end(E22)); {'Idris.Prelude.Types.Right', E23} -> (fun (V58) -> begin (V59 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify.postpone"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"X"/utf8>> end, V6, V7, V9))), case V59 of {'Idris.Prelude.Types.Left', E24} -> (fun (V60) -> {'Idris.Prelude.Types.Left', V60} end(E24)); {'Idris.Prelude.Types.Right', E25} -> (fun (V61) -> begin (V62 = ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify.postpone"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Y"/utf8>> end, V6, V8, V9))), case V62 of {'Idris.Prelude.Types.Left', E26} -> (fun (V63) -> {'Idris.Prelude.Types.Left', V63} end(E26)); {'Idris.Prelude.Types.Right', E27} -> (fun (V64) -> {'Idris.Prelude.Types.Right', ('un--constrain'(V55))} end(E27)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E25)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E23)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--patternEnvTm'(V0, V1, V2, V3, V4, V5) -> begin (V7 = begin (V6 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6} end), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> begin (V10 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V9, V5))), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> {'Idris.Prelude.Types.Right', ('case--patternEnvTm-10977'(V2, V4, V3, V1, V0, V9, V12, ('un--getVarsTm'([], V4))))} end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--patternEnv'(V0, V1, V2, V3, V4, V5) -> begin (V7 = begin (V6 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V6} end), case V7 of {'Idris.Prelude.Types.Left', E0} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V9) -> begin (V10 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V9, V5))), case V10 of {'Idris.Prelude.Types.Left', E2} -> (fun (V11) -> {'Idris.Prelude.Types.Left', V11} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V12) -> begin (V14 = ('Idris.Idris2.Core.Core':'un--traverse\x{27}'(fun (V13) -> ('Idris.Idris2.Core.Normalise.Eval':'un--evalArg'(V0, V2, V12, V13)) end, V4, [], V5))), case V14 of {'Idris.Prelude.Types.Left', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V16) -> {'Idris.Prelude.Types.Right', ('case--patternEnv-10702'(V2, V4, V3, V1, V0, V9, V12, V16, ('un--getVars'(V2, [], V16))))} end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--occursCheck'(V0, V1, V2, V3, V4, V5, V6, V7) -> begin (V8 = (('un--getMetaNames'(V1, V6))(V7))), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> ('case--occursCheck-11279'(V0, V6, V5, V4, V3, V2, V1, V10, ('Idris.Idris2.Prelude.Types':'un--elem'({'Idris.Prelude.EqOrd.MkEq', fun (V11) -> fun (V12) -> ('Idris.Idris2.Core.Name':'dn--un--==_Eq_Name'(V11, V12)) end end, fun (V13) -> fun (V14) -> ('Idris.Idris2.Core.Name':'dn--un--/=_Eq_Name'(V13, V14)) end end}, V5, V10)), V7)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--lower'(V0) -> case V0 of {'Idris.Core.Unify.MkUnifyInfo', E0, E1} -> (fun (V1, V2) -> {'Idris.Core.Unify.MkUnifyInfo', 0, V2} end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--isHoleApp'(V0) -> case V0 of {'Idris.Core.Value.NApp', E0, E1, E2} -> (fun (V1, V2, V3) -> case V2 of {'Idris.Core.Value.NMeta', E3, E4, E5} -> (fun (V4, V5, V6) -> 1 end(E3, E4, E5)); _ -> 0 end end(E0, E1, E2)); _ -> 0 end.
'un--isDefInvertible'(V0, V1, V2, V3) -> begin (V5 = begin (V4 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V4} end), case V5 of {'Idris.Prelude.Types.Left', E0} -> (fun (V6) -> {'Idris.Prelude.Types.Left', V6} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V7) -> begin (V38 = (('Idris.Idris2.Core.Context':'un--lookupCtxtExact'({'Idris.Core.Name.Resolved', V2}, case V7 of {'Idris.Core.Context.MkDefs', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31} -> (fun (V8, V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37) -> V8 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))(V3))), case V38 of {'Idris.Prelude.Types.Left', E32} -> (fun (V39) -> {'Idris.Prelude.Types.Left', V39} end(E32)); {'Idris.Prelude.Types.Right', E33} -> (fun (V40) -> case V40 of {'Idris.Prelude.Types.Just', E34} -> (fun (V41) -> {'Idris.Prelude.Types.Right', case V41 of {'Idris.Core.Context.Context.MkGlobalDef', E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54} -> (fun (V42, V43, V44, V45, V46, V47, V48, V49, V50, V51, V52, V53, V54, V55, V56, V57, V58, V59, V60, V61) -> V56 end(E35, E36, E37, E38, E39, E40, E41, E42, E43, E44, E45, E46, E47, E48, E49, E50, E51, E52, E53, E54)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end} end(E34)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.UndefinedName', V1, {'Idris.Core.Name.Resolved', V2}}, V3)) end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--inTerm'() -> {'Idris.Core.Unify.MkUnifyInfo', 1, 1}.
'un--inSearch'() -> {'Idris.Core.Unify.MkUnifyInfo', 1, 3}.
'un--inMatch'() -> {'Idris.Core.Unify.MkUnifyInfo', 1, 2}.
'un--inLHS'() -> {'Idris.Core.Unify.MkUnifyInfo', 1, 0}.
'un--headsConvert'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V6 of {'Idris.Prelude.Types.Just', E2} -> (fun (V8) -> case V7 of {'Idris.Prelude.Types.Just', E5} -> (fun (V9) -> ('case--headsConvert-14412'(V0, V8, V9, V5, V4, V3, V2, V1, {'Idris.Builtin.MkPair', ('Idris.Idris2.Prelude.Types.List':'un--reverse'(V8)), ('Idris.Idris2.Prelude.Types.List':'un--reverse'(V9))})) end(E5)); _ -> fun (V10) -> begin (V11 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"unify.head"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Nothing to convert"/utf8>> end, V10))), case V11 of {'Idris.Prelude.Types.Left', E3} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E3)); {'Idris.Prelude.Types.Right', E4} -> (fun (V13) -> {'Idris.Prelude.Types.Right', 1} end(E4)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end end(E2)); _ -> fun (V14) -> begin (V15 = ('Idris.Idris2.Core.Context.Log':'un--log'(V1, <<"unify.head"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))), fun () -> <<"Nothing to convert"/utf8>> end, V14))), case V15 of {'Idris.Prelude.Types.Left', E0} -> (fun (V16) -> {'Idris.Prelude.Types.Left', V16} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V17) -> {'Idris.Prelude.Types.Right', 1} end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end.
'un--giveUpConstraints'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V7) -> fun (V8) -> ('nested--24477-24598--in--un--constraintToHole'(V1, V0, V7, V8)) end end, ('Idris.Idris2.Libraries.Data.IntMap':'un--toList'(case V6 of {'Idris.Core.UnifyState.MkUState', E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13} -> (fun (V9, V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20) -> V10 end(E2, E3, E4, E5, E6, E7, E8, E9, E10, E11, E12, E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V2)) end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--getVarsTm'(V0, V1) -> case V1 of [] -> {'Idris.Prelude.Types.Just', []}; [E0 | E1] -> (fun (V2, V3) -> case V2 of {'Idris.Core.TT.Local', E2, E3, E4} -> (fun (V4, V5, V6) -> case ('Idris.Idris2.Prelude.Types':'un--elem'({'Idris.Prelude.EqOrd.MkEq', fun (V7) -> fun (V8) -> ('Idris.Idris2.Prelude.Types':'dn--un--==_Eq_Nat'(V7, V8)) end end, fun (V9) -> fun (V10) -> ('Idris.Idris2.Prelude.Types':'dn--un--/=_Eq_Nat'(V9, V10)) end end}, V6, V0)) of 1 -> {'Idris.Prelude.Types.Nothing'}; 0 -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('un--getVarsTm'([V6 | V0], V3)), fun (V11) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'([V6 | V11])) end)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E2, E3, E4)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getVars'(V0, V1, V2) -> case V2 of [] -> {'Idris.Prelude.Types.Just', []}; [E0 | E1] -> (fun (V3, V4) -> case V3 of {'Idris.Core.Value.NApp', E2, E3, E4} -> (fun (V5, V6, V7) -> case V6 of {'Idris.Core.Value.NLocal', E5, E6} -> (fun (V8, V9) -> case V7 of [] -> case ('nested--8408-10381--in--un--inArgs'(V0, V9, V8, V5, V4, V1, V9, V1)) of 1 -> {'Idris.Prelude.Types.Nothing'}; 0 -> ('Idris.Idris2.Prelude.Types':'dn--un-->>=_Monad_Maybe'(('un--getVars'(V0, [V9 | V1], V4)), fun (V10) -> ('Idris.Idris2.Prelude.Types':'dn--un--pure_Applicative_Maybe'([V9 | V10])) end)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end; _ -> {'Idris.Prelude.Types.Nothing'} end end(E5, E6)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E2, E3, E4)); {'Idris.Core.Value.NAs', E7, E8, E9, E10} -> (fun (V11, V12, V13, V14) -> ('un--getVars'(V0, V1, [V14 | V4])) end(E7, E8, E9, E10)); _ -> {'Idris.Prelude.Types.Nothing'} end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getMetaNames'(V0, V1) -> begin (V2 = ('Idris.Idris2.Core.TT':'un--getMetas'(V1))), ('un--chaseMetas'(V0, ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'(V2)), ('Idris.Idris2.Libraries.Data.NameMap':'un--empty'()))) end.
'un--getIVars'(V0) -> case V0 of {'Idris.Core.Unify.INil'} -> (fun () -> [] end()); {'Idris.Core.Unify.ICons', E0, E1} -> (fun (V1, V2) -> [V1 | ('un--getIVars'(V2))] end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--getArgTypes'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.NBind', E0, E1, E2, E3} -> (fun (V5, V6, V7, V8) -> case V7 of {'Idris.Core.TT.Pi', E4, E5, E6, E7} -> (fun (V9, V10, V11, V12) -> fun (V13) -> case V4 of [E8 | E9] -> (fun (V14, V15) -> begin (V19 = begin (V16 = (((V8(V2))(V14))(V13))), case V16 of {'Idris.Prelude.Types.Left', E10} -> (fun (V17) -> {'Idris.Prelude.Types.Left', V17} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V18) -> (('un--getArgTypes'(V0, V1, V2, V18, V15))(V13)) end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end), case V19 of {'Idris.Prelude.Types.Left', E12} -> (fun (V20) -> {'Idris.Prelude.Types.Left', V20} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V21) -> case V21 of {'Idris.Prelude.Types.Just', E14} -> (fun (V22) -> begin (V23 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V2, V12))(V13))), case V23 of {'Idris.Prelude.Types.Left', E15} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V25) -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', [V25 | V22]}} end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14)); {'Idris.Prelude.Types.Nothing'} -> (fun () -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end()); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E8, E9)); _ -> case V4 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', []}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end end(E4, E5, E6, E7)); _ -> fun (V26) -> case V4 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', []}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end end(E0, E1, E2, E3)); _ -> fun (V27) -> case V4 of [] -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Just', []}}; _ -> {'Idris.Prelude.Types.Right', {'Idris.Prelude.Types.Nothing'}} end end end.
'un--forceMeta'(V0, V1, V2) -> case V1 of 0 -> {'Idris.Core.TT.TForce', ('Idris.Idris2.Core.TT':'un--getLoc'(V2)), V0, V2}; _ -> begin (V3 = (V1 - 1)), case V2 of {'Idris.Core.TT.Bind', E0, E1, E2, E3} -> (fun (V4, V5, V6, V7) -> {'Idris.Core.TT.Bind', V4, V5, V6, ('un--forceMeta'(V0, V3, V7))} end(E0, E1, E2, E3)); _ -> {'Idris.Core.TT.TForce', ('Idris.Idris2.Core.TT':'un--getLoc'(V2)), V0, V2} end end end.
'un--dumpArg'(V0, V1, V2, V3, V4) -> case V3 of {'Idris.Core.Value.MkClosure', E6, E7, E8, E9, E10} -> (fun (V5, V6, V7, V8, V9) -> begin (V11 = begin (V10 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V10} end), case V11 of {'Idris.Prelude.Types.Left', E11} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E11)); {'Idris.Prelude.Types.Right', E12} -> (fun (V13) -> begin (V14 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V13, V4))), case V14 of {'Idris.Prelude.Types.Left', E13} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E13)); {'Idris.Prelude.Types.Right', E14} -> (fun (V16) -> begin (V17 = ('Idris.Idris2.Core.Context.Log':'un--logTerm'(('Idris.Idris2.Prelude.Types.List':'un--tailRecAppend'(V5, V0)), V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> <<"Term: "/utf8>> end, V9, V4))), case V17 of {'Idris.Prelude.Types.Left', E15} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E15)); {'Idris.Prelude.Types.Right', E16} -> (fun (V19) -> begin (V20 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V16, {'Idris.Core.Value.MkClosure', V5, V6, V7, V8, V9}))(V4))), case V20 of {'Idris.Prelude.Types.Left', E17} -> (fun (V21) -> {'Idris.Prelude.Types.Left', V21} end(E17)); {'Idris.Prelude.Types.Right', E18} -> (fun (V22) -> ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> <<"  "/utf8>> end, V2, V22, V4)) end(E18)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E16)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E14)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E12)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E6, E7, E8, E9, E10)); _ -> begin (V24 = begin (V23 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V23} end), case V24 of {'Idris.Prelude.Types.Left', E0} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V26) -> begin (V27 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V26, V4))), case V27 of {'Idris.Prelude.Types.Left', E2} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V29) -> begin (V30 = (('Idris.Idris2.Core.Normalise.Eval':'un--evalClosure'(V1, V0, V29, V3))(V4))), case V30 of {'Idris.Prelude.Types.Left', E4} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V32) -> ('Idris.Idris2.Core.Normalise':'un--logNF'(V0, V1, <<"unify"/utf8>>, (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + (1 + 0)))))))))))))))))))), fun () -> <<"  "/utf8>> end, V2, V32, V4)) end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end.
'un--delayMeta'(V0, V1, V2, V3, V4) -> case V2 of 0 -> {'Idris.Core.TT.TDelay', ('Idris.Idris2.Core.TT':'un--getLoc'(V4)), V1, V3, V4}; _ -> begin (V5 = (V2 - 1)), case V4 of {'Idris.Core.TT.Bind', E0, E1, E2, E3} -> (fun (V6, V7, V8, V9) -> {'Idris.Core.TT.Bind', V6, V7, V8, ('un--delayMeta'([V7 | V0], V1, V5, ('Idris.Idris2.Core.TT':'dn--un--weaken_Weaken_Term'(V3)), V9))} end(E0, E1, E2, E3)); _ -> {'Idris.Core.TT.TDelay', ('Idris.Idris2.Core.TT':'un--getLoc'(V4)), V1, V3, V4} end end end.
'un--convertErrorS'(V0, V1, V2, V3, V4, V5, V6, V7) -> case V2 of 1 -> ('un--convertError'(V0, V1, V3, V4, V6, V5, V7)); 0 -> ('un--convertError'(V0, V1, V3, V4, V5, V6, V7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--convertError'(V0, V1, V2, V3, V4, V5, V6) -> begin (V8 = begin (V7 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V7} end), case V8 of {'Idris.Prelude.Types.Left', E0} -> (fun (V9) -> {'Idris.Prelude.Types.Left', V9} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V10) -> begin (V11 = ('Idris.Idris2.Core.Context':'un--clearDefs'(V10, V6))), case V11 of {'Idris.Prelude.Types.Left', E2} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V13) -> begin (V14 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V13, V3, V4, V6))), case V14 of {'Idris.Prelude.Types.Left', E4} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V16) -> begin (V17 = ('Idris.Idris2.Core.Normalise.Quote':'dn--un--quote_Quote_NF'(V1, V0, V13, V3, V5, V6))), case V17 of {'Idris.Prelude.Types.Left', E6} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V19) -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.CantConvert', V0, V2, case V10 of {'Idris.Core.Context.MkDefs', E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37} -> (fun (V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44, V45, V46, V47, V48, V49) -> V20 end(E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33, E34, E35, E36, E37)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V3, V16, V19}, V6)) end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--constrain'(V0) -> {'Idris.Core.Unify.MkUnifyResult', [V0 | []], 0, [], {'Idris.Core.Unify.NoLazy'}}.
'un--checkDots'(V0, V1, V2) -> begin (V4 = begin (V3 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V3} end), case V4 of {'Idris.Prelude.Types.Left', E0} -> (fun (V5) -> {'Idris.Prelude.Types.Left', V5} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V6) -> begin (V7 = ('Idris.Idris2.Core.UnifyState':'un--getCurrentHoles'(V0, V2))), case V7 of {'Idris.Prelude.Types.Left', E2} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> begin (V23 = ('Idris.Idris2.Core.Core':'un--traverse_'(fun (V10) -> ('nested--24927-25000--in--un--checkConstraint'(V1, V0, V10)) end, ('Idris.Idris2.Prelude.Types.List':'un--reverse'(case V6 of {'Idris.Core.UnifyState.MkUState', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15} -> (fun (V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22) -> V18 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end)), V2))), case V23 of {'Idris.Prelude.Types.Left', E16} -> (fun (V24) -> {'Idris.Prelude.Types.Left', V24} end(E16)); {'Idris.Prelude.Types.Right', E17} -> (fun (V25) -> begin (V26 = ('Idris.Idris2.Core.UnifyState':'un--getCurrentHoles'(V0, V2))), case V26 of {'Idris.Prelude.Types.Left', E18} -> (fun (V27) -> {'Idris.Prelude.Types.Left', V27} end(E18)); {'Idris.Prelude.Types.Right', E19} -> (fun (V28) -> begin (V30 = begin (V29 = ('erlang':'get'(V0))), {'Idris.Prelude.Types.Right', V29} end), case V30 of {'Idris.Prelude.Types.Left', E20} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E20)); {'Idris.Prelude.Types.Right', E21} -> (fun (V32) -> begin (V45 = ('erlang':'put'(V0, case V32 of {'Idris.Core.UnifyState.MkUState', E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33} -> (fun (V33, V34, V35, V36, V37, V38, V39, V40, V41, V42, V43, V44) -> {'Idris.Core.UnifyState.MkUState', V33, V34, V35, V36, V37, V38, V39, [], V41, V42, V43, V44} end(E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end))), {'Idris.Prelude.Types.Right', V45} end end(E21)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E19)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E17)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
'un--checkArgsSame'(V0, V1, V2, V3) -> case V2 of [] -> {'Idris.Prelude.Types.Right', 0}; [E0 | E1] -> (fun (V4, V5) -> begin (V7 = begin (V6 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V6} end), case V7 of {'Idris.Prelude.Types.Left', E2} -> (fun (V8) -> {'Idris.Prelude.Types.Left', V8} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V9) -> begin (V40 = ('Idris.Idris2.Core.Context':'un--lookupDefExact'({'Idris.Core.Name.Resolved', V4}, case V9 of {'Idris.Core.Context.MkDefs', E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33} -> (fun (V10, V11, V12, V13, V14, V15, V16, V17, V18, V19, V20, V21, V22, V23, V24, V25, V26, V27, V28, V29, V30, V31, V32, V33, V34, V35, V36, V37, V38, V39) -> V10 end(E4, E5, E6, E7, E8, E9, E10, E11, E12, E13, E14, E15, E16, E17, E18, E19, E20, E21, E22, E23, E24, E25, E26, E27, E28, E29, E30, E31, E32, E33)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end, V3))), case V40 of {'Idris.Prelude.Types.Left', E34} -> (fun (V41) -> {'Idris.Prelude.Types.Left', V41} end(E34)); {'Idris.Prelude.Types.Right', E35} -> (fun (V42) -> case V42 of {'Idris.Prelude.Types.Just', E36} -> (fun (V43) -> case V43 of {'Idris.Core.Context.Context.PMDef', E37, E38, E39, E40, E41} -> (fun (V44, V45, V46, V47, V48) -> case V45 of [] -> case V46 of {'Idris.Core.CaseTree.STerm', E42, E43} -> (fun (V49, V50) -> case V49 of 0 -> begin (V51 = ('nested--24612-24734--in--un--anySame'(V4, V5, V1, V0, V50, V5, V3))), case V51 of {'Idris.Prelude.Types.Left', E44} -> (fun (V52) -> {'Idris.Prelude.Types.Left', V52} end(E44)); {'Idris.Prelude.Types.Right', E45} -> (fun (V53) -> case V53 of 1 -> {'Idris.Prelude.Types.Right', 1}; 0 -> ('un--checkArgsSame'(V0, V1, V5, V3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end(E45)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end; _ -> ('un--checkArgsSame'(V0, V1, V5, V3)) end end(E42, E43)); _ -> ('un--checkArgsSame'(V0, V1, V5, V3)) end; _ -> ('un--checkArgsSame'(V0, V1, V5, V3)) end end(E37, E38, E39, E40, E41)); _ -> ('un--checkArgsSame'(V0, V1, V5, V3)) end end(E36)); _ -> ('un--checkArgsSame'(V0, V1, V5, V3)) end end(E35)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
'un--chaseMetas'(V0, V1, V2) -> case V1 of [] -> fun (V3) -> {'Idris.Prelude.Types.Right', ('Idris.Idris2.Libraries.Data.NameMap':'un--keys'(V2))} end; [E0 | E1] -> (fun (V4, V5) -> ('case--chaseMetas-9733'(V4, V5, V2, V0, ('Idris.Idris2.Libraries.Data.NameMap':'un--lookup'(V4, V2)))) end(E0, E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end.
