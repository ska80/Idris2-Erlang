-module('Idris.Idris2.TTImp.ProcessRunElab').
-compile('no_auto_import').
-compile('inline').
-compile({'inline_size',24}).
-export([
  'un--processRunElab'/10
]).
'un--processRunElab'(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> begin (V11 = begin (V10 = ('erlang':'get'(V1))), {'Idris.Prelude.Types.Right', V10} end), case V11 of {'Idris.Prelude.Types.Left', E0} -> (fun (V12) -> {'Idris.Prelude.Types.Left', V12} end(E0)); {'Idris.Prelude.Types.Right', E1} -> (fun (V13) -> begin (V14 = case ('Idris.Idris2.Core.Context':'un--isExtension'(0, V13)) of 1 -> {'Idris.Prelude.Types.Right', 0}; 0 -> ('Idris.Idris2.Core.Core':'dn--un--throw_Catchable_Core_Error'({'Idris.Core.Core.GenericMsg', V7, <<"%language ElabReflection not enabled"/utf8>>}, V9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end), case V14 of {'Idris.Prelude.Types.Left', E2} -> (fun (V15) -> {'Idris.Prelude.Types.Left', V15} end(E2)); {'Idris.Prelude.Types.Right', E3} -> (fun (V16) -> begin (V17 = ('Idris.Idris2.Core.Context':'un--resolveName'(V1, {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"[elaborator script]"/utf8>>}}, V9))), case V17 of {'Idris.Prelude.Types.Left', E4} -> (fun (V18) -> {'Idris.Prelude.Types.Left', V18} end(E4)); {'Idris.Prelude.Types.Right', E5} -> (fun (V19) -> begin (V20 = {'Idris.Core.Name.NS', ('Idris.Idris2.Core.Name.Namespace':'un--reflectionNS'()), {'Idris.Core.Name.UN', {'Idris.Core.Name.Basic', <<"Elab"/utf8>>}}}), begin (V21 = ('Idris.Idris2.Core.Reflect':'un--getCon'(V0, V7, V13, ('Idris.Idris2.Core.Reflect':'un--builtin'(<<"Unit"/utf8>>)), V9))), case V21 of {'Idris.Prelude.Types.Left', E6} -> (fun (V22) -> {'Idris.Prelude.Types.Left', V22} end(E6)); {'Idris.Prelude.Types.Right', E7} -> (fun (V23) -> begin (V24 = ('Idris.Idris2.Core.Reflect':'un--appCon'(V0, V7, V13, V20, [V23 | []], V9))), case V24 of {'Idris.Prelude.Types.Left', E8} -> (fun (V25) -> {'Idris.Prelude.Types.Left', V25} end(E8)); {'Idris.Prelude.Types.Right', E9} -> (fun (V26) -> begin (V27 = ('Idris.Idris2.TTImp.Elab':'un--checkTerm'(V0, V1, V2, V3, V19, {'Idris.TTImp.Elab.Check.InExpr'}, V4, V5, V6, V8, ('Idris.Idris2.Core.Normalise.Eval':'un--gnf'(V0, V6, V26)), V9))), case V27 of {'Idris.Prelude.Types.Left', E10} -> (fun (V28) -> {'Idris.Prelude.Types.Left', V28} end(E10)); {'Idris.Prelude.Types.Right', E11} -> (fun (V29) -> begin (V30 = (('Idris.Idris2.Core.Normalise.Eval':'un--nfOpts'(V1, V0, ('Idris.Idris2.Core.Value':'un--withAll'()), V13, V6, V29))(V9))), case V30 of {'Idris.Prelude.Types.Left', E12} -> (fun (V31) -> {'Idris.Prelude.Types.Left', V31} end(E12)); {'Idris.Prelude.Types.Right', E13} -> (fun (V32) -> ('Idris.Idris2.Prelude.IO':'dn--un--map_Functor_IO'(fun (V33) -> case V33 of {'Idris.Prelude.Types.Left', E14} -> (fun (V34) -> {'Idris.Prelude.Types.Left', V34} end(E14)); {'Idris.Prelude.Types.Right', E15} -> (fun (V35) -> {'Idris.Prelude.Types.Right', 0} end(E15)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end, fun (V36) -> ('Idris.Idris2.TTImp.Elab.RunElab':'un--elabScript'(V0, V1, V2, V3, V7, V5, V6, V32, {'Idris.Prelude.Types.Nothing'}, V36)) end, V9)) end(E13)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E11)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E9)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E7)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end end(E5)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E3)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end end(E1)); _ -> ('erlang':'throw'("Error: Unreachable branch")) end end.
